{"file":"user-plans-3e6cb6aa.js","mappings":";;MAEa,YAAY,GAAG;IAC1B,YAAY,EAAE,cAAc;IAC5B,UAAU,EAAE,YAAY;IACxB,YAAY,EAAE,eAAe;IAC7B,WAAW,EAAE,aAAa;;EAE1B;MAEW,SAAS;IAKpB,YAAY,IAAK;QACf,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YACvD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI;gBAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;aACzC,CAAC,CAAC;SACJ;QACD,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;YACtB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG;gBAClC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACnC,CAAC,CAAC;SACJ;KACF;CACF;MACY,QAAQ;IAInB,YAAY,IAAK;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACnE,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAChE,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/D,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI;gBAC9B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;aACjD,CAAC,CAAC;YACH,IAAI,CAAC,aAAa,GAAGA,sBAAO,CAAC,IAAI,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;SAC7D;KACF;CACF;MAEY,YAAY;IAMvB,YAAY,IAAK;QACf,IAAI,CAAC,OAAO;YACV,IAAI,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QACjE,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAC1D,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAChE,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjD,IAAI,CAAC,OAAO;YACV,IAAI,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;KAClE;;;;;","names":["orderBy"],"sources":["src/interfaces/trasteel/users/user-plans.ts"],"sourcesContent":["import {orderBy} from \"lodash\";\n\nexport const ProductLines = {\n  refractories: \"Refractories\",\n  electrodes: \"Electrodes\",\n  rawmaterials: \"Raw Materials\",\n  engineering: \"Engineering\",\n  //longterm: \"Long Term\",\n};\n\nexport class UserPlans {\n  userPlans: UserPlan[];\n  users: {\n    [id: string]: string[]; //[\"owner\", \"editor\", etc.]\n  };\n  constructor(data?) {\n    this.userPlans = [];\n    if (data && data.userPlans && data.userPlans.length > 0) {\n      data.userPlans.forEach((plan) => {\n        this.userPlans.push(new UserPlan(plan));\n      });\n    }\n    this.users = {};\n    if (data && data.users) {\n      Object.keys(data.users).forEach((key) => {\n        this.users[key] = data.users[key];\n      });\n    }\n  }\n}\nexport class UserPlan {\n  customerId: string;\n  otherName: string;\n  planOfActions: PlanOfAction[];\n  constructor(data?) {\n    this.customerId = data && data.customerId ? data.customerId : null;\n    this.otherName = data && data.otherName ? data.otherName : null;\n    this.planOfActions = [];\n    if (data && data.planOfActions && data.planOfActions.length > 0) {\n      data.planOfActions.forEach((plan) => {\n        this.planOfActions.push(new PlanOfAction(plan));\n      });\n      this.planOfActions = orderBy(this.planOfActions, \"dueDate\");\n    }\n  }\n}\n\nexport class PlanOfAction {\n  updated: string;\n  product: string;\n  situation: string;\n  plan: string;\n  dueDate: string;\n  constructor(data?) {\n    this.updated =\n      data && data.updated ? data.updated : new Date().toISOString();\n    this.product = data && data.product ? data.product : null;\n    this.situation = data && data.situation ? data.situation : null;\n    this.plan = data && data.plan ? data.plan : null;\n    this.dueDate =\n      data && data.dueDate ? data.dueDate : new Date().toISOString();\n  }\n}\n"],"version":3}