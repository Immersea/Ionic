{"file":"modal-dive-card.entry.esm.js","mappings":"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","names":["isString","isDate"],"sources":["src/components/udive/modals/user/modal-dive-card/modal-dive-card.scss?tag=modal-dive-card","src/components/udive/modals/user/modal-dive-card/modal-dive-card.tsx"],"sourcesContent":["modal-dive-card {\n  input {\n    text-align: right;\n  }\n  .fixedLabel {\n    min-width: 80% !important;\n    max-width: 80% !important;\n  }\n  ion-item .item-inner {\n    box-shadow: none !important;\n    border-bottom: 1px solid #dedede !important;\n  }\n\n  .item-input .label-md,\n  .item-select .label-md,\n  .item-datetime .label-md {\n    color: rgb(0, 0, 0);\n  }\n}\n","import { Component, h, Prop, Element, State } from \"@stencil/core\";\nimport { isDate, isString } from \"lodash\";\nimport { Card } from \"../../../../../interfaces/udive/user/user-cards\";\nimport { Environment } from \"../../../../../global/env\";\n\n@Component({\n  tag: \"modal-dive-card\",\n  styleUrl: \"modal-dive-card.scss\",\n})\nexport class ModalDiveCard {\n  @Element() el: HTMLElement;\n  @Prop() card: Card;\n  @State() updateCard: Card;\n  @State() agencies: any;\n  @State() validCard = false;\n\n  componentWillLoad() {\n    this.updateViewParams();\n  }\n\n  componentDidLoad() {\n    this.validateCard();\n  }\n\n  async updateViewParams() {\n    this.updateCard = new Card(this.card);\n    this.validateCard();\n  }\n\n  save() {\n    this.el.closest(\"ion-modal\").dismiss(this.updateCard);\n  }\n\n  close() {\n    this.el.closest(\"ion-modal\").dismiss();\n  }\n\n  inputHandler(event: any) {\n    this.updateCard[event.detail.name] = event.detail.value;\n    this.validateCard();\n  }\n\n  updateCourse(ev) {\n    this.updateCard.course = ev.detail;\n    this.validateCard();\n  }\n\n  validateCard() {\n    this.validCard =\n      isString(this.updateCard.course.agencyName) &&\n      isString(this.updateCard.course.certificationId) &&\n      isDate(new Date(this.updateCard.certified)) &&\n      isString(this.updateCard.number);\n  }\n\n  render() {\n    return [\n      <app-navbar\n        tag='dive-card'\n        text='Dive Card'\n        color={Environment.getAppColor()}\n        modal={true}\n      ></app-navbar>,\n\n      <ion-content>\n        <ion-list>\n          <popover-search-diving-course\n            item={this.updateCard.course}\n            onCertSelected={(ev) => this.updateCourse(ev)}\n          />\n          <app-form-item\n            label-tag='number'\n            label-text='Number'\n            lines='inset'\n            value={this.updateCard.number}\n            name='number'\n            input-type='text'\n            onFormItemChanged={(ev) => this.inputHandler(ev)}\n            validator={[\"required\"]}\n          ></app-form-item>\n          <app-form-item\n            label-tag='certified'\n            label-text='Certified'\n            lines='inset'\n            value={this.updateCard.certified}\n            name='certified'\n            input-type='date'\n            onFormItemChanged={(ev) => this.inputHandler(ev)}\n            validator={[\"required\"]}\n          ></app-form-item>\n          <app-form-item\n            label-tag='expiry'\n            label-text='Expiry'\n            lines='inset'\n            value={this.updateCard.expiry}\n            name='expiry'\n            input-type='date'\n            onFormItemChanged={(ev) => this.inputHandler(ev)}\n            validator={[]}\n          ></app-form-item>\n          <app-form-item\n            label-tag='instructor'\n            label-text='Instructor'\n            lines='inset'\n            value={this.updateCard.instructor}\n            name='instructor'\n            input-type='text'\n            onFormItemChanged={(ev) => this.inputHandler(ev)}\n            validator={[]}\n          ></app-form-item>\n          <app-form-item\n            label-tag='comments'\n            label-text='Comments'\n            lines='inset'\n            value={this.updateCard.comments}\n            name='comments'\n            textRows={4}\n            input-type='text'\n            onFormItemChanged={(ev) => this.inputHandler(ev)}\n            validator={[]}\n          ></app-form-item>\n        </ion-list>\n      </ion-content>,\n      <app-modal-footer\n        disableSave={!this.validCard}\n        onCancelEmit={() => this.close()}\n        onSaveEmit={() => this.save()}\n      />,\n    ];\n  }\n}\n"],"version":3}