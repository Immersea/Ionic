{"version":3,"names":["appDecoplannerSettingsCss","AppDecoplannerSettingsStyle0","AppDecoplannerSettings","this","parameters","DecoplannerParameters","showConfigurations","DecoplannerDive","componentWillLoad","updateViewParams","params","diveDataToShare","divePlan","index","dives","dive","stdConfigurations","configuration","ranges","getParamRanges","units","updateView","updateParam","param","ev","value","detail","target","setUnits","lastStop6m20ft","checked","conservatism","conservatism_bailout","gfLow","toNumber","gfHigh","gfLow_bailout","gfHigh_bailout","descentppO2","bottomppO2","decoppO2","oxygenppO2","pscrGasDivider","ace_time","CCR_o2_consumption","metabolic_o2_consumption","CCR_volume_for_consumption","rmvBottom","rmvDeco","deco_gas_reserve","time_at_bottom_for_min_gas","time_at_gas_switch_for_min_gas","rmvBottom_multiplier_for_min_gas","number_of_divers_for_min_gas","descentRate","ascentRate","minPPO2","maxPPO2deco","maxPPO2bottom","updateParamsEvent","emit","render","h","key","class","tag","text","label","TranslationService","getTransl","labelPlacement","onIonChange","undefined","color","Environment","isDecoplanner","metric","depthUnit","map","gf","ppO2","type","volumeUnit","rmv"],"sources":["src/components/udive/app/decoplanner/app-decoplanner-settings/app-decoplanner-settings.scss?tag=app-decoplanner-settings","src/components/udive/app/decoplanner/app-decoplanner-settings/app-decoplanner-settings.tsx"],"sourcesContent":["app-decoplanner-settings {\n  .item-input .label-md,\n  .item-select .label-md,\n  .item-datetime .label-md {\n    color: rgb(0, 0, 0);\n  }\n  input {\n    text-align: right;\n  }\n  .fixedLabel {\n    min-width: 80% !important;\n    max-width: 80% !important;\n  }\n\n  ion-item .item-inner {\n    box-shadow: none !important;\n    border-bottom: 1px solid #dedede !important;\n  }\n\n  .item-input .label-md,\n  .item-select .label-md,\n  .item-datetime .label-md {\n    color: rgb(0, 0, 0);\n  }\n\n  .slider-scrollable-container {\n    padding-top: 0px;\n  }\n\n  width: 100%;\n}\n","import {Component, h, Prop, State, Event, EventEmitter} from \"@stencil/core\";\nimport {DecoplannerDive} from \"../../../../../interfaces/udive/planner/decoplanner-dive\";\nimport {DivePlan} from \"../../../../../services/udive/planner/dive-plan\";\nimport {DecoplannerParameters} from \"../../../../../interfaces/udive/planner/decoplanner-parameters\";\nimport {Environment} from \"../../../../../global/env\";\nimport {toNumber} from \"lodash\";\nimport {TranslationService} from \"../../../../../services/common/translations\";\n\n@Component({\n  tag: \"app-decoplanner-settings\",\n  styleUrl: \"app-decoplanner-settings.scss\",\n})\nexport class AppDecoplannerSettings {\n  @Event() updateParamsEvent: EventEmitter<DecoplannerParameters>;\n  @Prop({mutable: true}) diveDataToShare: any;\n  @State() dive: DecoplannerDive = new DecoplannerDive();\n  @State() updateView = true;\n\n  dives: Array<DecoplannerDive>;\n  index: number;\n  divePlan: DivePlan;\n  parameters: DecoplannerParameters = new DecoplannerParameters();\n  @State() ranges: any;\n  stdConfigurations: any;\n  showConfigurations = false;\n\n  componentWillLoad() {\n    this.updateViewParams();\n  }\n\n  updateViewParams() {\n    let params = this.diveDataToShare;\n    this.showConfigurations = params.showConfigurations;\n    this.divePlan = params.divePlan;\n    this.index = params.index;\n    this.dives = this.divePlan.dives;\n    this.dive = this.divePlan.dives[this.index];\n    this.stdConfigurations = params.stdConfigurations;\n    this.parameters = this.divePlan.configuration.parameters;\n    this.ranges = this.divePlan.getParamRanges(this.parameters.units);\n    this.updateView = !this.updateView;\n  }\n\n  updateParam(param, ev) {\n    let value = ev.detail ? ev.detail.value : ev.target.value;\n    switch (param) {\n      case \"units\":\n        this.parameters.setUnits(value);\n        this.ranges = this.divePlan.getParamRanges(value);\n        break;\n      case \"config\":\n        this.parameters.configuration = value;\n        break;\n      case \"laststop\":\n        this.parameters.lastStop6m20ft = ev.detail.checked;\n        break;\n      case \"conservatism\":\n        this.parameters.conservatism = value;\n        break;\n      case \"conservatism_bailout\":\n        this.parameters.conservatism_bailout = value;\n        break;\n      case \"gfLow\":\n        this.parameters.gfLow = toNumber(value);\n        break;\n      case \"gfHigh\":\n        this.parameters.gfHigh = toNumber(value);\n        break;\n      case \"gfLow_bailout\":\n        this.parameters.gfLow_bailout = toNumber(value);\n        break;\n      case \"gfHigh_bailout\":\n        this.parameters.gfHigh_bailout = toNumber(value);\n        break;\n      case \"descentppO2\":\n        this.parameters.descentppO2 = toNumber(value);\n        break;\n      case \"bottomppO2\":\n        this.parameters.bottomppO2 = toNumber(value);\n        break;\n      case \"decoppO2\":\n        this.parameters.decoppO2 = toNumber(value);\n        break;\n      case \"oxygenppO2\":\n        this.parameters.oxygenppO2 = toNumber(value);\n        break;\n      case \"pscrGasDivider\":\n        this.parameters.pscrGasDivider = toNumber(value);\n        break;\n      case \"ace_time\":\n        this.parameters.ace_time = toNumber(value);\n        break;\n      case \"CCR_o2_consumption\":\n        this.parameters.CCR_o2_consumption = toNumber(value);\n        break;\n      case \"metabolic_o2_consumption\":\n        this.parameters.metabolic_o2_consumption = toNumber(value);\n        break;\n      case \"CCR_volume_for_consumption\":\n        this.parameters.CCR_volume_for_consumption = toNumber(value);\n        break;\n      case \"rmvBottom\":\n        this.parameters.rmvBottom = toNumber(value);\n        break;\n      case \"rmvDeco\":\n        this.parameters.rmvDeco = toNumber(value);\n        break;\n      case \"deco_gas_reserve\":\n        this.parameters.deco_gas_reserve = toNumber(value);\n        break;\n      case \"time_at_bottom_for_min_gas\":\n        this.parameters.time_at_bottom_for_min_gas = toNumber(value);\n        break;\n      case \"time_at_gas_switch_for_min_gas\":\n        this.parameters.time_at_gas_switch_for_min_gas = toNumber(value);\n        break;\n      case \"rmvBottom_multiplier_for_min_gas\":\n        this.parameters.rmvBottom_multiplier_for_min_gas = toNumber(value);\n        break;\n      case \"number_of_divers_for_min_gas\":\n        this.parameters.number_of_divers_for_min_gas = toNumber(value);\n        break;\n      case \"descentRate\":\n        this.parameters.descentRate = toNumber(value);\n        break;\n      case \"ascentRate\":\n        this.parameters.ascentRate = toNumber(value);\n        break;\n      case \"minPPO2\":\n        this.parameters.minPPO2 = toNumber(value);\n        break;\n      case \"maxPPO2deco\":\n        this.parameters.maxPPO2deco = toNumber(value);\n        break;\n      case \"maxPPO2bottom\":\n        this.parameters.maxPPO2bottom = toNumber(value);\n        break;\n    }\n    //this.updateParams();\n    this.updateParamsEvent.emit(this.parameters);\n  }\n\n  render() {\n    return (\n      <div class=\"slider-container\">\n        <ion-list class=\"slider-scrollable-container\">\n          <ion-item-divider>\n            <ion-label>\n              <my-transl tag=\"general-settings\" text=\"General Settings\" />\n            </ion-label>\n          </ion-item-divider>\n          {!this.divePlan.configuration || this.showConfigurations ? (\n            <ion-item>\n              <ion-select\n                label={TranslationService.getTransl(\n                  \"configuration\",\n                  \"Configuration\"\n                )}\n                labelPlacement=\"floating\"\n                onIonChange={(ev) => this.updateParam(\"config\", ev)}\n                value={this.parameters.configuration}\n              >\n                <ion-select-option value=\"OC\">OC</ion-select-option>\n                <ion-select-option value=\"pSCR\">pSCR</ion-select-option>\n                <ion-select-option value=\"CCR\">CCR</ion-select-option>\n              </ion-select>\n            </ion-item>\n          ) : undefined}\n          {/**\n           <ion-item>\n            <ion-label>\n              <my-transl tag='unit' text='Unit' />\n            </ion-label>\n            <ion-select\n              onIonChange={(ev) => this.updateParam(\"units\", ev)}\n              value={this.parameters.units}\n            >\n              <ion-select-option value='Metric'>Metric</ion-select-option>\n              <ion-select-option value='Imperial'>Imperial</ion-select-option>\n            </ion-select>\n          </ion-item>\n           */}\n          <ion-item>\n            <ion-toggle\n              color={Environment.isDecoplanner() ? \"gue-blue\" : \"planner\"}\n              onIonChange={(ev) => this.updateParam(\"laststop\", ev)}\n              checked={this.parameters.lastStop6m20ft}\n            >\n              <my-transl tag=\"last-stop\" text=\"Last stop\" />{\" \"}\n              {this.parameters.metric ? 6 : 20}\n              {this.parameters.depthUnit}\n            </ion-toggle>\n          </ion-item>\n          <ion-item-divider>\n            <ion-label>VPM-B</ion-label>\n          </ion-item-divider>\n          {/*\n        <ion-item>\n          <ion-label>Critical Volume Algorithm (on/off)</ion-label>\n          <ion-toggle [(ngModel)]=\"parameters.critical_volume_algorithm\" (ionChange)=\"updateParams()\"></ion-toggle>\n        </ion-item>\n        <ion-item>\n          <ion-label>GFS (TEST)</ion-label>\n          <ion-toggle [(ngModel)]=\"parameters.VPM_GFS\" (ionChange)=\"updateParams()\"></ion-toggle>\n        </ion-item>\n        <ion-item>\n          <ion-label>VPM/GFS Gradient Factor High</ion-label>\n          <ion-select [(ngModel)]=\"parameters.VPM_gf_high\" (ionChange)=\"updateParams()\">\n            <ion-select-option *ngFor=\"let gf of ranges.gf\">{{gf}}</ion-select-option>\n          </ion-select>\n        </ion-item>\n        */}\n          {this.parameters.configuration != \"OC\" ? (\n            <ion-item-divider>\n              <ion-label>\n                {this.parameters.configuration}{\" \"}\n                <my-transl tag=\"settings\" text=\"settings\" />\n              </ion-label>\n            </ion-item-divider>\n          ) : undefined}\n\n          <ion-item>\n            <ion-select\n              label={TranslationService.getTransl(\n                \"conservatism\",\n                \"Conservatism\"\n              )}\n              labelPlacement=\"floating\"\n              onIonChange={(ev) => this.updateParam(\"conservatism\", ev)}\n              value={this.parameters.conservatism}\n            >\n              {this.ranges.conservatism.map((conservatism) => (\n                <ion-select-option value={conservatism}>\n                  {conservatism}\n                </ion-select-option>\n              ))}\n            </ion-select>\n          </ion-item>\n          {this.parameters.configuration != \"OC\" ? (\n            <ion-item-divider>\n              <ion-label>\n                <my-transl tag=\"bailout-settings\" text=\"Bailout settings\" />\n              </ion-label>\n            </ion-item-divider>\n          ) : undefined}\n          {this.parameters.configuration != \"OC\" ? (\n            <ion-item>\n              <ion-select\n                label={TranslationService.getTransl(\n                  \"conservatism\",\n                  \"Conservatism\"\n                )}\n                labelPlacement=\"floating\"\n                onIonChange={(ev) =>\n                  this.updateParam(\"conservatism_bailout\", ev)\n                }\n                value={this.parameters.conservatism_bailout}\n              >\n                {this.ranges.conservatism.map((conservatism) => (\n                  <ion-select-option value={conservatism}>\n                    {conservatism}\n                  </ion-select-option>\n                ))}\n              </ion-select>\n            </ion-item>\n          ) : undefined}\n\n          <ion-item-divider>\n            <ion-label>BUHLMANN</ion-label>\n          </ion-item-divider>\n          {/*\n        <ion-item *ngIf=\"renderedChart=='heatmap-chart'\">\n          <ion-label>Model</ion-label>\n          <ion-select [(ngModel)]=\"parameters.buhlModel\" (ionChange)=\"updateParams()\">\n            <ion-select-option>ZHL16B</ion-select-option>\n            <ion-select-option>ZHL16C</ion-select-option>\n          </ion-select>\n        </ion-item>*/}\n          {this.parameters.configuration != \"OC\" ? (\n            <ion-item-divider>\n              <ion-label>\n                {this.parameters.configuration}{\" \"}\n                <my-transl tag=\"settings\" text=\"settings\" />\n              </ion-label>\n            </ion-item-divider>\n          ) : undefined}\n\n          <ion-item>\n            <ion-select\n              label={TranslationService.getTransl(\n                \"gradient-factor-low\",\n                \"Gradient Factor Low\"\n              )}\n              labelPlacement=\"floating\"\n              onIonChange={(ev) => this.updateParam(\"gfLow\", ev)}\n              value={this.parameters.gfLow}\n            >\n              {this.ranges.gf.map((gf) => (\n                <ion-select-option value={gf}>{gf}</ion-select-option>\n              ))}\n            </ion-select>\n          </ion-item>\n          <ion-item>\n            <ion-select\n              label={TranslationService.getTransl(\n                \"gradient-factor-high\",\n                \"Gradient Factor High\"\n              )}\n              labelPlacement=\"floating\"\n              onIonChange={(ev) => this.updateParam(\"gfHigh\", ev)}\n              value={this.parameters.gfHigh}\n            >\n              {this.ranges.gf.map((gf) => (\n                <ion-select-option value={gf}>{gf}</ion-select-option>\n              ))}\n            </ion-select>\n          </ion-item>\n          {this.parameters.configuration != \"OC\"\n            ? [\n                <ion-item-divider>\n                  <ion-label>\n                    <my-transl tag=\"bailout-settings\" text=\"Bailout settings\" />\n                  </ion-label>\n                </ion-item-divider>,\n                <ion-item>\n                  <ion-select\n                    label={TranslationService.getTransl(\n                      \"gradient-factor-low\",\n                      \"Gradient Factor Low\"\n                    )}\n                    labelPlacement=\"floating\"\n                    onIonChange={(ev) => this.updateParam(\"gfLow_bailout\", ev)}\n                    value={this.parameters.gfLow_bailout}\n                  >\n                    {this.ranges.gf.map((gf) => (\n                      <ion-select-option value={gf}>{gf}</ion-select-option>\n                    ))}\n                  </ion-select>\n                </ion-item>,\n                <ion-item>\n                  <ion-select\n                    label={TranslationService.getTransl(\n                      \"gradient-factor-high\",\n                      \"Gradient Factor High\"\n                    )}\n                    labelPlacement=\"floating\"\n                    onIonChange={(ev) => this.updateParam(\"gfHigh_bailout\", ev)}\n                    value={this.parameters.gfHigh_bailout}\n                  >\n                    {this.ranges.gf.map((gf) => (\n                      <ion-select-option value={gf}>{gf}</ion-select-option>\n                    ))}\n                  </ion-select>\n                </ion-item>,\n              ]\n            : undefined}\n          {/*\n    <ion-item-divider>\n      (TEST) He vs N2 half times\n    </ion-item-divider>\n    <ion-item>\n      <ion-label>He half time multiplier (0->original model / +10->He=N2 / -10->N2=He)</ion-label>\n    </ion-item>\n    <ion-item>\n      <ion-label>Parameter</ion-label>\n      <ion-select [(ngModel)]=\"parameters.helium_half_time_multiplier\" (ionChange)=\"updateParams()\">\n        <ion-select-option *ngFor=\"let hhf of ranges.hhf\">{{hhf}}</ion-select-option>\n      </ion-select>\n    </ion-item>\n     */}\n          {this.parameters.configuration == \"CCR\"\n            ? [\n                <ion-item-divider>\n                  <ion-label>\n                    <my-transl\n                      tag=\"ppO2-settings\"\n                      text=\"ppO2 Standard Settings\"\n                    />\n                  </ion-label>\n                </ion-item-divider>,\n                <ion-item-divider>\n                  <ion-label>\n                    <my-transl\n                      tag=\"ppO2-settings-note\"\n                      text=\"note: CCR settings from deco gases prevail over these settings\"\n                    />\n                  </ion-label>\n                </ion-item-divider>,\n                <ion-item>\n                  <ion-select\n                    label={TranslationService.getTransl(\n                      \"descent-ppO2-CCR\",\n                      \"Descent ppO2 (CCR)\"\n                    )}\n                    labelPlacement=\"floating\"\n                    onIonChange={(ev) => this.updateParam(\"descentppO2\", ev)}\n                    value={this.parameters.descentppO2}\n                  >\n                    {this.ranges.ppO2.map((ppO2) => (\n                      <ion-select-option value={ppO2}>{ppO2}</ion-select-option>\n                    ))}\n                  </ion-select>\n                </ion-item>,\n                <ion-item>\n                  <ion-select\n                    label={TranslationService.getTransl(\n                      \"bottom-ppO2-CCR\",\n                      \"Bottom ppO2 (CCR)\"\n                    )}\n                    labelPlacement=\"floating\"\n                    onIonChange={(ev) => this.updateParam(\"bottomppO2\", ev)}\n                    value={this.parameters.bottomppO2}\n                  >\n                    {this.ranges.ppO2.map((ppO2) => (\n                      <ion-select-option value={ppO2}>{ppO2}</ion-select-option>\n                    ))}\n                  </ion-select>\n                </ion-item>,\n                <ion-item>\n                  <ion-select\n                    label={TranslationService.getTransl(\n                      \"deco-ppO2-CCR\",\n                      \"Deco stops ppO2 (CCR)\"\n                    )}\n                    labelPlacement=\"floating\"\n                    onIonChange={(ev) => this.updateParam(\"decoppO2\", ev)}\n                    value={this.parameters.decoppO2}\n                  >\n                    {this.ranges.ppO2.map((ppO2) => (\n                      <ion-select-option value={ppO2}>{ppO2}</ion-select-option>\n                    ))}\n                  </ion-select>\n                </ion-item>,\n                <ion-item>\n                  <ion-select\n                    label={TranslationService.getTransl(\n                      \"oxygen-ppO2-CCR\",\n                      \"Oxygen stops ppO2 (CCR)\"\n                    )}\n                    labelPlacement=\"floating\"\n                    onIonChange={(ev) => this.updateParam(\"oxygenppO2\", ev)}\n                    value={this.parameters.oxygenppO2}\n                  >\n                    {this.ranges.ppO2.map((ppO2) => (\n                      <ion-select-option value={ppO2}>{ppO2}</ion-select-option>\n                    ))}\n                  </ion-select>\n                </ion-item>,\n              ]\n            : undefined}\n\n          <ion-item-divider>\n            <ion-label>\n              <my-transl tag=\"gas\" text=\"Gas\" />\n            </ion-label>\n          </ion-item-divider>\n          {this.parameters.configuration == \"pSCR\" ? (\n            <ion-item>\n              <ion-select\n                label={TranslationService.getTransl(\n                  \"pSCR-gas-divider\",\n                  \"pSCR Gas Divider\"\n                )}\n                labelPlacement=\"floating\"\n                onIonChange={(ev) => this.updateParam(\"pscrGasDivider\", ev)}\n                value={this.parameters.pscrGasDivider}\n              >\n                {this.ranges.pscrGasDivider.map((pscrGasDivider) => (\n                  <ion-select-option value={pscrGasDivider}>\n                    {pscrGasDivider}\n                  </ion-select-option>\n                ))}\n              </ion-select>\n            </ion-item>\n          ) : undefined}\n          {this.parameters.configuration != \"OC\" ? (\n            <ion-item>\n              <ion-input\n                label={TranslationService.getTransl(\n                  \"ace\",\n                  \"ACE (Absorbent Canister Endurance)\"\n                )}\n                labelPlacement=\"floating\"\n                type=\"number\"\n                value={this.parameters.ace_time}\n                class=\"ion-text-end\"\n                onIonChange={(ev) => this.updateParam(\"ace_time\", ev)}\n              ></ion-input>\n            </ion-item>\n          ) : undefined}\n          {this.parameters.configuration == \"CCR\" ? (\n            <ion-item>\n              <ion-select\n                label={\n                  TranslationService.getTransl(\n                    \"o2-consumption-ccr\",\n                    \"O2 consumption for CCR\"\n                  ) +\n                  \" (\" +\n                  this.parameters.volumeUnit +\n                  \"/min)\"\n                }\n                labelPlacement=\"floating\"\n                onIonChange={(ev) => this.updateParam(\"CCR_o2_consumption\", ev)}\n                value={this.parameters.CCR_o2_consumption}\n              >\n                {this.ranges.CCR_o2_consumption.map((CCR_o2_consumption) => (\n                  <ion-select-option value={CCR_o2_consumption}>\n                    {CCR_o2_consumption}\n                  </ion-select-option>\n                ))}\n              </ion-select>\n            </ion-item>\n          ) : undefined}\n          {this.parameters.configuration == \"pSCR\" ? (\n            <ion-item>\n              <ion-select\n                label={TranslationService.getTransl(\n                  \"metabolic-o2-consumption\",\n                  \"Metabolic O2 consumption\"\n                )}\n                labelPlacement=\"floating\"\n                onIonChange={(ev) =>\n                  this.updateParam(\"metabolic_o2_consumption\", ev)\n                }\n                value={this.parameters.metabolic_o2_consumption}\n              >\n                {this.ranges.CCR_o2_consumption.map((CCR_o2_consumption) => (\n                  <ion-select-option value={CCR_o2_consumption}>\n                    {CCR_o2_consumption}\n                  </ion-select-option>\n                ))}\n              </ion-select>\n            </ion-item>\n          ) : undefined}\n          {this.parameters.configuration == \"CCR\" ? (\n            <ion-item>\n              <ion-select\n                label={\n                  TranslationService.getTransl(\n                    \"volume-CCR-diluent-consumption\",\n                    \"Volume of CCR for diluent consumption\"\n                  ) +\n                  \" (\" +\n                  this.parameters.volumeUnit +\n                  \")\"\n                }\n                labelPlacement=\"floating\"\n                onIonChange={(ev) =>\n                  this.updateParam(\"CCR_volume_for_consumption\", ev)\n                }\n                value={this.parameters.CCR_volume_for_consumption}\n              >\n                {this.ranges.CCR_volume_for_consumption.map(\n                  (CCR_volume_for_consumption) => (\n                    <ion-select-option value={CCR_volume_for_consumption}>\n                      {CCR_volume_for_consumption}\n                    </ion-select-option>\n                  )\n                )}\n              </ion-select>\n            </ion-item>\n          ) : undefined}\n          {/**\n     <!--\n    <ion-item *ngIf=\"parameters.configuration=='CCR'\">\n      <ion-label>CCR diluent in separate tank</ion-label>\n      <ion-toggle [(ngModel)]=\"parameters.CCR_separate_dil_tank\" (ionChange)=\"updateParams()\"></ion-toggle>\n    </ion-item>-->\n     */}\n\n          <ion-item>\n            <ion-select\n              label={\n                TranslationService.getTransl(\"SCR-bottom\", \"SCR Bottom\") +\n                \" (\" +\n                this.parameters.volumeUnit +\n                \"/min)\"\n              }\n              labelPlacement=\"floating\"\n              onIonChange={(ev) => this.updateParam(\"rmvBottom\", ev)}\n              value={this.parameters.rmvBottom}\n            >\n              {this.ranges.rmv.map((rmv) => (\n                <ion-select-option value={rmv}>{rmv}</ion-select-option>\n              ))}\n            </ion-select>\n          </ion-item>\n          <ion-item>\n            <ion-select\n              label={\n                TranslationService.getTransl(\"SCR-deco\", \"SCR Deco\") +\n                \" (\" +\n                this.parameters.volumeUnit +\n                \"/min)\"\n              }\n              labelPlacement=\"floating\"\n              onIonChange={(ev) => this.updateParam(\"rmvDeco\", ev)}\n              value={this.parameters.rmvDeco}\n            >\n              {this.ranges.rmv.map((rmv) => (\n                <ion-select-option value={rmv}>{rmv}</ion-select-option>\n              ))}\n            </ion-select>\n          </ion-item>\n          <ion-item>\n            <ion-select\n              label={\n                TranslationService.getTransl(\n                  \"deco-gas-reserve\",\n                  \"Deco Gas Reserve\"\n                ) + \" (%)\"\n              }\n              labelPlacement=\"floating\"\n              onIonChange={(ev) => this.updateParam(\"deco_gas_reserve\", ev)}\n              value={this.parameters.deco_gas_reserve}\n            >\n              {this.ranges.deco_gas_reserve.map((deco_gas_reserve) => (\n                <ion-select-option value={deco_gas_reserve}>\n                  {deco_gas_reserve}\n                </ion-select-option>\n              ))}\n            </ion-select>\n          </ion-item>\n          <ion-item>\n            <ion-select\n              label={\n                TranslationService.getTransl(\n                  \"time-bottom-mingas\",\n                  \"Time at bottom for Min. Gas\"\n                ) + \" (min)\"\n              }\n              labelPlacement=\"floating\"\n              onIonChange={(ev) =>\n                this.updateParam(\n                  \"decotime_at_bottom_for_min_gas_gas_reserve\",\n                  ev\n                )\n              }\n              value={this.parameters.time_at_bottom_for_min_gas}\n            >\n              {this.ranges.time_at_bottom_for_min_gas.map(\n                (time_at_bottom_for_min_gas) => (\n                  <ion-select-option value={time_at_bottom_for_min_gas}>\n                    {time_at_bottom_for_min_gas}\n                  </ion-select-option>\n                )\n              )}\n            </ion-select>\n          </ion-item>\n          <ion-item>\n            <ion-select\n              label={\n                TranslationService.getTransl(\n                  \"time-gasswitch-mingas\",\n                  \"Time at gas switch for Min. Gas\"\n                ) + \" (min)\"\n              }\n              labelPlacement=\"floating\"\n              onIonChange={(ev) =>\n                this.updateParam(\"time_at_gas_switch_for_min_gas\", ev)\n              }\n              value={this.parameters.time_at_gas_switch_for_min_gas}\n            >\n              {this.ranges.time_at_bottom_for_min_gas.map(\n                (time_at_gas_switch_for_min_gas) => (\n                  <ion-select-option value={time_at_gas_switch_for_min_gas}>\n                    {time_at_gas_switch_for_min_gas}\n                  </ion-select-option>\n                )\n              )}\n            </ion-select>\n          </ion-item>\n          <ion-item>\n            <ion-select\n              label={\n                TranslationService.getTransl(\n                  \"stress-factor-mingas\",\n                  \"Stress factor for Min. Gas\"\n                ) + \" (x)\"\n              }\n              labelPlacement=\"floating\"\n              onIonChange={(ev) =>\n                this.updateParam(\"rmvBottom_multiplier_for_min_gas\", ev)\n              }\n              value={this.parameters.rmvBottom_multiplier_for_min_gas}\n            >\n              {this.ranges.rmvBottom_multiplier_for_min_gas.map(\n                (rmvBottom_multiplier_for_min_gas) => (\n                  <ion-select-option value={rmvBottom_multiplier_for_min_gas}>\n                    {rmvBottom_multiplier_for_min_gas}\n                  </ion-select-option>\n                )\n              )}\n            </ion-select>\n          </ion-item>\n          <ion-item>\n            <ion-select\n              label={\n                TranslationService.getTransl(\n                  \"number-divers-mingas\",\n                  \"Number of divers for Min. Gas\"\n                ) + \" (#)\"\n              }\n              labelPlacement=\"floating\"\n              onIonChange={(ev) =>\n                this.updateParam(\"number_of_divers_for_min_gas\", ev)\n              }\n              value={this.parameters.number_of_divers_for_min_gas}\n            >\n              {this.ranges.number_of_divers_for_min_gas.map(\n                (number_of_divers_for_min_gas) => (\n                  <ion-select-option value={number_of_divers_for_min_gas}>\n                    {number_of_divers_for_min_gas}\n                  </ion-select-option>\n                )\n              )}\n            </ion-select>\n          </ion-item>\n          <ion-item>\n            <ion-select\n              label={\n                TranslationService.getTransl(\"descent-rate\", \"Descent Rate\") +\n                \" (\" +\n                this.parameters.depthUnit +\n                \"/min)\"\n              }\n              labelPlacement=\"floating\"\n              onIonChange={(ev) => this.updateParam(\"descentRate\", ev)}\n              value={this.parameters.descentRate}\n            >\n              {this.ranges.descentRate.map((descentRate) => (\n                <ion-select-option value={descentRate}>\n                  {descentRate}\n                </ion-select-option>\n              ))}\n            </ion-select>\n          </ion-item>\n          <ion-item>\n            <ion-select\n              label={\n                TranslationService.getTransl(\"ascent-rate\", \"Ascent Rate\") +\n                \" (\" +\n                this.parameters.depthUnit +\n                \"/min)\"\n              }\n              labelPlacement=\"floating\"\n              onIonChange={(ev) => this.updateParam(\"ascentRate\", ev)}\n              value={this.parameters.ascentRate}\n            >\n              {this.ranges.ascentRate.map((ascentRate) => (\n                <ion-select-option value={ascentRate}>\n                  {ascentRate}\n                </ion-select-option>\n              ))}\n            </ion-select>\n          </ion-item>\n          {/**\n     <ion-item>\n      <ion-label>Min ppO2</ion-label>\n      <ion-select onIonChange={(ev)=>this.updateParam(\"minPPO2\",ev)}>\n    {this.ranges.minPPO2.map(minPPO2 => (\n      <ion-select-option selected={this.parameters.minPPO2 == toNumber(minPPO2)}>{minPPO2}</ion-select-option>\n    ))}\n    </ion-select>\n    </ion-item> \n    <ion-item>\n      <ion-label>Max ppO2 deco</ion-label>\n      <ion-select onIonChange={(ev)=>this.updateParam(\"maxPPO2deco\",ev)}>\n    {this.ranges.ppO2.map(ppO2 => (\n      <ion-select-option selected={this.parameters.maxPPO2deco == toNumber(ppO2)}>{ppO2}</ion-select-option>\n    ))}\n    </ion-select>\n    </ion-item> \n    <ion-item>\n      <ion-label>Max ppO2 bottom</ion-label>\n      <ion-select onIonChange={(ev)=>this.updateParam(\"maxPPO2bottom\",ev)}>\n    {this.ranges.ppO2.map(ppO2 => (\n      <ion-select-option selected={this.parameters.maxPPO2bottom == toNumber(ppO2)}>{ppO2}</ion-select-option>\n    ))}\n    </ion-select>\n    </ion-item>\n     */}\n        </ion-list>\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}