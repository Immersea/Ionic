{"file":"app-user-tanks.entry.esm.js","mappings":"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","names":["isEqual","cloneDeep","forEach"],"sources":["src/components/udive/app/user/app-user-tanks/app-user-tanks.scss?tag=app-user-tanks","src/components/udive/app/user/app-user-tanks/app-user-tanks.tsx"],"sourcesContent":["app-user-tanks {\n  width: 100%;\n  .card-margins {\n    margin: 10px 5px 5px 10px;\n  }\n}\n","import {Component, h, State} from \"@stencil/core\";\nimport {\n  UserService,\n  USERSETTINGSCOLLECTION,\n} from \"../../../../../services/common/user\";\nimport {Subscription} from \"rxjs\";\nimport {DatabaseService} from \"../../../../../services/common/database\";\nimport {DiveStandardsService} from \"../../../../../services/udive/planner/dive-standards\";\nimport {cloneDeep, forEach, isEqual} from \"lodash\";\nimport {alertController} from \"@ionic/core\";\nimport {TranslationService} from \"../../../../../services/common/translations\";\nimport {UserSettings} from \"../../../../../interfaces/udive/user/user-settings\";\nimport {RouterService} from \"../../../../../services/common/router\";\nimport {DiveToolsService} from \"../../../../../services/udive/planner/dive-tools\";\nimport {TankModel} from \"../../../../../interfaces/udive/planner/tank-model\";\n\n@Component({\n  tag: \"app-user-tanks\",\n  styleUrl: \"app-user-tanks.scss\",\n})\nexport class AppUserTanks {\n  @State() userTanks: TankModel[] = [];\n  stdTanks: TankModel[] = [];\n  loading: any;\n  userSettings: UserSettings;\n  userSub$: Subscription;\n  hasUserTanks = true;\n\n  componentWillLoad() {\n    this.userSub$ = UserService.userSettings$.subscribe(\n      (userSettings: UserSettings) => {\n        this.userSettings = new UserSettings(userSettings);\n        this.loadData();\n      }\n    );\n  }\n  componentDidLoad() {\n    //check if user is loaded or trigger local user\n    if (!this.userSettings) {\n      UserService.initLocalUser();\n    }\n  }\n\n  async loadData() {\n    if (!this.userSettings) {\n      this.userSettings = new UserSettings(\n        await DatabaseService.getLocalDocument(USERSETTINGSCOLLECTION)\n      );\n    }\n    this.userTanks = this.userSettings.userTanks;\n    this.stdTanks = DiveStandardsService.getStdTanks();\n    if (isEqual(this.userTanks, this.stdTanks)) this.hasUserTanks = false;\n  }\n\n  disconnectedCallback() {\n    this.userSub$.unsubscribe();\n  }\n\n  async viewTank(i) {\n    const openModal = await UserService.checkLicence(\"configs\", true);\n\n    if (openModal) {\n      const tank = cloneDeep(this.userTanks[i]);\n      const confModal = await RouterService.openModal(\n        \"modal-tank-configuration\",\n        {\n          tank: tank,\n        }\n      );\n      confModal.onDidDismiss().then((updatedTank) => {\n        if (updatedTank && updatedTank.data) {\n          const tank = updatedTank.data;\n          this.userTanks[i] = new TankModel(tank);\n          this.save();\n        }\n      });\n    }\n  }\n\n  async removeTank(event, i) {\n    event.stopPropagation();\n    const openModal = await UserService.checkLicence(\"configs\", true);\n    if (openModal) {\n      const confirm = await alertController.create({\n        header: TranslationService.getTransl(\n          \"delete-tank-header\",\n          \"Delete tank?\"\n        ),\n        message: TranslationService.getTransl(\n          \"delete-tank-message\",\n          \"This tank will be deleted! Are you sure?\"\n        ),\n        buttons: [\n          {\n            text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n            role: \"cancel\",\n            handler: () => {},\n          },\n          {\n            text: TranslationService.getTransl(\"ok\", \"OK\"),\n            handler: () => {\n              this.userTanks.splice(i, 1);\n              this.save();\n            },\n          },\n        ],\n      });\n      confirm.present();\n    }\n  }\n\n  async addTank() {\n    const openModal = await UserService.checkLicence(\"configs\", true);\n    if (openModal) {\n      let inputs = [];\n      forEach(this.stdTanks, (conf, key) => {\n        inputs.push({\n          type: \"radio\",\n          label: conf.name + (this.hasUserTanks ? \" (standard)\" : \"\"),\n          value: conf,\n          checked: key == 0 ? true : false,\n        });\n      });\n      if (this.hasUserTanks)\n        forEach(this.userTanks, (conf) => {\n          inputs.push({\n            type: \"radio\",\n            label: conf.name,\n            value: conf,\n            checked: false,\n          });\n        });\n      const alert = await alertController.create({\n        header: TranslationService.getTransl(\n          \"select-standard-tank\",\n          \"Select standard tank\"\n        ),\n        buttons: [\n          {\n            text: TranslationService.getTransl(\"ok\", \"OK\"),\n            handler: async (tank: any) => {\n              let openModal = await UserService.checkLicence(\"configs\", true);\n              if (openModal) {\n                const confModal = await RouterService.openModal(\n                  \"modal-tank-configuration\",\n                  {\n                    tank: tank,\n                  }\n                );\n                confModal.onDidDismiss().then((updatedTank) => {\n                  if (updatedTank && updatedTank.data) {\n                    const tank = updatedTank.data;\n                    this.userTanks.push(new TankModel(tank));\n                    this.save();\n                  }\n                });\n              }\n            },\n          },\n          {\n            text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n            role: \"cancel\",\n            cssClass: \"secondary\",\n          },\n        ],\n        inputs: inputs,\n      });\n      alert.present();\n    }\n  }\n\n  save() {\n    UserService.updateUserTanks(this.userTanks);\n  }\n\n  render() {\n    return (\n      <div class=\"slider-container\">\n        <div class=\"slider-scrollable-container\">\n          <ion-grid class=\"ion-no-padding\">\n            <ion-row class=\"ion-text-start ion-no-padding\">\n              {this.userTanks.map((tank, i) => (\n                <ion-col\n                  size-sm=\"12\"\n                  size-md=\"6\"\n                  size-lg=\"4\"\n                  class=\"ion-no-padding\"\n                >\n                  <ion-card\n                    onClick={() => this.viewTank(i)}\n                    class=\"card-margins\"\n                  >\n                    <ion-card-header>\n                      <ion-item class=\"ion-no-padding\" lines=\"none\">\n                        <ion-button\n                          icon-only\n                          slot=\"end\"\n                          color=\"danger\"\n                          fill=\"clear\"\n                          onClick={(ev) => this.removeTank(ev, i)}\n                        >\n                          <ion-icon name=\"trash-bin-outline\"></ion-icon>\n                        </ion-button>\n\n                        <ion-card-title>{tank.name}</ion-card-title>\n                      </ion-item>\n\n                      <ion-card-subtitle>\n                        {TranslationService.getTransl(\"volume\", \"Volume\") +\n                          \" : \" +\n                          tank.volume +\n                          \" lt\" +\n                          (this.userSettings.settings.units != \"Metric\"\n                            ? \" / \" +\n                              DiveToolsService.ltToCuFt(tank.volume) +\n                              \" cuft\"\n                            : \"\")}\n                      </ion-card-subtitle>\n                    </ion-card-header>\n\n                    <ion-card-content>\n                      <ion-grid>\n                        <ion-row>\n                          <ion-col>\n                            {TranslationService.getTransl(\n                              \"no_of_tanks\",\n                              \"Number Of Tanks\"\n                            ) +\n                              \" : \" +\n                              tank.no_of_tanks}\n                          </ion-col>\n                        </ion-row>\n                        <ion-row>\n                          <ion-col>\n                            {TranslationService.getTransl(\n                              \"pressure\",\n                              \"Pressure\"\n                            ) +\n                              \" : \" +\n                              tank.pressure +\n                              \" bar\" +\n                              (this.userSettings.settings.units != \"Metric\"\n                                ? \" / \" +\n                                  DiveToolsService.barToPsi(tank.pressure) +\n                                  \" psi\"\n                                : \"\")}\n                          </ion-col>\n                        </ion-row>\n                        {tank.forDeco ? (\n                          <ion-row>\n                            <ion-col>\n                              (\n                              {TranslationService.getTransl(\n                                \"for-deco\",\n                                \"For Decompression\"\n                              )}\n                              )\n                            </ion-col>\n                          </ion-row>\n                        ) : undefined}\n                      </ion-grid>\n                    </ion-card-content>\n                  </ion-card>\n                </ion-col>\n              ))}\n              <ion-col\n                size-sm=\"12\"\n                size-md=\"6\"\n                size-lg=\"4\"\n                class=\"ion-no-padding\"\n              >\n                <ion-card onClick={() => this.addTank()}>\n                  <ion-card-content class=\"ion-text-center\">\n                    <ion-icon\n                      name=\"add-circle-outline\"\n                      style={{fontSize: \"100px\"}}\n                    ></ion-icon>\n                  </ion-card-content>\n                </ion-card>\n              </ion-col>\n            </ion-row>\n          </ion-grid>\n        </div>\n      </div>\n    );\n  }\n}\n"],"version":3}