{"file":"page-dive-planner.entry.esm.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,kBAAkB,GAAG,8EAA8E;;MCuB5F,eAAe;;;QAC1B,UAAK,GAAoB,EAAE,CAAC;QAC5B,mBAAc,GAAG;YACf,KAAK,EAAE,gBAAgB,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,GAAG;YAC7C,IAAI,EAAE,EAAE;YACR,GAAG,EAAE,IAAI;YACT,GAAG,EAAE,CAAC;YACN,QAAQ,EAAE,GAAG;SACd,CAAC;QACF,aAAQ,GAAG,KAAK,CAAC;QACjB,sBAAiB,GAAwB,EAAE,CAAC;0BACL,EAAE;yBAIpB,CAAC;;IAEtB,iBAAiB;QACf,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC,aAAa,CAAC,SAAS,CACzD,CAAC,YAA0B;YACzB,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,CAAC;YACnD,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB,CACF,CAAC;KACH;IACD,gBAAgB;;QAEd,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,WAAW,CAAC,aAAa,EAAE,CAAC;SAC7B;;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,SAAS,EAAE;YAClC,KAAK,EAAE,GAAG;YACV,YAAY,EAAE,GAAG;YACjB,cAAc,EAAE,IAAI;SACrB,CAAC,CAAC;KACJ;IAED,MAAM,aAAa;QACjB,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;;YAEnD,IAAI,CAAC,iBAAiB,GAAGA,wBAAS,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;;YAEzE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;YAC/C,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;aAAM;;YAEL,MAAM,UAAU,GAAG,MAAM,eAAe,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;YACxE,IAAI,CAAC,iBAAiB,GAAG,oBAAoB,CAAC,oBAAoB,EAAE,CAAC;YACrE,IAAI,UAAU,EAAE;gBACd,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACrB,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI;oBACtB,MAAM,KAAK,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC;oBACtC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC7B,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,CAAC,UAAU,GAAG,oBAAoB,CAAC,8BAA8B,CACnE,IAAI,CAAC,iBAAiB,CACvB,CAAC;gBACF,eAAe,CAAC,iBAAiB,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;aAClE;YACD,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;KACF;IAED,oBAAoB;QAClB,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;KACrC;IAED,MAAM,WAAW;QACf,MAAM,aAAa,GAAG,EAAE,CAAC;QACzB,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,aAAa,EAAE;YAC3C,MAAM,KAAK,GAAG,MAAM,eAAe,CAAC,MAAM,CAAC;gBACzC,MAAM,EAAE,kBAAkB,CAAC,SAAS,CAAC,WAAW,EAAE,eAAe,CAAC;gBAClE,OAAO,EAAE,kBAAkB,CAAC,SAAS,CACnC,iBAAiB,EACjB,+EAA+E,EAC/E,EAAE,GAAG,EAAE,aAAa,EAAE,CACvB;gBACD,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC;qBAC/C;iBACF;aACF,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;SACjB;aAAM;YACL,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,IAAI,WAAW,CAAC,WAAW,IAAI,WAAW,CAAC,WAAW,EAAE;gBACtD,MAAM,CAAC,IAAI,CAAC;oBACV,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,mBAAmB;oBAC1B,KAAK,EAAE,CAAC,CAAC;oBACT,OAAO,EAAE,KAAK;iBACf,CAAC,CAAC;aACJ;YACDC,sBAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,IAAI,EAAE,GAAG;gBACxC,MAAM,CAAC,IAAI,CAAC;oBACV,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,IAAI,CAAC,OAAO;oBACnB,KAAK,EAAE,GAAG;oBACV,OAAO,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,GAAG,KAAK;iBACjC,CAAC,CAAC;aACJ,CAAC,CAAC;YAEH,MAAM,KAAK,GAAG,MAAM,eAAe,CAAC,MAAM,CAAC;gBACzC,MAAM,EAAE,kBAAkB,CAAC,SAAS,CAClC,+BAA+B,EAC/B,+BAA+B,CAChC;gBACD,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC;wBAC9C,OAAO,EAAE,OAAO,IAAS;4BACvB,IAAI,IAAI,GAAG,CAAC,CAAC,EAAE;gCACb,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;6BACxD;iCAAM;gCACL,IAAI,SAAS,GAAG,MAAM,WAAW,CAAC,YAAY,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;gCAChE,IAAI,SAAS,EAAE;oCACb,MAAM,SAAS,GACb,WAAW,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;oCACjD,MAAM,aAAa,GAAG,IAAI,iBAAiB,CAAC,SAAS,CAAC,CAAC;oCACvD,aAAa,CAAC,OAAO,GAAG,EAAE,CAAC;oCAC3B,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,EAAE,CAAC;oCACxC,aAAa,CAAC,QAAQ,GAAG,CAAC,CAAC;oCAC3B,aAAa,CAAC,OAAO,GAAG,CAAC,CAAC;oCAC1B,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;oCAChC,QAAQ,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;oCACzC,MAAM,SAAS,GAAG,MAAM,aAAa,CAAC,SAAS,CAC7C,0BAA0B,EAC1B;wCACE,eAAe,EAAE;4CACf,QAAQ,EAAE,QAAQ;4CAClB,kBAAkB,EAAE,IAAI;yCACzB;qCACF,CACF,CAAC;oCACF,SAAS,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,WAAW;wCACxC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC;wCAC/B,IAAI,WAAW,EAAE;;4CAEf,MAAM,OAAO,GAAG,IAAI,iBAAiB,CAAC,WAAW,CAAC,CAAC;;4CAEnD,MAAM,QAAQ,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,CAC/B,IAAI,CAAC,YAAY,CAAC,kBAAkB,CACrC,CAAC;4CACF,IAAI,CAAC,YAAY,CAAC,kBAAkB,GAAG,QAAQ,CAAC;4CAChD,WAAW,CAAC,wBAAwB,CAClC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CACrC,CAAC;4CACF,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;yCACnC;qCACF,CAAC,CAAC;iCACJ;6BACF;yBACF;qBACF;oBACD;wBACE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC;wBACtD,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE,WAAW;qBACtB;iBACF;gBACD,MAAM,EAAE,MAAM;aACf,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;SACjB;KACF;IAED,MAAM,mBAAmB,CAAC,qBAAwC;QAChE,MAAM,SAAS,GAAG,MAAM,aAAa,CAAC,SAAS,CAAC,oBAAoB,EAAE;YACpE,qBAAqB,EAAE,qBAAqB;YAC5C,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,IAAI,CAAC,YAAY;SACxB,CAAC,CAAC;QACH,SAAS,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,QAAQ;YACrC,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC;YAC9B,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC9B,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;SACF,CAAC,CAAC;KACJ;IAED,MAAM,QAAQ,CAAC,CAAC;QACd,MAAM,SAAS,GAAG,MAAM,aAAa,CAAC,SAAS,CAAC,oBAAoB,EAAE;YACpE,OAAO,EAAE,KAAK;YACd,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACjC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,IAAI,CAAC,YAAY;SACxB,CAAC,CAAC;QACH,SAAS,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,QAAQ;YACrC,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC;YAC9B,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;gBAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;SACF,CAAC,CAAC;KACJ;IAED,WAAW;QACT,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE;YACrD,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACnD;aAAM;YACL,eAAe,CAAC,iBAAiB,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YACjE,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;KACF;IAED,UAAU;QACR,IAAI,CAAC,UAAU,GAAGC,sBAAO,CAAC,IAAI,CAAC,UAAU,EAAE,uBAAuB,CAAC,CAAC;KACrE;IAED,MAAM,UAAU,CAAC,KAAK,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,MAAM,OAAO,GAAG,MAAM,eAAe,CAAC,MAAM,CAAC;YAC3C,MAAM,EAAE,kBAAkB,CAAC,SAAS,CAClC,oBAAoB,EACpB,cAAc,CACf;YACD,OAAO,EAAE,kBAAkB,CAAC,SAAS,CACnC,qBAAqB,EACrB,+CAA+C,CAChD;YACD,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC;oBACtD,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE,SAAQ;iBAClB;gBACD;oBACE,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC;oBAC9C,OAAO,EAAE;wBACP,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;qBACpB;iBACF;aACF;SACF,CAAC,CAAC;QACH,OAAO,CAAC,OAAO,EAAE,CAAC;KACnB;IAED,MAAM;QACJ,OAAO;YACL,mEACE,GAAG,EAAC,cAAc,EAClB,IAAI,EAAC,cAAc,EACnB,KAAK,EAAE,WAAW,CAAC,aAAa,EAAE,GAAG,UAAU,GAAG,SAAS,GAC/C;YACd,sEACE,gEAAS,QAAQ,EAAC,KAAK,EAAC,UAAU,EAAC,KAAK,EAAC,IAAI,EAAC,OAAO,EAAC,IAAI,UACxD,uEACE,OAAO,EAAE,MAAM,IAAI,CAAC,WAAW,EAAE,EACjC,KAAK,EAAE,WAAW,CAAC,aAAa,EAAE,GAAG,UAAU,GAAG,SAAS,IAE3D,iEAAU,IAAI,EAAC,KAAK,GAAY,CACjB,CACT,EACT,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,IACzB,gBAAU,KAAK,EAAC,gBAAgB,IAC9B,eAAS,KAAK,EAAC,gBAAgB,IAC5B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,MAC3B,0BACU,IAAI,aACJ,GAAG,aACH,GAAG,EACX,KAAK,EAAC,gBAAgB,IAEtB,gBACE,OAAO,EAAE,MAAM,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAC/B,KAAK,EAAC,cAAc,IAEpB,2BACE,6BACE,gBAAU,KAAK,EAAC,MAAM,EAAC,KAAK,EAAC,gBAAgB,IAC3C,qCAEE,IAAI,EAAC,KAAK,EACV,KAAK,EAAC,QAAQ,EACd,IAAI,EAAC,OAAO,EACZ,OAAO,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC,IAEvC,gBAAU,IAAI,EAAC,mBAAmB,GAAY,CACnC,EACb,qBACE,cAAK,IAAI,CAAC,aAAa,CAAC,OAAO,CAAM,CAC3B,CACH,EACV,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;iBACX,uBAAuB,EAAE;iBACzB,GAAG,CAAC,CAAC,MAAM,MACV,SAAG,KAAK,EAAC,gBAAgB,IAAE,MAAM,CAAK,CACvC,CAAC,CACc,CACJ,EAElB,4BACG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IACjD,aACE,iBAAW,GAAG,EAAC,cAAc,EAAC,IAAI,EAAC,cAAc,GAAG,MAClD,IACF,SAAS,EACZ,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,MAChD,aAAI,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAK,CAChD,CAAC,EACD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAC/C,aACE,iBAAW,GAAG,EAAC,YAAY,EAAC,IAAI,EAAC,YAAY,GAAG,MAC9C,IACF,SAAS,EACZ,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,MAC9C,aAAI,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAK,CAChD,CAAC,CACe,CACV,CACH,CACX,CAAC,CACM,CACD,IACT,SAAS,CACD;SACf,CAAC;KACH;;;;;;","names":["cloneDeep","forEach","orderBy"],"sources":["src/components/udive/pages/dive-plan/page-dive-planner/page-dive-planner.scss?tag=page-dive-planner","src/components/udive/pages/dive-plan/page-dive-planner/page-dive-planner.tsx"],"sourcesContent":["page-dive-planner {\n  /* Component styles go here */\n  .card-margins {\n    margin: 10px 5px 5px 10px;\n  }\n}\n","import { Component, h, State } from \"@stencil/core\";\nimport { alertController } from \"@ionic/core\";\nimport { Subscription } from \"rxjs\";\n\nimport { cloneDeep, forEach, orderBy } from \"lodash\";\nimport { DiveConfiguration } from \"../../../../../interfaces/udive/planner/dive-configuration\";\nimport { TranslationService } from \"../../../../../services/common/translations\";\nimport { DivePlan } from \"../../../../../services/udive/planner/dive-plan\";\nimport { UserService } from \"../../../../../services/common/user\";\nimport { DivePlanModel } from \"../../../../../interfaces/udive/planner/dive-plan\";\nimport { DiveStandardsService } from \"../../../../../services/udive/planner/dive-standards\";\nimport { DatabaseService } from \"../../../../../services/common/database\";\nimport { UserSettings } from \"../../../../../interfaces/udive/user/user-settings\";\nimport { RouterService } from \"../../../../../services/common/router\";\nimport { DiveToolsService } from \"../../../../../services/udive/planner/dive-tools\";\nimport { Environment } from \"../../../../../global/env\";\n// core version + navigation, pagination modules:\nimport Swiper from \"swiper\";\n\n@Component({\n  tag: \"page-dive-planner\",\n  styleUrl: \"page-dive-planner.scss\",\n})\nexport class PageDivePlanner {\n  plans: Array<DivePlan> = [];\n  stdDiveProfile = {\n    depth: DiveToolsService.isMetric() ? 30 : 100,\n    time: 30,\n    fO2: 0.32,\n    fHe: 0,\n    setpoint: 1.4,\n  };\n  isLoaded = false;\n  stdConfigurations: DiveConfiguration[] = [];\n  @State() localPlans: DivePlanModel[] = [];\n  userSettings: UserSettings;\n  userSettingsSub$: Subscription;\n  swiper: Swiper;\n  @State() scrollTop = 0;\n\n  componentWillLoad() {\n    this.userSettingsSub$ = UserService.userSettings$.subscribe(\n      (userSettings: UserSettings) => {\n        this.userSettings = new UserSettings(userSettings);\n        this.loadLocalData();\n      }\n    );\n  }\n  componentDidLoad() {\n    //check if user is loaded or trigger local user\n    if (!this.userSettings) {\n      UserService.initLocalUser();\n    }\n    // init Swiper:\n    this.swiper = new Swiper(\".swiper\", {\n      speed: 400,\n      spaceBetween: 100,\n      allowTouchMove: true,\n    });\n  }\n\n  async loadLocalData() {\n    if (this.userSettings && this.userSettings.settings) {\n      //user loggedin\n      this.stdConfigurations = cloneDeep(this.userSettings.userConfigurations);\n      //order by name\n      this.localPlans = this.userSettings.localPlans;\n      this.orderPlans();\n    } else {\n      //no user loggedin\n      const localPlans = await DatabaseService.getLocalDocument(\"localplans\");\n      this.stdConfigurations = DiveStandardsService.getStdConfigurations();\n      if (localPlans) {\n        this.localPlans = [];\n        localPlans.forEach((plan) => {\n          const model = new DivePlanModel(plan);\n          this.localPlans.push(model);\n        });\n      } else {\n        this.localPlans = DiveStandardsService.getDivePlansFromConfigurations(\n          this.stdConfigurations\n        );\n        DatabaseService.saveLocalDocument(\"localplans\", this.localPlans);\n      }\n      this.orderPlans();\n    }\n  }\n\n  disconnectedCallback() {\n    this.userSettingsSub$.unsubscribe();\n  }\n\n  async addDivePlan() {\n    const maxLocalPlans = 15;\n    if (this.localPlans.length >= maxLocalPlans) {\n      const alert = await alertController.create({\n        header: TranslationService.getTransl(\"max-plans\", \"Maximum Plans\"),\n        message: TranslationService.getTransl(\n          \"max-plans-descr\",\n          \"You can store a maximum of xxx plans. Use the 'Logbook' for additional plans.\",\n          { xxx: maxLocalPlans }\n        ),\n        buttons: [\n          {\n            text: TranslationService.getTransl(\"ok\", \"OK\"),\n          },\n        ],\n      });\n      alert.present();\n    } else {\n      let inputs = [];\n      if (UserService.userProfile && UserService.userProfile) {\n        inputs.push({\n          type: \"radio\",\n          label: \"New Configuration\",\n          value: -1,\n          checked: false,\n        });\n      }\n      forEach(this.stdConfigurations, (conf, key) => {\n        inputs.push({\n          type: \"radio\",\n          label: conf.stdName,\n          value: key,\n          checked: key == 0 ? true : false,\n        });\n      });\n\n      const alert = await alertController.create({\n        header: TranslationService.getTransl(\n          \"select-standard-configuration\",\n          \"Select standard configuration\"\n        ),\n        buttons: [\n          {\n            text: TranslationService.getTransl(\"ok\", \"OK\"),\n            handler: async (data: any) => {\n              if (data > -1) {\n                this.addDivePlanWithConf(this.stdConfigurations[data]);\n              } else {\n                let openModal = await UserService.checkLicence(\"configs\", true);\n                if (openModal) {\n                  const newConfig =\n                    UserService.userSettings.userConfigurations[0];\n                  const configuration = new DiveConfiguration(newConfig);\n                  configuration.stdName = \"\";\n                  configuration.configuration.bottom = [];\n                  configuration.maxDepth = 0;\n                  configuration.maxTime = 0;\n                  const divePlan = new DivePlan();\n                  divePlan.setConfiguration(configuration);\n                  const confModal = await RouterService.openModal(\n                    \"modal-dive-configuration\",\n                    {\n                      diveDataToShare: {\n                        divePlan: divePlan,\n                        showConfigurations: true,\n                      },\n                    }\n                  );\n                  confModal.onDidDismiss().then((updatedConf) => {\n                    updatedConf = updatedConf.data;\n                    if (updatedConf) {\n                      //save new configuration and then open deco planner\n                      const newConf = new DiveConfiguration(updatedConf);\n                      //put new configuration on top\n                      const newArray = [newConf].concat(\n                        this.userSettings.userConfigurations\n                      );\n                      this.userSettings.userConfigurations = newArray;\n                      UserService.updateUserConfigurations(\n                        this.userSettings.userConfigurations\n                      );\n                      this.addDivePlanWithConf(newConf);\n                    }\n                  });\n                }\n              }\n            },\n          },\n          {\n            text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n            role: \"cancel\",\n            cssClass: \"secondary\",\n          },\n        ],\n        inputs: inputs,\n      });\n      alert.present();\n    }\n  }\n\n  async addDivePlanWithConf(selectedConfiguration: DiveConfiguration) {\n    const openModal = await RouterService.openModal(\"modal-dive-planner\", {\n      selectedConfiguration: selectedConfiguration,\n      stdConfigurations: this.stdConfigurations,\n      index: 0,\n      user: this.userSettings,\n    });\n    openModal.onDidDismiss().then((divePlan) => {\n      const dpModal = divePlan.data;\n      if (dpModal) {\n        this.localPlans.push(dpModal);\n        this.updatePlans();\n      }\n    });\n  }\n\n  async viewDive(i) {\n    const openModal = await RouterService.openModal(\"modal-dive-planner\", {\n      addDive: false,\n      divePlanModel: this.localPlans[i],\n      stdConfigurations: this.stdConfigurations,\n      index: 0,\n      user: this.userSettings,\n    });\n    openModal.onDidDismiss().then((divePlan) => {\n      const dpModal = divePlan.data;\n      if (dpModal) {\n        this.localPlans[i] = dpModal;\n        this.updatePlans();\n      }\n    });\n  }\n\n  updatePlans() {\n    if (this.userSettings && this.userSettings.localPlans) {\n      UserService.updateUserLocalPlans(this.localPlans);\n    } else {\n      DatabaseService.saveLocalDocument(\"localplans\", this.localPlans);\n      this.loadLocalData();\n    }\n  }\n\n  orderPlans() {\n    this.localPlans = orderBy(this.localPlans, \"configuration.stdName\");\n  }\n\n  async removeDive(event, i) {\n    event.stopPropagation();\n    const confirm = await alertController.create({\n      header: TranslationService.getTransl(\n        \"delete-dive-header\",\n        \"Delete dive?\"\n      ),\n      message: TranslationService.getTransl(\n        \"delete-dive-message\",\n        \"This dive plan will be deleted! Are you sure?\"\n      ),\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n          role: \"cancel\",\n          handler: () => {},\n        },\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n          handler: () => {\n            this.localPlans.splice(i, 1);\n            this.updatePlans();\n          },\n        },\n      ],\n    });\n    confirm.present();\n  }\n\n  render() {\n    return [\n      <app-navbar\n        tag='deco-planner'\n        text='Deco Planner'\n        color={Environment.isDecoplanner() ? \"gue-blue\" : \"planner\"}\n      ></app-navbar>,\n      <ion-content>\n        <ion-fab vertical='top' horizontal='end' slot='fixed' edge>\n          <ion-fab-button\n            onClick={() => this.addDivePlan()}\n            color={Environment.isDecoplanner() ? \"gue-blue\" : \"planner\"}\n          >\n            <ion-icon name='add'></ion-icon>\n          </ion-fab-button>\n        </ion-fab>\n        {this.localPlans.length > 0 ? (\n          <ion-grid class='ion-no-padding'>\n            <ion-row class='ion-no-padding'>\n              {this.localPlans.map((plan, i) => (\n                <ion-col\n                  size-sm='12'\n                  size-md='6'\n                  size-lg='4'\n                  class='ion-no-padding'\n                >\n                  <ion-card\n                    onClick={() => this.viewDive(i)}\n                    class='card-margins'\n                  >\n                    <ion-card-header>\n                      <ion-card-subtitle>\n                        <ion-item lines='none' class='ion-no-padding'>\n                          <ion-button\n                            icon-only\n                            slot='end'\n                            color='danger'\n                            fill='clear'\n                            onClick={(ev) => this.removeDive(ev, i)}\n                          >\n                            <ion-icon name='trash-bin-outline'></ion-icon>\n                          </ion-button>\n                          <ion-label>\n                            <h1>{plan.configuration.stdName}</h1>\n                          </ion-label>\n                        </ion-item>\n                        {plan.dives[0]\n                          .getProfilePointsDetails()\n                          .map((detail) => (\n                            <p class='ion-text-start'>{detail}</p>\n                          ))}\n                      </ion-card-subtitle>\n                    </ion-card-header>\n\n                    <ion-card-content>\n                      {plan.configuration.configuration.bottom.length > 0 ? (\n                        <p>\n                          <my-transl tag='bottom-tanks' text='Bottom Tanks' />:\n                        </p>\n                      ) : undefined}\n                      {plan.configuration.configuration.bottom.map((tank) => (\n                        <p>{tank.name + \"->\" + tank.gas.toString()}</p>\n                      ))}\n                      {plan.configuration.configuration.deco.length > 0 ? (\n                        <p>\n                          <my-transl tag='deco-tanks' text='Deco Tanks' />:\n                        </p>\n                      ) : undefined}\n                      {plan.configuration.configuration.deco.map((tank) => (\n                        <p>{tank.name + \"->\" + tank.gas.toString()}</p>\n                      ))}\n                    </ion-card-content>\n                  </ion-card>\n                </ion-col>\n              ))}\n            </ion-row>\n          </ion-grid>\n        ) : undefined}\n      </ion-content>,\n    ];\n  }\n}\n"],"version":3}