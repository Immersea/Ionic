{"file":"popover-media-uploader.entry.esm.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,uBAAuB,GAAG,EAAE;;MCYrB,oBAAoB;;;QAU/B,eAAU,GAKN,EAAE,CAAC;QAIP,SAAI,GAEA,EAAE,CAAC;;;;0BAJe,KAAK;;IAS3B,qBAAqB,CAAC,KAAsC;QAC1D,MAAM,iBAAiB,GAAuB,KAAK,CAAC,MAAM,CAAC;QAC3D,IAAI,iBAAiB,CAAC,KAAK,KAAK,WAAW,EAAE;YAC3C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,iBAAiB,CAAC,GAAG,CAAC;YACpD,IAAI,cAAc,GAAG,IAAI,CAAC;YAC1B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE;gBACtC,cAAc;oBACZ,cAAc,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,cAAc,KAAK,GAAG,CAAC;aAChE,CAAC,CAAC;YACH,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;YACnC,IAAI,cAAc,EAAE;;gBAElB,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACtC;iBAAM;;gBAEL,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;SACF;aAAM,IAAI,iBAAiB,CAAC,KAAK,KAAK,OAAO,EAAE;YAC9C,iBAAiB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SAClC;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,cAAc;gBAC9C,iBAAiB,CAAC,QAAQ,CAAC;YAC7B,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;SACpC;KACF;IAED,gBAAgB;QACd,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE;;YAEjC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG;gBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI;gBAC9B,cAAc,EAAE,CAAC;aAClB,CAAC;SACH,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IACD,MAAM,MAAM;QACV,iBAAiB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KAClC;IAED,WAAW;;QAET,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,UAAU;YAC9C,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,cAAc,IAAI,CAAC,EAAE;gBACnD,EAAE,GAAG,UAAU,CAAC;gBAChB,OAAO;aACR;SACF,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;QACjC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC;QACnC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;KACxE;IAED,MAAM;QACJ,OAAO;YACL,qEACE,oEAAa,KAAK,EAAE,WAAW,CAAC,WAAW,EAAE,IAC3C,oEACG,kBAAkB,CAAC,SAAS,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,CACvD,CACA,CACH;YACb,sEACE,mEACG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK;gBACnC,oBACE,qBACE,cAAK,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAM,EACpC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;sBACnC;wBACE,cACG,kBAAkB,CAAC,SAAS,CAAC,WAAW,EAAE,WAAW,CAAC,QACpD,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CACxB;wBACL,aACG,kBAAkB,CAAC,SAAS,CAAC,UAAU,EAAE,UAAU,CAAC,OAAG,GAAG,EAC1D,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,cAAc,MACjC;qBACL;sBACD,SAAS,CACH,CACH;gBACX,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,IACpC,wBAAkB,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,cAAc,GAAI,IAC7D,SAAS;aACd,CAAC,CACO,EACX,mEAAY,MAAM,EAAC,OAAO,EAAC,IAAI,EAAC,SAAS,EAAC,OAAO,EAAE,MAAM,IAAI,CAAC,MAAM,EAAE,IACpE,oEACG,kBAAkB,CAAC,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC,CACvC,CACD,CACD;SACf,CAAC;KACH;;;;;;","names":[],"sources":["src/components/common/popovers/popover-media-uploader/popover-media-uploader.scss?tag=popover-media-uploader","src/components/common/popovers/popover-media-uploader/popover-media-uploader.tsx"],"sourcesContent":["popover-media-uploader {\n}\n","import {popoverController} from \"@ionic/core\";\nimport {Component, h, Listen, Prop, State} from \"@stencil/core\";\nimport {Media} from \"../../../../interfaces/common/media/media\";\nimport {Environment} from \"../../../../global/env\";\nimport {StorageService} from \"../../../../services/common/storage\";\nimport {UploadProgressData} from \"../../../../interfaces/interfaces\";\nimport {TranslationService} from \"../../../../services/common/translations\";\n\n@Component({\n  tag: \"popover-media-uploader\",\n  styleUrl: \"popover-media-uploader.scss\",\n})\nexport class PopoverMediaUploader {\n  @Prop() files: {\n    [id: string]: {\n      media: Media;\n      file: File;\n    };\n  };\n  @Prop() collectionId: string;\n  @Prop() itemId: string;\n\n  inProgress: {\n    [id: string]: {\n      size: number;\n      uploadProgress: number;\n    };\n  } = {};\n\n  @State() updateView = false;\n\n  urls: {\n    [id: string]: string;\n  } = {};\n\n  uploadingId: string;\n\n  @Listen(\"uploadProgress\", {target: \"window\", capture: true})\n  uploadProgressHandler(event: CustomEvent<UploadProgressData>) {\n    const uploadingProgress: UploadProgressData = event.detail;\n    if (uploadingProgress.state === \"completed\") {\n      this.urls[this.uploadingId] = uploadingProgress.url;\n      let checkCompleted = true;\n      Object.keys(this.inProgress).forEach((id) => {\n        checkCompleted =\n          checkCompleted && this.inProgress[id].uploadProgress === 100;\n      });\n      this.updateView = !this.updateView;\n      if (checkCompleted) {\n        //all files downloaded\n        popoverController.dismiss(this.urls);\n      } else {\n        //download next file\n        this.uploadMedia();\n      }\n    } else if (uploadingProgress.state === \"error\") {\n      popoverController.dismiss(false);\n    } else {\n      this.inProgress[this.uploadingId].uploadProgress =\n        uploadingProgress.progress;\n      this.updateView = !this.updateView;\n    }\n  }\n\n  componentDidLoad() {\n    this.inProgress = {};\n    Object.keys(this.files).forEach((id) => {\n      //set all to false to start download\n      this.inProgress[id] = {\n        size: this.files[id].file.size,\n        uploadProgress: 0,\n      };\n    });\n    this.uploadMedia();\n  }\n  async cancel() {\n    popoverController.dismiss(false);\n  }\n\n  uploadMedia() {\n    //check media that have not completed download and start download\n    let id = null;\n    Object.keys(this.inProgress).forEach((progressId) => {\n      if (this.inProgress[progressId].uploadProgress == 0) {\n        id = progressId;\n        return;\n      }\n    });\n    this.uploadingId = id;\n    const file = this.files[id].file;\n    const media = this.files[id].media;\n    StorageService.uploadFile(this.collectionId, this.itemId, media, file);\n  }\n\n  render() {\n    return [\n      <ion-header>\n        <ion-toolbar color={Environment.getAppColor()}>\n          <ion-title>\n            {TranslationService.getTransl(\"media-uploader\", \"Media Uploader\")}\n          </ion-title>\n        </ion-toolbar>\n      </ion-header>,\n      <ion-content>\n        <ion-list>\n          {Object.keys(this.files).map((id) => [\n            <ion-item>\n              <ion-label>\n                <h4>{this.files[id].media.title}</h4>\n                {this.inProgress && this.inProgress[id]\n                  ? [\n                      <h5>\n                        {TranslationService.getTransl(\"file-size\", \"File Size\")}\n                        : {this.inProgress[id].size}\n                      </h5>,\n                      <p>\n                        {TranslationService.getTransl(\"uploaded\", \"Uploaded\")}:{\" \"}\n                        {this.inProgress[id].uploadProgress}%\n                      </p>,\n                    ]\n                  : undefined}\n              </ion-label>\n            </ion-item>,\n            this.inProgress && this.inProgress[id] ? (\n              <ion-progress-bar value={this.inProgress[id].uploadProgress} />\n            ) : undefined,\n          ])}\n        </ion-list>\n        <ion-button expand=\"block\" fill=\"outline\" onClick={() => this.cancel()}>\n          <ion-label>\n            {TranslationService.getTransl(\"cancel\", \"Cancel\")}\n          </ion-label>\n        </ion-button>\n      </ion-content>,\n    ];\n  }\n}\n"],"version":3}