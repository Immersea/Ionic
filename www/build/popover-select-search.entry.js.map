{"file":"popover-select-search.entry.esm.js","mappings":"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","names":["cloneDeep","includes","toLower","isString","isObject"],"sources":["src/components/common/popovers/popover-select-search/popover-select-search.scss?tag=popover-select-search","src/components/common/popovers/popover-select-search/popover-select-search.tsx"],"sourcesContent":["popover-select-search {\n  /* Component styles go here */\n  .boldText {\n    font-weight: bold;\n  }\n}\n","import {Component, h, Host, Element, Prop, State} from \"@stencil/core\";\nimport {popoverController} from \"@ionic/core\";\nimport {cloneDeep, includes, isObject, isString, toLower} from \"lodash\";\nimport {Environment} from \"../../../../global/env\";\n@Component({\n  tag: \"popover-select-search\",\n  styleUrl: \"popover-select-search.scss\",\n})\nexport class PopoverSelectSearch {\n  @Element() el: HTMLElement;\n  @Prop() selectOptions: any[];\n  @Prop() selectValueText: string[];\n  @Prop() placeholder: string = \"Search\";\n  @Prop() selectValueId: string;\n  @Prop() value: string;\n  @State() filteredOptions: any;\n  popover: HTMLIonPopoverElement;\n\n  componentWillLoad() {\n    this.popover = this.el.closest(\"ion-popover\");\n    this.filteredOptions = cloneDeep(this.selectOptions);\n  }\n\n  componentDidLoad() {\n    const searchbar = this.el.querySelector(\"ion-searchbar\");\n    if (searchbar) {\n      searchbar.componentOnReady().then(() => {\n        setTimeout(() => {\n          searchbar.setFocus();\n        });\n      });\n    }\n  }\n\n  handleSearch(ev) {\n    let searchString = \"\";\n    const target = ev.target as HTMLIonSearchbarElement;\n    if (target) searchString = target.value!.toLowerCase();\n    this.filteredOptions = [];\n    this.selectOptions.forEach((option) => {\n      const text = this.getTextValue(option);\n      if (includes(toLower(text), searchString)) {\n        this.filteredOptions.push(option);\n      }\n    });\n  }\n\n  handleSelect(ev) {\n    popoverController.dismiss(ev);\n  }\n\n  close() {\n    popoverController.dismiss();\n  }\n\n  getTextValue(item) {\n    let textValue = cloneDeep(item);\n    let ret = null;\n    for (let index = 0; index < this.selectValueText.length; index++) {\n      const value = this.selectValueText[index];\n      if (isString(textValue[value])) {\n        ret = (ret ? ret + \"-\" : \"\") + textValue[value];\n      } else if (isObject(textValue[value])) {\n        index++;\n        //in case of TextMultiLanguage the second text is the language\n        ret =\n          (ret ? ret + \"-\" : \"\") +\n          textValue[value][this.selectValueText[index]];\n      }\n    }\n    return ret;\n  }\n\n  render() {\n    return (\n      <Host>\n        <ion-header translucent>\n          <ion-toolbar>\n            <ion-grid class=\"ion-no-padding\">\n              <ion-row>\n                <ion-col size=\"10\">\n                  <ion-searchbar\n                    animated={true}\n                    debounce={250}\n                    placeholder={this.placeholder}\n                    onIonInput={(ev) => this.handleSearch(ev)}\n                  ></ion-searchbar>\n                </ion-col>\n                <ion-col size=\"1\">\n                  <ion-button\n                    color={Environment.getAppColor()}\n                    icon-only\n                    fill=\"clear\"\n                    onClick={this.close}\n                  >\n                    <ion-icon name=\"close\"></ion-icon>\n                  </ion-button>\n                </ion-col>\n              </ion-row>\n            </ion-grid>\n          </ion-toolbar>\n        </ion-header>\n        <ion-content>\n          <ion-list>\n            {this.filteredOptions.map((option) => (\n              <ion-item\n                button\n                onClick={() => this.handleSelect(option)}\n                class={\n                  option[this.selectValueId] == this.value ? \"boldText\" : \"\"\n                }\n              >\n                {option[this.selectValueId] == this.value ? (\n                  <ion-icon name=\"checkmark\"></ion-icon>\n                ) : undefined}\n                <ion-label>{this.getTextValue(option)}</ion-label>\n              </ion-item>\n            ))}\n          </ion-list>\n        </ion-content>\n      </Host>\n    );\n  }\n}\n"],"version":3}