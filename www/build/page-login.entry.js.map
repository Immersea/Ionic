{"file":"page-login.entry.esm.js","mappings":"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","names":["toLower"],"sources":["src/components/common/pages/user/page-login/page-login.scss?tag=page-login","src/components/common/pages/user/page-login/page-login.tsx"],"sourcesContent":["page-login {\n  /* Component styles go here */\n  .apple {\n    --background: black;\n  }\n  .facebook {\n    --background: var(--facebook-color);\n  }\n  .google {\n    --background: var(--google-color);\n  }\n\n  .validation-error {\n    padding-left: 18px;\n    font-size: 0.7rem;\n    color: red;\n  }\n\n  .small {\n    font-size: 0.8rem;\n    color: var(--ion-color-tint);\n  }\n\n  .centered {\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n  }\n}\n","import { Component, h, State } from \"@stencil/core\";\nimport { AuthService } from \"../../../../../services/common/auth\";\nimport { TranslationService } from \"../../../../../services/common/translations\";\nimport { alertController, isPlatform } from \"@ionic/core\";\nimport { InputValidator } from \"../../../../../interfaces/interfaces\";\nimport { RouterService } from \"../../../../../services/common/router\";\nimport { DatabaseService } from \"../../../../../services/common/database\";\nimport { Environment } from \"../../../../../global/env\";\nimport { SystemService } from \"../../../../../services/common/system\";\nimport { toLower } from \"lodash\";\n\n@Component({\n  tag: \"page-login\",\n  styleUrl: \"page-login.scss\",\n})\nexport class PageLogin {\n  @State() email: InputValidator = {\n    name: \"email\",\n    valid: false,\n    value: \"\",\n  };\n  @State() emailpsw: InputValidator = {\n    name: \"emailpsw\",\n    valid: false,\n    value: \"\",\n  };\n  @State() psw: InputValidator = {\n    name: \"psw\",\n    valid: false,\n    value: \"\",\n  };\n  @State() retypepsw: InputValidator = {\n    name: \"retypepsw\",\n    valid: true,\n    value: \"\",\n  };\n\n  @State() passwordCheck = true;\n\n  @State() trasteelLogin = false;\n  @State() disablePswFields = false;\n  @State() disableEmailLinkFields = false;\n  @State() disableGoogle = false;\n  @State() disableFacebook = true;\n  @State() disableApple = false;\n\n  @State() network = false;\n  @State() scrollTop = 0;\n\n  newUserRegistration = false;\n\n  checkEmailTimer;\n  @State() checkingEmail = false;\n\n  componentWillLoad() {\n    SystemService.getNetworkStatus().then((networkObservable) => {\n      networkObservable.subscribe((status) => {\n        this.network = status;\n      });\n    });\n    this.trasteelLogin = Environment.isTrasteel();\n  }\n\n  async sendLink() {\n    try {\n      await AuthService.sendEmailLink(this.email.value.trim());\n      this.email.value = \"\";\n      this.showAlert(false);\n    } catch (error) {\n      this.showAlert(error);\n    }\n  }\n\n  async googleLogin() {\n    try {\n      await AuthService.google();\n    } catch (error) {\n      this.showAlert(error);\n    }\n  }\n\n  async facebookLogin() {\n    try {\n      await AuthService.facebook();\n    } catch (error) {\n      this.showAlert(error);\n    }\n  }\n\n  async appleLogin() {\n    const alert = await alertController.create({\n      header: TranslationService.getTransl(\"login\", \"Login\"),\n      message: TranslationService.getTransl(\n        \"apple-login-message\",\n        \"In order to login with the same Apple account also with other devices, it is necessary to share your original email address.\"\n      ),\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n          handler: async () => {\n            try {\n              await AuthService.apple();\n            } catch (error) {\n              this.showAlert(error);\n            }\n          },\n        },\n        {\n          text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n        },\n      ],\n    });\n    alert.present();\n  }\n\n  async loginWithEmail() {\n    try {\n      await AuthService.signInWithEmailPsw(\n        this.email.valid ? this.email.value.trim() : this.emailpsw.value.trim(),\n        this.psw.value\n      );\n      //check if signedin with link\n      const email = await DatabaseService.getLocalDocument(\"emailForSignIn\");\n      if (email) {\n        this.emailpsw.value = \"\";\n        this.psw.value = \"\";\n        this.showAlert(false);\n      } else {\n        AuthService.dismissLoading();\n      }\n    } catch (error) {\n      this.showAlert(error);\n    }\n  }\n\n  forgotPsw() {\n    //RouterService.push(\"/forgotpsw\", \"forward\");\n    SystemService.presentLoading(\"please-wait\");\n    const email = this.email.value ? this.email.value : this.emailpsw.value;\n    AuthService.passwordReset(email)\n      .then(() => {\n        SystemService.dismissLoading();\n        this.showPswResetAlert(\"pswreset\");\n      })\n      .catch(() => {\n        SystemService.dismissLoading();\n        this.showPswResetAlert(\"pswreseterror\");\n      });\n  }\n\n  async showAlert(error) {\n    let header = TranslationService.getTransl(\"login\", \"Login\");\n    let message_error = TranslationService.getTransl(\n      \"login-error\",\n      \"There was an error in the login process. Please try again later.\"\n    );\n    let message_ok = TranslationService.getTransl(\n      \"registration-success-email\",\n      \"The registration/login has been completed! You will now receive a link in your email to complete the login process. If you don't receive the email within 1 minute please check in your spam folder.\"\n    );\n    if (error) {\n      Environment.log(\"registration/login error\", [error]);\n      switch (error.code) {\n        case \"auth/popup-blocked\":\n          message_error = TranslationService.getTransl(\n            \"popup-error\",\n            \"You should allow popup windows in the browser's preferences in order to complete the login process.\"\n          );\n          break;\n        case \"auth/account-exists-with-different-credential\":\n          if (error.email) {\n            this.emailpsw.value = error.email;\n            this.checkEmail();\n          }\n          message_error = TranslationService.getTransl(\n            \"popup-error-existing-account\",\n            \"You have already logged in with this email using another Sign-In method. Insert your email in the 'Email' field to check your exisiting method.\"\n          );\n          break;\n        case \"auth/missing-or-invalid-nonce\":\n          if (error.email) {\n            this.emailpsw.value = error.email;\n            this.checkEmail();\n          }\n          message_error = TranslationService.getTransl(\n            \"popup-error-duplicate-credential\",\n            \"Duplicate credential received. Please try again with a new credential.\"\n          );\n          break;\n        default:\n          message_error += error.message ? \" (\" + error.message + \")\" : \"\";\n      }\n    }\n\n    const alert = await alertController.create({\n      header: header,\n      message: error ? message_error : message_ok,\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n          handler: async () => {\n            RouterService.push(\"/\", \"root\");\n          },\n        },\n      ],\n    });\n    AuthService.dismissLoading();\n    alert.present();\n  }\n\n  async showPswResetAlert(message) {\n    let header = TranslationService.getTransl(\"login\", \"Login\");\n    let pswreset = TranslationService.getTransl(\n      \"pswreset\",\n      \"You will receive shortly an email to reset your password. Please follow the instructions and then come back to the login page.\"\n    );\n    let pswreseterror = TranslationService.getTransl(\n      \"pswreseterror\",\n      \"There was an error in the reset process. Please try again later.\"\n    );\n    let show_message = \"\";\n    switch (message) {\n      case \"pswreset\":\n        show_message = pswreset;\n        break;\n      case \"pswreseterror\":\n        show_message = pswreseterror;\n        break;\n    }\n\n    const alert = await alertController.create({\n      header: header,\n      message: show_message,\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n        },\n      ],\n    });\n    AuthService.dismissLoading();\n    alert.present();\n  }\n\n  inputHandler(event) {\n    this[event.detail.name] = event.detail;\n    if (event.detail.name == \"retypepsw\") {\n      this.checkRetypePassword();\n    } else if (\n      event.detail.name == \"emailpsw\" ||\n      event.detail.name == \"email\"\n    ) {\n      this.psw.value = \"\";\n      this.psw.valid = true;\n      this.retypepsw.valid = true;\n      this.retypepsw.value = \"\";\n      // Function to validate email using regex\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      //check email address\n      const email = toLower(event.detail.value);\n      this.email.value = toLower(email);\n      this.emailpsw.value = this.email.value;\n      if (Environment.isTrasteel() && event.detail.name == \"email\") {\n        if (\n          (!this.email.value.includes(\"@trasteel.com\") &&\n            !this.email.value.includes(\"@trasteelnetwork.com\") &&\n            !this.email.value.includes(\"@o-range.tech\") &&\n            !this.email.value.includes(\"@ipermediastudio.it\")) ||\n          !emailRegex.test(this.email.value)\n        ) {\n          this.email.valid = false;\n          this.emailpsw.valid = false;\n        } else {\n          this.email.valid = true;\n          this.emailpsw.valid = true;\n        }\n      } else {\n        //check email field\n        if (emailRegex.test(this.email.value)) {\n          this.email.valid = true;\n          this.emailpsw.valid = true;\n        } else {\n          this.email.valid = false;\n          this.emailpsw.valid = false;\n        }\n      }\n      this.checkEmail();\n    }\n  }\n\n  async checkEmail() {\n    if (!this.checkingEmail) {\n      this.checkingEmail = true;\n      if (this.emailpsw.valid) {\n        await SystemService.presentLoading(\"searching\");\n        const methods = await AuthService.fetchSignInMethodsForEmail(\n          this.emailpsw.value\n        );\n        this.disablePswFields = false;\n        this.disableEmailLinkFields = false;\n        this.disableGoogle = false;\n        this.disableFacebook = true; //false;\n        this.disableApple = false;\n        if (methods.length == 0) {\n          //new user\n          this.newUserRegistration = true;\n          //this.retypepsw.valid = false;\n        } else {\n          this.newUserRegistration = false;\n          //this.retypepsw.valid = true;\n          //enable password fields for emailLink and Password methods\n          this.disablePswFields = !methods.includes(\"password\");\n          this.disableEmailLinkFields = !methods.includes(\"emailLink\");\n          this.disableFacebook = true; //!methods.includes(\"facebook.com\");\n          this.disableApple = !methods.includes(\"apple.com\");\n          this.disableGoogle = !methods.includes(\"google.com\");\n          /*if (methods.includes(\"facebook.com\")) {\n            //remove facebook login and allow google or psw\n            this.disablePswFields = true;\n            this.disableGoogle = false;\n          }\n          if (methods.includes(\"apple.com\") && isPlatform(\"android\")) {\n            //alert user for Apple\n            const alert = await alertController.create({\n              header: TranslationService.getTransl(\"login\", \"Login\"),\n              message: TranslationService.getTransl(\n                \"apple-login-error\",\n                \"You previously logged-in using Apple Login. This service is not available on Android devices.\"\n              ),\n              buttons: [\n                {\n                  text: TranslationService.getTransl(\"ok\", \"OK\"),\n                },\n              ],\n            });\n            alert.present();\n          }*/\n        }\n        await SystemService.dismissLoading();\n      } else {\n        this.newUserRegistration = false;\n        //this.retypepsw.valid = true;\n        this.disablePswFields = false;\n        this.disableGoogle = false;\n        this.disableFacebook = true;\n        this.disableApple = false;\n      }\n      if (this.newUserRegistration) this.checkRetypePassword();\n      this.checkingEmail = false;\n    }\n  }\n\n  checkRetypePassword() {\n    this.passwordCheck = this.psw.value == this.retypepsw.value;\n  }\n\n  render() {\n    return [\n      <app-navbar color={Environment.getAppColor()} tag='login' text='Login' />,\n      <ion-content\n        scrollEvents\n        onIonScroll={(ev) => (this.scrollTop = ev.detail.scrollTop)}\n      >\n        {Environment.isUdive() || Environment.isDecoplanner() ? (\n          <app-banner\n            scrollTopValue={this.scrollTop}\n            heightPx={250}\n            link='./assets/images/friendship2SM.jpg'\n          ></app-banner>\n        ) : undefined}\n        <ion-grid>\n          {!this.network ? (\n            <ion-row>\n              <ion-col>\n                <ion-item color='danger'>\n                  <ion-icon name='warning' slot='start'></ion-icon>\n                  <ion-label>\n                    <my-transl tag='no-network' text='Network not available!' />\n                  </ion-label>\n                </ion-item>\n              </ion-col>\n            </ion-row>\n          ) : undefined}\n          <ion-row>\n            <ion-col>\n              {this.trasteelLogin ? (\n                [\n                  <app-form-item\n                    label-tag='email'\n                    label-text='Email'\n                    name='email'\n                    lines='full'\n                    input-type='email'\n                    onFormItemChanged={(ev) => this.inputHandler(ev)}\n                    disabled={!this.network}\n                    debounce={500}\n                    validator={[\"required\", \"email\"]}\n                  ></app-form-item>,\n                  <ion-text class='ion-padding-start small'>\n                    Only emails @trasteel.com or @trasteelnetwork.com are\n                    accepted.\n                  </ion-text>,\n                  !this.disableEmailLinkFields\n                    ? [\n                        <ion-button\n                          margin-top\n                          expand='block'\n                          disabled={!this.email.valid || !this.network}\n                          onClick={() => this.sendLink()}\n                        >\n                          <my-transl\n                            tag='login-email'\n                            text={\n                              (this.newUserRegistration\n                                ? \"Register\"\n                                : \"Login\") + \" with Email Link\"\n                            }\n                          ></my-transl>\n                        </ion-button>,\n                        !this.disablePswFields\n                          ? [\n                              <ion-item-divider></ion-item-divider>,\n                              <ion-item-divider>\n                                <ion-label>\n                                  <p class='centered'>- or type password -</p>\n                                </ion-label>\n                              </ion-item-divider>,\n                            ]\n                          : undefined,\n                      ]\n                    : undefined,\n                ]\n              ) : (\n                <app-form-item\n                  label-tag='email'\n                  label-text='Email'\n                  name='emailpsw'\n                  lines='full'\n                  input-type='email'\n                  onFormItemChanged={(ev) => this.inputHandler(ev)}\n                  disabled={!this.network}\n                  debounce={500}\n                  validator={[\"required\", \"email\"]}\n                ></app-form-item>\n              )}\n              {!this.disablePswFields\n                ? [\n                    <app-form-item\n                      label-tag='password'\n                      label-text='Password'\n                      name='psw'\n                      lines='full'\n                      input-type='password'\n                      onFormItemChanged={(ev) => this.inputHandler(ev)}\n                      disabled={!this.network}\n                      validator={[\"required\"]}\n                    ></app-form-item>,\n                    this.newUserRegistration ? (\n                      <app-form-item\n                        label-tag='retype-password'\n                        label-text='Re-type Password'\n                        name='retypepsw'\n                        lines='full'\n                        input-type='password'\n                        onFormItemChanged={(ev) => this.inputHandler(ev)}\n                        disabled={!this.network}\n                        validator={[\"required\"]}\n                      ></app-form-item>\n                    ) : undefined,\n                    !this.passwordCheck ? (\n                      <my-transl\n                        class='validation-error'\n                        tag='password-error'\n                        text='Passwords are not the same'\n                      ></my-transl>\n                    ) : undefined,\n                    <ion-button\n                      margin-top\n                      expand='block'\n                      disabled={\n                        !this.emailpsw.valid ||\n                        !this.psw.valid ||\n                        !this.retypepsw.valid ||\n                        !this.network ||\n                        !this.passwordCheck\n                      }\n                      onClick={() => this.loginWithEmail()}\n                    >\n                      {!this.emailpsw.valid && !this.newUserRegistration\n                        ? TranslationService.getTransl(\n                            \"login-emailpsw\",\n                            \"Login/Register with Email and Password\"\n                          )\n                        : this.newUserRegistration\n                          ? TranslationService.getTransl(\n                              \"register-emailpsw\",\n                              \"Register with Email and Password\"\n                            )\n                          : TranslationService.getTransl(\n                              \"login-only-emailpsw\",\n                              \"Login with Email and Password\"\n                            )}\n                    </ion-button>,\n                  ]\n                : undefined}\n            </ion-col>\n          </ion-row>\n          {!this.disablePswFields &&\n          !this.newUserRegistration &&\n          this.emailpsw.valid ? (\n            <ion-row>\n              <ion-col class='ion-text-right'>\n                <a onClick={() => this.forgotPsw()}>\n                  <my-transl\n                    tag='forgot-psw'\n                    text='Forgot password'\n                  ></my-transl>\n                </a>\n              </ion-col>\n            </ion-row>\n          ) : undefined}\n          {!this.trasteelLogin\n            ? [\n                <ion-row>\n                  <ion-col class='ion-text-center'>\n                    {!this.disablePswFields &&\n                    !this.disableGoogle &&\n                    !this.disableFacebook &&\n                    !this.disableApple ? (\n                      <p>- or -</p>\n                    ) : undefined}\n                  </ion-col>\n                </ion-row>,\n\n                !this.disableGoogle ? (\n                  <ion-row>\n                    <ion-col>\n                      <ion-button\n                        expand='block'\n                        onClick={() => this.googleLogin()}\n                        disabled={!this.network}\n                        class='google'\n                      >\n                        <ion-icon name='logo-google' slot='start'></ion-icon>\n                        {(this.newUserRegistration ? \"Register\" : \"Login\") +\n                          \" with Google\"}\n                      </ion-button>\n                    </ion-col>\n                  </ion-row>\n                ) : undefined,\n                !this.disableFacebook ? (\n                  <ion-row>\n                    <ion-col>\n                      <ion-button\n                        expand='block'\n                        onClick={() => this.facebookLogin()}\n                        disabled={!this.network}\n                        class='facebook'\n                      >\n                        <ion-icon name='logo-facebook' slot='start'></ion-icon>\n                        {(this.newUserRegistration ? \"Register\" : \"Login\") +\n                          \" with Facebook\"}\n                      </ion-button>\n                    </ion-col>\n                  </ion-row>\n                ) : undefined,\n                !this.disableApple && !isPlatform(\"android\") ? (\n                  <ion-row>\n                    <ion-col>\n                      <ion-button\n                        expand='block'\n                        onClick={() => this.appleLogin()}\n                        disabled={!this.network}\n                        class='apple'\n                      >\n                        <ion-icon name='logo-apple' slot='start'></ion-icon>\n                        {(this.newUserRegistration ? \"Register\" : \"Login\") +\n                          \" with Apple\"}\n                      </ion-button>\n                    </ion-col>\n                  </ion-row>\n                ) : undefined,\n              ]\n            : undefined}\n        </ion-grid>\n      </ion-content>,\n    ];\n  }\n}\n"],"version":3}