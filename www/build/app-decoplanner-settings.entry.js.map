{"file":"app-decoplanner-settings.entry.esm.js","mappings":"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","names":["toNumber"],"sources":["src/components/udive/app/decoplanner/app-decoplanner-settings/app-decoplanner-settings.scss?tag=app-decoplanner-settings","src/components/udive/app/decoplanner/app-decoplanner-settings/app-decoplanner-settings.tsx"],"sourcesContent":["app-decoplanner-settings {\n  .item-input .label-md,\n  .item-select .label-md,\n  .item-datetime .label-md {\n    color: rgb(0, 0, 0);\n  }\n  input {\n    text-align: right;\n  }\n  .fixedLabel {\n    min-width: 80% !important;\n    max-width: 80% !important;\n  }\n\n  ion-item .item-inner {\n    box-shadow: none !important;\n    border-bottom: 1px solid #dedede !important;\n  }\n\n  .item-input .label-md,\n  .item-select .label-md,\n  .item-datetime .label-md {\n    color: rgb(0, 0, 0);\n  }\n\n  .slider-scrollable-container {\n    padding-top: 0px;\n  }\n\n  width: 100%;\n}\n","import {Component, h, Prop, State, Event, EventEmitter} from \"@stencil/core\";\nimport {DecoplannerDive} from \"../../../../../interfaces/udive/planner/decoplanner-dive\";\nimport {DivePlan} from \"../../../../../services/udive/planner/dive-plan\";\nimport {DecoplannerParameters} from \"../../../../../interfaces/udive/planner/decoplanner-parameters\";\nimport {Environment} from \"../../../../../global/env\";\nimport {toNumber} from \"lodash\";\nimport {TranslationService} from \"../../../../../services/common/translations\";\n\n@Component({\n  tag: \"app-decoplanner-settings\",\n  styleUrl: \"app-decoplanner-settings.scss\",\n})\nexport class AppDecoplannerSettings {\n  @Event() updateParamsEvent: EventEmitter<DecoplannerParameters>;\n  @Prop({mutable: true}) diveDataToShare: any;\n  @State() dive: DecoplannerDive = new DecoplannerDive();\n  @State() updateView = true;\n\n  dives: Array<DecoplannerDive>;\n  index: number;\n  divePlan: DivePlan;\n  parameters: DecoplannerParameters = new DecoplannerParameters();\n  @State() ranges: any;\n  stdConfigurations: any;\n  showConfigurations = false;\n\n  componentWillLoad() {\n    this.updateViewParams();\n  }\n\n  updateViewParams() {\n    let params = this.diveDataToShare;\n    this.showConfigurations = params.showConfigurations;\n    this.divePlan = params.divePlan;\n    this.index = params.index;\n    this.dives = this.divePlan.dives;\n    this.dive = this.divePlan.dives[this.index];\n    this.stdConfigurations = params.stdConfigurations;\n    this.parameters = this.divePlan.configuration.parameters;\n    this.ranges = this.divePlan.getParamRanges(this.parameters.units);\n    this.updateView = !this.updateView;\n  }\n\n  updateParam(param, ev) {\n    let value = ev.detail ? ev.detail.value : ev.target.value;\n    switch (param) {\n      case \"units\":\n        this.parameters.setUnits(value);\n        this.ranges = this.divePlan.getParamRanges(value);\n        break;\n      case \"config\":\n        this.parameters.configuration = value;\n        break;\n      case \"laststop\":\n        this.parameters.lastStop6m20ft = ev.detail.checked;\n        break;\n      case \"conservatism\":\n        this.parameters.conservatism = value;\n        break;\n      case \"conservatism_bailout\":\n        this.parameters.conservatism_bailout = value;\n        break;\n      case \"gfLow\":\n        this.parameters.gfLow = toNumber(value);\n        break;\n      case \"gfHigh\":\n        this.parameters.gfHigh = toNumber(value);\n        break;\n      case \"gfLow_bailout\":\n        this.parameters.gfLow_bailout = toNumber(value);\n        break;\n      case \"gfHigh_bailout\":\n        this.parameters.gfHigh_bailout = toNumber(value);\n        break;\n      case \"descentppO2\":\n        this.parameters.descentppO2 = toNumber(value);\n        break;\n      case \"bottomppO2\":\n        this.parameters.bottomppO2 = toNumber(value);\n        break;\n      case \"decoppO2\":\n        this.parameters.decoppO2 = toNumber(value);\n        break;\n      case \"oxygenppO2\":\n        this.parameters.oxygenppO2 = toNumber(value);\n        break;\n      case \"pscrGasDivider\":\n        this.parameters.pscrGasDivider = toNumber(value);\n        break;\n      case \"ace_time\":\n        this.parameters.ace_time = toNumber(value);\n        break;\n      case \"CCR_o2_consumption\":\n        this.parameters.CCR_o2_consumption = toNumber(value);\n        break;\n      case \"metabolic_o2_consumption\":\n        this.parameters.metabolic_o2_consumption = toNumber(value);\n        break;\n      case \"CCR_volume_for_consumption\":\n        this.parameters.CCR_volume_for_consumption = toNumber(value);\n        break;\n      case \"rmvBottom\":\n        this.parameters.rmvBottom = toNumber(value);\n        break;\n      case \"rmvDeco\":\n        this.parameters.rmvDeco = toNumber(value);\n        break;\n      case \"deco_gas_reserve\":\n        this.parameters.deco_gas_reserve = toNumber(value);\n        break;\n      case \"time_at_bottom_for_min_gas\":\n        this.parameters.time_at_bottom_for_min_gas = toNumber(value);\n        break;\n      case \"time_at_gas_switch_for_min_gas\":\n        this.parameters.time_at_gas_switch_for_min_gas = toNumber(value);\n        break;\n      case \"rmvBottom_multiplier_for_min_gas\":\n        this.parameters.rmvBottom_multiplier_for_min_gas = toNumber(value);\n        break;\n      case \"number_of_divers_for_min_gas\":\n        this.parameters.number_of_divers_for_min_gas = toNumber(value);\n        break;\n      case \"descentRate\":\n        this.parameters.descentRate = toNumber(value);\n        break;\n      case \"ascentRate\":\n        this.parameters.ascentRate = toNumber(value);\n        break;\n      case \"minPPO2\":\n        this.parameters.minPPO2 = toNumber(value);\n        break;\n      case \"maxPPO2deco\":\n        this.parameters.maxPPO2deco = toNumber(value);\n        break;\n      case \"maxPPO2bottom\":\n        this.parameters.maxPPO2bottom = toNumber(value);\n        break;\n    }\n    //this.updateParams();\n    this.updateParamsEvent.emit(this.parameters);\n  }\n\n  render() {\n    return (\n      <div class=\"slider-container\">\n        <ion-list class=\"slider-scrollable-container\">\n          <ion-item-divider>\n            <ion-label>\n              <my-transl tag=\"general-settings\" text=\"General Settings\" />\n            </ion-label>\n          </ion-item-divider>\n          {!this.divePlan.configuration || this.showConfigurations ? (\n            <ion-item>\n              <ion-select\n                label={TranslationService.getTransl(\n                  \"configuration\",\n                  \"Configuration\"\n                )}\n                labelPlacement=\"floating\"\n                onIonChange={(ev) => this.updateParam(\"config\", ev)}\n                value={this.parameters.configuration}\n              >\n                <ion-select-option value=\"OC\">OC</ion-select-option>\n                <ion-select-option value=\"pSCR\">pSCR</ion-select-option>\n                <ion-select-option value=\"CCR\">CCR</ion-select-option>\n              </ion-select>\n            </ion-item>\n          ) : undefined}\n          {/**\n           <ion-item>\n            <ion-label>\n              <my-transl tag='unit' text='Unit' />\n            </ion-label>\n            <ion-select\n              onIonChange={(ev) => this.updateParam(\"units\", ev)}\n              value={this.parameters.units}\n            >\n              <ion-select-option value='Metric'>Metric</ion-select-option>\n              <ion-select-option value='Imperial'>Imperial</ion-select-option>\n            </ion-select>\n          </ion-item>\n           */}\n          <ion-item>\n            <ion-toggle\n              color={Environment.isDecoplanner() ? \"gue-blue\" : \"planner\"}\n              onIonChange={(ev) => this.updateParam(\"laststop\", ev)}\n              checked={this.parameters.lastStop6m20ft}\n            >\n              <my-transl tag=\"last-stop\" text=\"Last stop\" />{\" \"}\n              {this.parameters.metric ? 6 : 20}\n              {this.parameters.depthUnit}\n            </ion-toggle>\n          </ion-item>\n          <ion-item-divider>\n            <ion-label>VPM-B</ion-label>\n          </ion-item-divider>\n          {/*\n        <ion-item>\n          <ion-label>Critical Volume Algorithm (on/off)</ion-label>\n          <ion-toggle [(ngModel)]=\"parameters.critical_volume_algorithm\" (ionChange)=\"updateParams()\"></ion-toggle>\n        </ion-item>\n        <ion-item>\n          <ion-label>GFS (TEST)</ion-label>\n          <ion-toggle [(ngModel)]=\"parameters.VPM_GFS\" (ionChange)=\"updateParams()\"></ion-toggle>\n        </ion-item>\n        <ion-item>\n          <ion-label>VPM/GFS Gradient Factor High</ion-label>\n          <ion-select [(ngModel)]=\"parameters.VPM_gf_high\" (ionChange)=\"updateParams()\">\n            <ion-select-option *ngFor=\"let gf of ranges.gf\">{{gf}}</ion-select-option>\n          </ion-select>\n        </ion-item>\n        */}\n          {this.parameters.configuration != \"OC\" ? (\n            <ion-item-divider>\n              <ion-label>\n                {this.parameters.configuration}{\" \"}\n                <my-transl tag=\"settings\" text=\"settings\" />\n              </ion-label>\n            </ion-item-divider>\n          ) : undefined}\n\n          <ion-item>\n            <ion-select\n              label={TranslationService.getTransl(\n                \"conservatism\",\n                \"Conservatism\"\n              )}\n              labelPlacement=\"floating\"\n              onIonChange={(ev) => this.updateParam(\"conservatism\", ev)}\n              value={this.parameters.conservatism}\n            >\n              {this.ranges.conservatism.map((conservatism) => (\n                <ion-select-option value={conservatism}>\n                  {conservatism}\n                </ion-select-option>\n              ))}\n            </ion-select>\n          </ion-item>\n          {this.parameters.configuration != \"OC\" ? (\n            <ion-item-divider>\n              <ion-label>\n                <my-transl tag=\"bailout-settings\" text=\"Bailout settings\" />\n              </ion-label>\n            </ion-item-divider>\n          ) : undefined}\n          {this.parameters.configuration != \"OC\" ? (\n            <ion-item>\n              <ion-select\n                label={TranslationService.getTransl(\n                  \"conservatism\",\n                  \"Conservatism\"\n                )}\n                labelPlacement=\"floating\"\n                onIonChange={(ev) =>\n                  this.updateParam(\"conservatism_bailout\", ev)\n                }\n                value={this.parameters.conservatism_bailout}\n              >\n                {this.ranges.conservatism.map((conservatism) => (\n                  <ion-select-option value={conservatism}>\n                    {conservatism}\n                  </ion-select-option>\n                ))}\n              </ion-select>\n            </ion-item>\n          ) : undefined}\n\n          <ion-item-divider>\n            <ion-label>BUHLMANN</ion-label>\n          </ion-item-divider>\n          {/*\n        <ion-item *ngIf=\"renderedChart=='heatmap-chart'\">\n          <ion-label>Model</ion-label>\n          <ion-select [(ngModel)]=\"parameters.buhlModel\" (ionChange)=\"updateParams()\">\n            <ion-select-option>ZHL16B</ion-select-option>\n            <ion-select-option>ZHL16C</ion-select-option>\n          </ion-select>\n        </ion-item>*/}\n          {this.parameters.configuration != \"OC\" ? (\n            <ion-item-divider>\n              <ion-label>\n                {this.parameters.configuration}{\" \"}\n                <my-transl tag=\"settings\" text=\"settings\" />\n              </ion-label>\n            </ion-item-divider>\n          ) : undefined}\n\n          <ion-item>\n            <ion-select\n              label={TranslationService.getTransl(\n                \"gradient-factor-low\",\n                \"Gradient Factor Low\"\n              )}\n              labelPlacement=\"floating\"\n              onIonChange={(ev) => this.updateParam(\"gfLow\", ev)}\n              value={this.parameters.gfLow}\n            >\n              {this.ranges.gf.map((gf) => (\n                <ion-select-option value={gf}>{gf}</ion-select-option>\n              ))}\n            </ion-select>\n          </ion-item>\n          <ion-item>\n            <ion-select\n              label={TranslationService.getTransl(\n                \"gradient-factor-high\",\n                \"Gradient Factor High\"\n              )}\n              labelPlacement=\"floating\"\n              onIonChange={(ev) => this.updateParam(\"gfHigh\", ev)}\n              value={this.parameters.gfHigh}\n            >\n              {this.ranges.gf.map((gf) => (\n                <ion-select-option value={gf}>{gf}</ion-select-option>\n              ))}\n            </ion-select>\n          </ion-item>\n          {this.parameters.configuration != \"OC\"\n            ? [\n                <ion-item-divider>\n                  <ion-label>\n                    <my-transl tag=\"bailout-settings\" text=\"Bailout settings\" />\n                  </ion-label>\n                </ion-item-divider>,\n                <ion-item>\n                  <ion-select\n                    label={TranslationService.getTransl(\n                      \"gradient-factor-low\",\n                      \"Gradient Factor Low\"\n                    )}\n                    labelPlacement=\"floating\"\n                    onIonChange={(ev) => this.updateParam(\"gfLow_bailout\", ev)}\n                    value={this.parameters.gfLow_bailout}\n                  >\n                    {this.ranges.gf.map((gf) => (\n                      <ion-select-option value={gf}>{gf}</ion-select-option>\n                    ))}\n                  </ion-select>\n                </ion-item>,\n                <ion-item>\n                  <ion-select\n                    label={TranslationService.getTransl(\n                      \"gradient-factor-high\",\n                      \"Gradient Factor High\"\n                    )}\n                    labelPlacement=\"floating\"\n                    onIonChange={(ev) => this.updateParam(\"gfHigh_bailout\", ev)}\n                    value={this.parameters.gfHigh_bailout}\n                  >\n                    {this.ranges.gf.map((gf) => (\n                      <ion-select-option value={gf}>{gf}</ion-select-option>\n                    ))}\n                  </ion-select>\n                </ion-item>,\n              ]\n            : undefined}\n          {/*\n    <ion-item-divider>\n      (TEST) He vs N2 half times\n    </ion-item-divider>\n    <ion-item>\n      <ion-label>He half time multiplier (0->original model / +10->He=N2 / -10->N2=He)</ion-label>\n    </ion-item>\n    <ion-item>\n      <ion-label>Parameter</ion-label>\n      <ion-select [(ngModel)]=\"parameters.helium_half_time_multiplier\" (ionChange)=\"updateParams()\">\n        <ion-select-option *ngFor=\"let hhf of ranges.hhf\">{{hhf}}</ion-select-option>\n      </ion-select>\n    </ion-item>\n     */}\n          {this.parameters.configuration == \"CCR\"\n            ? [\n                <ion-item-divider>\n                  <ion-label>\n                    <my-transl\n                      tag=\"ppO2-settings\"\n                      text=\"ppO2 Standard Settings\"\n                    />\n                  </ion-label>\n                </ion-item-divider>,\n                <ion-item-divider>\n                  <ion-label>\n                    <my-transl\n                      tag=\"ppO2-settings-note\"\n                      text=\"note: CCR settings from deco gases prevail over these settings\"\n                    />\n                  </ion-label>\n                </ion-item-divider>,\n                <ion-item>\n                  <ion-select\n                    label={TranslationService.getTransl(\n                      \"descent-ppO2-CCR\",\n                      \"Descent ppO2 (CCR)\"\n                    )}\n                    labelPlacement=\"floating\"\n                    onIonChange={(ev) => this.updateParam(\"descentppO2\", ev)}\n                    value={this.parameters.descentppO2}\n                  >\n                    {this.ranges.ppO2.map((ppO2) => (\n                      <ion-select-option value={ppO2}>{ppO2}</ion-select-option>\n                    ))}\n                  </ion-select>\n                </ion-item>,\n                <ion-item>\n                  <ion-select\n                    label={TranslationService.getTransl(\n                      \"bottom-ppO2-CCR\",\n                      \"Bottom ppO2 (CCR)\"\n                    )}\n                    labelPlacement=\"floating\"\n                    onIonChange={(ev) => this.updateParam(\"bottomppO2\", ev)}\n                    value={this.parameters.bottomppO2}\n                  >\n                    {this.ranges.ppO2.map((ppO2) => (\n                      <ion-select-option value={ppO2}>{ppO2}</ion-select-option>\n                    ))}\n                  </ion-select>\n                </ion-item>,\n                <ion-item>\n                  <ion-select\n                    label={TranslationService.getTransl(\n                      \"deco-ppO2-CCR\",\n                      \"Deco stops ppO2 (CCR)\"\n                    )}\n                    labelPlacement=\"floating\"\n                    onIonChange={(ev) => this.updateParam(\"decoppO2\", ev)}\n                    value={this.parameters.decoppO2}\n                  >\n                    {this.ranges.ppO2.map((ppO2) => (\n                      <ion-select-option value={ppO2}>{ppO2}</ion-select-option>\n                    ))}\n                  </ion-select>\n                </ion-item>,\n                <ion-item>\n                  <ion-select\n                    label={TranslationService.getTransl(\n                      \"oxygen-ppO2-CCR\",\n                      \"Oxygen stops ppO2 (CCR)\"\n                    )}\n                    labelPlacement=\"floating\"\n                    onIonChange={(ev) => this.updateParam(\"oxygenppO2\", ev)}\n                    value={this.parameters.oxygenppO2}\n                  >\n                    {this.ranges.ppO2.map((ppO2) => (\n                      <ion-select-option value={ppO2}>{ppO2}</ion-select-option>\n                    ))}\n                  </ion-select>\n                </ion-item>,\n              ]\n            : undefined}\n\n          <ion-item-divider>\n            <ion-label>\n              <my-transl tag=\"gas\" text=\"Gas\" />\n            </ion-label>\n          </ion-item-divider>\n          {this.parameters.configuration == \"pSCR\" ? (\n            <ion-item>\n              <ion-select\n                label={TranslationService.getTransl(\n                  \"pSCR-gas-divider\",\n                  \"pSCR Gas Divider\"\n                )}\n                labelPlacement=\"floating\"\n                onIonChange={(ev) => this.updateParam(\"pscrGasDivider\", ev)}\n                value={this.parameters.pscrGasDivider}\n              >\n                {this.ranges.pscrGasDivider.map((pscrGasDivider) => (\n                  <ion-select-option value={pscrGasDivider}>\n                    {pscrGasDivider}\n                  </ion-select-option>\n                ))}\n              </ion-select>\n            </ion-item>\n          ) : undefined}\n          {this.parameters.configuration != \"OC\" ? (\n            <ion-item>\n              <ion-input\n                label={TranslationService.getTransl(\n                  \"ace\",\n                  \"ACE (Absorbent Canister Endurance)\"\n                )}\n                labelPlacement=\"floating\"\n                type=\"number\"\n                value={this.parameters.ace_time}\n                class=\"ion-text-end\"\n                onIonChange={(ev) => this.updateParam(\"ace_time\", ev)}\n              ></ion-input>\n            </ion-item>\n          ) : undefined}\n          {this.parameters.configuration == \"CCR\" ? (\n            <ion-item>\n              <ion-select\n                label={\n                  TranslationService.getTransl(\n                    \"o2-consumption-ccr\",\n                    \"O2 consumption for CCR\"\n                  ) +\n                  \" (\" +\n                  this.parameters.volumeUnit +\n                  \"/min)\"\n                }\n                labelPlacement=\"floating\"\n                onIonChange={(ev) => this.updateParam(\"CCR_o2_consumption\", ev)}\n                value={this.parameters.CCR_o2_consumption}\n              >\n                {this.ranges.CCR_o2_consumption.map((CCR_o2_consumption) => (\n                  <ion-select-option value={CCR_o2_consumption}>\n                    {CCR_o2_consumption}\n                  </ion-select-option>\n                ))}\n              </ion-select>\n            </ion-item>\n          ) : undefined}\n          {this.parameters.configuration == \"pSCR\" ? (\n            <ion-item>\n              <ion-select\n                label={TranslationService.getTransl(\n                  \"metabolic-o2-consumption\",\n                  \"Metabolic O2 consumption\"\n                )}\n                labelPlacement=\"floating\"\n                onIonChange={(ev) =>\n                  this.updateParam(\"metabolic_o2_consumption\", ev)\n                }\n                value={this.parameters.metabolic_o2_consumption}\n              >\n                {this.ranges.CCR_o2_consumption.map((CCR_o2_consumption) => (\n                  <ion-select-option value={CCR_o2_consumption}>\n                    {CCR_o2_consumption}\n                  </ion-select-option>\n                ))}\n              </ion-select>\n            </ion-item>\n          ) : undefined}\n          {this.parameters.configuration == \"CCR\" ? (\n            <ion-item>\n              <ion-select\n                label={\n                  TranslationService.getTransl(\n                    \"volume-CCR-diluent-consumption\",\n                    \"Volume of CCR for diluent consumption\"\n                  ) +\n                  \" (\" +\n                  this.parameters.volumeUnit +\n                  \")\"\n                }\n                labelPlacement=\"floating\"\n                onIonChange={(ev) =>\n                  this.updateParam(\"CCR_volume_for_consumption\", ev)\n                }\n                value={this.parameters.CCR_volume_for_consumption}\n              >\n                {this.ranges.CCR_volume_for_consumption.map(\n                  (CCR_volume_for_consumption) => (\n                    <ion-select-option value={CCR_volume_for_consumption}>\n                      {CCR_volume_for_consumption}\n                    </ion-select-option>\n                  )\n                )}\n              </ion-select>\n            </ion-item>\n          ) : undefined}\n          {/**\n     <!--\n    <ion-item *ngIf=\"parameters.configuration=='CCR'\">\n      <ion-label>CCR diluent in separate tank</ion-label>\n      <ion-toggle [(ngModel)]=\"parameters.CCR_separate_dil_tank\" (ionChange)=\"updateParams()\"></ion-toggle>\n    </ion-item>-->\n     */}\n\n          <ion-item>\n            <ion-select\n              label={\n                TranslationService.getTransl(\"SCR-bottom\", \"SCR Bottom\") +\n                \" (\" +\n                this.parameters.volumeUnit +\n                \"/min)\"\n              }\n              labelPlacement=\"floating\"\n              onIonChange={(ev) => this.updateParam(\"rmvBottom\", ev)}\n              value={this.parameters.rmvBottom}\n            >\n              {this.ranges.rmv.map((rmv) => (\n                <ion-select-option value={rmv}>{rmv}</ion-select-option>\n              ))}\n            </ion-select>\n          </ion-item>\n          <ion-item>\n            <ion-select\n              label={\n                TranslationService.getTransl(\"SCR-deco\", \"SCR Deco\") +\n                \" (\" +\n                this.parameters.volumeUnit +\n                \"/min)\"\n              }\n              labelPlacement=\"floating\"\n              onIonChange={(ev) => this.updateParam(\"rmvDeco\", ev)}\n              value={this.parameters.rmvDeco}\n            >\n              {this.ranges.rmv.map((rmv) => (\n                <ion-select-option value={rmv}>{rmv}</ion-select-option>\n              ))}\n            </ion-select>\n          </ion-item>\n          <ion-item>\n            <ion-select\n              label={\n                TranslationService.getTransl(\n                  \"deco-gas-reserve\",\n                  \"Deco Gas Reserve\"\n                ) + \" (%)\"\n              }\n              labelPlacement=\"floating\"\n              onIonChange={(ev) => this.updateParam(\"deco_gas_reserve\", ev)}\n              value={this.parameters.deco_gas_reserve}\n            >\n              {this.ranges.deco_gas_reserve.map((deco_gas_reserve) => (\n                <ion-select-option value={deco_gas_reserve}>\n                  {deco_gas_reserve}\n                </ion-select-option>\n              ))}\n            </ion-select>\n          </ion-item>\n          <ion-item>\n            <ion-select\n              label={\n                TranslationService.getTransl(\n                  \"time-bottom-mingas\",\n                  \"Time at bottom for Min. Gas\"\n                ) + \" (min)\"\n              }\n              labelPlacement=\"floating\"\n              onIonChange={(ev) =>\n                this.updateParam(\n                  \"decotime_at_bottom_for_min_gas_gas_reserve\",\n                  ev\n                )\n              }\n              value={this.parameters.time_at_bottom_for_min_gas}\n            >\n              {this.ranges.time_at_bottom_for_min_gas.map(\n                (time_at_bottom_for_min_gas) => (\n                  <ion-select-option value={time_at_bottom_for_min_gas}>\n                    {time_at_bottom_for_min_gas}\n                  </ion-select-option>\n                )\n              )}\n            </ion-select>\n          </ion-item>\n          <ion-item>\n            <ion-select\n              label={\n                TranslationService.getTransl(\n                  \"time-gasswitch-mingas\",\n                  \"Time at gas switch for Min. Gas\"\n                ) + \" (min)\"\n              }\n              labelPlacement=\"floating\"\n              onIonChange={(ev) =>\n                this.updateParam(\"time_at_gas_switch_for_min_gas\", ev)\n              }\n              value={this.parameters.time_at_gas_switch_for_min_gas}\n            >\n              {this.ranges.time_at_bottom_for_min_gas.map(\n                (time_at_gas_switch_for_min_gas) => (\n                  <ion-select-option value={time_at_gas_switch_for_min_gas}>\n                    {time_at_gas_switch_for_min_gas}\n                  </ion-select-option>\n                )\n              )}\n            </ion-select>\n          </ion-item>\n          <ion-item>\n            <ion-select\n              label={\n                TranslationService.getTransl(\n                  \"stress-factor-mingas\",\n                  \"Stress factor for Min. Gas\"\n                ) + \" (x)\"\n              }\n              labelPlacement=\"floating\"\n              onIonChange={(ev) =>\n                this.updateParam(\"rmvBottom_multiplier_for_min_gas\", ev)\n              }\n              value={this.parameters.rmvBottom_multiplier_for_min_gas}\n            >\n              {this.ranges.rmvBottom_multiplier_for_min_gas.map(\n                (rmvBottom_multiplier_for_min_gas) => (\n                  <ion-select-option value={rmvBottom_multiplier_for_min_gas}>\n                    {rmvBottom_multiplier_for_min_gas}\n                  </ion-select-option>\n                )\n              )}\n            </ion-select>\n          </ion-item>\n          <ion-item>\n            <ion-select\n              label={\n                TranslationService.getTransl(\n                  \"number-divers-mingas\",\n                  \"Number of divers for Min. Gas\"\n                ) + \" (#)\"\n              }\n              labelPlacement=\"floating\"\n              onIonChange={(ev) =>\n                this.updateParam(\"number_of_divers_for_min_gas\", ev)\n              }\n              value={this.parameters.number_of_divers_for_min_gas}\n            >\n              {this.ranges.number_of_divers_for_min_gas.map(\n                (number_of_divers_for_min_gas) => (\n                  <ion-select-option value={number_of_divers_for_min_gas}>\n                    {number_of_divers_for_min_gas}\n                  </ion-select-option>\n                )\n              )}\n            </ion-select>\n          </ion-item>\n          <ion-item>\n            <ion-select\n              label={\n                TranslationService.getTransl(\"descent-rate\", \"Descent Rate\") +\n                \" (\" +\n                this.parameters.depthUnit +\n                \"/min)\"\n              }\n              labelPlacement=\"floating\"\n              onIonChange={(ev) => this.updateParam(\"descentRate\", ev)}\n              value={this.parameters.descentRate}\n            >\n              {this.ranges.descentRate.map((descentRate) => (\n                <ion-select-option value={descentRate}>\n                  {descentRate}\n                </ion-select-option>\n              ))}\n            </ion-select>\n          </ion-item>\n          <ion-item>\n            <ion-select\n              label={\n                TranslationService.getTransl(\"ascent-rate\", \"Ascent Rate\") +\n                \" (\" +\n                this.parameters.depthUnit +\n                \"/min)\"\n              }\n              labelPlacement=\"floating\"\n              onIonChange={(ev) => this.updateParam(\"ascentRate\", ev)}\n              value={this.parameters.ascentRate}\n            >\n              {this.ranges.ascentRate.map((ascentRate) => (\n                <ion-select-option value={ascentRate}>\n                  {ascentRate}\n                </ion-select-option>\n              ))}\n            </ion-select>\n          </ion-item>\n          {/**\n     <ion-item>\n      <ion-label>Min ppO2</ion-label>\n      <ion-select onIonChange={(ev)=>this.updateParam(\"minPPO2\",ev)}>\n    {this.ranges.minPPO2.map(minPPO2 => (\n      <ion-select-option selected={this.parameters.minPPO2 == toNumber(minPPO2)}>{minPPO2}</ion-select-option>\n    ))}\n    </ion-select>\n    </ion-item> \n    <ion-item>\n      <ion-label>Max ppO2 deco</ion-label>\n      <ion-select onIonChange={(ev)=>this.updateParam(\"maxPPO2deco\",ev)}>\n    {this.ranges.ppO2.map(ppO2 => (\n      <ion-select-option selected={this.parameters.maxPPO2deco == toNumber(ppO2)}>{ppO2}</ion-select-option>\n    ))}\n    </ion-select>\n    </ion-item> \n    <ion-item>\n      <ion-label>Max ppO2 bottom</ion-label>\n      <ion-select onIonChange={(ev)=>this.updateParam(\"maxPPO2bottom\",ev)}>\n    {this.ranges.ppO2.map(ppO2 => (\n      <ion-select-option selected={this.parameters.maxPPO2bottom == toNumber(ppO2)}>{ppO2}</ion-select-option>\n    ))}\n    </ion-select>\n    </ion-item>\n     */}\n        </ion-list>\n      </div>\n    );\n  }\n}\n"],"version":3}