{"version":3,"names":["modalUserPlansUpdateCss","ModalUserPlansUpdateStyle0","ModalUserPlansUpdate","UserPlans","UserPlan","componentWillLoad","this","uid","UserService","userProfile","planIndex","userPlan","cloneDeep","userPlans","selectedCustomer","CustomersService","getCustomersDetails","customerId","componentDidLoad","validatePlan","openSelectCustomer","cust","id","addAction","planOfActions","push","PlanOfAction","handleOtherChange","ev","otherName","detail","value","handleChange","action","name","updated","Date","toISOString","removePlan","index","splice","deletePlan","alert","alertController","create","header","TranslationService","getTransl","message","buttons","text","handler","async","save","present","validPlan","actions","length","forEach","dueDate","product","plan","situation","updateView","del","users","UserPlansService","updateUserPlan","modalController","dismiss","cancel","render","h","Host","key","color","tag","button","lines","onClick","class","fullName","undefined","onFormItemChanged","fill","expand","disabled","slot","map","interface","label","onIonChange","Object","keys","ProductLines","line","size","validator","textRows","Environment","getAppColor","disableSave","onCancelEmit","onSaveEmit"],"sources":["src/components/trasteel/modals/modal-user-plans-update/modal-user-plans-update.scss?tag=modal-user-plans-update","src/components/trasteel/modals/modal-user-plans-update/modal-user-plans-update.tsx"],"sourcesContent":["modal-user-plans-update {\n  ion-list {\n    width: 100%;\n  }\n}\n","import {Component, h, Host, Prop, State, Element} from \"@stencil/core\";\nimport {alertController, modalController} from \"@ionic/core\";\nimport {Environment} from \"../../../../global/env\";\nimport {\n  PlanOfAction,\n  ProductLines,\n  UserPlan,\n  UserPlans,\n} from \"../../../../interfaces/trasteel/users/user-plans\";\nimport {UserPlansService} from \"../../../../services/trasteel/crm/user-plans\";\nimport {CustomersService} from \"../../../../services/trasteel/crm/customers\";\nimport {MapDataCustomer} from \"../../../../interfaces/trasteel/customer/customer\";\nimport {TranslationService} from \"../../../../services/common/translations\";\nimport {UserService} from \"../../../../services/common/user\";\nimport {cloneDeep} from \"lodash\";\n\n@Component({\n  tag: \"modal-user-plans-update\",\n  styleUrl: \"modal-user-plans-update.scss\",\n})\nexport class ModalUserPlansUpdate {\n  @Element() el: HTMLElement;\n  @Prop() uid: string; //User ID\n  @Prop() userPlans: UserPlans = new UserPlans();\n  @Prop() planIndex: number;\n  @State() userPlan: UserPlan = new UserPlan();\n  @State() validPlan = false;\n  @State() selectedCustomer: MapDataCustomer;\n  @State() updateView = false;\n\n  async componentWillLoad() {\n    //apply uid\n    if (!this.uid) this.uid = UserService.userProfile.uid;\n    if (this.planIndex >= 0) {\n      this.userPlan = cloneDeep(this.userPlans.userPlans[this.planIndex]);\n      this.selectedCustomer = CustomersService.getCustomersDetails(\n        this.userPlan.customerId\n      );\n    } else {\n      this.userPlan = new UserPlan();\n    }\n  }\n\n  async componentDidLoad() {\n    this.validatePlan();\n  }\n\n  async openSelectCustomer() {\n    const cust = await CustomersService.openSelectCustomer(\n      this.selectedCustomer\n    );\n    if (cust) {\n      this.userPlan.customerId = cust.id;\n      this.selectedCustomer = cust;\n    }\n  }\n\n  addAction() {\n    this.userPlan.planOfActions.push(new PlanOfAction());\n    this.validatePlan();\n  }\n\n  handleOtherChange(ev) {\n    this.userPlan.otherName = ev.detail.value;\n    this.validatePlan();\n  }\n\n  handleChange(action, ev) {\n    action[ev.detail.name] = ev.detail.value;\n    action.updated = new Date().toISOString();\n    this.validatePlan();\n  }\n\n  removePlan(index) {\n    this.userPlan.planOfActions.splice(index, 1);\n    this.validatePlan();\n  }\n\n  async deletePlan() {\n    const alert = await alertController.create({\n      header: TranslationService.getTransl(\"delete-plan\", \"Delete Plan\"),\n      message: TranslationService.getTransl(\n        \"delete-plan-message\",\n        \"This plan will be deleted! Are you sure?\"\n      ),\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n          handler: async () => {\n            this.save(true);\n          },\n        },\n        {\n          text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n          handler: async () => {},\n        },\n      ],\n    });\n    alert.present();\n  }\n\n  validatePlan() {\n    this.validPlan = true;\n    this.validPlan =\n      this.validPlan &&\n      (this.userPlan.customerId != null || this.userPlan.otherName != null);\n    let actions = this.userPlan.planOfActions.length > 0;\n    this.userPlan.planOfActions.forEach((action) => {\n      actions = actions && action.dueDate != null;\n      actions = actions && action.updated != null;\n      actions = actions && action.product != null;\n      actions = actions && action.plan != null;\n      actions = actions && action.situation != null;\n    });\n    this.validPlan = this.validPlan && actions;\n    this.updateView = !this.updateView;\n  }\n\n  async save(del = false) {\n    if (!this.userPlans.users) {\n      this.userPlans.users = {};\n      this.userPlans.users[this.uid] = [\"owner\"];\n    }\n    if (this.planIndex >= 0 && this.userPlan.planOfActions.length == 0) {\n      //delete if no plans\n      del = true;\n    }\n    if (this.planIndex >= 0 && !del) {\n      this.userPlans.userPlans[this.planIndex] = this.userPlan;\n    } else if (del) {\n      this.userPlans.userPlans.splice(this.planIndex);\n    } else {\n      this.userPlans.userPlans.push(this.userPlan);\n    }\n    await UserPlansService.updateUserPlan(this.uid, this.userPlans);\n    modalController.dismiss();\n  }\n\n  async cancel() {\n    return modalController.dismiss();\n  }\n\n  render() {\n    return (\n      <Host>\n        <ion-header>\n          <ion-toolbar color=\"trasteel\">\n            <ion-title>\n              <my-transl\n                tag=\"plan-of-actions\"\n                text=\"Plan of Actions\"\n              ></my-transl>\n            </ion-title>\n          </ion-toolbar>\n        </ion-header>\n        <ion-content>\n          <ion-list>\n            {this.userPlan.otherName == null ? (\n              <ion-item\n                button\n                lines=\"inset\"\n                onClick={() => this.openSelectCustomer()}\n              >\n                <ion-label>\n                  <p class=\"small\">\n                    <my-transl tag=\"customer\" text=\"Customer\"></my-transl>*\n                  </p>\n                  <h2>\n                    {this.selectedCustomer\n                      ? this.selectedCustomer.fullName\n                      : null}\n                  </h2>\n                </ion-label>\n              </ion-item>\n            ) : undefined}\n            {this.userPlan.customerId == null &&\n            this.userPlan.otherName == null ? (\n              <ion-item-divider>\n                <ion-label>- or -</ion-label>\n              </ion-item-divider>\n            ) : undefined}\n            {this.userPlan.customerId == null ? (\n              <app-form-item\n                lines=\"inset\"\n                label-tag=\"other\"\n                label-text=\"Other\"\n                value={this.userPlan.otherName}\n                name=\"otherName\"\n                input-type=\"string\"\n                onFormItemChanged={(ev) => this.handleOtherChange(ev)}\n              ></app-form-item>\n            ) : undefined}\n            <ion-button\n              color=\"trasteel\"\n              fill=\"outline\"\n              expand=\"full\"\n              disabled={\n                this.userPlan.customerId == null &&\n                this.userPlan.otherName == null\n              }\n              onClick={() => {\n                this.addAction();\n              }}\n            >\n              <ion-icon name=\"add\" slot=\"start\"></ion-icon>\n              <ion-label>\n                <my-transl tag=\"add-action\" text=\"Add Action\"></my-transl>\n              </ion-label>\n            </ion-button>\n            <ion-grid>\n              {this.userPlan.planOfActions.map((action, index) => [\n                <ion-row>\n                  <ion-col>\n                    <ion-select\n                      color=\"trasteel\"\n                      id=\"application\"\n                      interface=\"action-sheet\"\n                      label={TranslationService.getTransl(\"product\", \"Product\")}\n                      label-placement=\"floating\"\n                      onIonChange={(ev) => {\n                        action.product = ev.detail.value;\n                        this.validatePlan();\n                      }}\n                      value={action.product}\n                    >\n                      {Object.keys(ProductLines).map((line) => (\n                        <ion-select-option value={line}>\n                          {ProductLines[line]}\n                        </ion-select-option>\n                      ))}\n                    </ion-select>\n                  </ion-col>\n                  <ion-col size=\"3\">\n                    <app-form-item\n                      lines=\"inset\"\n                      label-tag=\"due-date\"\n                      label-text=\"Due Date\"\n                      value={action.dueDate}\n                      name=\"dueDate\"\n                      input-type=\"date\"\n                      date-presentation=\"date\"\n                      onFormItemChanged={(ev) => this.handleChange(action, ev)}\n                      validator={[\"required\"]}\n                    ></app-form-item>\n                  </ion-col>\n                  <ion-col size=\"1\">\n                    <ion-button\n                      fill=\"clear\"\n                      icon-only\n                      onClick={() => this.removePlan(index)}\n                    >\n                      <ion-icon name=\"trash\" color=\"danger\"></ion-icon>\n                    </ion-button>\n                  </ion-col>\n                </ion-row>,\n                <ion-row>\n                  <ion-col>\n                    <app-form-item\n                      lines=\"inset\"\n                      label-tag=\"actual-situation\"\n                      label-text=\"Actual Situation\"\n                      value={action.situation}\n                      name=\"situation\"\n                      input-type=\"text\"\n                      textRows={3}\n                      onFormItemChanged={(ev) => this.handleChange(action, ev)}\n                      validator={[\"required\"]}\n                    ></app-form-item>\n                  </ion-col>\n                  <ion-col>\n                    <app-form-item\n                      lines=\"inset\"\n                      label-tag=\"plan\"\n                      label-text=\"Plan\"\n                      value={action.plan}\n                      name=\"plan\"\n                      input-type=\"text\"\n                      textRows={3}\n                      onFormItemChanged={(ev) => this.handleChange(action, ev)}\n                      validator={[\"required\"]}\n                    ></app-form-item>\n                  </ion-col>\n                </ion-row>,\n                <ion-row>\n                  <ion-item-divider></ion-item-divider>\n                </ion-row>,\n              ])}\n            </ion-grid>\n            {this.userPlan.planOfActions.length > 0 ? (\n              <ion-button\n                color=\"danger\"\n                fill=\"outline\"\n                expand=\"full\"\n                onClick={() => {\n                  this.deletePlan();\n                }}\n              >\n                <ion-icon name=\"trash\" slot=\"start\"></ion-icon>\n                <ion-label>\n                  <my-transl tag=\"delete\" text=\"Delete\"></my-transl>\n                </ion-label>\n              </ion-button>\n            ) : undefined}\n          </ion-list>\n        </ion-content>\n        <app-modal-footer\n          color={Environment.getAppColor()}\n          disableSave={!this.validPlan}\n          onCancelEmit={() => this.cancel()}\n          onSaveEmit={() => this.save()}\n        />\n      </Host>\n    );\n  }\n}\n"],"mappings":"2iBAAA,MAAMA,EAA0B,+CAChC,MAAAC,EAAeD,E,MCmBFE,EAAoB,M,2DAGA,IAAIC,E,uCAEL,IAAIC,E,eACb,M,gDAEC,K,CAEtB,uBAAMC,GAEJ,IAAKC,KAAKC,IAAKD,KAAKC,IAAMC,EAAYC,YAAYF,IAClD,GAAID,KAAKI,WAAa,EAAG,CACvBJ,KAAKK,SAAWC,oBAAUN,KAAKO,UAAUA,UAAUP,KAAKI,YACxDJ,KAAKQ,iBAAmBC,EAAiBC,oBACvCV,KAAKK,SAASM,W,KAEX,CACLX,KAAKK,SAAW,IAAIP,C,EAIxB,sBAAMc,GACJZ,KAAKa,c,CAGP,wBAAMC,GACJ,MAAMC,QAAaN,EAAiBK,mBAClCd,KAAKQ,kBAEP,GAAIO,EAAM,CACRf,KAAKK,SAASM,WAAaI,EAAKC,GAChChB,KAAKQ,iBAAmBO,C,EAI5B,SAAAE,GACEjB,KAAKK,SAASa,cAAcC,KAAK,IAAIC,GACrCpB,KAAKa,c,CAGP,iBAAAQ,CAAkBC,GAChBtB,KAAKK,SAASkB,UAAYD,EAAGE,OAAOC,MACpCzB,KAAKa,c,CAGP,YAAAa,CAAaC,EAAQL,GACnBK,EAAOL,EAAGE,OAAOI,MAAQN,EAAGE,OAAOC,MACnCE,EAAOE,SAAU,IAAIC,MAAOC,cAC5B/B,KAAKa,c,CAGP,UAAAmB,CAAWC,GACTjC,KAAKK,SAASa,cAAcgB,OAAOD,EAAO,GAC1CjC,KAAKa,c,CAGP,gBAAMsB,GACJ,MAAMC,QAAcC,EAAgBC,OAAO,CACzCC,OAAQC,EAAmBC,UAAU,cAAe,eACpDC,QAASF,EAAmBC,UAC1B,sBACA,4CAEFE,QAAS,CACP,CACEC,KAAMJ,EAAmBC,UAAU,KAAM,MACzCI,QAASC,UACP9C,KAAK+C,KAAK,KAAK,GAGnB,CACEH,KAAMJ,EAAmBC,UAAU,SAAU,UAC7CI,QAASC,gBAIfV,EAAMY,S,CAGR,YAAAnC,GACEb,KAAKiD,UAAY,KACjBjD,KAAKiD,UACHjD,KAAKiD,YACJjD,KAAKK,SAASM,YAAc,MAAQX,KAAKK,SAASkB,WAAa,MAClE,IAAI2B,EAAUlD,KAAKK,SAASa,cAAciC,OAAS,EACnDnD,KAAKK,SAASa,cAAckC,SAASzB,IACnCuB,EAAUA,GAAWvB,EAAO0B,SAAW,KACvCH,EAAUA,GAAWvB,EAAOE,SAAW,KACvCqB,EAAUA,GAAWvB,EAAO2B,SAAW,KACvCJ,EAAUA,GAAWvB,EAAO4B,MAAQ,KACpCL,EAAUA,GAAWvB,EAAO6B,WAAa,IAAI,IAE/CxD,KAAKiD,UAAYjD,KAAKiD,WAAaC,EACnClD,KAAKyD,YAAczD,KAAKyD,U,CAG1B,UAAMV,CAAKW,EAAM,OACf,IAAK1D,KAAKO,UAAUoD,MAAO,CACzB3D,KAAKO,UAAUoD,MAAQ,GACvB3D,KAAKO,UAAUoD,MAAM3D,KAAKC,KAAO,CAAC,Q,CAEpC,GAAID,KAAKI,WAAa,GAAKJ,KAAKK,SAASa,cAAciC,QAAU,EAAG,CAElEO,EAAM,I,CAER,GAAI1D,KAAKI,WAAa,IAAMsD,EAAK,CAC/B1D,KAAKO,UAAUA,UAAUP,KAAKI,WAAaJ,KAAKK,Q,MAC3C,GAAIqD,EAAK,CACd1D,KAAKO,UAAUA,UAAU2B,OAAOlC,KAAKI,U,KAChC,CACLJ,KAAKO,UAAUA,UAAUY,KAAKnB,KAAKK,S,OAE/BuD,EAAiBC,eAAe7D,KAAKC,IAAKD,KAAKO,WACrDuD,EAAgBC,S,CAGlB,YAAMC,GACJ,OAAOF,EAAgBC,S,CAGzB,MAAAE,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAA,cAAAE,IAAA,4CACEF,EAAA,eAAAE,IAAA,2CAAaC,MAAM,YACjBH,EAAA,aAAAE,IAAA,4CACEF,EAAA,aAAAE,IAAA,2CACEE,IAAI,kBACJ1B,KAAK,uBAKbsB,EAAA,eAAAE,IAAA,4CACEF,EAAA,YAAAE,IAAA,4CACGpE,KAAKK,SAASkB,WAAa,KAC1B2C,EAAA,YACEK,OAAM,KACNC,MAAM,QACNC,QAAS,IAAMzE,KAAKc,sBAEpBoD,EAAA,iBACEA,EAAA,KAAGQ,MAAM,SACPR,EAAA,aAAWI,IAAI,WAAW1B,KAAK,aAAuB,KAExDsB,EAAA,UACGlE,KAAKQ,iBACFR,KAAKQ,iBAAiBmE,SACtB,QAIRC,UACH5E,KAAKK,SAASM,YAAc,MAC7BX,KAAKK,SAASkB,WAAa,KACzB2C,EAAA,wBACEA,EAAA,4BAEAU,UACH5E,KAAKK,SAASM,YAAc,KAC3BuD,EAAA,iBACEM,MAAM,QAAO,YACH,QAAO,aACN,QACX/C,MAAOzB,KAAKK,SAASkB,UACrBK,KAAK,YAAW,aACL,SACXiD,kBAAoBvD,GAAOtB,KAAKqB,kBAAkBC,KAElDsD,UACJV,EAAA,cAAAE,IAAA,2CACEC,MAAM,WACNS,KAAK,UACLC,OAAO,OACPC,SACEhF,KAAKK,SAASM,YAAc,MAC5BX,KAAKK,SAASkB,WAAa,KAE7BkD,QAAS,KACPzE,KAAKiB,WAAW,GAGlBiD,EAAA,YAAAE,IAAA,2CAAUxC,KAAK,MAAMqD,KAAK,UAC1Bf,EAAA,aAAAE,IAAA,4CACEF,EAAA,aAAAE,IAAA,2CAAWE,IAAI,aAAa1B,KAAK,iBAGrCsB,EAAA,YAAAE,IAAA,4CACGpE,KAAKK,SAASa,cAAcgE,KAAI,CAACvD,EAAQM,IAAU,CAClDiC,EAAA,eACEA,EAAA,eACEA,EAAA,cACEG,MAAM,WACNrD,GAAG,cACHmE,UAAU,eACVC,MAAO5C,EAAmBC,UAAU,UAAW,WAAU,kBACzC,WAChB4C,YAAc/D,IACZK,EAAO2B,QAAUhC,EAAGE,OAAOC,MAC3BzB,KAAKa,cAAc,EAErBY,MAAOE,EAAO2B,SAEbgC,OAAOC,KAAKC,GAAcN,KAAKO,GAC9BvB,EAAA,qBAAmBzC,MAAOgE,GACvBD,EAAaC,QAKtBvB,EAAA,WAASwB,KAAK,KACZxB,EAAA,iBACEM,MAAM,QAAO,YACH,WAAU,aACT,WACX/C,MAAOE,EAAO0B,QACdzB,KAAK,UAAS,aACH,OAAM,oBACC,OAClBiD,kBAAoBvD,GAAOtB,KAAK0B,aAAaC,EAAQL,GACrDqE,UAAW,CAAC,eAGhBzB,EAAA,WAASwB,KAAK,KACZxB,EAAA,cACEY,KAAK,QAAO,iBAEZL,QAAS,IAAMzE,KAAKgC,WAAWC,IAE/BiC,EAAA,YAAUtC,KAAK,QAAQyC,MAAM,cAInCH,EAAA,eACEA,EAAA,eACEA,EAAA,iBACEM,MAAM,QAAO,YACH,mBAAkB,aACjB,mBACX/C,MAAOE,EAAO6B,UACd5B,KAAK,YAAW,aACL,OACXgE,SAAU,EACVf,kBAAoBvD,GAAOtB,KAAK0B,aAAaC,EAAQL,GACrDqE,UAAW,CAAC,eAGhBzB,EAAA,eACEA,EAAA,iBACEM,MAAM,QAAO,YACH,OAAM,aACL,OACX/C,MAAOE,EAAO4B,KACd3B,KAAK,OAAM,aACA,OACXgE,SAAU,EACVf,kBAAoBvD,GAAOtB,KAAK0B,aAAaC,EAAQL,GACrDqE,UAAW,CAAC,gBAIlBzB,EAAA,eACEA,EAAA,8BAILlE,KAAKK,SAASa,cAAciC,OAAS,EACpCe,EAAA,cACEG,MAAM,SACNS,KAAK,UACLC,OAAO,OACPN,QAAS,KACPzE,KAAKmC,YAAY,GAGnB+B,EAAA,YAAUtC,KAAK,QAAQqD,KAAK,UAC5Bf,EAAA,iBACEA,EAAA,aAAWI,IAAI,SAAS1B,KAAK,aAG/BgC,YAGRV,EAAA,oBAAAE,IAAA,2CACEC,MAAOwB,EAAYC,cACnBC,aAAc/F,KAAKiD,UACnB+C,aAAc,IAAMhG,KAAKgE,SACzBiC,WAAY,IAAMjG,KAAK+C,S","ignoreList":[]}