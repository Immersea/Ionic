{"file":"app-user-translation.entry.esm.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,qBAAqB,GAAG,wBAAwB;;MCsBzC,kBAAkB;;;;;oBAEL,IAAI;4BACe,EAAE;;IAG7C,iBAAiB;QACf,MAAM,YAAY,GAAG,EAAE,CAAC;QACxB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM;YAC/C,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;SACjD,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAGA,sBAAO,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;KACrD;IAED,MAAM,GAAG;QACP,MAAM,OAAO,GAAG,EAAE,CAAC;QACnB,aAAa,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,CAAC,IAAI;YACxC,OAAO,CAAC,IAAI,CAAC;gBACX,IAAI,EAAE,IAAI,CAAC,KAAK;gBAChB,OAAO,EAAE;oBACP,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACjC;aACF,CAAC,CAAC;SACJ,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,qBAAqB,CAAC,MAAM,CAAC;YAChD,MAAM,EAAE,kBAAkB,CAAC,SAAS,CAAC,UAAU,EAAE,UAAU,CAAC;YAC5D,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,EAAE,CAAC;KAClB;IAED,cAAc,CAAC,IAAI;QACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACrB,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,EAAE;SACT,CAAC,CAAC;KACJ;IAED,MAAM,CAAC,CAAC;QACN,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KAChC;IAED,MAAM;QACJ,QACE,EAAC,IAAI,uDACF,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,MACpC,oBACE,2BACE,IAAI,EAAC,OAAO,EACZ,gBAAgB,EAAE,WAAW,CAAC,IAAI,GACb,EACtB,IAAI,CAAC,IAAI,IACR;YACE,oBACE,KAAK,EAAE,WAAW,CAAC,IAAI,EACvB,IAAI,EAAE,CAAC,EACP,SAAS,EAAC,MAAM,GACF;YAChB,kBACE,IAAI,EAAC,KAAK,qBAEV,IAAI,EAAC,OAAO,EACZ,OAAO,EAAE,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAC7B;SACH,KAED,qBAAY,WAAW,CAAC,IAAI,CAAa,CAC1C,CACQ,CACZ,CAAC,EACD,IAAI,CAAC,IAAI,IACR,gBAAU,MAAM,QAAC,OAAO,EAAE,MAAM,IAAI,CAAC,GAAG,EAAE,IACxC,gBAAU,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,OAAO,GAAG,EACpC,qBACE,iBAAW,GAAG,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,GAAa,CAClC,CACH,IACT,SAAS,CACR,EACP;KACH;;;;;;","names":["orderBy"],"sources":["src/components/common/app/common/app-user-translation/app-user-translation.scss?tag=app-user-translation","src/components/common/app/common/app-user-translation/app-user-translation.tsx"],"sourcesContent":["app-user-translation {\n    /* Component styles go here */\n}\n","import {\n  Component,\n  h,\n  Event,\n  EventEmitter,\n  Prop,\n  Host,\n  State,\n} from \"@stencil/core\";\nimport {actionSheetController} from \"@ionic/core\";\nimport {TranslationService} from \"../../../../../services/common/translations\";\nimport {SystemService} from \"../../../../../services/common/system\";\nimport {\n  UserTranslationDoc,\n  UserTranslation,\n} from \"../../../../../interfaces/common/translations/translations\";\nimport {orderBy} from \"lodash\";\n\n@Component({\n  tag: \"app-user-translation\",\n  styleUrl: \"app-user-translation.scss\",\n})\nexport class AppUserTranslation {\n  @Prop() userTranslation: UserTranslationDoc;\n  @Prop() edit: boolean = true;\n  @State() translations: UserTranslation[] = [];\n  @Event() translationEmit: EventEmitter<UserTranslation>;\n\n  componentWillLoad() {\n    const translations = [];\n    Object.keys(this.userTranslation).forEach((langId) => {\n      translations.push(this.userTranslation[langId]);\n    });\n    this.translations = orderBy(translations, \"langId\");\n  }\n\n  async add() {\n    const buttons = [];\n    SystemService.getLanguages().forEach((lang) => {\n      buttons.push({\n        text: lang.label,\n        handler: () => {\n          this.addTranslation(lang.value);\n        },\n      });\n    });\n    const action = await actionSheetController.create({\n      header: TranslationService.getTransl(\"language\", \"Language\"),\n      buttons: buttons,\n    });\n    action.present();\n  }\n\n  addTranslation(lang) {\n    this.translations.push({\n      lang: lang,\n      text: \"\",\n    });\n  }\n\n  remove(i) {\n    this.translations.splice(i, 1);\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.translations.map((translation, i) => (\n          <ion-item>\n            <app-language-picker\n              slot=\"start\"\n              selectedLangCode={translation.lang}\n            ></app-language-picker>\n            {this.edit ? (\n              [\n                <ion-textarea\n                  value={translation.text}\n                  rows={2}\n                  inputmode=\"text\"\n                ></ion-textarea>,\n                <ion-button\n                  slot=\"end\"\n                  icon-only\n                  fill=\"clear\"\n                  onClick={() => this.remove(i)}\n                />,\n              ]\n            ) : (\n              <ion-label>{translation.text}</ion-label>\n            )}\n          </ion-item>\n        ))}\n        {this.edit ? (\n          <ion-item button onClick={() => this.add()}>\n            <ion-icon name=\"add\" slot=\"start\" />\n            <ion-label>\n              <my-transl tag=\"add\" text=\"Add\"></my-transl>\n            </ion-label>\n          </ion-item>\n        ) : undefined}\n      </Host>\n    );\n  }\n}\n"],"version":3}