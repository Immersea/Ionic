{"file":"modal-shape-update.entry.esm.js","mappings":"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","names":["isString","isNumber"],"sources":["src/components/trasteel/modals/modal-shape-update/modal-shape-update.scss?tag=modal-shape-update","src/components/trasteel/modals/modal-shape-update/modal-shape-update.tsx"],"sourcesContent":["modal-shape-update {\n  ion-list {\n    width: 100%;\n  }\n}\n","import {Component, h, Host, Prop, State, Element} from \"@stencil/core\";\nimport {modalController} from \"@ionic/core\";\nimport {isNumber, isString} from \"lodash\";\nimport {Subscription} from \"rxjs\";\nimport Swiper from \"swiper\";\nimport {UserProfile} from \"../../../../interfaces/common/user/user-profile\";\nimport {UserService} from \"../../../../services/common/user\";\nimport {TranslationService} from \"../../../../services/common/translations\";\nimport {\n  Shape,\n  ShapeType,\n} from \"../../../../interfaces/trasteel/refractories/shapes\";\nimport {\n  SHAPESCOLLECTION,\n  ShapesService,\n} from \"../../../../services/trasteel/refractories/shapes\";\nimport {RouterService} from \"../../../../services/common/router\";\nimport {Media} from \"../../../../interfaces/common/media/media\";\nimport {Environment} from \"../../../../global/env\";\nimport {SystemService} from \"../../../../services/common/system\";\n\n@Component({\n  tag: \"modal-shape-update\",\n  styleUrl: \"modal-shape-update.scss\",\n})\nexport class ModalShapeUpdate {\n  @Element() el: HTMLElement;\n  @Prop({mutable: true}) shapeId: string = undefined;\n  @Prop() duplicateShape: {id: string; shape: Shape} = undefined;\n  @State() shape: Shape;\n  @State() updateView = true;\n  @State() scrollTop = 0;\n  @State() shapeTypes: ShapeType[];\n\n  validShape = false;\n  titles = [\n    {tag: \"information\", text: \"Information\", disabled: false},\n    {tag: \"drawing\", text: \"Drawing\", disabled: false},\n  ];\n  @State() slider: Swiper;\n  userProfile: UserProfile;\n  userProfileSub$: Subscription;\n\n  async componentWillLoad() {\n    this.userProfileSub$ = UserService.userProfile$.subscribe(\n      (userProfile: UserProfile) => {\n        this.userProfile = new UserProfile(userProfile);\n      }\n    );\n    await this.loadShape();\n  }\n\n  async loadShape() {\n    this.shapeTypes = await ShapesService.getShapeTypes();\n    if (this.shapeId) {\n      const res = await ShapesService.getShape(this.shapeId);\n      this.shape = res;\n    } else {\n      this.shape = new Shape(\n        this.duplicateShape ? this.duplicateShape.shape : null\n      );\n      if (this.duplicateShape) {\n        this.shape.shapeName = \"NEW - \" + this.duplicateShape.shape.shapeName;\n      }\n      this.shape.users = {\n        [UserService.userRoles.uid]: [\"owner\"],\n      };\n    }\n  }\n\n  async componentDidLoad() {\n    this.slider = new Swiper(\".slider-edit-shape\", {\n      speed: 400,\n      spaceBetween: 0,\n      allowTouchMove: false,\n      autoHeight: true,\n      slidesPerView: 1,\n      breakpoints: {\n        // When window width is >= 768px\n        768: {\n          slidesPerView: 1,\n        },\n        // When window width is >= 992px\n        992: {\n          slidesPerView: 2,\n        },\n      },\n    });\n    if (this.shape.shapeName) this.validateShape();\n    this.updateSlider();\n  }\n\n  disconnectedCallback() {\n    this.userProfileSub$.unsubscribe();\n  }\n\n  handleChange(ev) {\n    const n = ev.detail.name;\n    const v = ev.detail.value;\n    this.shape[n] = v;\n    //update volume\n    if (\n      (n == \"A\" || n == \"B\" || n == \"H\" || n == \"L\") &&\n      this.shape.A > 0 &&\n      this.shape.B > 0 &&\n      this.shape.H > 0 &&\n      this.shape.L > 0\n    ) {\n      this.shape.volume = this.shape.getVolume();\n      this.shape.radius = this.shape.getInternalRadius();\n    }\n    this.validateShape();\n  }\n\n  validateShape() {\n    this.validShape =\n      isString(this.shape.shapeTypeId) &&\n      isString(this.shape.shapeName) &&\n      isNumber(this.shape.A) &&\n      isNumber(this.shape.B) &&\n      isNumber(this.shape.H) &&\n      isNumber(this.shape.L) &&\n      this.shape.A > 0 &&\n      this.shape.B > 0 &&\n      this.shape.H > 0 &&\n      this.shape.L > 0;\n    this.updateSlider();\n  }\n\n  async selectType(ev) {\n    this.shape.shapeTypeId = ev.detail.value;\n    await ShapesService.setDwgForShape(this.shape);\n    this.validateShape();\n  }\n\n  updateSlider() {\n    this.updateView = !this.updateView;\n    //wait for view to update and then reset slider height\n    setTimeout(() => {\n      this.slider ? this.slider.update() : undefined;\n    }, 100);\n  }\n\n  async editDrawing() {\n    if (!this.shape.dwg) {\n      this.shape.dwg = new Media();\n    }\n    this.shape.dwg.id = this.shapeId;\n    this.shape.dwg.name = this.shape.shapeName;\n    const popover = await RouterService.openPopover(\"popover-media-loading\", {\n      media: this.shape.dwg,\n    });\n    popover.onDidDismiss().then(async (ev) => {\n      if (ev && ev.data) {\n        const mediaToUpload = {\n          [ev.data.media.id]: ev.data,\n        };\n        const mediaToStore = ev.data.media;\n        const popover = await RouterService.openPopover(\n          \"popover-media-uploader\",\n          {\n            files: mediaToUpload,\n            itemId: this.shapeId,\n            collectionId: SHAPESCOLLECTION,\n          }\n        );\n        popover.onDidDismiss().then((ev) => {\n          if (ev && ev.data) {\n            const urls = ev.data;\n            //update urls into media\n            this.shape.dwg = mediaToStore;\n            Object.keys(urls).forEach((id) => {\n              this.shape.dwg.url = urls[id];\n            });\n            this.save(false);\n            this.updateSlider();\n          }\n        });\n      }\n    });\n  }\n\n  async deleteShape() {\n    try {\n      await ShapesService.deleteShape(this.shapeId);\n      modalController.dismiss();\n    } catch (error) {\n      if (error) SystemService.presentAlertError(error);\n    }\n  }\n\n  async save(dismiss = true) {\n    const doc = await ShapesService.updateShape(\n      this.shapeId,\n      this.shape,\n      this.userProfile.uid\n    );\n    if (!this.shapeId) {\n      this.shapeId = doc.id;\n    }\n    dismiss ? modalController.dismiss() : undefined;\n  }\n\n  async cancel() {\n    return modalController.dismiss();\n  }\n\n  render() {\n    return (\n      <Host>\n        <app-header-segment-toolbar\n          color={Environment.getAppColor()}\n          swiper={this.slider}\n          titles={this.titles}\n        ></app-header-segment-toolbar>\n        <ion-content\n          class=\"slides\"\n          onIonScroll={(ev) => (this.scrollTop = ev.detail.scrollTop)}\n        >\n          <swiper-container class=\"slider-edit-shape swiper\">\n            <swiper-wrapper class=\"swiper-wrapper\">\n              <swiper-slide class=\"swiper-slide\">\n                <ion-list class=\"ion-no-padding\">\n                  {this.shapeTypes ? (\n                    <app-select-search\n                      color=\"trasteel\"\n                      label={{tag: \"principal\", text: \"Principal\"}}\n                      labelAddText=\"*\"\n                      value={\n                        this.shape && this.shape.shapeTypeId\n                          ? this.shape.shapeTypeId\n                          : null\n                      }\n                      lines=\"inset\"\n                      selectFn={(ev) => this.selectType(ev)}\n                      selectOptions={this.shapeTypes}\n                      selectValueId=\"typeId\"\n                      selectValueText={[\"typeName\", \"en\"]}\n                    ></app-select-search>\n                  ) : undefined}\n\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"name\"\n                    label-text=\"Name\"\n                    value={this.shape.shapeName}\n                    name=\"shapeName\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"shortName\"\n                    label-text=\"Short Name\"\n                    value={this.shape.shapeShortName}\n                    name=\"shapeShortName\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"H\"\n                    value={this.shape.H}\n                    appendText={\" (mm)\"}\n                    name=\"H\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      \"required\",\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"H1\"\n                    value={this.shape.H1}\n                    appendText={\" (mm)\"}\n                    name=\"H1\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"H2\"\n                    value={this.shape.H2}\n                    appendText={\" (mm)\"}\n                    name=\"H2\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"L\"\n                    value={this.shape.L}\n                    appendText={\" (mm)\"}\n                    name=\"L\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      \"required\",\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"L1\"\n                    appendText={\" (mm)\"}\n                    value={this.shape.L1}\n                    name=\"L1\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"La\"\n                    appendText={\" (mm)\"}\n                    value={this.shape.La}\n                    name=\"La\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"Lb\"\n                    appendText={\" (mm)\"}\n                    value={this.shape.Lb}\n                    name=\"Lb\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"A\"\n                    appendText={\" (mm)\"}\n                    value={this.shape.A}\n                    name=\"A\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      \"required\",\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"A1\"\n                    appendText={\" (mm)\"}\n                    value={this.shape.A1}\n                    name=\"A1\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"B\"\n                    appendText={\" (mm)\"}\n                    value={this.shape.B}\n                    name=\"B\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      \"required\",\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"B1\"\n                    appendText={\" (mm)\"}\n                    value={this.shape.B1}\n                    name=\"B1\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"ANG\"\n                    appendText={\" (°)\"}\n                    value={this.shape.ANG}\n                    name=\"ANG\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"ANG1\"\n                    appendText={\" (°)\"}\n                    value={this.shape.ANG1}\n                    name=\"ANG1\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"D\"\n                    appendText={\" (mm)\"}\n                    value={this.shape.D}\n                    name=\"D\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"D1\"\n                    appendText={\" (mm)\"}\n                    value={this.shape.D1}\n                    name=\"D1\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"D2\"\n                    appendText={\" (mm)\"}\n                    value={this.shape.D2}\n                    name=\"D2\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"D3\"\n                    appendText={\" (mm)\"}\n                    value={this.shape.D3}\n                    name=\"D3\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"D4\"\n                    appendText={\" (mm)\"}\n                    value={this.shape.D4}\n                    name=\"D4\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"De\"\n                    appendText={\" (mm)\"}\n                    value={this.shape.De}\n                    name=\"De\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"Di\"\n                    appendText={\" (mm)\"}\n                    value={this.shape.Di}\n                    name=\"Di\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"N\"\n                    appendText={\" (mm)\"}\n                    value={this.shape.N}\n                    name=\"N\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"Decimals\"\n                    value={this.shape.decimals}\n                    name=\"decimals\"\n                    inputStep=\"1\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      {\n                        name: \"minvalue\",\n                        options: {min: 0},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-text=\"Radius\"\n                    appendText={\n                      (this.shape.shapeTypeId == \"su-brick\" ? \" MIN\" : \"\") +\n                      \" (mm)\"\n                    }\n                    value={this.shape.radius}\n                    name=\"radius\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                  {this.shape.shapeTypeId == \"su-brick\" ? (\n                    <app-form-item\n                      label-text=\"Radius\"\n                      appendText={\" MAX (mm)\"}\n                      value={this.shape.radius_max}\n                      name=\"radius_max\"\n                      input-type=\"number\"\n                      onFormItemChanged={(ev) => this.handleChange(ev)}\n                      labelPosition=\"fixed\"\n                      validator={[\n                        {\n                          name: \"minvalue\",\n                          options: {min: this.shape.radius},\n                        },\n                      ]}\n                    ></app-form-item>\n                  ) : undefined}\n                  <app-form-item\n                    label-text=\"Volume\"\n                    appendText={\" (dm3)\"}\n                    value={this.shape.volume}\n                    name=\"volume\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    labelPosition=\"fixed\"\n                    validator={[\n                      {\n                        name: \"minvalue\",\n                        options: {min: 1},\n                      },\n                    ]}\n                  ></app-form-item>\n                </ion-list>\n                {this.shapeId ? (\n                  <ion-footer class=\"ion-no-border\">\n                    <ion-toolbar>\n                      <ion-button\n                        expand=\"block\"\n                        fill=\"outline\"\n                        color=\"danger\"\n                        onClick={() => this.deleteShape()}\n                      >\n                        <ion-icon slot=\"start\" name=\"trash\"></ion-icon>\n                        <my-transl\n                          tag=\"delete\"\n                          text=\"Delete\"\n                          isLabel\n                        ></my-transl>\n                      </ion-button>\n                    </ion-toolbar>\n                  </ion-footer>\n                ) : undefined}\n              </swiper-slide>\n              <swiper-slide class=\"swiper-slide\">\n                <app-banner\n                  scrollTopValue={this.scrollTop}\n                  backgroundCoverFill={false}\n                  heightPx={500}\n                  link={this.shape.dwg ? this.shape.dwg.url : null}\n                ></app-banner>\n                <ion-footer class=\"ion-no-border\">\n                  <ion-toolbar>\n                    <ion-button\n                      expand=\"block\"\n                      fill=\"outline\"\n                      color=\"trasteel\"\n                      disabled={!this.shapeId}\n                      onClick={() => this.editDrawing()}\n                    >\n                      <ion-icon slot=\"start\" name=\"create\"></ion-icon>\n                      <ion-label>\n                        {!this.shapeId\n                          ? TranslationService.getTransl(\n                              \"media-loader-error\",\n                              \"Please save the item to upload new media.\"\n                            )\n                          : TranslationService.getTransl(\n                              \"edit_dwg\",\n                              \"Edit Drawing\"\n                            )}\n                      </ion-label>\n                    </ion-button>\n                  </ion-toolbar>\n                </ion-footer>\n              </swiper-slide>\n            </swiper-wrapper>\n          </swiper-container>\n        </ion-content>\n        <app-modal-footer\n          color={Environment.getAppColor()}\n          disableSave={!this.validShape}\n          onCancelEmit={() => this.cancel()}\n          onSaveEmit={() => this.save()}\n        />\n      </Host>\n    );\n  }\n}\n"],"version":3}