{"file":"reviews-85226e0b.js","mappings":"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","names":[],"sources":["src/services/common/reviews.ts"],"sourcesContent":["import {DatabaseService} from \"./database\";\nimport {RouterService} from \"./router\";\nimport {UserService, USERPROFILECOLLECTION} from \"./user\";\nimport {\n  Review,\n  ReviewSummary,\n  ReviewSummaryDoc,\n} from \"../../interfaces/common/reviews/review\";\nimport _ from \"lodash\";\nimport {\n  collection,\n  getDocs,\n  limitToLast,\n  orderBy,\n  query,\n  where,\n} from \"firebase/firestore\";\nimport {firestore} from \"../../helpers/firebase\";\n\nexport const REVIEWCOLLECTION = \"reviews\";\n\nexport class ReviewController {\n  async createReview(\n    collectionId: string,\n    reviewedid: string,\n    itemCollectionId?: string,\n    itemId?: string,\n    item?: any\n  ) {\n    const popover = await RouterService.openPopover(\"popover-create-review\", {\n      editable: true,\n      collectionId: collectionId,\n      reviewedId: reviewedid,\n      itemCollectionId: itemCollectionId,\n      itemId: itemId,\n    });\n    popover.onDidDismiss().then((res) => {\n      if (res && res.data) {\n        this.saveReview(res.data, item);\n      }\n    });\n  }\n\n  async showReview(reviewId: string, allowAnswer = false) {\n    const review = await this.getReview(reviewId);\n    const popover = await RouterService.openPopover(\n      \"popover-create-review\",\n      {\n        editable: false,\n        review: review,\n        allowAnswer: allowAnswer,\n      },\n      true\n    );\n    popover.onDidDismiss().then((res) => {\n      if (res && res.data) {\n        const review = res.data;\n        delete review.reviewdObj;\n        delete review.user;\n        this.updateReview(reviewId, res.data);\n      }\n    });\n  }\n\n  async getReview(id): Promise<Review> {\n    const review = await DatabaseService.getDocument(REVIEWCOLLECTION, id);\n    if (review) {\n      if (review.userId) {\n        review.user = await UserService.getMapDataUserDetails(review.userId);\n      }\n      if (review.reviewed) {\n        review.reviewedObj = await UserService.getOrganiser(\"item\", {\n          collectionId: review.reviewed.collectionId,\n          id: review.reviewed.id,\n        });\n      }\n    }\n    return review;\n  }\n\n  async getReviews(collectionId, id): Promise<ReviewSummary[]> {\n    const res = await this.getReviewSummaryDoc(collectionId, id);\n    let reviews = [];\n    if (res && res.totReviews > 0) {\n      await res.reviews.forEach(async (review) => {\n        if (review.userId) {\n          review.user = await UserService.getMapDataUserDetails(review.userId);\n        }\n        if (review.reviewed) {\n          review.reviewedObj = await UserService.getOrganiser(\"item\", {\n            collectionId: review.reviewed.collectionId,\n            id: review.reviewed.id,\n          });\n        }\n        reviews.push(review);\n      });\n    }\n\n    return _.orderBy(reviews, \"date\", \"desc\");\n  }\n\n  async getReviewSummaryDoc(collectionId, id): Promise<ReviewSummaryDoc> {\n    return (await DatabaseService.getDocumentCollection(\n      collectionId,\n      id,\n      REVIEWCOLLECTION,\n      REVIEWCOLLECTION\n    )) as ReviewSummaryDoc;\n  }\n\n  //query reviews for user or reviewed\n  async queryReviews(collectionId, id): Promise<Review[]> {\n    console.log(\"queryReviews\", collectionId, id, USERPROFILECOLLECTION);\n    let ref = collection(firestore, REVIEWCOLLECTION);\n    let queryRef = null;\n    if (collectionId === USERPROFILECOLLECTION) {\n      queryRef = query(\n        ref,\n        where(\"userId\", \"==\", id),\n        orderBy(\"date\"),\n        limitToLast(10)\n      );\n    } else {\n      queryRef = query(\n        ref,\n        where(\"reviewed.collectionId\", \"==\", collectionId),\n        where(\"reviewed.id\", \"==\", id),\n        orderBy(\"date\"),\n        limitToLast(5)\n      );\n    }\n\n    const res = await getDocs(queryRef);\n    const results = [];\n    if (!res.empty) {\n      for (let doc of res.docs) {\n        const query = doc.data() as Review;\n        query.user = await UserService.getMapDataUserDetails(query.userId);\n        query.reviewedObj = await UserService.getOrganiser(\"item\", {\n          collectionId: query.reviewed.collectionId,\n          id: query.reviewed.id,\n        });\n        results.push(query);\n      }\n      return results;\n    }\n    return null;\n  }\n\n  async saveReview(review, item?) {\n    const res = await DatabaseService.addDocument(REVIEWCOLLECTION, review);\n    if (res && res.id && item) {\n      !item.reviewIds ? (item.reviewIds = []) : undefined;\n      //write review in the item\n      item.reviewIds.push({\n        uid: UserService.userProfile.uid,\n        reviewId: res.id,\n      });\n      //write review id and userId in the reviewed item\n      await DatabaseService.updateDocument(\n        review.reviewItem.collectionId,\n        review.reviewItem.id,\n        item\n      );\n    }\n  }\n\n  async updateReview(reviewId, review) {\n    await DatabaseService.updateDocument(REVIEWCOLLECTION, reviewId, review);\n  }\n\n  async getReviewSummary(\n    collectionId: string,\n    id: string\n  ): Promise<ReviewSummaryDoc> {\n    const reviews = (await DatabaseService.getDocumentCollection(\n      collectionId,\n      id,\n      REVIEWCOLLECTION,\n      REVIEWCOLLECTION\n    )) as ReviewSummaryDoc;\n    if (reviews && reviews.stars > 0) {\n      return reviews;\n    } else {\n      return {\n        stars: 0,\n        totReviews: 0,\n        reviews: [],\n        collectionId: collectionId,\n      };\n    }\n  }\n}\n\nexport const ReviewService = new ReviewController();\n"],"version":3}