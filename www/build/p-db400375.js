import{bm as e}from"./p-a7a717b1.js";import"./p-cbe60c68.js";import"./p-c7ee7cfe.js";import"./p-694b8ade.js";import"./p-1af05547.js";import"./p-e9c4f463.js";import"./p-5d4a8e1f.js";import"./p-3647f076.js";import"./p-9c77ce6f.js";import"./p-ae1763fb.js";import"./p-c5936999.js";import"./p-6879854f.js";class t extends e{async getCurrentPosition(e){return new Promise(((t,o)=>{navigator.geolocation.getCurrentPosition((e=>{t(e)}),(e=>{o(e)}),Object.assign({enableHighAccuracy:false,timeout:1e4,maximumAge:0},e))}))}async watchPosition(e,t){const o=navigator.geolocation.watchPosition((e=>{t(e)}),(e=>{t(null,e)}),Object.assign({enableHighAccuracy:false,timeout:1e4,maximumAge:0},e));return`${o}`}async clearWatch(e){window.navigator.geolocation.clearWatch(parseInt(e.id,10))}async checkPermissions(){if(typeof navigator==="undefined"||!navigator.permissions){throw this.unavailable("Permissions API not available in this browser")}const e=await window.navigator.permissions.query({name:"geolocation"});return{location:e.state,coarseLocation:e.state}}async requestPermissions(){throw this.unimplemented("Not implemented on web.")}}const o=new t;export{o as Geolocation,t as GeolocationWeb};
//# sourceMappingURL=p-db400375.js.map