{"file":"app-header-segment-toolbar.entry.esm.js","mappings":"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","names":[],"sources":["src/components/common/app/common/app-header-segment-toolbar/app-header-segment-toolbar.scss?tag=app-header-segment-toolbar","src/components/common/app/common/app-header-segment-toolbar/app-header-segment-toolbar.tsx"],"sourcesContent":["app-header-segment-toolbar {\n}\n","import {Component, h, Prop, Host, State, Element, Watch} from \"@stencil/core\";\nimport {TranslationService} from \"../../../../../services/common/translations\";\n\n@Component({\n  tag: \"app-header-segment-toolbar\",\n  styleUrl: \"app-header-segment-toolbar.scss\",\n})\nexport class AppHeaderSegmentToolbar {\n  @Element() el: HTMLElement;\n  @Prop() color: string;\n  @Prop() noHeader = false;\n  @Prop() noToolbar = false;\n  @State() segmentTitles: any = {};\n  @State() updateView = true;\n  @Prop({mutable: true}) segment: number = 0;\n  @Prop({mutable: true}) swiper: any;\n  @Prop() mode: \"ios\" | \"md\" = \"md\";\n  @Prop({mutable: true}) titles: {\n    tag: string;\n    text?: string;\n    appendix?: string;\n    disabled?: boolean;\n    icon?: string;\n    slotIcon?: string;\n    badge?: number;\n  }[];\n  @Prop({mutable: true}) updateBadge = true;\n\n  @Watch(\"swiper\")\n  setSwiper() {\n    if (this.swiper) {\n      this.swiper.on(\"slideChange\", (ev) => this.slideChanged(ev));\n      this.swiper.slideTo(this.segment);\n    }\n  }\n\n  @Watch(\"updateBadge\")\n  update() {\n    this.updateView = !this.updateView;\n  }\n\n  componentWillLoad() {\n    this.titles.forEach((title) => {\n      this.segmentTitles[title.tag] = TranslationService.getTransl(\n        title.tag,\n        title.text\n      );\n    });\n  }\n\n  async slideChanged(swiper) {\n    this.updateSwiper();\n    this.segment = swiper.activeIndex;\n  }\n\n  segmentChanged(ev) {\n    if (ev.detail.value >= 0) {\n      this.segment = ev.detail.value;\n      if (this.swiper) {\n        this.updateSwiper();\n        this.swiper.slideTo(this.segment);\n      }\n    }\n  }\n\n  updateSwiper() {\n    if (this.swiper) {\n      this.swiper.update();\n      this.swiper.updateAutoHeight();\n      this.swiper.updateSize();\n    }\n  }\n\n  renderToolbar() {\n    const segment = (\n      <ion-segment\n        mode={this.mode}\n        color={this.color}\n        scrollable\n        onIonChange={(ev) => this.segmentChanged(ev)}\n        value={this.segment}\n      >\n        {this.titles.map((title, index) => (\n          <ion-segment-button\n            value={index}\n            disabled={title.disabled ? true : false}\n            layout={\n              title.slotIcon && title.slotIcon == \"end\"\n                ? \"icon-end\"\n                : \"icon-start\"\n            }\n          >\n            <ion-label>{this.segmentTitles[title.tag]}</ion-label>\n            {title.icon ? <ion-icon name={title.icon}></ion-icon> : undefined}\n            {title.badge > 0 ? (\n              <ion-badge color={this.color}>{title.badge}</ion-badge>\n            ) : undefined}\n          </ion-segment-button>\n        ))}\n      </ion-segment>\n    );\n    return this.noToolbar ? (\n      segment\n    ) : (\n      <ion-toolbar class=\"no-safe-padding\">{segment}</ion-toolbar>\n    );\n  }\n\n  render() {\n    return (\n      <Host>\n        {!this.noHeader && !this.noToolbar ? (\n          <ion-header>{this.renderToolbar()}</ion-header>\n        ) : (\n          this.renderToolbar()\n        )}\n      </Host>\n    );\n  }\n}\n"],"version":3}