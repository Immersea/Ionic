{"file":"app-stripe-pay.entry.esm.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,eAAe,GAAG,u3IAAu3I;;MCOl4I,YAAY;;;;;;;;;IAQvB,gBAAgB;QACd,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,gBAAgB,CAAC,mCAAmC,CAClD,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,sBAAsB,EAC3B,IAAI,CAAC,kBAAkB,EACvB,IAAI,CAAC,EAAE,CACR,CAAC;SACH;aAAM;YACL,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;SACzE;KACF;IAED,UAAU;QACR,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;KACtB;IAED,MAAM;QACJ,QACE,4DAAK,KAAK,EAAC,SAAS,IAClB,4DAAK,KAAK,EAAC,SAAS,IAClB,4DAAK,KAAK,EAAC,WAAW,IACpB,yEAAa,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAK,CACrD,EACN,6DAAM,EAAE,EAAC,cAAc,EAAC,KAAK,EAAC,iBAAiB,IAC7C,4DAAK,KAAK,EAAC,qBAAqB,IAC9B,4DAAK,KAAK,EAAC,0BAA0B,EAAC,EAAE,EAAC,cAAc,GAAO,CAC1D,EACN,4DAAK,KAAK,EAAC,gBAAgB,EAAC,EAAE,EAAC,aAAa,EAAC,IAAI,EAAC,OAAO,GAAO,EAChE,+DAAQ,EAAE,EAAC,QAAQ,IACjB,4DAAK,KAAK,EAAC,gBAAgB,EAAC,EAAE,EAAC,SAAS,GAAO,EAC/C,6DAAM,EAAE,EAAC,aAAa,UAAW,EACjC,6DAAM,EAAE,EAAC,cAAc,GAAQ,CACxB,CACJ,EACP,4DAAK,KAAK,EAAC,kBAAkB,EAAC,EAAE,EAAC,SAAS,IACxC,iFAEE,4DAAM,CACJ,EACJ,mEAAY,MAAM,EAAC,MAAM,EAAC,OAAO,EAAE,MAAM,IAAI,CAAC,UAAU,EAAE,YAE7C,CACT,CACF,CACF,EACN;KACH;;;;;;;","names":[],"sources":["src/components/common/app/common/app-stripe-pay/app-stripe-pay.scss?tag=app-stripe-pay","src/components/common/app/common/app-stripe-pay/app-stripe-pay.tsx"],"sourcesContent":["app-stripe-pay {\n  /* Layout */\n  .sr-root {\n    width: 100%;\n    padding: 48px;\n    align-content: center;\n    justify-content: center;\n    height: auto;\n    margin: 0 auto;\n  }\n  .sr-main {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    height: 100%;\n    align-self: center;\n    padding: 75px 50px;\n    background: rgb(247, 250, 252);\n    width: -400px;\n    border-radius: 6px;\n    box-shadow: 0px 0px 0px 0.5px rgba(50, 50, 93, 0.1),\n      0px 2px 5px 0px rgba(50, 50, 93, 0.1),\n      0px 1px 1.5px 0px rgba(0, 0, 0, 0.07);\n  }\n\n  .sr-field-error {\n    color: rgb(105, 115, 134);\n    text-align: left;\n    font-size: 13px;\n    line-height: 17px;\n    margin-top: 12px;\n  }\n\n  /* Inputs */\n  .sr-input,\n  input[type=\"text\"] {\n    border: 1px solid grey;\n    border-radius: 6px;\n    padding: 5px 12px;\n    height: 44px;\n    width: 100%;\n    transition: box-shadow 0.2s ease;\n    background: white;\n    -moz-appearance: none;\n    -webkit-appearance: none;\n    appearance: none;\n  }\n  .sr-input:focus,\n  input[type=\"text\"]:focus,\n  button:focus,\n  .focused {\n    box-shadow: 0 0 0 1px rgba(50, 151, 211, 0.3),\n      0 1px 1px 0 rgba(0, 0, 0, 0.07), 0 0 0 4px rgba(50, 151, 211, 0.3);\n    outline: none;\n    z-index: 9;\n  }\n  .sr-input::placeholder,\n  input[type=\"text\"]::placeholder {\n    color: lightgray;\n  }\n  .sr-result {\n    height: 44px;\n    -webkit-transition: height 1s ease;\n    -moz-transition: height 1s ease;\n    -o-transition: height 1s ease;\n    transition: height 1s ease;\n    color: rgb(105, 115, 134);\n  }\n\n  .sr-combo-inputs-row {\n    box-shadow: 0px 0px 0px 0.5px rgba(50, 50, 93, 0.1),\n      0px 2px 5px 0px rgba(50, 50, 93, 0.1),\n      0px 1px 1.5px 0px rgba(0, 0, 0, 0.07);\n    border-radius: 7px;\n  }\n\n  /* Buttons and links */\n  button {\n    background: #0a721b;\n    border-radius: 6px;\n    color: white;\n    border: 0;\n    padding: 12px 16px;\n    margin-top: 16px;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.2s ease;\n    display: block;\n    box-shadow: 0px 4px 5.5px 0px rgba(0, 0, 0, 0.07);\n    width: 100%;\n  }\n  button:hover {\n    filter: contrast(115%);\n  }\n  button:active {\n    transform: translateY(0px) scale(0.98);\n    filter: brightness(0.9);\n  }\n  button:disabled {\n    opacity: 0.5;\n    cursor: none;\n  }\n\n  a {\n    color: #ffffff;\n    text-decoration: none;\n    transition: all 0.2s ease;\n  }\n\n  a:hover {\n    filter: brightness(0.8);\n  }\n\n  a:active {\n    filter: brightness(0.5);\n  }\n\n  /* Code block */\n  code,\n  pre {\n    font-family: \"SF Mono\", \"IBM Plex Mono\", \"Menlo\", monospace;\n    font-size: 12px;\n  }\n  /* Stripe Element placeholder */\n  .sr-card-element {\n    padding-top: 12px;\n  }\n  /* Responsiveness */\n  @media (max-width: 720px) {\n    .sr-root {\n      flex-direction: column;\n      justify-content: flex-start;\n      padding: 48px 20px;\n      min-width: 320px;\n    }\n\n    .sr-header__logo {\n      background-position: center;\n    }\n\n    .sr-payment-summary {\n      text-align: center;\n    }\n\n    .sr-content {\n      display: none;\n    }\n\n    .sr-main {\n      width: 100%;\n      height: 305px;\n      background: rgb(247, 250, 252);\n      box-shadow: 0px 0px 0px 0.5px rgba(50, 50, 93, 0.1),\n        0px 2px 5px 0px rgba(50, 50, 93, 0.1),\n        0px 1px 1.5px 0px rgba(0, 0, 0, 0.07);\n      border-radius: 6px;\n    }\n  }\n\n  /* todo: spinner/processing state, errors, animations */\n\n  .spinner,\n  .spinner:before,\n  .spinner:after {\n    border-radius: 50%;\n  }\n  .spinner {\n    color: #ffffff;\n    font-size: 22px;\n    text-indent: -99999px;\n    margin: 0px auto;\n    position: relative;\n    width: 20px;\n    height: 20px;\n    box-shadow: inset 0 0 0 2px;\n    -webkit-transform: translateZ(0);\n    -ms-transform: translateZ(0);\n    transform: translateZ(0);\n  }\n  .spinner:before,\n  .spinner:after {\n    position: absolute;\n    content: \"\";\n  }\n  .spinner:before {\n    width: 10.4px;\n    height: 20.4px;\n    background: #0a721b;\n    border-radius: 20.4px 0 0 20.4px;\n    top: -0.2px;\n    left: -0.2px;\n    -webkit-transform-origin: 10.4px 10.2px;\n    transform-origin: 10.4px 10.2px;\n    -webkit-animation: loading 2s infinite ease 1.5s;\n    animation: loading 2s infinite ease 1.5s;\n  }\n  .spinner:after {\n    width: 10.4px;\n    height: 10.2px;\n    background: #0a721b;\n    border-radius: 0 10.2px 10.2px 0;\n    top: -0.1px;\n    left: 10.2px;\n    -webkit-transform-origin: 0px 10.2px;\n    transform-origin: 0px 10.2px;\n    -webkit-animation: loading 2s infinite ease;\n    animation: loading 2s infinite ease;\n  }\n\n  @-webkit-keyframes loading {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes loading {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n\n  /* Animated form */\n\n  .sr-root {\n    animation: 0.4s form-in;\n    animation-fill-mode: both;\n    animation-timing-function: ease;\n  }\n\n  .hidden {\n    display: none;\n  }\n\n  @keyframes field-in {\n    0% {\n      opacity: 0;\n      transform: translateY(8px) scale(0.95);\n    }\n    100% {\n      opacity: 1;\n      transform: translateY(0px) scale(1);\n    }\n  }\n\n  @keyframes form-in {\n    0% {\n      opacity: 0;\n      transform: scale(0.98);\n    }\n    100% {\n      opacity: 1;\n      transform: scale(1);\n    }\n  }\n}\n","import { Component, h, Element, Prop } from \"@stencil/core\";\nimport { StripeAPIService } from \"../../../../../services/common/stripe-api\";\n\n@Component({\n  tag: \"app-stripe-pay\",\n  styleUrl: \"app-stripe-pay.scss\",\n})\nexport class AppStripePay {\n  @Element() el: HTMLElement;\n  @Prop() amount: number; //in cent\n  @Prop() currency: string;\n  @Prop() connectedAccountID: string;\n  @Prop() application_fee_amount: string;\n  @Prop() modal: any;\n\n  componentDidLoad() {\n    if (this.connectedAccountID) {\n      StripeAPIService.makePaymentIntentToConnectedAccount(\n        this.amount,\n        this.currency,\n        this.application_fee_amount,\n        this.connectedAccountID,\n        this.el\n      );\n    } else {\n      StripeAPIService.makePaymentIntent(this.amount, this.currency, this.el);\n    }\n  }\n\n  closeModal() {\n    this.modal.dismiss();\n  }\n\n  render() {\n    return (\n      <div class='sr-root'>\n        <div class='sr-main'>\n          <div class='sr-result'>\n            <p>Payment: {this.amount / 100 + \" \" + this.currency}</p>\n          </div>\n          <form id='payment-form' class='sr-payment-form'>\n            <div class='sr-combo-inputs-row'>\n              <div class='sr-input sr-card-element' id='card-element'></div>\n            </div>\n            <div class='sr-field-error' id='card-errors' role='alert'></div>\n            <button id='submit'>\n              <div class='spinner hidden' id='spinner'></div>\n              <span id='button-text'>Pay</span>\n              <span id='order-amount'></span>\n            </button>\n          </form>\n          <div class='sr-result hidden' id='success'>\n            <p>\n              Payment completed\n              <br />\n            </p>\n            <ion-button expand='full' onClick={() => this.closeModal()}>\n              Close\n            </ion-button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"version":3}