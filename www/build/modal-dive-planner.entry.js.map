{"file":"modal-dive-planner.entry.esm.js","mappings":"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","names":["filter","orderBy"],"sources":["src/components/udive/modals/dive-plan/modal-dive-planner/modal-dive-planner.scss?tag=modal-dive-planner","src/components/udive/modals/dive-plan/modal-dive-planner/modal-dive-planner.tsx"],"sourcesContent":["modal-dive-planner {\n  ion-segment-button {\n    --color-checked: var(--ion-color-planner-contrast);\n  }\n  .nopaddingtop {\n    //remove extra padding for iOS\n    padding-top: 0px !important;\n  }\n}\n","import {Component, h, Prop, State, Element} from \"@stencil/core\";\n\nimport {DecoplannerDive} from \"../../../../../interfaces/udive/planner/decoplanner-dive\";\nimport {DivePlan} from \"../../../../../services/udive/planner/dive-plan\";\n//import { Config } from '../../../../../../providers/config';\nimport {UserRoles} from \"../../../../../interfaces/common/user/user-roles\";\n//import { DataBase } from '../../../../../../providers/database';\nimport {DecoplannerParameters} from \"../../../../../interfaces/udive/planner/decoplanner-parameters\";\nimport {DiveStandardsService} from \"../../../../../services/udive/planner/dive-standards\";\n//import { LicenceCheckProvider } from '../../../../../../providers/licence-check';\nimport {GasModel} from \"../../../../../interfaces/udive/planner/gas-model\";\nimport {filter, orderBy} from \"lodash\";\n//import { DiveConfigurationsModel } from \"../../../interfaces/udive/planner/dive-configurations-model\";\nimport {DiveConfiguration} from \"../../../../../interfaces/udive/planner/dive-configuration\";\n//import { Tank } from \"../../../interfaces/udive/planner/tank\";\n\nimport {DivePlanModel} from \"../../../../../interfaces/udive/planner/dive-plan\";\nimport {slideHeight} from \"../../../../../helpers/utils\";\nimport {UserService} from \"../../../../../services/common/user\";\nimport {Environment} from \"../../../../../global/env\";\nimport Swiper from \"swiper\";\n\n@Component({\n  tag: \"modal-dive-planner\",\n  styleUrl: \"modal-dive-planner.scss\",\n})\nexport class ModalDivePlanner {\n  @Element() el: HTMLElement;\n\n  loading: any;\n  segments: any;\n  dives: Array<DecoplannerDive>;\n  dive: DecoplannerDive = new DecoplannerDive();\n  dive_less_time: DecoplannerDive = new DecoplannerDive();\n  dive_more_time: DecoplannerDive = new DecoplannerDive();\n  dive_less_depth: DecoplannerDive = new DecoplannerDive();\n  dive_more_depth: DecoplannerDive = new DecoplannerDive();\n  selectedChartModel = \"BUHL\";\n  selectedModelGasView = \"BUHL\";\n  licences: any;\n  divePlan: DivePlan;\n  parameters: DecoplannerParameters;\n  ranges: any;\n  isSaving = false;\n  diveDataToShare: any;\n  screenHeight: number;\n  headerHeight: number;\n  chartHeight: number;\n  chartTopMargin: number;\n  @State() slider: Swiper;\n  content: HTMLIonContentElement;\n\n  showLoadingTab = true;\n\n  profileChartDataSource: any;\n  profileChartData: any;\n  profileChart: any;\n\n  stdGases: Array<GasModel>;\n  stdDecoGases: Array<GasModel>;\n\n  @Prop() stdConfigurations: Array<DiveConfiguration> = [];\n  @Prop() index: number = 0;\n  @Prop() userRoles: UserRoles;\n  @Prop() selectedConfiguration: DiveConfiguration;\n  @Prop() diveTripData: {\n    date: Date;\n    diveSiteId: string;\n    divingCenterId: string;\n  };\n  @Prop() divePlanModel: DivePlanModel;\n  @Prop() addDive?: boolean = false;\n  @Prop() showDiveSite?: boolean = false;\n  @Prop() showPositionTab?: boolean = false;\n  @Prop() setDate?: boolean = false;\n\n  @State() updateView = true;\n  @State() segment: string = \"plan\";\n\n  @State() showProfiles = false;\n\n  @State() titles = [\n    {tag: \"plan\", icon: \"chevron-forward\", slotIcon: \"end\"},\n    {tag: \"profile\", disabled: true, icon: \"chevron-forward\", slotIcon: \"end\"},\n    {tag: \"gas\", disabled: true, icon: \"chevron-forward\", slotIcon: \"end\"},\n    {tag: \"charts\", disabled: true, icon: \"chevron-forward\", slotIcon: \"end\"},\n    {tag: \"settings\", disabled: true},\n  ];\n\n  componentWillLoad() {\n    //convert into DivePlan provider and start calculations for the dive\n    this.divePlan = new DivePlan();\n    //this.divePlan.setProviders(this.translate)\n    let newPlanModel = this.divePlanModel;\n    if (!newPlanModel) {\n      //insert new dive plan\n      let selectedConfiguration = this.selectedConfiguration;\n      //add new dive with selected config\n      this.divePlan.setConfiguration(selectedConfiguration);\n      let dive = this.divePlan.addDive();\n      this.divePlan.resetDiveWithConfiguration(dive, selectedConfiguration);\n      if (this.diveTripData) {\n        this.divePlan.dives[0].diveSiteId = this.diveTripData.diveSiteId\n          ? this.diveTripData.diveSiteId\n          : null;\n        this.divePlan.dives[0].divingCenterId = this.diveTripData.divingCenterId\n          ? this.diveTripData.divingCenterId\n          : null;\n        this.divePlan.dives[0].date = this.diveTripData.date\n          ? new Date(this.diveTripData.date)\n          : new Date();\n      }\n    } else {\n      this.divePlan.setConfiguration(newPlanModel.configuration);\n      this.divePlan.setWithDivePlanModel(newPlanModel);\n      if (this.addDive) {\n        //insert new dive plan\n        let dive = this.divePlan.addDive();\n        this.divePlan.resetDiveWithConfiguration(\n          dive,\n          newPlanModel.configuration\n        );\n        this.index = this.divePlan.dives.length - 1;\n        //set dive siteid to previous site\n        if (this.index > 0) {\n          this.divePlan.dives[this.index].diveSiteId =\n            this.divePlan.dives[this.index - 1].diveSiteId;\n        }\n      }\n    }\n    //set updated date\n    if (this.setDate) {\n      this.divePlan.dives[this.index].date = new Date();\n    }\n    this.stdGases = [];\n    this.stdDecoGases = [];\n    let gases = [];\n    DiveStandardsService.getStdGases().forEach((list) => {\n      gases.push(list);\n    });\n    this.stdGases = filter(gases, {deco: false});\n    this.stdGases = orderBy(this.stdGases, \"fromDepth\", \"asc\");\n    this.stdDecoGases = filter(gases, {deco: true});\n    this.stdDecoGases = orderBy(this.stdDecoGases, \"fromDepth\", \"desc\");\n\n    this.update();\n\n    this.showLoadingTab = false;\n    //this.segment = 1;\n    /*setTimeout(() => {\n      this.tabsItem.select(this.currentTab);\n    });*/\n  }\n\n  componentDidLoad() {\n    this.slider = new Swiper(\".slider-dive-planner\", {\n      speed: 400,\n      spaceBetween: 100,\n      allowTouchMove: false,\n      autoHeight: true,\n    });\n    this.update();\n  }\n\n  setSliderHeight() {\n    //reset sliders height inside slider\n    const slideContainers = Array.from(\n      this.el.getElementsByClassName(\"slide-container\")\n    );\n    slideContainers.map((container) => {\n      container.setAttribute(\n        \"style\",\n        \"height: \" + slideHeight(null, 3, true) + \"px\"\n      );\n    });\n    this.slider ? this.slider.updateAutoHeight() : null;\n    this.slider ? this.slider.update() : undefined;\n  }\n\n  saveDoc(updateView = true) {\n    if (updateView) this.update();\n    //document is saved on modal dismiss\n  }\n\n  updateParams(params) {\n    //this.divePlan.configuration.parameters = params.detail;\n    this.divePlan.setParams(params.detail, false);\n    this.update();\n  }\n\n  async update() {\n    this.divePlan.updateCalculations();\n    this.dives = this.divePlan.dives;\n    this.dive = this.divePlan.dives[this.index];\n    this.selectedChartModel = this.dive.selectedModel;\n    this.selectedModelGasView = this.dive.selectedModel;\n    //send updated params to other views\n    this.diveDataToShare = {\n      divePlan: this.divePlan,\n      dive_less_time: this.dive_less_time,\n      dive_more_time: this.dive_more_time,\n      dive_less_depth: this.dive_less_depth,\n      dive_more_depth: this.dive_more_depth,\n      index: this.index,\n      stdGases: this.stdGases,\n      stdDecoGases: this.stdDecoGases,\n      stdConfigurations: this.stdConfigurations,\n      user: this.userRoles,\n      showDiveSite: this.showDiveSite,\n      showPositionTab: this.showPositionTab,\n    };\n\n    //check user licence limitations\n    if (\n      this.dive.getDecoTime() >\n      UserService.userRoles.licences.getUserLimitations().maxDecoTime\n    ) {\n      this.showProfiles = false;\n      UserService.userRoles.licences.presentLicenceLimitation(\"decotime\");\n    } else {\n      this.showProfiles = true;\n    }\n    this.titles[1].disabled = !this.showProfiles;\n    this.titles[2].disabled = !this.showProfiles;\n    this.titles[3].disabled = !this.showProfiles;\n    this.titles[4].disabled = !this.showProfiles;\n    this.updateView = !this.updateView;\n\n    this.setSliderHeight();\n  }\n\n  save() {\n    this.el.closest(\"ion-modal\").dismiss(this.divePlan.getDivePlanModel());\n  }\n\n  close() {\n    this.el.closest(\"ion-modal\").dismiss();\n  }\n\n  scrollToTop() {\n    this.content ? this.content.scrollToTop() : undefined;\n  }\n\n  logScrollStart(ev) {\n    this.content = ev.srcElement;\n  }\n\n  render() {\n    return [\n      <ion-header>\n        <app-navbar\n          tag=\"deco-planner\"\n          text=\"Deco Planner\"\n          extra-title={this.divePlan.configuration.stdName}\n          color={Environment.isDecoplanner() ? \"gue-blue\" : \"planner\"}\n          modal={true}\n        ></app-navbar>\n        <app-header-segment-toolbar\n          color={Environment.isDecoplanner() ? \"gue-blue\" : \"planner\"}\n          swiper={this.slider}\n          titles={this.titles}\n          noHeader\n          class=\"nopaddingtop\"\n        ></app-header-segment-toolbar>\n      </ion-header>,\n      <ion-content\n        class=\"slides\"\n        scrollEvents={true}\n        onIonScrollStart={(ev) => this.logScrollStart(ev)}\n      >\n        <swiper-container class=\"slider-dive-planner swiper\">\n          <swiper-wrapper class=\"swiper-wrapper\">\n            <swiper-slide class=\"swiper-slide\">\n              <app-decoplanner-plan\n                diveDataToShare={this.diveDataToShare}\n                onUpdateParamsEvent={(params) => this.updateParams(params)}\n              />\n            </swiper-slide>\n            <swiper-slide class=\"swiper-slide\">\n              <app-decoplanner-profile diveDataToShare={this.diveDataToShare} />\n            </swiper-slide>\n            <swiper-slide class=\"swiper-slide\">\n              <app-decoplanner-gas\n                diveDataToShare={this.diveDataToShare}\n                isShown={this.segment == \"gas\"}\n              />\n            </swiper-slide>\n            <swiper-slide class=\"swiper-slide\">\n              <ion-content class=\"slide-container\">\n                <app-decoplanner-charts\n                  diveDataToShare={this.diveDataToShare}\n                  isShown={this.segment == \"charts\"}\n                />\n              </ion-content>\n            </swiper-slide>\n            <swiper-slide class=\"swiper-slide\">\n              <app-decoplanner-settings\n                diveDataToShare={this.diveDataToShare}\n                onUpdateParamsEvent={(params) => this.updateParams(params)}\n              />\n            </swiper-slide>\n          </swiper-wrapper>\n        </swiper-container>\n      </ion-content>,\n      <app-modal-footer\n        onCancelEmit={() => this.close()}\n        onSaveEmit={() => this.save()}\n      />,\n    ];\n  }\n}\n"],"version":3}