{"file":"app-diving-center-card.entry.esm.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,sBAAsB,GAAG,gDAAgD;;MCSlE,mBAAmB;;;;;;;IAK9B,iBAAiB;QACf,IAAI,CAAC,YAAY,GAAG,oBAAoB,CAAC,iBAAiB,CAAC,IAAI,CAC7D,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,cAAc,CACzC,CAAC;KACH;IAED,MAAM;QACJ,QACE,iEACE,OAAO,EAAE,MACP,oBAAoB,CAAC,0BAA0B,CAAC,IAAI,CAAC,cAAc,CAAC,IAGtE,uEAAgB,IAAI,EAAE,IAAI,CAAC,YAAY,GAAI,EAC3C,0EACE,iEAAU,KAAK,EAAC,gBAAgB,EAAC,KAAK,EAAC,MAAM,IAC3C,yEAAiB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAkB,CACvD,EACX,2EACG,IAAI,CAAC,aAAa;cACf;gBACE,iBAAW,GAAG,EAAC,UAAU,EAAC,IAAI,EAAC,UAAU,GAAa;gBACtD,IAAI;oBACF,QAAQ,CACN,IAAI,CAAC,aAAa,CAAC,QAAQ,EAC3B,IAAI,CAAC,aAAa,CAAC,SAAS,EAC5B,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAC5C,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAC9C;aACJ;cACD,SAAS,CACI,CACH,CACT,EACX;KACH;;;;;;","names":[],"sources":["src/components/udive/app/dive-sites/app-diving-center-card/app-diving-center-card.scss?tag=app-diving-center-card","src/components/udive/app/dive-sites/app-diving-center-card/app-diving-center-card.tsx"],"sourcesContent":["app-diving-center-card {\n  /* Component styles go here */\n  width: 100%;\n  height: 100%;\n}\n","import { Component, h, Prop, State } from \"@stencil/core\";\nimport { distance } from \"../../../../../helpers/utils\";\nimport { MapDataDivingCenter } from \"../../../../../interfaces/udive/diving-center/divingCenter\";\nimport { DivingCentersService } from \"../../../../../services/udive/divingCenters\";\n\n@Component({\n  tag: \"app-diving-center-card\",\n  styleUrl: \"app-diving-center-card.scss\",\n})\nexport class AppDivingCenterCard {\n  @Prop() divingCenterId: string;\n  @Prop() startlocation: any;\n  @State() divingCenter: MapDataDivingCenter;\n\n  componentWillLoad() {\n    this.divingCenter = DivingCentersService.divingCentersList.find(\n      (item) => item.id == this.divingCenterId\n    );\n  }\n\n  render() {\n    return (\n      <ion-card\n        onClick={() =>\n          DivingCentersService.presentDivingCenterDetails(this.divingCenterId)\n        }\n      >\n        <app-item-cover item={this.divingCenter} />\n        <ion-card-header>\n          <ion-item class='ion-no-padding' lines='none'>\n            <ion-card-title>{this.divingCenter.displayName}</ion-card-title>\n          </ion-item>\n          <ion-card-content>\n            {this.startlocation\n              ? [\n                  <my-transl tag='distance' text='Distance'></my-transl>,\n                  \": \" +\n                    distance(\n                      this.startlocation.latitude,\n                      this.startlocation.longitude,\n                      this.divingCenter.position.geopoint.latitude,\n                      this.divingCenter.position.geopoint.longitude\n                    ),\n                ]\n              : undefined}\n          </ion-card-content>\n        </ion-card-header>\n      </ion-card>\n    );\n  }\n}\n"],"version":3}