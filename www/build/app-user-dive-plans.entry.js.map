{"file":"app-user-dive-plans.entry.esm.js","mappings":"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","names":["orderBy","format"],"sources":["src/components/udive/app/user/app-user-dive-plans/app-user-dive-plans.scss?tag=app-user-dive-plans","src/components/udive/app/user/app-user-dive-plans/app-user-dive-plans.tsx"],"sourcesContent":["app-user-dive-plans {\n  /* Component styles go here */\n}\n","import {Component, h, State, Host} from \"@stencil/core\";\nimport {UserDivePlans} from \"../../../../../interfaces/udive/user/user-dive-plans\";\nimport {Subscription} from \"rxjs\";\nimport {UserService} from \"../../../../../services/common/user\";\nimport {orderBy} from \"lodash\";\nimport {DiveSitesService} from \"../../../../../services/udive/diveSites\";\nimport {GasBlenderService} from \"../../../../../services/udive/planner/gas-blender\";\nimport {DivePlansService} from \"../../../../../services/udive/divePlans\";\nimport {TranslationService} from \"../../../../../services/common/translations\";\nimport {Environment} from \"../../../../../global/env\";\nimport {DiveToolsService} from \"../../../../../services/udive/planner/dive-tools\";\nimport {format} from \"date-fns\";\n\n@Component({\n  tag: \"app-user-dive-plans\",\n  styleUrl: \"app-user-dive-plans.scss\",\n})\nexport class AppUserDivePlans {\n  @State() userDivePlansArray: any[] = [];\n  @State() updateView = false;\n  userDivePlans$: Subscription;\n  diveSitesList$: Subscription;\n  sitesCollection: any[] = [];\n\n  @State() loadingDivePlans = true;\n  //@State() creatingNewDivePlan = false;\n  //creatingNewDivePlan$: Subscription;\n  //@State() editingDivePlan = \"\";\n  //editingDivePlan$: Subscription;\n\n  async componentWillLoad() {\n    /*this.creatingNewDivePlan$ = DivePlansService.creatingNewDivePlan$.subscribe(\n      (value) => {\n        this.creatingNewDivePlan = value;\n      }\n    );\n    this.editingDivePlan$ = DivePlansService.editingDivePlanId$.subscribe(\n      (value) => {\n        this.editingDivePlan = value;\n      }\n    );*/\n    this.userDivePlans$ = UserService.userDivePlans$.subscribe(\n      async (userDivePlans: UserDivePlans) => {\n        this.loadingDivePlans = false;\n        DivePlansService.resetSkeletons();\n        if (userDivePlans) {\n          this.userDivePlansArray = [];\n          Object.keys(userDivePlans).forEach((key) => {\n            let plan = userDivePlans[key] as any;\n            plan.id = key;\n            plan.date = plan.dives[0].date;\n            this.userDivePlansArray.push(plan);\n          });\n          this.userDivePlansArray = orderBy(\n            this.userDivePlansArray,\n            \"date\",\n            \"desc\"\n          );\n          this.filterMySites();\n        }\n      }\n    );\n\n    //load all dive sites\n    this.diveSitesList$ = DiveSitesService.diveSitesList$.subscribe(\n      (collection) => {\n        //update dive sites\n        this.sitesCollection = collection;\n        this.filterMySites();\n      }\n    );\n  }\n\n  disconnectedCallback() {\n    //this.creatingNewDivePlan$.unsubscribe();\n    //this.editingDivePlan$.unsubscribe();\n    this.userDivePlans$.unsubscribe();\n    this.diveSitesList$.unsubscribe();\n  }\n\n  filterMySites() {\n    if (this.sitesCollection.length > 0 && this.userDivePlansArray.length > 0) {\n      this.userDivePlansArray.map((divePlan) => {\n        divePlan.dives.map((dive) => {\n          dive.diveSite = this.sitesCollection.find(\n            (site) => site.id == dive.diveSiteId\n          );\n          this.updateView = !this.updateView;\n        });\n      });\n    }\n  }\n\n  update(event, divePlanId, diveId) {\n    event.stopPropagation();\n    DivePlansService.presentDivePlanUpdate(divePlanId, diveId);\n  }\n\n  delete(event, divePlanId, diveId) {\n    event.stopPropagation();\n    DivePlansService.deleteDiveFromPlan(divePlanId, diveId);\n  }\n\n  addDive(event, divePlanId, diveId) {\n    event.stopPropagation();\n    DivePlansService.addDiveToPlan(divePlanId, diveId);\n  }\n\n  deleteDivePlan(event, divePlanId) {\n    event.stopPropagation();\n    DivePlansService.deleteDivePlan(divePlanId);\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.loadingDivePlans\n          ? [\n              <app-skeletons skeleton=\"userDivePlan\" />,\n              <app-skeletons skeleton=\"userDivePlan\" />,\n              <app-skeletons skeleton=\"userDivePlan\" />,\n              <app-skeletons skeleton=\"userDivePlan\" />,\n              <app-skeletons skeleton=\"userDivePlan\" />,\n            ]\n          : undefined}\n        {/*this.creatingNewDivePlan ? (\n          <app-skeletons skeleton=\"userDivePlan\" />\n        ) : undefined*/}\n        {this.userDivePlansArray.map((divePlan) => (\n          <ion-card>\n            <ion-item>\n              <ion-label>\n                <h2>{format(divePlan.date, \"PP\")}</h2>\n                <p>{divePlan.configuration}</p>\n              </ion-label>\n              <ion-button\n                fill=\"clear\"\n                icon-only\n                slot=\"end\"\n                color=\"danger\"\n                onClick={(ev) => this.deleteDivePlan(ev, divePlan.id)}\n              >\n                <ion-icon name=\"trash-bin\" slot=\"end\"></ion-icon>\n              </ion-button>\n              <ion-button\n                fill=\"clear\"\n                icon-only\n                color={Environment.isDecoplanner() ? \"gue-blue\" : \"planner\"}\n                slot=\"end\"\n                onClick={(ev) =>\n                  this.addDive(ev, divePlan.id, divePlan.dives.length - 1)\n                }\n              >\n                <ion-icon name=\"add-circle\" slot=\"end\"></ion-icon>\n              </ion-button>\n            </ion-item>\n            {divePlan.dives.map((dive, key) => (\n              <ion-item\n                detail\n                button\n                onClick={() =>\n                  DivePlansService.presentDivePlanDetails(divePlan.id, key)\n                }\n              >\n                {dive.diveSite && dive.diveSite.coverURL ? (\n                  <ion-thumbnail slot=\"start\">\n                    <img src={dive.diveSite.coverURL} />\n                  </ion-thumbnail>\n                ) : undefined}\n                <ion-label>\n                  <h3>{format(dive.date, \"p\")}</h3>\n                  {dive.diveSite ? (\n                    <h4>{dive.diveSite.displayName}</h4>\n                  ) : undefined}\n                  {dive.profilePoints.map((point) => (\n                    <p>\n                      {point.time}min @{point.depth}\n                      {DiveToolsService.depthUnit} (\n                      {GasBlenderService.getGasName(point.gas)})\n                    </p>\n                  ))}\n                </ion-label>\n                {key > 0 ? (\n                  <ion-button\n                    fill=\"clear\"\n                    icon-only\n                    slot=\"end\"\n                    color=\"danger\"\n                    onClick={(ev) => this.delete(ev, divePlan.id, key)}\n                  >\n                    <ion-icon name=\"trash\" slot=\"end\"></ion-icon>\n                  </ion-button>\n                ) : undefined}\n\n                <ion-button\n                  fill=\"clear\"\n                  icon-only\n                  slot=\"end\"\n                  color={Environment.isDecoplanner() ? \"gue-blue\" : \"planner\"}\n                  onClick={(ev) => this.update(ev, divePlan.id, key)}\n                >\n                  <ion-icon name=\"create\" slot=\"end\"></ion-icon>\n                </ion-button>\n              </ion-item>\n            ))}\n          </ion-card>\n        ))}\n        {this.userDivePlansArray.length == 0 ? (\n          <ion-item>\n            <ion-label>\n              <h2>\n                {TranslationService.getTransl(\n                  \"no-logbooks\",\n                  \"No dives yet. Click on the '+' button to create your first one.\"\n                )}\n              </h2>\n            </ion-label>\n          </ion-item>\n        ) : undefined}\n      </Host>\n    );\n  }\n}\n"],"version":3}