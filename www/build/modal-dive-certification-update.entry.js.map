{"file":"modal-dive-certification-update.entry.esm.js","mappings":"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","names":["toNumber","isString","toString"],"sources":["src/components/udive/modals/system/modal-dive-certification-update/modal-dive-certification-update.scss?tag=modal-dive-certification-update","src/components/udive/modals/system/modal-dive-certification-update/modal-dive-certification-update.tsx"],"sourcesContent":["modal-dive-certification-update {\n  ion-list {\n    width: 100%;\n  }\n}\n","import {Component, h, Host, Prop, State, Element} from \"@stencil/core\";\nimport {modalController} from \"@ionic/core\";\nimport {isString, toNumber, toString} from \"lodash\";\nimport {Certification} from \"../../../../../interfaces/udive/diving-class/divingClass\";\nimport {\n  SystemService,\n  SYSTEMCOLLECTION,\n} from \"../../../../../services/common/system\";\nimport {DivePlanModel} from \"../../../../../interfaces/udive/planner/dive-plan\";\nimport Swiper from \"swiper\";\nimport {Environment} from \"../../../../../global/env\";\n\n@Component({\n  tag: \"modal-dive-certification-update\",\n  styleUrl: \"modal-dive-certification-update.scss\",\n})\nexport class ModalDiveCertificationUpdate {\n  @Element() el: HTMLElement;\n  @Prop() agencyId: string;\n  @Prop() diveCertification: Certification;\n  @State() validCert = false;\n  @State() newCert: boolean = false;\n  @State() updateView = false;\n  certGroups: any;\n  @State() titles = [{tag: \"details\"}, {tag: \"schedule\"}];\n  @State() slider: Swiper;\n\n  async componentWillLoad() {\n    this.newCert = !this.diveCertification.id;\n    this.certGroups =\n      SystemService.systemPreferences.selectOptions.certificationGroups;\n\n    //convert diveplans to models\n    if (this.diveCertification.activities)\n      this.diveCertification.activities = this.diveCertification.activities.map(\n        (activity) => {\n          if (activity.divePlan)\n            activity.divePlan = new DivePlanModel(activity.divePlan);\n          return activity;\n        }\n      );\n  }\n\n  async componentDidLoad() {\n    this.slider = new Swiper(\".slider-dive-cert\", {\n      speed: 400,\n      spaceBetween: 100,\n      allowTouchMove: true,\n      autoHeight: true,\n    });\n    this.validateCert();\n  }\n\n  handleCertChange(ev) {\n    if (ev.detail.name == \"maxDepth\" || ev.detail.name == \"numberOfStudents\") {\n      this.diveCertification[ev.detail.name] = toNumber(ev.detail.value);\n    } else {\n      this.diveCertification[ev.detail.name] = ev.detail.value;\n    }\n    this.validateCert();\n  }\n\n  updateCertGroup(group) {\n    this.diveCertification.group = group;\n    this.validateCert();\n  }\n\n  uniqueIdValid(ev) {\n    this.validCert = this.validCert && ev.detail;\n  }\n\n  updateImageUrls(ev) {\n    const imageType = ev.detail.type;\n    const url = ev.detail.url;\n    if (imageType == \"photo\") {\n      this.diveCertification.photoURL = url;\n    } else {\n      this.diveCertification.coverURL = url;\n    }\n  }\n\n  validateCert() {\n    this.validCert =\n      isString(this.diveCertification.id) &&\n      isString(this.diveCertification.name) &&\n      this.diveCertification.numberOfStudents > 0 &&\n      this.diveCertification.maxDepth > 0;\n  }\n\n  async save() {\n    return modalController.dismiss(this.diveCertification);\n  }\n\n  async cancel() {\n    return modalController.dismiss();\n  }\n\n  render() {\n    return (\n      <Host>\n        <ion-header>\n          {this.diveCertification.id ? (\n            <app-upload-cover\n              item={{\n                collection: SYSTEMCOLLECTION,\n                id: this.agencyId + \"-\" + this.diveCertification.id,\n                photoURL: this.diveCertification.photoURL,\n                coverURL: this.diveCertification.coverURL,\n              }}\n              onCoverUploaded={(ev) => this.updateImageUrls(ev)}\n            ></app-upload-cover>\n          ) : undefined}\n        </ion-header>\n        <app-header-segment-toolbar\n          color={Environment.getAppColor()}\n          swiper={this.slider}\n          titles={this.titles}\n        ></app-header-segment-toolbar>\n        <ion-content class=\"slides\">\n          <swiper-container class=\"slider-dive-cert swiper\">\n            <swiper-wrapper class=\"swiper-wrapper\">\n              <swiper-slide class=\"swiper-slide\">\n                <ion-list>\n                  <app-form-item\n                    label-tag=\"unique-id\"\n                    label-text=\"Unique ID\"\n                    value={this.diveCertification.id}\n                    disabled={!this.newCert}\n                    name=\"id\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleCertChange(ev)}\n                    onIsValid={(ev) => this.uniqueIdValid(ev)}\n                    validator={[\n                      \"required\",\n                      {\n                        name: \"uniqueid\",\n                        options: {type: null},\n                      },\n                    ]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-tag=\"name\"\n                    label-text=\"Name\"\n                    value={this.diveCertification.name}\n                    name=\"name\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleCertChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-tag=\"max-depth\"\n                    label-text=\"Max. Depth\"\n                    value={toString(this.diveCertification.maxDepth)}\n                    name=\"maxDepth\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleCertChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-tag=\"max-students\"\n                    label-text=\"Max. number of students\"\n                    value={toString(this.diveCertification.numberOfStudents)}\n                    name=\"numberOfStudents\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleCertChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <ion-item>\n                    <ion-label>Certification Group</ion-label>\n                    <ion-select\n                      value={this.diveCertification.group}\n                      onIonChange={(ev) =>\n                        this.updateCertGroup(ev.detail.value)\n                      }\n                      interface=\"popover\"\n                    >\n                      {this.certGroups.map((group) => (\n                        <ion-select-option value={group.tag}>\n                          {group.text}\n                        </ion-select-option>\n                      ))}\n                    </ion-select>\n                  </ion-item>\n                </ion-list>\n              </swiper-slide>\n              <swiper-slide class=\"swiper-slide\">\n                <app-dive-course-activities\n                  schedule={this.diveCertification.activities}\n                  showDiveLocation={false}\n                  onScheduleEmit={(ev) =>\n                    (this.diveCertification.activities = ev.detail)\n                  }\n                  editable={true}\n                />\n              </swiper-slide>\n            </swiper-wrapper>\n          </swiper-container>\n        </ion-content>\n        <app-modal-footer\n          disableSave={!this.validCert}\n          onCancelEmit={() => this.cancel()}\n          onSaveEmit={() => this.save()}\n        />\n      </Host>\n    );\n  }\n}\n"],"version":3}