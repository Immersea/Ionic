{"file":"page-user-plans.entry.esm.js","mappings":"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","names":["orderBy"],"sources":["src/components/trasteel/pages/crm/page-user-plans/page-user-plans.scss?tag=page-user-plans","src/components/trasteel/pages/crm/page-user-plans/page-user-plans.tsx"],"sourcesContent":["page-user-plans {\n  /* Component styles go here */\n}\n","import {Component, Prop, State, h} from \"@stencil/core\";\nimport Swiper from \"swiper\";\nimport {UserPlansService} from \"../../../../../services/trasteel/crm/user-plans\";\nimport {\n  ProductLines,\n  UserPlan,\n  UserPlans,\n} from \"../../../../../interfaces/trasteel/users/user-plans\";\nimport {Subscription} from \"rxjs\";\nimport {CustomersService} from \"../../../../../services/trasteel/crm/customers\";\nimport {TrasteelService} from \"../../../../../services/trasteel/common/services\";\nimport {UsersTeams} from \"../../../../../interfaces/trasteel/users/users-teams\";\nimport {UserService} from \"../../../../../services/common/user\";\nimport {UserPubicProfile} from \"../../../../../components\";\nimport {orderBy} from \"lodash\";\nimport {Environment} from \"../../../../../global/env\";\n\n@Component({\n  tag: \"page-user-plans\",\n  styleUrl: \"page-user-plans.scss\",\n})\nexport class PageUserPlans {\n  @Prop() uid: string;\n  @State() userPlans: UserPlans;\n  userPlansSub: Subscription;\n  titles = [\n    {tag: \"personal\", text: \"Personal\", disabled: false},\n    {tag: \"team\", text: \"Team\", disabled: false},\n  ];\n  @State() slider: Swiper;\n  @State() usersTeams: UsersTeams;\n  usersListSub: Subscription;\n  usersList: UserPubicProfile[] = [];\n  @State() selectedUser: UserPubicProfile;\n  @State() updateView = false;\n\n  async componentWillLoad() {\n    await this.loadUserPlans();\n  }\n\n  async loadUserPlans() {\n    if (this.uid) {\n      //open other user plan\n      let userPlans: UserPlans = new UserPlans(\n        await UserPlansService.getPlansOfUser(this.uid)\n      );\n      this.userPlans = new UserPlans();\n      this.userPlans.users = userPlans.users;\n      //filter user plans by team manager\n      userPlans.userPlans.map((userPlan) => {\n        const plan = new UserPlan();\n        plan.customerId = userPlan.customerId;\n        plan.otherName = userPlan.otherName;\n        plan.planOfActions = [];\n        userPlan.planOfActions.map((planofaction) => {\n          if (\n            planofaction.product == \"refractories\" &&\n            TrasteelService.isRefraTeamAdmin()\n          ) {\n            plan.planOfActions.push(planofaction);\n          } else if (\n            planofaction.product == \"electrodes\" &&\n            TrasteelService.isElecTeamAdmin()\n          ) {\n            plan.planOfActions.push(planofaction);\n          } else if (\n            planofaction.product == \"engineering\" &&\n            TrasteelService.isEngTeamAdmin()\n          ) {\n            plan.planOfActions.push(planofaction);\n          } else if (\n            planofaction.product == \"rawmaterials\" &&\n            TrasteelService.isRawTeamAdmin()\n          ) {\n            plan.planOfActions.push(planofaction);\n          }\n        });\n        if (plan.planOfActions.length > 0) {\n          this.userPlans.userPlans.push(plan);\n        }\n      });\n      this.selectedUser = await UserService.getPublicProfileUserDetails(\n        this.uid\n      );\n      this.updateSlider();\n    } else {\n      //personal user plans\n      this.userPlansSub = UserPlansService.userPlans$.subscribe((userPlans) => {\n        this.userPlans = userPlans;\n        this.updateSlider();\n      });\n      TrasteelService.isTeamAdmin()\n        ? (this.usersListSub = UserService.userPublicProfilesList$.subscribe(\n            (userProfiles) => {\n              this.usersList = userProfiles;\n              this.updateSlider();\n            }\n          ))\n        : undefined;\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.uid) {\n      //open other user plan\n    } else {\n      TrasteelService.isTeamAdmin()\n        ? this.usersListSub.unsubscribe()\n        : undefined;\n      this.userPlansSub.unsubscribe();\n    }\n  }\n\n  async componentDidLoad() {\n    this.slider = new Swiper(\".slider-plans\" + this.uid, {\n      speed: 400,\n      spaceBetween: 100,\n      allowTouchMove: false,\n      autoHeight: true,\n      on: {\n        slideChange: () => {\n          this.slider ? this.slider.updateAutoHeight() : null;\n        },\n      },\n    });\n    if (!this.uid && TrasteelService.isTeamAdmin()) {\n      this.usersTeams = await TrasteelService.getUsersTeams();\n    }\n  }\n\n  updateSlider() {\n    setTimeout(() => {\n      //reset slider height\n      this.slider ? this.slider.update() : undefined;\n    }, 100);\n  }\n\n  async editPlan(index?) {\n    const modal = await UserPlansService.presentUserPlansUpdate(\n      this.uid,\n      this.userPlans,\n      index\n    );\n    modal.onDidDismiss().then(() => {\n      if (this.uid) this.loadUserPlans(); //update data for team user\n    });\n  }\n\n  renderTeam() {\n    //list users for this team\n    if (\n      this.usersTeams &&\n      this.usersTeams.usersTeams &&\n      this.usersTeams.usersTeams.length > 0\n    ) {\n      const userIds = {};\n      this.usersTeams.usersTeams.map((team) => {\n        if (team.uid !== UserService.userProfile.uid) {\n          userIds[team.uid] = true;\n        }\n      });\n      let users: UserPubicProfile[] = [];\n      Object.keys(userIds).map((uid) => {\n        users.push(this.usersList.find((x) => x.uid == uid));\n      });\n      users = orderBy(users, \"displayName\");\n      return users.length > 0\n        ? [\n            users.map((user) => [\n              <ion-item\n                button\n                onClick={() => UserPlansService.openUsersPlans(user.uid)}\n              >\n                {user.displayName + \" - \" + user.email}\n              </ion-item>,\n            ]),\n          ]\n        : null;\n    } else return null;\n  }\n\n  render() {\n    return [\n      <ion-header>\n        <app-navbar\n          tag={this.uid == null ? \"plan-of-actions\" : null}\n          text={\n            this.uid == null\n              ? \"Plan of Actions\"\n              : \"Plan of Actions - \" + this.selectedUser.displayName\n          }\n          color={Environment.getAppColor()}\n          backButton={this.uid != null}\n        ></app-navbar>\n      </ion-header>,\n      !this.uid && TrasteelService.isTeamAdmin() ? (\n        <app-header-segment-toolbar\n          color={Environment.getAppColor()}\n          swiper={this.slider}\n          titles={this.titles}\n        ></app-header-segment-toolbar>\n      ) : undefined,\n      <ion-content class=\"slides\">\n        <ion-fab vertical=\"top\" horizontal=\"end\" slot=\"fixed\" edge>\n          <ion-fab-button\n            size=\"small\"\n            onClick={() => this.editPlan()}\n            color={Environment.getAppColor()}\n          >\n            <ion-icon name=\"add\"></ion-icon>\n          </ion-fab-button>\n        </ion-fab>\n        <swiper-container class={\"slider-plans\" + this.uid + \" swiper\"}>\n          <swiper-wrapper class=\"swiper-wrapper\">\n            {/* PERSONAL */}\n            <swiper-slide class=\"swiper-slide\">\n              <div class=\"ion-padding-top\"></div>\n              {this.userPlans &&\n              this.userPlans.userPlans &&\n              this.userPlans.userPlans.length > 0 ? (\n                this.userPlans.userPlans.map((userPlan, index) => [\n                  <ion-item button onClick={() => this.editPlan(index)}>\n                    <ion-grid class=\"ion-no-padding\">\n                      <ion-row class=\"ion-no-padding\">\n                        <ion-col>\n                          <ion-item-divider color=\"trasteel\">\n                            {userPlan.customerId != null\n                              ? CustomersService.getCustomersDetails(\n                                  userPlan.customerId\n                                ).fullName\n                              : userPlan.otherName}\n                          </ion-item-divider>\n                        </ion-col>\n                      </ion-row>\n                      {userPlan.planOfActions.map((plan) => [\n                        <ion-row class=\"ion-no-padding\">\n                          <ion-col>\n                            <app-item-detail\n                              lines=\"none\"\n                              label-tag=\"product\"\n                              label-text=\"Product\"\n                              detailText={ProductLines[plan.product]}\n                            ></app-item-detail>\n                          </ion-col>\n                          <ion-col>\n                            <app-item-detail\n                              lines=\"none\"\n                              label-tag=\"updated\"\n                              label-text=\"Updated\"\n                              detailText={new Date(\n                                plan.updated\n                              ).toLocaleDateString()}\n                            ></app-item-detail>\n                          </ion-col>\n                          <ion-col>\n                            <app-item-detail\n                              lines=\"none\"\n                              label-tag=\"due-date\"\n                              label-text=\"Due Date\"\n                              detailText={new Date(\n                                plan.dueDate\n                              ).toLocaleDateString()}\n                            ></app-item-detail>\n                          </ion-col>\n                        </ion-row>,\n                        <ion-row class=\"ion-no-padding\">\n                          <ion-col>\n                            <app-item-detail\n                              lines=\"none\"\n                              label-tag=\"actual-situation\"\n                              label-text=\"Actual Situation\"\n                              detailText={plan.situation}\n                            ></app-item-detail>\n                          </ion-col>\n                          <ion-col>\n                            <app-item-detail\n                              lines=\"none\"\n                              label-tag=\"plan\"\n                              label-text=\"Plan\"\n                              detailText={plan.plan}\n                            ></app-item-detail>\n                          </ion-col>\n                        </ion-row>,\n                        <ion-row class=\"ion-no-padding\">\n                          <ion-item-divider></ion-item-divider>\n                        </ion-row>,\n                      ])}\n                    </ion-grid>\n                  </ion-item>,\n                ])\n              ) : (\n                <ion-item>\n                  <ion-label>Insert a new plan of actions</ion-label>\n                </ion-item>\n              )}\n            </swiper-slide>\n            {/* TEAM */}\n            {!this.uid && TrasteelService.isTeamAdmin() ? (\n              <swiper-slide class=\"swiper-slide\">\n                <ion-list>{this.renderTeam()}</ion-list>\n              </swiper-slide>\n            ) : undefined}\n          </swiper-wrapper>\n        </swiper-container>\n      </ion-content>,\n    ];\n  }\n}\n"],"version":3}