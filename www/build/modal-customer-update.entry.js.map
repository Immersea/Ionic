{"file":"modal-customer-update.entry.esm.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,sBAAsB,GAAG,4CAA4C;;MC8B9D,mBAAmB;;;QAO9B,iBAAY,GAAG,KAAK,CAAC;QACrB,WAAM,GAAG;YACP,EAAC,GAAG,EAAE,aAAa,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAC;YAC1D,EAAC,GAAG,EAAE,WAAW,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAC;YACtD;gBACE,GAAG,EAAE,sBAAsB;gBAC3B,IAAI,EAAE,sBAAsB;gBAC5B,QAAQ,EAAE,KAAK;aAChB;SACF,CAAC;0BAd2B,SAAS;;0BAEhB,IAAI;6BACD,KAAK;mCACM,KAAK;;;IAezC,MAAM,iBAAiB;QACrB,IAAI,CAAC,eAAe,GAAG,WAAW,CAAC,YAAY,CAAC,SAAS,CACvD,CAAC,WAAwB;YACvB,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,CAAC,WAAW,CAAC,CAAC;SACjD,CACF,CAAC;QACF,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;KAC3B;IAED,MAAM,YAAY;QAChB,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,MAAM,GAAG,GAAG,MAAM,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAChE,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACpB,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC;gBAAE,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;SACtE;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;YAC/B,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG;gBACpB,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC;aACvC,CAAC;SACH;KACF;IAED,MAAM,gBAAgB;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,uBAAuB,EAAE;YAChD,KAAK,EAAE,GAAG;YACV,YAAY,EAAE,GAAG;YACjB,cAAc,EAAE,KAAK;YACrB,UAAU,EAAE,IAAI;SACjB,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAED,oBAAoB;QAClB,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;KACpC;IAED,YAAY,CAAC,EAAE;QACb,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;QAChD,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAED,uBAAuB;QACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAED,WAAW;QACT,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAED,eAAe,CAAC,EAAE;QAChB,MAAM,SAAS,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;QACjC,MAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC;QAC1B,IAAI,SAAS,IAAI,OAAO,EAAE;YACxB,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,GAAG,CAAC;SAC9B;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,GAAG,CAAC;SAC9B;QACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAClB;IAED,gBAAgB;QACd,IAAI,cAAc,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ;YACvC,IAAI,QAAQ,IAAI,QAAQ,CAAC,QAAQ;gBAC/B,cAAc;oBACZ,cAAc;wBACdA,uBAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC;wBAC7CA,uBAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;SACpD,CAAC,CAAC;QACH,IAAI,CAAC,aAAa;YAChB,cAAc;gBACdC,uBAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;gBAChC,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC;KAChC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,gBAAgB,EAAE,CAAC,CAAC;QACrD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;QAC9D,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;IAED,cAAc;QACZ,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;IAED,cAAc,CAAC,KAAK;QAClB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACzC,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;IAED,cAAc;QACZ,MAAM,qBAAqB,GACzB,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QACvC,MAAM,oBAAoB,GAAG;YAC3B,MAAM,EAAE,kBAAkB,CAAC,SAAS,CAAC,eAAe,EAAE,eAAe,CAAC;SACvE,CAAC;QACF,qBAAqB,CAAC,gBAAgB,GAAG,oBAAoB,CAAC;;QAE9D,MAAM,qBAAqB,GAAG,KAAK,CAAC,IAAI,CACtC,qBAAqB,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,CAChE,CAAC;QACF,qBAAqB,CAAC,GAAG,CAAC,CAAC,MAAM;YAC/B,qBAAqB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;SAC3C,CAAC,CAAC;QACH,qBAAqB,CAAC,WAAW,GAAG,kBAAkB,CAAC,SAAS,CAC9D,QAAQ,EACR,QAAQ,CACT,CAAC;QACF,gBAAgB,CAAC,gBAAgB,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI;YAC3C,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;YACjE,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;YACjC,YAAY,CAAC,WAAW,GAAG,kBAAkB,CAAC,SAAS,CACrD,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,QAAQ,CACd,CAAC;YACF,qBAAqB,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;SACjD,CAAC,CAAC;KACJ;IAED,UAAU,CAAC,EAAE;QACX,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;QACvC,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAED,0BAA0B,CAAC,EAAE;QAC3B,IAAI,EAAE,CAAC,MAAM,CAAC,KAAK,KAAK,KAAK,EAAE;YAC7B,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;YAC3C,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;YACnC,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;KACF;IAED,WAAW,CAAC,EAAE;QACZ,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;QACtC,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAED,gBAAgB,CAAC,EAAE,EAAE,KAAK;QACxB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;QAC7C,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAED,MAAM,SAAS,CAAC,KAAe,EAAE,KAAc,EAAE,GAAa;QAC5D,IAAI,KAAK,GAAG,IAAI,aAAa,EAAE,CAAC;QAChC,IAAI,KAAK,EAAE;YACT,IAAI,KAAK,IAAI,CAAC,EAAE;gBACd,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACnC,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;iBACtC;aACF;SACF;aAAM;YACL,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;SAC7B;QACD,IAAI,CAAC,GAAG,EAAE;;YAER,MAAM,OAAO,GAAG,MAAM,iBAAiB,CAAC,MAAM,CAAC;gBAC7C,SAAS,EAAE,6BAA6B;gBACxC,WAAW,EAAE,IAAI;gBACjB,cAAc,EAAE;oBACd,KAAK,EAAE,KAAK;oBACZ,KAAK,EAAE,KAAK;iBACb;aACF,CAAC,CAAC;YAEH,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE;gBACnC,MAAM,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC;gBACpB,IAAI,GAAG,EAAE;oBACP,IAAI,KAAK,EAAE;wBACT,IAAI,KAAK,IAAI,CAAC,EAAE;4BACd,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC;yBACxC;6BAAM;4BACL,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;yBACrC;qBACF;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;qBACjC;oBACD,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;oBAC5B,IAAI,CAAC,YAAY,EAAE,CAAC;iBACrB;aACF,CAAC,CAAC;YACH,OAAO,CAAC,OAAO,EAAE,CAAC;SACnB;QACD,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;IAED,YAAY;QACV,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;;QAEnC,UAAU,CAAC;YACT,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,SAAS,CAAC;SAChD,EAAE,GAAG,CAAC,CAAC;KACT;IAED,MAAM,sBAAsB,CAC1B,SAA+B,EAC/B,aAGwB;QAExB,MAAM,KAAK,GAAG,MAAM,aAAa,CAAC,SAAS,CACzC,0CAA0C,EAC1C;YACE,SAAS;YACT,aAAa,EAAEC,wBAAS,CAAC,aAAa,CAAC;YACvC,QAAQ,EAAE,IAAI;SACf,CACF,CAAC;QACF,KAAK,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM;YAC/B,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC;YACrB,IAAI,MAAM,IAAI,aAAa,EAAE;gBAC3B,IAAI,SAAS,IAAI,KAAK;oBACpB,aAAa,GAAG,IAAI,oBAAoB,CAAC,MAAM,CAAC,CAAC;qBAC9C,IAAI,SAAS,IAAI,IAAI;oBACxB,aAAa,GAAG,IAAI,mBAAmB,CAAC,MAAM,CAAC,CAAC;qBAC7C,IAAI,SAAS,IAAI,KAAK;oBACzB,aAAa,GAAG,IAAI,oBAAoB,CAAC,MAAM,CAAC,CAAC;gBACnD,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;iBAAM,IAAI,MAAM,EAAE;gBACjB,IAAI,SAAS,IAAI,KAAK;oBACpB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC;qBACjE,IAAI,SAAS,IAAI,IAAI;oBACxB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC;qBAC/D,IAAI,SAAS,IAAI,KAAK;oBACzB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC;gBACtE,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;SACF,CAAC,CAAC;KACJ;IAED,MAAM,cAAc;QAClB,IAAI;YACF,MAAM,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACvD,eAAe,CAAC,OAAO,EAAE,CAAC;SAC3B;QAAC,OAAO,KAAK,EAAE;YACd,IAAI,KAAK;gBAAE,aAAa,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;SACnD;KACF;IAED,MAAM,IAAI,CAAC,OAAO,GAAG,IAAI;QACvB,MAAM,GAAG,GAAG,MAAM,gBAAgB,CAAC,cAAc,CAC/C,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,WAAW,CAAC,GAAG,CACrB,CAAC;QACF,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,OAAO,OAAO,GAAG,eAAe,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;SACnD;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,EAAE,CAAC;YACzB,OAAO,IAAI,CAAC;SACb;KACF;IAED,MAAM,MAAM;QACV,eAAe,CAAC,OAAO,EAAE,CAAC;KAC3B;IAED,MAAM;QACJ,QACE,EAAC,IAAI,uDACH,qEACE,yEACE,IAAI,EAAE;gBACJ,UAAU,EAAE,mBAAmB;gBAC/B,EAAE,EAAE,IAAI,CAAC,UAAU;gBACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ;gBAChC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ;aACjC,EACD,eAAe,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,GAC/B,CACT,EACb,mFACE,KAAK,EAAE,WAAW,CAAC,WAAW,EAAE,EAChC,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,MAAM,EAAE,IAAI,CAAC,MAAM,GACS,EAC9B,oEAAa,KAAK,EAAC,QAAQ,IACzB,yEAAkB,KAAK,EAAC,6BAA6B,IACnD,uEAAgB,KAAK,EAAC,gBAAgB,IACpC,qEAAc,KAAK,EAAC,cAAc,IAChC,iEAAU,KAAK,EAAC,gBAAgB,IAC9B,iEAAU,KAAK,EAAC,MAAM,IACpB,mEACE,KAAK,EAAC,UAAU,EAChB,EAAE,EAAC,YAAY,EACf,SAAS,EAAC,cAAc,EACxB,KAAK,EAAE,kBAAkB,CAAC,SAAS,CACjC,eAAe,EACf,eAAe,CAChB,qBACe,UAAU,EAC1B,WAAW,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EACxC,KAAK,EACH,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM;kBACjC,IAAI,CAAC,QAAQ,CAAC,MAAM;kBACpB,IAAI,GAEE,CACL,EACX,mFACY,MAAM,gBACL,MAAM,EACjB,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAC7B,IAAI,EAAC,UAAU,gBACJ,MAAM,EACjB,iBAAiB,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,EAChD,SAAS,EAAE,CAAC,UAAU,CAAC,GACR,EACjB,mFACY,YAAY,gBACX,YAAY,EACvB,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAClC,IAAI,EAAC,eAAe,gBACT,MAAM,EACjB,iBAAiB,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,EAChD,SAAS,EAAE,CAAC,UAAU,CAAC,GACR,EACjB,sEACE,QAAQ,EAAC,YAAY,EACrB,SAAS,EAAC,YAAY,EACtB,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,EACnC,IAAI,EAAC,gBAAgB,gBACV,MAAM,EACjB,iBAAiB,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,EAChD,SAAS,EAAE,CAAC,UAAU,CAAC,GACR,EACjB,sEACE,QAAQ,EAAC,YAAY,EACrB,SAAS,EAAC,kBAAkB,EAC5B,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EACxC,IAAI,EAAC,qBAAqB,gBACf,MAAM,EACjB,iBAAiB,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,EAChD,SAAS,EAAE,CAAC,UAAU,CAAC,GACR,EACjB,sEACE,QAAQ,EAAC,YAAY,EACrB,SAAS,EAAC,YAAY,EACtB,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAC9B,IAAI,EAAC,WAAW,gBACL,MAAM,EACjB,iBAAiB,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,EAChD,SAAS,EAAE,CAAC,UAAU,CAAC,GACR,EAChB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,IAC9B,gBAAU,KAAK,EAAC,MAAM,IACpB,qBACE,cACE,iBACE,GAAG,EAAE,oBAAoB,EACzB,IAAI,EAAE,oBAAoB,GACf,CACV,CACK,EACZ,kBACE,OAAO,EAAE,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EACnC,IAAI,EAAC,KAAK,QAGC,CACJ,IACT,SAAS,EACZ,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,MACpC,gBAAU,KAAK,EAAC,MAAM,IACpB,qBACG,KAAK,IAAI,CAAC,IACT,oBACE,iBACE,GAAG,EAAE,gBAAgB,EACrB,IAAI,EAAE,gBAAgB,GACX,CACJ,IACT,SAAS,EACb,cACG,KAAK,CAAC,SAAS;YACd,IAAI;YACJ,KAAK,CAAC,kBAAkB;YACxB,IAAI,CACH,CACK,EACX,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IACtC,kBACE,OAAO,EAAE,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EACnC,IAAI,EAAC,KAAK,QAGC,IACX,SAAS,EACb,kBACE,IAAI,EAAC,KAAK,qBAEV,KAAK,EAAC,QAAQ,EACd,IAAI,EAAC,OAAO,EACZ,OAAO,EAAE;gBACP,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aACnC,IAED,gBAAU,IAAI,EAAC,OAAO,GAAY,CACvB,EACb,kBACE,IAAI,EAAC,KAAK,qBAEV,IAAI,EAAC,OAAO,EACZ,OAAO,EAAE;gBACP,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aAC7B,IAED,gBAAU,IAAI,EAAC,QAAQ,GAAY,CACxB,CACJ,CACZ,CAAC,EACF,iEAAU,KAAK,EAAC,MAAM,IACpB,oEACE,mEACE,kEACE,GAAG,EAAE,gBAAgB,EACrB,IAAI,EAAE,gBAAgB,GACX,CACJ,EACX,6DAAK,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAM,CAC9B,EACZ,mEACE,IAAI,EAAC,KAAK,qBAEV,IAAI,EAAC,OAAO,EACZ,OAAO,EAAE;gBACP,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aACvB,IAED,iEAAU,IAAI,EAAC,QAAQ,GAAY,CACxB,CACJ,EACX,sFACE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,QAAQ,EAAE,IAAI,GACiB,CACxB,EACV,IAAI,CAAC,UAAU,IACd,kBAAY,KAAK,EAAC,eAAe,IAC/B,uBACE,kBACE,MAAM,EAAC,OAAO,EACd,IAAI,EAAC,SAAS,EACd,KAAK,EAAC,QAAQ,EACd,OAAO,EAAE,MAAM,IAAI,CAAC,cAAc,EAAE,IAEpC,gBAAU,IAAI,EAAC,OAAO,EAAC,IAAI,EAAC,OAAO,GAAY,EAC/C,iBACE,GAAG,EAAC,QAAQ,EACZ,IAAI,EAAC,QAAQ,EACb,OAAO,SACI,CACF,CACD,CACH,IACX,SAAS,CACA,EACf,qEAAc,KAAK,EAAC,cAAc,IAChC,8DACE,sEACE,oEACE,IAAI,EAAC,KAAK,EACV,UAAU,QACV,WAAW,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,0BAA0B,CAAC,EAAE,CAAC,EACxD,KAAK,EAAE,IAAI,CAAC,mBAAmB,IAE9B,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,KAAK,MAC3C,0BAAoB,KAAK,EAAE,KAAK,EAAE,MAAM,EAAC,YAAY,IACnD,qBAEI,gBAAgB,CAAC,iBAAiB,CAChC,QAAQ,CAAC,IAAI,CACd,CAAC,CAAC,CAAC,CAAC,YAAY,CAET,CACO,CACtB,CAAC,EACF,2EACE,KAAK,EAAC,KAAK,EACX,OAAO,EAAE,MAAM,IAAI,CAAC,WAAW,EAAE,EACjC,MAAM,EAAC,YAAY,IAEnB,wEAAwB,CACL,CACT,CACF,EACb,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,KAAK,MAC3C,eACG,IAAI,CAAC,mBAAmB,IAAI,KAAK,IAChC,eACE,oBACE,SAAS,EAAE,gBAAgB,CAAC,iBAAiB,EAAE,EAC/C,QAAQ,EAAE,QAAQ,EAClB,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,kBAAkB,EAAE,MAAM,IAAI,CAAC,cAAc,EAAE,EAC/C,iBAAiB,EAAE,MAAM,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GACrC,CACZ,IACJ,SAAS,CACT,CACP,CAAC,CACE,CACO,EAEf,qEAAc,KAAK,EAAC,cAAc,IAChC,mEACE,kEACE,kEACE,mEACE,KAAK,EAAE,WAAW,CAAC,WAAW,EAAE,EAChC,OAAO,EAAE,MAAM,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,EACjD,MAAM,EAAC,OAAO,IAEd,iEAAU,IAAI,EAAC,KAAK,GAAY,EAChC,0EAA0B,CACf,CACL,EACV,kEACE,mEACE,KAAK,EAAE,WAAW,CAAC,WAAW,EAAE,EAChC,OAAO,EAAE,MAAM,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAChD,MAAM,EAAC,OAAO,IAEd,iEAAU,IAAI,EAAC,KAAK,GAAY,EAChC,yEAAyB,CACd,CACL,EACV,kEACE,mEACE,KAAK,EAAE,WAAW,CAAC,WAAW,EAAE,EAChC,OAAO,EAAE,MAAM,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,EACjD,MAAM,EAAC,OAAO,IAEd,iEAAU,IAAI,EAAC,KAAK,GAAY,EAChC,0EAA0B,CACf,CACL,CACF,CACD,EACX,mEACE,iFAAwC,EACvC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,MAC1C,gBACE,MAAM,QACN,MAAM,EAAE,IAAI,EACZ,OAAO,EAAE,MACP,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,SAAS,CAAC,IAG/C,qBACG,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,kBAAkB,EAAE,CACpC,CACH,CACZ,CAAC,EACF,gFAAuC,EACtC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,SAAS,MACzC,gBACE,MAAM,QACN,MAAM,EAAE,IAAI,EACZ,OAAO,EAAE,MACP,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,SAAS,CAAC,IAG/C,qBACG,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,kBAAkB,EAAE,CACpC,CACH,CACZ,CAAC,EACF,iFAAwC,EACvC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,MAC1C,oBACE,qBACG,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,kBAAkB,EAAE,CACpC,CACH,CACZ,CAAC,CACO,CACE,CACA,CACA,CACP,EACd,yEACE,KAAK,EAAE,WAAW,CAAC,WAAW,EAAE,EAChC,WAAW,EAAE,CAAC,IAAI,CAAC,aAAa,EAChC,YAAY,EAAE,MAAM,IAAI,CAAC,MAAM,EAAE,EACjC,UAAU,EAAE,MAAM,IAAI,CAAC,IAAI,EAAE,GAC7B,CACG,EACP;KACH;;;;;;;","names":["isNumber","isString","cloneDeep"],"sources":["src/components/trasteel/modals/modal-customer-update/modal-customer-update.scss?tag=modal-customer-update","src/components/trasteel/modals/modal-customer-update/modal-customer-update.tsx"],"sourcesContent":["modal-customer-update {\n  ion-list {\n    width: 100%;\n  }\n}\n","import {Component, h, Host, Prop, State, Element} from \"@stencil/core\";\nimport {modalController, popoverController} from \"@ionic/core\";\nimport {Subscription} from \"rxjs\";\nimport Swiper from \"swiper\";\nimport {\n  Customer,\n  CustomerGroup,\n} from \"../../../../interfaces/trasteel/customer/customer\";\nimport {UserProfile} from \"../../../../interfaces/common/user/user-profile\";\nimport {UserService} from \"../../../../services/common/user\";\nimport {TranslationService} from \"../../../../services/common/translations\";\nimport {\n  CUSTOMERSCOLLECTION,\n  CustomersService,\n} from \"../../../../services/trasteel/crm/customers\";\nimport {\n  CustomerConditionCCM,\n  CustomerConditionEAF,\n  CustomerConditionLF,\n  CustomerLocation,\n} from \"../../../../interfaces/trasteel/customer/customerLocation\";\nimport {Environment} from \"../../../../global/env\";\nimport {SystemService} from \"../../../../services/common/system\";\nimport {RouterService} from \"../../../../services/common/router\";\nimport {cloneDeep, isNumber, isString} from \"lodash\";\n\n@Component({\n  tag: \"modal-customer-update\",\n  styleUrl: \"modal-customer-update.scss\",\n})\nexport class ModalCustomerUpdate {\n  @Element() el: HTMLElement;\n  @Prop() customerId: string = undefined;\n  @State() customer: Customer;\n  @State() updateView = true;\n  @State() validCustomer = false;\n  @State() locationTypeSegment: any = \"add\";\n  saveNewOwner = false;\n  titles = [\n    {tag: \"information\", text: \"Information\", disabled: false},\n    {tag: \"locations\", text: \"Locations\", disabled: false},\n    {\n      tag: \"operating-conditions\",\n      text: \"Operating Conditions\",\n      disabled: false,\n    },\n  ];\n  @State() slider: Swiper;\n  userProfile: UserProfile;\n  userProfileSub$: Subscription;\n\n  async componentWillLoad() {\n    this.userProfileSub$ = UserService.userProfile$.subscribe(\n      (userProfile: UserProfile) => {\n        this.userProfile = new UserProfile(userProfile);\n      }\n    );\n    await this.loadCustomer();\n  }\n\n  async loadCustomer() {\n    if (this.customerId) {\n      const res = await CustomersService.getCustomer(this.customerId);\n      this.customer = res;\n      if (this.customer.locations.length > 0) this.locationTypeSegment = 0;\n    } else {\n      this.customer = new Customer();\n      this.customer.users = {\n        [UserService.userRoles.uid]: [\"owner\"],\n      };\n    }\n  }\n\n  async componentDidLoad() {\n    this.slider = new Swiper(\".slider-edit-customer\", {\n      speed: 400,\n      spaceBetween: 100,\n      allowTouchMove: false,\n      autoHeight: true,\n    });\n    this.setTypesSelect();\n    this.validateCustomer();\n  }\n\n  disconnectedCallback() {\n    this.userProfileSub$.unsubscribe();\n  }\n\n  handleChange(ev) {\n    this.customer[ev.detail.name] = ev.detail.value;\n    this.validateCustomer();\n  }\n\n  handleInformationChange() {\n    this.validateCustomer();\n  }\n\n  updateParam() {\n    this.validateCustomer();\n  }\n\n  updateImageUrls(ev) {\n    const imageType = ev.detail.type;\n    const url = ev.detail.url;\n    if (imageType == \"photo\") {\n      this.customer.photoURL = url;\n    } else {\n      this.customer.coverURL = url;\n    }\n    this.save(false);\n  }\n\n  validateCustomer() {\n    let checkLocations = true;\n    this.customer.locations.forEach((location) => {\n      if (location && location.position)\n        checkLocations =\n          checkLocations &&\n          isNumber(location.position.geopoint.latitude) &&\n          isNumber(location.position.geopoint.longitude);\n    });\n    this.validCustomer =\n      checkLocations &&\n      isString(this.customer.fullName) &&\n      this.customer.typeId != null;\n  }\n\n  addLocation() {\n    this.customer.locations.push(new CustomerLocation());\n    this.locationTypeSegment = this.customer.locations.length - 1;\n    this.updateSlider();\n  }\n\n  updateLocation() {\n    this.updateSlider();\n  }\n\n  deleteLocation(index) {\n    this.customer.locations.splice(index, 1);\n    this.updateSlider();\n  }\n\n  setTypesSelect() {\n    const selectLocationElement: HTMLIonSelectElement =\n      this.el.querySelector(\"#selectType\");\n    const customPopoverOptions = {\n      header: TranslationService.getTransl(\"customer_type\", \"Customer Type\"),\n    };\n    selectLocationElement.interfaceOptions = customPopoverOptions;\n    //remove previously defined options\n    const selectLocationOptions = Array.from(\n      selectLocationElement.getElementsByTagName(\"ion-select-option\")\n    );\n    selectLocationOptions.map((option) => {\n      selectLocationElement.removeChild(option);\n    });\n    selectLocationElement.placeholder = TranslationService.getTransl(\n      \"select\",\n      \"Select\"\n    );\n    CustomersService.getCustomerTypes().map((type) => {\n      const selectOption = document.createElement(\"ion-select-option\");\n      selectOption.value = type.typeId;\n      selectOption.textContent = TranslationService.getTransl(\n        type.typeId,\n        type.typeName\n      );\n      selectLocationElement.appendChild(selectOption);\n    });\n  }\n\n  selectType(ev) {\n    this.customer.typeId = ev.detail.value;\n    this.validateCustomer();\n  }\n\n  locationTypeSegmentChanged(ev) {\n    if (ev.detail.value !== \"add\") {\n      this.locationTypeSegment = ev.detail.value;\n      this.updateView = !this.updateView;\n      this.updateSlider();\n    }\n  }\n\n  selectOwner(ev) {\n    this.customer.owner = ev.detail.value;\n    this.validateCustomer();\n  }\n\n  selectGroupOwner(ev, index) {\n    this.customer.group[index] = ev.detail.value;\n    this.validateCustomer();\n  }\n\n  async editOwner(group?: boolean, index?: number, del?: boolean) {\n    let owner = new CustomerGroup();\n    if (group) {\n      if (index >= 0) {\n        owner = this.customer.group[index];\n        if (del) {\n          this.customer.group.splice(index, 1);\n        }\n      }\n    } else {\n      owner = this.customer.owner;\n    }\n    if (!del) {\n      //create edit popover\n      const popover = await popoverController.create({\n        component: \"popover-edit-customer-owner\",\n        translucent: true,\n        componentProps: {\n          owner: owner,\n          group: group,\n        },\n      });\n\n      popover.onDidDismiss().then(async (ev) => {\n        const res = ev.data;\n        if (res) {\n          if (group) {\n            if (index >= 0) {\n              this.customer.group[index] = res.owner;\n            } else {\n              this.customer.group.push(res.owner);\n            }\n          } else {\n            this.customer.owner = res.owner;\n          }\n          this.saveNewOwner = res.new;\n          this.updateSlider();\n        }\n      });\n      popover.present();\n    }\n    this.updateSlider();\n  }\n\n  updateSlider() {\n    this.updateView = !this.updateView;\n    //wait for view to update and then reset slider height\n    setTimeout(() => {\n      this.slider ? this.slider.update() : undefined;\n    }, 100);\n  }\n\n  async editOperatingCondition(\n    condition: \"EAF\" | \"LF\" | \"CCM\",\n    conditionData?:\n      | CustomerConditionEAF\n      | CustomerConditionLF\n      | CustomerConditionCCM\n  ) {\n    const modal = await RouterService.openModal(\n      \"modal-operating-conditions-questionnaire\",\n      {\n        condition,\n        conditionData: cloneDeep(conditionData),\n        editable: true,\n      }\n    );\n    modal.onDidDismiss().then((result) => {\n      result = result.data;\n      if (result && conditionData) {\n        if (condition == \"EAF\")\n          conditionData = new CustomerConditionEAF(result);\n        else if (condition == \"LF\")\n          conditionData = new CustomerConditionLF(result);\n        else if (condition == \"CCM\")\n          conditionData = new CustomerConditionCCM(result);\n        this.updateSlider();\n      } else if (result) {\n        if (condition == \"EAF\")\n          this.customer.conditions.EAF.push(new CustomerConditionEAF(result));\n        else if (condition == \"LF\")\n          this.customer.conditions.LF.push(new CustomerConditionLF(result));\n        else if (condition == \"CCM\")\n          this.customer.conditions.CCM.push(new CustomerConditionCCM(result));\n        this.updateSlider();\n      }\n    });\n  }\n\n  async deleteCustomer() {\n    try {\n      await CustomersService.deleteCustomer(this.customerId);\n      modalController.dismiss();\n    } catch (error) {\n      if (error) SystemService.presentAlertError(error);\n    }\n  }\n\n  async save(dismiss = true) {\n    const doc = await CustomersService.updateCustomer(\n      this.customerId,\n      this.customer,\n      this.userProfile.uid\n    );\n    if (this.customerId) {\n      return dismiss ? modalController.dismiss() : true;\n    } else {\n      this.customerId = doc.id;\n      return true;\n    }\n  }\n\n  async cancel() {\n    modalController.dismiss();\n  }\n\n  render() {\n    return (\n      <Host>\n        <ion-header>\n          <app-upload-cover\n            item={{\n              collection: CUSTOMERSCOLLECTION,\n              id: this.customerId,\n              photoURL: this.customer.photoURL,\n              coverURL: this.customer.coverURL,\n            }}\n            onCoverUploaded={(ev) => this.updateImageUrls(ev)}\n          ></app-upload-cover>\n        </ion-header>\n        <app-header-segment-toolbar\n          color={Environment.getAppColor()}\n          swiper={this.slider}\n          titles={this.titles}\n        ></app-header-segment-toolbar>\n        <ion-content class=\"slides\">\n          <swiper-container class=\"slider-edit-customer swiper\">\n            <swiper-wrapper class=\"swiper-wrapper\">\n              <swiper-slide class=\"swiper-slide\">\n                <ion-list class=\"ion-no-padding\">\n                  <ion-item lines=\"none\">\n                    <ion-select\n                      color=\"trasteel\"\n                      id=\"selectType\"\n                      interface=\"action-sheet\"\n                      label={TranslationService.getTransl(\n                        \"customer_type\",\n                        \"Customer Type\"\n                      )}\n                      label-placement=\"floating\"\n                      onIonChange={(ev) => this.selectType(ev)}\n                      value={\n                        this.customer && this.customer.typeId\n                          ? this.customer.typeId\n                          : null\n                      }\n                    ></ion-select>\n                  </ion-item>\n                  <app-form-item\n                    label-tag=\"name\"\n                    label-text=\"Name\"\n                    value={this.customer.fullName}\n                    name=\"fullName\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-tag=\"local_name\"\n                    label-text=\"Local Name\"\n                    value={this.customer.fullNameOther}\n                    name=\"fullNameOther\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <app-form-item\n                    labelTag=\"other_name\"\n                    labelText=\"Other Name\"\n                    value={this.customer.otherPlantName}\n                    name=\"otherPlantName\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <app-form-item\n                    labelTag=\"other_name\"\n                    labelText=\"Other Local Name\"\n                    value={this.customer.otherPlantNameOther}\n                    name=\"otherPlantNameOther\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <app-form-item\n                    labelTag=\"short_name\"\n                    labelText=\"Short Name\"\n                    value={this.customer.shortName}\n                    name=\"shortName\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  {this.customer.group.length == 0 ? (\n                    <ion-item lines=\"none\">\n                      <ion-label>\n                        <h2>\n                          <my-transl\n                            tag={\"add_customer_group\"}\n                            text={\"Add Customer Group\"}\n                          ></my-transl>\n                        </h2>\n                      </ion-label>\n                      <ion-button\n                        onClick={() => this.editOwner(true)}\n                        slot=\"end\"\n                      >\n                        +\n                      </ion-button>\n                    </ion-item>\n                  ) : undefined}\n                  {this.customer.group.map((group, index) => (\n                    <ion-item lines=\"none\">\n                      <ion-label>\n                        {index == 0 ? (\n                          <ion-note>\n                            <my-transl\n                              tag={\"customer_group\"}\n                              text={\"Customer Group\"}\n                            ></my-transl>\n                          </ion-note>\n                        ) : undefined}\n                        <h2>\n                          {group.groupName +\n                            \" [\" +\n                            group.groupOwnershipPerc +\n                            \"%]\"}\n                        </h2>\n                      </ion-label>\n                      {index == this.customer.group.length - 1 ? (\n                        <ion-button\n                          onClick={() => this.editOwner(true)}\n                          slot=\"end\"\n                        >\n                          +\n                        </ion-button>\n                      ) : undefined}\n                      <ion-button\n                        slot=\"end\"\n                        icon-only\n                        color=\"danger\"\n                        fill=\"clear\"\n                        onClick={() => {\n                          this.editOwner(true, index, true);\n                        }}\n                      >\n                        <ion-icon name=\"trash\"></ion-icon>\n                      </ion-button>\n                      <ion-button\n                        slot=\"end\"\n                        icon-only\n                        fill=\"clear\"\n                        onClick={() => {\n                          this.editOwner(true, index);\n                        }}\n                      >\n                        <ion-icon name=\"create\"></ion-icon>\n                      </ion-button>\n                    </ion-item>\n                  ))}\n                  <ion-item lines=\"none\">\n                    <ion-label>\n                      <ion-note>\n                        <my-transl\n                          tag={\"customer_owner\"}\n                          text={\"Customer Owner\"}\n                        ></my-transl>\n                      </ion-note>\n                      <h2>{this.customer.owner.groupName}</h2>\n                    </ion-label>\n                    <ion-button\n                      slot=\"end\"\n                      icon-only\n                      fill=\"clear\"\n                      onClick={() => {\n                        this.editOwner(false);\n                      }}\n                    >\n                      <ion-icon name=\"create\"></ion-icon>\n                    </ion-button>\n                  </ion-item>\n                  <app-customer-plant-production\n                    customer={this.customer}\n                    editable={true}\n                  ></app-customer-plant-production>\n                </ion-list>\n                {this.customerId ? (\n                  <ion-footer class=\"ion-no-border\">\n                    <ion-toolbar>\n                      <ion-button\n                        expand=\"block\"\n                        fill=\"outline\"\n                        color=\"danger\"\n                        onClick={() => this.deleteCustomer()}\n                      >\n                        <ion-icon slot=\"start\" name=\"trash\"></ion-icon>\n                        <my-transl\n                          tag=\"delete\"\n                          text=\"Delete\"\n                          isLabel\n                        ></my-transl>\n                      </ion-button>\n                    </ion-toolbar>\n                  </ion-footer>\n                ) : undefined}\n              </swiper-slide>\n              <swiper-slide class=\"swiper-slide\">\n                <div>\n                  <ion-toolbar>\n                    <ion-segment\n                      mode=\"ios\"\n                      scrollable\n                      onIonChange={(ev) => this.locationTypeSegmentChanged(ev)}\n                      value={this.locationTypeSegment}\n                    >\n                      {this.customer.locations.map((location, index) => (\n                        <ion-segment-button value={index} layout=\"icon-start\">\n                          <ion-label>\n                            {\n                              CustomersService.getLocationsTypes(\n                                location.type\n                              )[0].locationName\n                            }\n                          </ion-label>\n                        </ion-segment-button>\n                      ))}\n                      <ion-segment-button\n                        value=\"add\"\n                        onClick={() => this.addLocation()}\n                        layout=\"icon-start\"\n                      >\n                        <ion-label>+</ion-label>\n                      </ion-segment-button>\n                    </ion-segment>\n                  </ion-toolbar>\n                  {this.customer.locations.map((location, index) => (\n                    <div>\n                      {this.locationTypeSegment == index ? (\n                        <div>\n                          <app-location\n                            locations={CustomersService.getLocationsTypes()}\n                            location={location}\n                            slider={this.slider}\n                            onLocationSelected={() => this.updateLocation()}\n                            onLocationDeleted={() => this.deleteLocation(index)}\n                          ></app-location>\n                        </div>\n                      ) : undefined}\n                    </div>\n                  ))}\n                </div>\n              </swiper-slide>\n              {/** operating conditions */}\n              <swiper-slide class=\"swiper-slide\">\n                <ion-grid>\n                  <ion-row>\n                    <ion-col>\n                      <ion-button\n                        color={Environment.getAppColor()}\n                        onClick={() => this.editOperatingCondition(\"EAF\")}\n                        expand=\"block\"\n                      >\n                        <ion-icon name=\"add\"></ion-icon>\n                        <ion-label>EAF</ion-label>\n                      </ion-button>\n                    </ion-col>\n                    <ion-col>\n                      <ion-button\n                        color={Environment.getAppColor()}\n                        onClick={() => this.editOperatingCondition(\"LF\")}\n                        expand=\"block\"\n                      >\n                        <ion-icon name=\"add\"></ion-icon>\n                        <ion-label>LF</ion-label>\n                      </ion-button>\n                    </ion-col>\n                    <ion-col>\n                      <ion-button\n                        color={Environment.getAppColor()}\n                        onClick={() => this.editOperatingCondition(\"CCM\")}\n                        expand=\"block\"\n                      >\n                        <ion-icon name=\"add\"></ion-icon>\n                        <ion-label>CCM</ion-label>\n                      </ion-button>\n                    </ion-col>\n                  </ion-row>\n                </ion-grid>\n                <ion-list>\n                  <ion-item-divider>EAF</ion-item-divider>\n                  {this.customer.conditions.EAF.map((condition) => (\n                    <ion-item\n                      button\n                      detail={true}\n                      onClick={() =>\n                        this.editOperatingCondition(\"EAF\", condition)\n                      }\n                    >\n                      <ion-label>\n                        {new Date(condition.date).toLocaleDateString()}\n                      </ion-label>\n                    </ion-item>\n                  ))}\n                  <ion-item-divider>LF</ion-item-divider>\n                  {this.customer.conditions.LF.map((condition) => (\n                    <ion-item\n                      button\n                      detail={true}\n                      onClick={() =>\n                        this.editOperatingCondition(\"EAF\", condition)\n                      }\n                    >\n                      <ion-label>\n                        {new Date(condition.date).toLocaleDateString()}\n                      </ion-label>\n                    </ion-item>\n                  ))}\n                  <ion-item-divider>CCM</ion-item-divider>\n                  {this.customer.conditions.CCM.map((condition) => (\n                    <ion-item>\n                      <ion-label>\n                        {new Date(condition.date).toLocaleDateString()}\n                      </ion-label>\n                    </ion-item>\n                  ))}\n                </ion-list>\n              </swiper-slide>\n            </swiper-wrapper>\n          </swiper-container>\n        </ion-content>\n        <app-modal-footer\n          color={Environment.getAppColor()}\n          disableSave={!this.validCustomer}\n          onCancelEmit={() => this.cancel()}\n          onSaveEmit={() => this.save()}\n        />\n      </Host>\n    );\n  }\n}\n"],"version":3}