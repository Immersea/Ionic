{"file":"app-image-cache.entry.esm.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,gBAAgB,GAAG,+ZAA+Z;;MCO3a,aAAa;;;QAKxB,oBAAe,GAAG,KAAK,CAAC;;+BAHE,IAAI;mCACA,IAAI;oBACH,IAAI;;IAGnC,MAAM,MAAM;QACV,IAAI,IAAI,CAAC,GAAG;YACV,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,iBAAiB,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC;KACzE;IACD,iBAAiB;QACf,IAAI,CAAC,MAAM,EAAE,CAAC;KACf;IAED,MAAM;QACJ,QACE,EAAC,IAAI,uDACF,IAAI,CAAC,eAAe,IACnB,IAAI,CAAC,IAAI,IACP,WACE,KAAK,EACH,8BAA8B;iBAC7B,IAAI,CAAC,mBAAmB,GAAG,YAAY,GAAG,eAAe,CAAC,EAE7D,KAAK,EAAE,EAAE,eAAe,EAAE,MAAM,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,EAAE,GAC/C,KAEP,yBACE,KAAK,EAAC,kBAAkB,EACxB,QAAQ,SACW,CACtB,IACC,IAAI,CAAC,IAAI,IACX,WAAK,KAAK,EAAC,YAAY,EAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAI,KAErD,yBACE,QAAQ,QACR,KAAK,EAAC,kBAAkB,GACL,CACtB,CACI,EACP;KACH;;;;;;;;;","names":[],"sources":["src/components/common/app/common/app-image-cache/app-image-cache.scss?tag=app-image-cache","src/components/common/app/common/app-image-cache/app-image-cache.tsx"],"sourcesContent":["app-image-cache {\n  transform: inherit;\n  /* Component styles go here */\n  .cover-main {\n    transform: inherit;\n    position: relative;\n    background-color: var(--ion-color-tint);\n    background-position: center;\n    background-repeat: no-repeat;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  }\n\n  .cover-contain {\n    background-size: contain;\n  }\n\n  .cover-fill {\n    background-size: cover;\n  }\n\n  .cover-dimensions {\n    height: 100%;\n    width: 100%;\n    margin: \"auto\";\n  }\n}\n","import { Component, h, Prop, State, Host, Watch } from \"@stencil/core\";\nimport { FileSystemService } from \"../../../../../services/common/fileSystem\";\n\n@Component({\n  tag: \"app-image-cache\",\n  styleUrl: \"app-image-cache.scss\",\n})\nexport class AppImageCache {\n  @Prop({ mutable: true }) url: string;\n  @Prop() backgroundCover = true;\n  @Prop() backgroundCoverFill = true;\n  @State() _src: string | Blob = null;\n  resetImageCache = false;\n  @Watch(\"url\")\n  async update() {\n    if (this.url)\n      this._src = (await FileSystemService.storeAndLoadImage(this.url)).src;\n  }\n  componentWillLoad() {\n    this.update();\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.backgroundCover ? (\n          this._src ? (\n            <div\n              class={\n                \"cover-main cover-dimensions \" +\n                (this.backgroundCoverFill ? \"cover-fill\" : \"cover-contain\")\n              }\n              style={{ backgroundImage: \"url(\" + this._src + \")\" }}\n            ></div>\n          ) : (\n            <ion-skeleton-text\n              class='cover-dimensions'\n              animated\n            ></ion-skeleton-text>\n          )\n        ) : this._src ? (\n          <img class='cover-main' src={this._src.toString()} />\n        ) : (\n          <ion-skeleton-text\n            animated\n            class='cover-dimensions'\n          ></ion-skeleton-text>\n        )}\n      </Host>\n    );\n  }\n}\n"],"version":3}