{"file":"app-decoplanner-profile.entry.esm.js","mappings":"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","names":["toString","toNumber","round"],"sources":["src/components/udive/app/decoplanner/app-decoplanner-profile/app-decoplanner-profile.scss?tag=app-decoplanner-profile","src/components/udive/app/decoplanner/app-decoplanner-profile/app-decoplanner-profile.tsx"],"sourcesContent":["app-decoplanner-profile {\n  width: 100%;\n\n  .accordion {\n    position: relative;\n    height: auto;\n    padding: 0px;\n  }\n}\n","import {\n  Component,\n  h,\n  Prop,\n  State,\n  Event,\n  EventEmitter,\n  Watch,\n} from \"@stencil/core\";\nimport {DecoplannerDive} from \"../../../../../interfaces/udive/planner/decoplanner-dive\";\nimport {DivePlan} from \"../../../../../services/udive/planner/dive-plan\";\n//import { Config } from '../../../../providers/config';\n//import { DataBase } from '../../../../providers/database';\nimport {DecoplannerParameters} from \"../../../../../interfaces/udive/planner/decoplanner-parameters\";\nimport {GasBlenderService} from \"../../../../../services/udive/planner/gas-blender\";\nimport {TranslationService} from \"../../../../../services/common/translations\";\nimport {UserService} from \"../../../../../services/common/user\";\nimport {SystemService} from \"../../../../../services/common/system\";\nimport {round, toNumber, toString} from \"lodash\";\nimport {Environment} from \"../../../../../global/env\";\n//import { GoogleSheetProvider } from '../../../../providers/google-sheet';\n//import { GoogleSheet } from '../../../../models/google/google-sheet'\n//import { GoogleSpreadSheet } from '../../../../models/google/google-spreadsheet'\n//import { LicenceCheckProvider } from '../../../../providers/licence-check';\n//import { GasBlenderService } from \"../../../../services/planner/gas-blender\";\n\n//const SHEETTITLE = \"DecoPlanner\";\n\n@Component({\n  tag: \"app-decoplanner-profile\",\n  styleUrl: \"app-decoplanner-profile.scss\",\n})\nexport class AppDecoplannerProfile {\n  @Event() runTableCalculations: EventEmitter;\n\n  @Prop() diveDataToShare: any;\n  @State() selectedModelView: string = \"BUHL\";\n  @State() selectedCCRSegmentView: string;\n  @State() updateView = true;\n  @State() showCCRRange: any;\n  @State() selectedCCRView: any;\n\n  @Watch(\"diveDataToShare\")\n  updateDiveDataToShare() {\n    this.updateViewParams();\n  }\n\n  showRange = {\n    VPM: {},\n    BUHL: {},\n    CCR: {\n      BUHL: {},\n      VPM: {},\n    },\n  };\n  dives: Array<DecoplannerDive>;\n  dive: DecoplannerDive = new DecoplannerDive();\n  dive_less_time: DecoplannerDive = new DecoplannerDive();\n  dive_more_time: DecoplannerDive = new DecoplannerDive();\n  dive_less_depth: DecoplannerDive = new DecoplannerDive();\n  dive_more_depth: DecoplannerDive = new DecoplannerDive();\n  index: number;\n  divePlan: DivePlan;\n\n  parameters: DecoplannerParameters;\n  //userSpreadSheet: GoogleSpreadSheet;\n  //decoplannerSheet: GoogleSheet;\n  selectedChartModel = \"BUHL\";\n  selectedCCRChart = \"CCR\";\n  tissueData: any;\n  actualConfiguration: string;\n\n  editPlan = true;\n\n  componentWillLoad() {\n    this.updateViewParams();\n  }\n\n  async runTablesCalc(selectedModelView) {\n    if (selectedModelView == \"tables\" && this.editPlan) {\n      //update table calculations\n      await SystemService.presentLoading(\"calculating\");\n      this.divePlan.runCalculationsForTables();\n      this.dive_less_time = this.divePlan.dives_less_time[this.index];\n      this.dive_more_time = this.divePlan.dives_more_time[this.index];\n      this.dive_less_depth = this.divePlan.dives_less_depth[this.index];\n      this.dive_more_depth = this.divePlan.dives_more_depth[this.index];\n      SystemService.dismissLoading();\n      this.updateView = !this.updateView;\n    }\n  }\n\n  updateViewParams() {\n    const params = this.diveDataToShare;\n    this.editPlan = params.editPlan == false ? false : true;\n    this.divePlan = params.divePlan;\n    this.index = params.index;\n    this.dives = this.divePlan.dives;\n    this.dive = this.divePlan.dives[this.index];\n    this.parameters = this.divePlan.configuration.parameters;\n    this.selectedCCRChart = this.parameters.configuration;\n    this.selectedCCRSegmentView = this.parameters.configuration;\n    this.setRanges();\n    this.switchCCRView();\n    this.selectedModelView = \"BUHL\";\n  }\n\n  updateTables() {\n    this.runTablesCalc(\"tables\");\n  }\n\n  async checkLicence() {\n    if (\n      this.selectedModelView == \"tables\" &&\n      !(await UserService.checkLicence(this.selectedModelView))\n    ) {\n      setTimeout(() => {\n        this.selectedModelView = \"BUHL\";\n      }, 2000);\n    }\n  }\n\n  /*\n   * export to google sheets\n   \n  saveDecoPlannerSheet() {\n    //trigger check licence in tabs\n    if (this.licence.check(\"tables\",true)) {\n      let actionSheet = this.actionSheetCtrl.create({\n        title: 'Export data',\n        buttons: [\n            {\n                text: 'Dive Profile & Tables',\n                handler: () => {\n                    this.saveToGoogle(false);\n                }\n            },{\n                text: 'Complete Model data ('+this.selectedModelView+'-'+this.selectedCCRSegmentView+')',\n                handler: () => {\n                    this.saveToGoogle(true);\n                }\n            },{\n                text: 'Cancel',\n                role: 'cancel',\n                handler: () => {\n                    \n                }\n            }\n        ]\n      });\n      actionSheet.present();\n    }\n   \n  }*/\n  /*\n  private saveToGoogle(model:boolean) {\n    \n    let loading = this.loadingCtrl.create({\n        content: this.translate.instant(\"Uploading\")+' '+this.selectedModelView+'-'+this.selectedCCRSegmentView+' '+this.translate.instant(\"data to Google Spreadsheets. Please wait\")\n    });\n    loading.present();\n    //create new sheet\n    this.googleSheet.isAvailable.subscribe(()=>{\n        this.googleSheet.getUserSheet().then((spreadsheet)=>{\n                this.userSpreadSheet = spreadsheet;\n                let title = this.translate.instant(\"Dive Profiles\")\n                if (model) {\n                    title = this.selectedModelView +'-'+this.selectedCCRSegmentView\n                }\n                let sheetProperties = new GoogleSheet({properties:{\n                    title:SHEETTITLE + \"-\" + title,\n                    gridProperties: {\n                        frozenRowCount: 1,\n                        frozenColumnCount: model ? 5 : 0\n                    }\n                }})\n                this.googleSheet.getSheet(spreadsheet,sheetProperties).then((sheet)=>{\n                    //clean sheet values \n                    this.decoplannerSheet = sheet;\n                    this.googleSheet.resetValues(this.userSpreadSheet,this.decoplannerSheet).then(res=>{\n                        this.selectedChartModel = this.selectedModelView;\n                        this.selectedCCRChart = this.selectedCCRSegmentView;\n                        let oc = this.getTissueData();\n                        let data\n                        if (model) {\n                            data = this.divePlan.getCompartmentsChartsData(this.tissueData,oc,this.index);\n                        } else {\n                            data = this.divePlan.getDecoProfileData(this.index)\n                        }\n                        this.googleSheet.updateValues(this.userSpreadSheet,this.decoplannerSheet,data).then(res=>{\n                            loading.dismiss();\n                            let link = this.userSpreadSheet.spreadsheetUrl;\n                            let confirm = this.alertCtrl.create({\n                                title: this.translate.instant('Google Spreadsheet created!'),\n                                message: this.translate.instant(\"All data has been exported to your personal Google Spreadsheet at the following link\")+' <br><a href=\"'+link+'\" target=\"_blank\">'+link+'</a>',\n                                buttons: [\n                                {\n                                    text: this.translate.instant('OK'),\n                                    handler: () => {\n                                    }\n                                }]\n                            });\n                            confirm.present();\n                        }, err=>{loading.dismiss();console.log(\"Error\",err)})\n                    }, err=>{loading.dismiss();console.log(\"Error\",err)})\n                }, err=>{loading.dismiss();console.log(\"Error\",err)})\n            }, err=> {loading.dismiss();console.log(\"Error\",err)})   \n        }, err=>{\n        //not available - request token\n        this.googleSheet.getToken();\n        loading.dismiss()\n        let confirm = this.alertCtrl.create({\n          title: this.translate.instant('Google Spreadsheet error!'),\n          message: this.translate.instant(\"There was a problem in the uploading. Please try again later!\"),\n          buttons: [\n          {\n              text: this.translate.instant('OK'),\n              handler: () => {\n              }\n          }]\n        });\n        confirm.present();\n\n    })\n  }*/\n\n  /*\n   * range setup for accordion lists\n   */\n  setRanges() {\n    if (this.dive && this.dive.profilePoints.length > 0) {\n      //update visualisation of charts\n      if (\n        !this.actualConfiguration ||\n        this.actualConfiguration != this.parameters.configuration\n      ) {\n        //update configuration and chart views\n        this.selectedCCRChart = this.parameters.configuration;\n        this.selectedCCRSegmentView = this.parameters.configuration;\n        this.actualConfiguration = this.parameters.configuration;\n        this.switchCCRView();\n      }\n      //update ranges\n      if (\n        this.dive &&\n        this.dive.VPM &&\n        this.dive.VPM.rangeSums &&\n        this.dive.BUHL.rangeSums\n      ) {\n        this.showRange = {\n          VPM: {},\n          BUHL: {},\n          CCR: {\n            BUHL: {},\n            VPM: {},\n          },\n        };\n        const show = true;\n        for (var depth in this.dive.VPM.rangeSums) {\n          this.showRange.VPM[depth] = show;\n        }\n\n        for (var depth in this.dive.BUHL.rangeSums) {\n          this.showRange.BUHL[depth] = show;\n        }\n        if (this.dive.CCR) {\n          for (var depth in this.dive.CCR.VPM.rangeSums) {\n            this.showRange.CCR.VPM[depth] = show;\n          }\n          for (var depth in this.dive.CCR.BUHL.rangeSums) {\n            this.showRange.CCR.BUHL[depth] = show;\n          }\n        }\n      }\n      this.switchCCRView();\n    }\n  }\n\n  toggleRange(model, range, ccr) {\n    if (ccr != \"OC\") {\n      this.showRange.CCR[model][range] = !this.showRange.CCR[model][range];\n    } else {\n      this.showRange[model][range] = !this.showRange[model][range];\n    }\n    this.switchCCRView();\n  }\n\n  isRangeShown(model, depth, stage) {\n    let show = true;\n    if (stage == \"ascent\") {\n      for (let rangeDepth in this.showCCRRange[model]) {\n        if (depth <= parseInt(rangeDepth)) {\n          show = this.showCCRRange[model][rangeDepth];\n          break;\n        }\n      }\n    }\n\n    return show;\n  }\n\n  /*private getTissueData() {\n    let tissuesBUHL, tissuesVPM, oc = true;\n    if (this.selectedCCRChart == \"CCR\" || this.selectedCCRChart == \"pSCR\") {\n        //create CCR model from tissues\n        //tissuesVPM = this.divePlan.createTissuesFromProfile(this.dive.CCR.VPM.profile,false)\n        oc = false;\n    } else {\n        //create CCR model from tissues \n        //tissuesVPM = this.divePlan.createTissuesFromProfile(this.dive.VPM.profile,true)\n        oc = true;\n    }\n    tissuesVPM = this.divePlan.createVPMTissuesFromDives();\n    tissuesBUHL = this.divePlan.BUHL.tissues\n    this.tissueData = this.selectedChartModel == \"BUHL\" ? tissuesBUHL : tissuesVPM\n    return oc\n  }*/\n\n  switchCCRView(ev?) {\n    if (ev) this.selectedCCRSegmentView = ev.detail.value;\n    if (this.selectedCCRSegmentView == \"OC\") {\n      this.selectedCCRView = this.dive;\n      this.showCCRRange = this.showRange;\n    } else {\n      this.selectedCCRView = this.dive.CCR;\n      this.showCCRRange = this.showRange.CCR;\n    }\n    this.updateView = !this.updateView;\n  }\n\n  updateSelectedModel(ev) {\n    this.dive.selectedModel = ev.detail.value;\n    this.dive_less_time.selectedModel = this.dive.selectedModel;\n    this.dive_more_time.selectedModel = this.dive.selectedModel;\n    this.dive_less_depth.selectedModel = this.dive.selectedModel;\n    this.dive_more_depth.selectedModel = this.dive.selectedModel;\n    this.updateView = !this.updateView;\n  }\n\n  segmentChanged(ev) {\n    if (ev.detail.value) {\n      this.selectedModelView = ev.detail.value;\n      //this.checkLicence(this.selectedModelView);\n      this.runTablesCalc(this.selectedModelView);\n    }\n    this.updateView = !this.updateView;\n  }\n\n  rangeSegmentChanged(ev, depth) {\n    if (ev.detail.value) {\n      this.selectedCCRView[this.selectedModelView].rangeShape[depth] =\n        ev.detail.value;\n      this.divePlan.updateRangeShape(\n        this.selectedModelView,\n        depth,\n        this.selectedCCRView[this.selectedModelView].rangeShape[depth],\n        this.selectedCCRSegmentView != \"OC\"\n      );\n    }\n    this.updateView = !this.updateView;\n  }\n\n  render() {\n    return [\n      <div class=\"slider-container\">\n        <div class=\"slider-scrollable-header\">\n          <ion-segment\n            mode=\"ios\"\n            color={Environment.getAppColor()}\n            onIonChange={(ev) => this.segmentChanged(ev)}\n            value={this.selectedModelView}\n          >\n            <ion-segment-button value=\"BUHL\">\n              <ion-label>BUHL</ion-label>\n            </ion-segment-button>\n            <ion-segment-button value=\"VPM\">\n              <ion-label>VPM</ion-label>\n            </ion-segment-button>\n            {this.editPlan ? (\n              <ion-segment-button value=\"tables\">\n                <ion-label>\n                  {TranslationService.getTransl(\"tables\", \"TABLES\")}\n                </ion-label>\n              </ion-segment-button>\n            ) : undefined}\n          </ion-segment>\n        </div>\n\n        <div class=\"slider-scrollable-container\">\n          {this.selectedModelView == \"tables\" ? (\n            [\n              <ion-row align-items-center>\n                {/* MAIN */}\n                <ion-col size=\"12\" size-sm>\n                  <ion-card>\n                    <ion-card-header>\n                      <ion-segment\n                        onIonChange={(ev) => this.updateSelectedModel(ev)}\n                        mode=\"ios\"\n                        color={Environment.getAppColor()}\n                        value={this.dive.selectedModel}\n                      >\n                        <ion-segment-button value=\"BUHL\">\n                          <ion-label>BUHL</ion-label>\n                        </ion-segment-button>\n                        <ion-segment-button value=\"VPM\">\n                          <ion-label>VPM</ion-label>\n                        </ion-segment-button>\n                      </ion-segment>\n                    </ion-card-header>\n                    <ion-card-content>\n                      <p class=\"ion-text-start ion-padding-start\">\n                        <my-transl tag=\"runtime\" text=\"Runtime\" />:{\" \"}\n                        {this.dive.getRunTime()}\n                      </p>\n                      <p class=\"ion-text-start ion-padding-start\">\n                        <my-transl tag=\"deco-time\" text=\"Deco time\" />:{\" \"}\n                        {this.dive.getDecoTime()}\n                      </p>\n                      {this.dive.getProfilePointsDetails().map((detail) => (\n                        <p class=\"ion-text-start ion-padding-start\">{detail}</p>\n                      ))}\n                      {this.dive.getDecoProfileGroups().map((detail) => (\n                        <p class=\"ion-text-start ion-padding-start\">{detail}</p>\n                      ))}\n                    </ion-card-content>\n                  </ion-card>\n                </ion-col>\n                {/* setup depth */}\n                <ion-col size=\"12\" size-sm>\n                  <ion-card>\n                    <ion-card-content>\n                      <app-form-item\n                        label-tag=\"time-diff\"\n                        label-text=\"Time diff. (min)\"\n                        value={toString(this.divePlan.time_to_add)}\n                        name=\"depth\"\n                        input-type=\"number\"\n                        onFormItemChanged={(ev) =>\n                          (this.divePlan.time_to_add = toNumber(\n                            ev.detail.value\n                          ))\n                        }\n                        onFormItemBlur={() => this.updateTables()}\n                      ></app-form-item>\n                      <app-form-item\n                        label-tag=\"depth-diff\"\n                        label-text={\n                          \"Depth diff. (\" + this.parameters.depthUnit + \")\"\n                        }\n                        value={toString(this.divePlan.depth_to_add)}\n                        name=\"depth\"\n                        input-type=\"number\"\n                        onFormItemChanged={(ev) =>\n                          (this.divePlan.depth_to_add = toNumber(\n                            ev.detail.value\n                          ))\n                        }\n                        onFormItemBlur={() => this.updateTables()}\n                      ></app-form-item>\n                    </ion-card-content>\n                  </ion-card>\n                </ion-col>\n              </ion-row>,\n              <ion-row align-items-center>\n                {/* -5 min */}\n                <ion-col size=\"12\" size-sm>\n                  <ion-card>\n                    <ion-card-header>\n                      -{this.divePlan.time_to_add}min\n                    </ion-card-header>\n                    <ion-card-content>\n                      <ion-note>\n                        -1 min <my-transl tag=\"bottom\" text=\"bottom\" /> ={\" \"}\n                        {round(\n                          (this.dive_less_time.getDecoTime() -\n                            this.dive.getDecoTime()) /\n                            this.divePlan.time_to_add,\n                          1\n                        )}{\" \"}\n                        min deco\n                      </ion-note>\n                      <p class=\"ion-text-start ion-padding-start\">\n                        <my-transl tag=\"runtime\" text=\"Runtime\" />:{\" \"}\n                        {this.dive_less_time.getRunTime()}\n                      </p>\n                      <p class=\"ion-text-start ion-padding-start\">\n                        <my-transl tag=\"decotime\" text=\"Deco time\" />:{\" \"}\n                        {this.dive_less_time.getDecoTime()}\n                      </p>\n                      {this.dive_less_time\n                        .getProfilePointsDetails()\n                        .map((detail) => (\n                          <p class=\"ion-text-start ion-padding-start\">\n                            {detail}\n                          </p>\n                        ))}\n                      {this.dive_less_time\n                        .getDecoProfileGroups()\n                        .map((detail) => (\n                          <p class=\"ion-text-start ion-padding-start\">\n                            {detail}\n                          </p>\n                        ))}\n                    </ion-card-content>\n                  </ion-card>\n                </ion-col>\n                {/* +5 min */}\n                <ion-col size=\"12\" size-sm>\n                  <ion-card>\n                    <ion-card-header>\n                      +{this.divePlan.time_to_add}min\n                    </ion-card-header>\n                    <ion-card-content>\n                      <ion-note>\n                        +1 min <my-transl tag=\"bottom\" text=\"bottom\" /> ={\" +\"}\n                        {round(\n                          (this.dive_more_time.getDecoTime() -\n                            this.dive.getDecoTime()) /\n                            this.divePlan.time_to_add,\n                          1\n                        )}{\" \"}\n                        min deco\n                      </ion-note>\n                      <p class=\"ion-text-start ion-padding-start\">\n                        <my-transl tag=\"runtime\" text=\"Runtime\" />:{\" \"}\n                        {this.dive_more_time.getRunTime()}\n                      </p>\n                      <p class=\"ion-text-start ion-padding-start\">\n                        <my-transl tag=\"decotime\" text=\"Deco time\" />:{\" \"}\n                        {this.dive_more_time.getDecoTime()}\n                      </p>\n                      {this.dive_more_time\n                        .getProfilePointsDetails()\n                        .map((detail) => (\n                          <p class=\"ion-text-start ion-padding-start\">\n                            {detail}\n                          </p>\n                        ))}\n                      {this.dive_more_time\n                        .getDecoProfileGroups()\n                        .map((detail) => (\n                          <p class=\"ion-text-start ion-padding-start\">\n                            {detail}\n                          </p>\n                        ))}\n                    </ion-card-content>\n                  </ion-card>\n                </ion-col>\n              </ion-row>,\n\n              <ion-row align-items-center>\n                {/* -3 mt */}\n                <ion-col size=\"12\" size-sm>\n                  <ion-card>\n                    <ion-card-header>\n                      -{this.divePlan.depth_to_add}\n                      {this.parameters.depthUnit}\n                    </ion-card-header>\n                    <ion-card-content>\n                      <ion-note>\n                        -1 {this.parameters.depthUnit}{\" \"}\n                        <my-transl tag=\"depth\" text=\"depth\" /> ={\" \"}\n                        {round(\n                          (this.dive_less_depth.getDecoTime() -\n                            this.dive.getDecoTime()) /\n                            this.divePlan.depth_to_add,\n                          1\n                        )}{\" \"}\n                        min deco\n                      </ion-note>\n                      <p class=\"ion-text-start ion-padding-start\">\n                        <my-transl tag=\"runtime\" text=\"Runtime\" />:{\" \"}\n                        {this.dive_less_depth.getRunTime()}\n                      </p>\n                      <p class=\"ion-text-start ion-padding-start\">\n                        <my-transl tag=\"decotime\" text=\"Deco time\" />:{\" \"}\n                        {this.dive_less_depth.getDecoTime()}\n                      </p>\n                      {this.dive_less_depth\n                        .getProfilePointsDetails()\n                        .map((detail) => (\n                          <p class=\"ion-text-start ion-padding-start\">\n                            {detail}\n                          </p>\n                        ))}\n                      {this.dive_less_depth\n                        .getDecoProfileGroups()\n                        .map((detail) => (\n                          <p class=\"ion-text-start ion-padding-start\">\n                            {detail}\n                          </p>\n                        ))}\n                    </ion-card-content>\n                  </ion-card>\n                </ion-col>\n                {/* +3 mt */}\n                <ion-col size=\"12\" size-sm>\n                  <ion-card>\n                    <ion-card-header>\n                      +{this.divePlan.depth_to_add}\n                      {this.parameters.depthUnit}\n                    </ion-card-header>\n                    <ion-card-content>\n                      <ion-note>\n                        +1 {this.parameters.depthUnit}{\" \"}\n                        <my-transl tag=\"depth\" text=\"depth\" /> ={\" +\"}\n                        {round(\n                          (this.dive_more_depth.getDecoTime() -\n                            this.dive.getDecoTime()) /\n                            this.divePlan.depth_to_add,\n                          1\n                        )}{\" \"}\n                        min deco\n                      </ion-note>\n                      <p class=\"ion-text-start ion-padding-start\">\n                        <my-transl tag=\"runtime\" text=\"Runtime\" />:{\" \"}\n                        {this.dive_more_depth.getRunTime()}\n                      </p>\n                      <p class=\"ion-text-start ion-padding-start\">\n                        <my-transl tag=\"decotime\" text=\"Deco time\" />:{\" \"}\n                        {this.dive_more_depth.getDecoTime()}\n                      </p>\n                      {this.dive_more_depth\n                        .getProfilePointsDetails()\n                        .map((detail) => (\n                          <p class=\"ion-text-start ion-padding-start\">\n                            {detail}\n                          </p>\n                        ))}\n                      {this.dive_more_depth\n                        .getDecoProfileGroups()\n                        .map((detail) => (\n                          <p class=\"ion-text-start ion-padding-start\">\n                            {detail}\n                          </p>\n                        ))}\n                    </ion-card-content>\n                  </ion-card>\n                </ion-col>\n              </ion-row>,\n              <ion-row>\n                <ion-item>\n                  {this.dive.introText.map((text) => (\n                    <p style={{fontSize: \"smaller\"}}>{text}</p>\n                  ))}\n                </ion-item>\n              </ion-row>,\n            ]\n          ) : (\n            <div>\n              {this.parameters.configuration != \"OC\" ? (\n                <ion-segment\n                  onIonChange={(ev) => this.switchCCRView(ev)}\n                  mode=\"ios\"\n                  color={Environment.getAppColor()}\n                  value={this.selectedCCRSegmentView}\n                >\n                  <ion-segment-button value={this.parameters.configuration}>\n                    {this.parameters.configuration}\n                    {this.selectedModelView == \"BUHL\" ? (\n                      <ion-label>\n                        ({this.parameters.gfLow}/{this.parameters.gfHigh})\n                      </ion-label>\n                    ) : undefined}\n                    {this.selectedModelView == \"VPM\" ? (\n                      <ion-label>\n                        (VPM {this.parameters.conservatism})\n                      </ion-label>\n                    ) : undefined}\n                  </ion-segment-button>\n                  <ion-segment-button value=\"OC\">\n                    {TranslationService.getTransl(\n                      \"bailout-open-circuit\",\n                      \"Bailout Open Circuit\"\n                    )}\n\n                    {this.selectedModelView == \"BUHL\" ? (\n                      <ion-label>\n                        ({this.parameters.gfLow_bailout}/\n                        {this.parameters.gfHigh_bailout})\n                      </ion-label>\n                    ) : undefined}\n                    {this.selectedModelView == \"VPM\" ? (\n                      <ion-label>\n                        (VPM {this.parameters.conservatism_bailout})\n                      </ion-label>\n                    ) : undefined}\n                  </ion-segment-button>\n                </ion-segment>\n              ) : undefined}\n\n              <ion-grid class=\"ion-no-padding\">\n                <ion-row>\n                  <ion-col size=\"8\" class=\"ion-text-start ion-padding-start\">\n                    <h6 class=\"ion-no-margin\">\n                      <my-transl\n                        tag=\"runtime\"\n                        text=\"Runtime\"\n                        isLabel\n                      ></my-transl>\n                      :\n                    </h6>\n                  </ion-col>\n                  <ion-col size=\"4\" class=\"ion-text-end ion-padding-end\">\n                    <h6 class=\"ion-no-margin\">\n                      {round(\n                        this.selectedCCRView[this.selectedModelView].runtime,\n                        0\n                      )}{\" \"}\n                      min\n                    </h6>\n                  </ion-col>\n                </ion-row>\n                <ion-row>\n                  <ion-col size=\"8\" class=\"ion-text-start ion-padding-start\">\n                    <h6 class=\"ion-no-margin\">\n                      <my-transl\n                        tag=\"deco-time\"\n                        text=\"Deco Time\"\n                        isLabel\n                      ></my-transl>\n                      :\n                    </h6>\n                  </ion-col>\n                  <ion-col size=\"4\" class=\"ion-text-end ion-padding-end\">\n                    <h6 class=\"ion-no-margin\">\n                      {round(\n                        this.selectedCCRView[this.selectedModelView].decotime\n                      )}{\" \"}\n                      min\n                    </h6>\n                  </ion-col>\n                </ion-row>\n                <ion-row>\n                  <ion-col size=\"8\" class=\"ion-text-start ion-padding-start\">\n                    <h6 class=\"ion-no-margin\">\n                      <my-transl\n                        tag=\"avg-bottom-depth\"\n                        text=\"Avg. bottom depth\"\n                        isLabel\n                      ></my-transl>\n                      :\n                    </h6>\n                  </ion-col>\n                  <ion-col size=\"4\" class=\"ion-text-end ion-padding-end\">\n                    <h6 class=\"ion-no-margin\">\n                      {round(\n                        this.selectedCCRView[this.selectedModelView]\n                          .average_bottom_depth,\n                        1\n                      )}{\" \"}\n                      {this.parameters.depthUnit}\n                    </h6>\n                  </ion-col>\n                </ion-row>\n                <ion-row>\n                  <ion-col size=\"8\" class=\"ion-text-start ion-padding-start\">\n                    <h6 class=\"ion-no-margin\">\n                      <my-transl\n                        tag=\"avg-dive-depth\"\n                        text=\"Avg. dive depth\"\n                        isLabel\n                      ></my-transl>\n                      :\n                    </h6>\n                  </ion-col>\n                  <ion-col size=\"4\" class=\"ion-text-end ion-padding-end\">\n                    <h6 class=\"ion-no-margin\">\n                      {round(\n                        this.selectedCCRView[this.selectedModelView]\n                          .average_dive_depth,\n                        1\n                      )}{\" \"}\n                      {this.parameters.depthUnit}\n                    </h6>\n                  </ion-col>\n                </ion-row>\n                <ion-row>\n                  <ion-col size=\"8\" class=\"ion-text-start ion-padding-start\">\n                    <h6 class=\"ion-no-margin\">\n                      <my-transl\n                        tag=\"start-offgassing\"\n                        text=\"Start of offgassing\"\n                        isLabel\n                      ></my-transl>\n                      :\n                    </h6>\n                  </ion-col>\n                  <ion-col size=\"4\" class=\"ion-text-end ion-padding-end\">\n                    <h6 class=\"ion-no-margin\">\n                      {round(this.dive.offGassingDepth, 0)}{\" \"}\n                      {this.parameters.depthUnit}\n                    </h6>\n                  </ion-col>\n                </ion-row>\n                <ion-row>\n                  <ion-col size=\"8\" class=\"ion-text-start ion-padding-start\">\n                    <h6 class=\"ion-no-margin\">\n                      <my-transl tag=\"cns\" text=\"CNS\" isLabel></my-transl>:\n                    </h6>\n                  </ion-col>\n                  <ion-col size=\"4\" class=\"ion-text-end ion-padding-end\">\n                    <h6 class=\"ion-no-margin\">\n                      {round(\n                        this.selectedCCRView[this.selectedModelView].cns,\n                        0\n                      )}\n                      %\n                    </h6>\n                  </ion-col>\n                </ion-row>\n                <ion-row>\n                  <ion-col size=\"8\" class=\"ion-text-start ion-padding-start\">\n                    <h6 class=\"ion-no-margin\">\n                      <my-transl tag=\"otu\" text=\"OTU\" isLabel></my-transl>:\n                    </h6>\n                  </ion-col>\n                  <ion-col size=\"4\" class=\"ion-text-end ion-padding-end\">\n                    <h6 class=\"ion-no-margin\">\n                      {round(\n                        this.selectedCCRView[this.selectedModelView].otu,\n                        0\n                      )}\n                    </h6>\n                  </ion-col>\n                </ion-row>\n                {this.parameters.configuration == \"pSCR\" ? (\n                  <ion-row>\n                    <ion-col size=\"8\" class=\"ion-text-start ion-padding-start\">\n                      <h6 class=\"ion-no-margin\">\n                        <my-transl\n                          tag=\"backgas-hypoxic-depth\"\n                          text=\"BackGas Hypoxic Depth\"\n                          isLabel\n                        />\n                        :\n                      </h6>\n                    </ion-col>\n                    <ion-col size=\"4\" class=\"ion-text-end ion-padding-end\">\n                      <h6 class=\"ion-no-margin\">\n                        &lt; {this.dive.backgasHypoxicDepth}{\" \"}\n                        {this.parameters.depthUnit}\n                      </h6>\n                    </ion-col>\n                  </ion-row>\n                ) : undefined}\n              </ion-grid>\n              <ion-grid class=\"ion-no-padding\">\n                <ion-row style={{paddingRight: \"16px\"}}>\n                  <ion-col size=\"1\"></ion-col>\n                  <ion-col class=\"ion-text-center\">\n                    <ion-text color=\"dark\">\n                      <h6>\n                        <my-transl tag=\"depth\" text=\"Depth\" isLabel />\n                      </h6>\n                    </ion-text>\n                  </ion-col>\n                  <ion-col class=\"ion-text-center\" size=\"1\"></ion-col>\n                  <ion-col class=\"ion-text-center\">\n                    <ion-text color=\"dark\">\n                      <h6>\n                        <my-transl tag=\"time\" text=\"Time\" isLabel />\n                      </h6>\n                    </ion-text>\n                  </ion-col>\n                  <ion-col size=\"2\"></ion-col>\n                </ion-row>\n              </ion-grid>\n              {this.selectedCCRView[this.selectedModelView].profile.map(\n                (profile) => (\n                  <div class=\"accordion\">\n                    {\n                      /* RANGES line */\n                      this.selectedCCRView[this.selectedModelView].rangeSums[\n                        profile.depth\n                      ] ? (\n                        <ion-item\n                          onClick={() =>\n                            this.toggleRange(\n                              this.selectedModelView,\n                              profile.depth,\n                              this.selectedCCRSegmentView\n                            )\n                          }\n                          class={\n                            this.showCCRRange[this.selectedModelView][\n                              profile.depth\n                            ]\n                              ? \"active\"\n                              : undefined\n                          }\n                        >\n                          <ion-grid class=\"ion-no-padding\">\n                            <ion-row\n                              class={\n                                this.showCCRRange[this.selectedModelView][\n                                  profile.depth\n                                ]\n                                  ? \"small bold\"\n                                  : undefined\n                              }\n                            >\n                              <ion-col size=\"1\">\n                                <ion-icon\n                                  name={\n                                    this.showCCRRange[this.selectedModelView][\n                                      profile.depth\n                                    ]\n                                      ? \"remove\"\n                                      : \"add\"\n                                  }\n                                  color=\"danger\"\n                                ></ion-icon>\n                              </ion-col>\n                              <ion-col size=\"3\" class=\"ion-text-center\">\n                                {\n                                  this.selectedCCRView[this.selectedModelView]\n                                    .rangeDescr[profile.depth]\n                                }{\" \"}\n                                {profile.depth}\n                                {this.parameters.depthUnit}\n                              </ion-col>\n                              <ion-col\n                                class=\"ion-text-center\"\n                                size=\"1\"\n                              ></ion-col>\n                              <ion-col size=\"3\" class=\"ion-text-center\">\n                                <ion-icon name=\"time\"></ion-icon>\n                                <span>\n                                  {round(\n                                    this.selectedCCRView[this.selectedModelView]\n                                      .rangeSums[profile.depth],\n                                    0\n                                  )}{\" \"}\n                                  min\n                                </span>\n                              </ion-col>\n                              <ion-col>\n                                {GasBlenderService.getGasName(profile.gas)}\n                              </ion-col>\n                            </ion-row>\n                          </ion-grid>\n                        </ion-item>\n                      ) : undefined\n                    }\n\n                    {\n                      /* PROFILE button line */\n                      this.editPlan &&\n                      this.selectedCCRView[this.selectedModelView].rangeSums[\n                        profile.depth\n                      ] &&\n                      this.selectedCCRView[this.selectedModelView].rangeCount[\n                        profile.depth\n                      ] > 2 &&\n                      this.showCCRRange[this.selectedModelView][\n                        profile.depth\n                      ] ? (\n                        <ion-list-header>\n                          <ion-grid class=\"ion-no-padding\">\n                            <ion-row>\n                              <ion-segment\n                                onIonChange={(ev) =>\n                                  this.rangeSegmentChanged(ev, profile.depth)\n                                }\n                                mode=\"ios\"\n                                color={Environment.getAppColor()}\n                                value={\n                                  this.selectedCCRView[this.selectedModelView]\n                                    .rangeShape[profile.depth]\n                                }\n                              >\n                                <ion-segment-button value=\"model\">\n                                  <ion-label>\n                                    {this.selectedModelView}\n                                  </ion-label>\n                                </ion-segment-button>\n                                <ion-segment-button value=\"equal\">\n                                  <ion-label>\n                                    {TranslationService.getTransl(\n                                      \"linear\",\n                                      \"Linear\"\n                                    )}\n                                  </ion-label>\n                                </ion-segment-button>\n                                <ion-segment-button value=\"s\">\n                                  <ion-label>S</ion-label>\n                                </ion-segment-button>\n                                <ion-segment-button value=\"linear\">\n                                  <ion-label>Exp</ion-label>\n                                </ion-segment-button>\n                              </ion-segment>\n                            </ion-row>\n                          </ion-grid>\n                        </ion-list-header>\n                      ) : undefined\n                    }\n                    {\n                      /* PROFILE lines */\n                      this.isRangeShown(\n                        this.selectedModelView,\n                        profile.depth,\n                        profile.stage\n                      ) ? (\n                        <ion-item>\n                          <ion-grid class=\"ion-no-padding\">\n                            <ion-row align-items-center>\n                              <ion-col size=\"1\" class=\"ion-text-center\">\n                                <ion-icon\n                                  name={\n                                    profile.stage == \"descent\"\n                                      ? \"arrow-down-outline\"\n                                      : profile.stage == \"bottom\"\n                                        ? \"arrow-forward-outline\"\n                                        : \"arrow-up-outline\"\n                                  }\n                                  color={\n                                    profile.stage == \"descent\"\n                                      ? \"secondary\"\n                                      : profile.stage == \"bottom\"\n                                        ? \"primary\"\n                                        : profile.stage == \"offgassing\"\n                                          ? \"favorite\"\n                                          : \"danger\"\n                                  }\n                                ></ion-icon>\n                              </ion-col>\n                              <ion-col class=\"ion-text-center\">\n                                {profile.depth} {this.parameters.depthUnit}\n                              </ion-col>\n                              <ion-col size=\"1\" class=\"ion-text-center\">\n                                {profile[profile.rangeShape].stoptime ? (\n                                  <ion-icon\n                                    name=\"pause-outline\"\n                                    color=\"gue-grey\"\n                                  ></ion-icon>\n                                ) : undefined}\n                              </ion-col>\n                              <ion-col class=\"ion-text-center\">\n                                {profile[profile.rangeShape].stoptime ? (\n                                  <span>\n                                    {round(\n                                      profile[profile.rangeShape].stoptime,\n                                      1\n                                    )}{\" \"}\n                                    min\n                                  </span>\n                                ) : undefined}\n                              </ion-col>\n                              <ion-col style={{paddingTop: \"0px\"}} size=\"2\">\n                                {profile[profile.rangeShape].runtime ? (\n                                  <ion-row\n                                    style={{\n                                      padding: \"0px\",\n                                      fontSize: \"small\",\n                                    }}\n                                  >\n                                    <span>RT</span>:{\" \"}\n                                    {round(\n                                      profile[profile.rangeShape].runtime,\n                                      1\n                                    )}{\" \"}\n                                    min\n                                  </ion-row>\n                                ) : undefined}\n                                {profile.gas ? (\n                                  <ion-row\n                                    style={{\n                                      padding: \"0px\",\n                                      fontSize: \"small\",\n                                    }}\n                                  >\n                                    {GasBlenderService.getGasName(profile.gas)}\n                                  </ion-row>\n                                ) : undefined}\n\n                                {profile.ppO2 ? (\n                                  <ion-row\n                                    style={{\n                                      padding: \"0px\",\n                                      fontSize: \"small\",\n                                    }}\n                                  >\n                                    ppO2: {profile.ppO2}\n                                  </ion-row>\n                                ) : undefined}\n\n                                {profile.stage == \"offgassing\" ? (\n                                  <ion-row\n                                    style={{\n                                      padding: \"0px\",\n                                      fontSize: \"small\",\n                                    }}\n                                  >\n                                    <my-transl\n                                      tag=\"start-offgassing\"\n                                      text=\"Start of offgassing\"\n                                    />\n                                  </ion-row>\n                                ) : undefined}\n                              </ion-col>\n                            </ion-row>\n                          </ion-grid>\n                        </ion-item>\n                      ) : undefined\n                    }\n                  </div>\n                )\n              )}\n              <ion-item>\n                {this.dive.introText.map((text) => (\n                  <p style={{fontSize: \"smaller\"}}>{text}</p>\n                ))}\n              </ion-item>\n            </div>\n          )}\n        </div>\n      </div>,\n    ];\n  }\n}\n"],"version":3}