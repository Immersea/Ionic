{"file":"popover-select-date.entry.esm.js","mappings":"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","names":["MILLISECONDS_IN_HOUR","MILLISECONDS_IN_MINUTE","patterns","dateFnsFormat","formatISO","parse","isValid","format"],"sources":["node_modules/date-fns-tz/dist/esm/_lib/tzIntlTimeZoneName/index.js","node_modules/date-fns-tz/dist/esm/_lib/tzTokenizeDate/index.js","node_modules/date-fns-tz/dist/esm/_lib/newDateUTC/index.js","node_modules/date-fns-tz/dist/esm/_lib/tzParseTimezone/index.js","node_modules/date-fns-tz/dist/esm/format/formatters/index.js","node_modules/date-fns-tz/dist/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","node_modules/date-fns-tz/dist/esm/_lib/tzPattern/index.js","node_modules/date-fns-tz/dist/esm/toDate/index.js","node_modules/date-fns-tz/dist/esm/format/index.js","node_modules/date-fns-tz/dist/esm/toZonedTime/index.js","node_modules/date-fns-tz/dist/esm/formatInTimeZone/index.js","node_modules/date-fns-tz/dist/esm/fromZonedTime/index.js","node_modules/date-fns-tz/dist/esm/getTimezoneOffset/index.js","node_modules/@maskito/core/index.esm.js","node_modules/@maskito/kit/index.esm.js","src/components/common/popovers/popover-select-date/popover-select-date.scss?tag=popover-select-date","src/components/common/popovers/popover-select-date/popover-select-date.tsx"],"sourcesContent":["/**\n * Returns the formatted time zone name of the provided `timeZone` or the current\n * system time zone if omitted, accounting for DST according to the UTC value of\n * the date.\n */\nexport function tzIntlTimeZoneName(length, date, options) {\n    const dtf = getDTF(length, options.timeZone, options.locale);\n    return 'formatToParts' in dtf ? partsTimeZone(dtf, date) : hackyTimeZone(dtf, date);\n}\nfunction partsTimeZone(dtf, date) {\n    const formatted = dtf.formatToParts(date);\n    for (let i = formatted.length - 1; i >= 0; --i) {\n        if (formatted[i].type === 'timeZoneName') {\n            return formatted[i].value;\n        }\n    }\n    return undefined;\n}\nfunction hackyTimeZone(dtf, date) {\n    const formatted = dtf.format(date).replace(/\\u200E/g, '');\n    const tzNameMatch = / [\\w-+ ]+$/.exec(formatted);\n    return tzNameMatch ? tzNameMatch[0].substr(1) : '';\n}\n// If a locale has been provided `en-US` is used as a fallback in case it is an\n// invalid locale, otherwise the locale is left undefined to use the system locale.\nfunction getDTF(length, timeZone, locale) {\n    return new Intl.DateTimeFormat(locale ? [locale.code, 'en-US'] : undefined, {\n        timeZone: timeZone,\n        timeZoneName: length,\n    });\n}\n","/**\n * Returns the [year, month, day, hour, minute, seconds] tokens of the provided\n * `date` as it will be rendered in the `timeZone`.\n */\nexport function tzTokenizeDate(date, timeZone) {\n    const dtf = getDateTimeFormat(timeZone);\n    return 'formatToParts' in dtf ? partsOffset(dtf, date) : hackyOffset(dtf, date);\n}\nconst typeToPos = {\n    year: 0,\n    month: 1,\n    day: 2,\n    hour: 3,\n    minute: 4,\n    second: 5,\n};\nfunction partsOffset(dtf, date) {\n    try {\n        const formatted = dtf.formatToParts(date);\n        const filled = [];\n        for (let i = 0; i < formatted.length; i++) {\n            const pos = typeToPos[formatted[i].type];\n            if (pos !== undefined) {\n                filled[pos] = parseInt(formatted[i].value, 10);\n            }\n        }\n        return filled;\n    }\n    catch (error) {\n        if (error instanceof RangeError) {\n            return [NaN];\n        }\n        throw error;\n    }\n}\nfunction hackyOffset(dtf, date) {\n    const formatted = dtf.format(date);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const parsed = /(\\d+)\\/(\\d+)\\/(\\d+),? (\\d+):(\\d+):(\\d+)/.exec(formatted);\n    // const [, fMonth, fDay, fYear, fHour, fMinute, fSecond] = parsed\n    // return [fYear, fMonth, fDay, fHour, fMinute, fSecond]\n    return [\n        parseInt(parsed[3], 10),\n        parseInt(parsed[1], 10),\n        parseInt(parsed[2], 10),\n        parseInt(parsed[4], 10),\n        parseInt(parsed[5], 10),\n        parseInt(parsed[6], 10),\n    ];\n}\n// Get a cached Intl.DateTimeFormat instance for the IANA `timeZone`. This can be used\n// to get deterministic local date/time output according to the `en-US` locale which\n// can be used to extract local time parts as necessary.\nconst dtfCache = {};\nfunction getDateTimeFormat(timeZone) {\n    if (!dtfCache[timeZone]) {\n        // New browsers use `hourCycle`, IE and Chrome <73 does not support it and uses `hour12`\n        const testDateFormatted = new Intl.DateTimeFormat('en-US', {\n            hourCycle: 'h23',\n            timeZone: 'America/New_York',\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit',\n        }).format(new Date('2014-06-25T04:00:00.123Z'));\n        const hourCycleSupported = testDateFormatted === '06/25/2014, 00:00:00' ||\n            testDateFormatted === '‎06‎/‎25‎/‎2014‎ ‎00‎:‎00‎:‎00';\n        dtfCache[timeZone] = hourCycleSupported\n            ? new Intl.DateTimeFormat('en-US', {\n                hourCycle: 'h23',\n                timeZone: timeZone,\n                year: 'numeric',\n                month: 'numeric',\n                day: '2-digit',\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n            })\n            : new Intl.DateTimeFormat('en-US', {\n                hour12: false,\n                timeZone: timeZone,\n                year: 'numeric',\n                month: 'numeric',\n                day: '2-digit',\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n            });\n    }\n    return dtfCache[timeZone];\n}\n","/**\n * Use instead of `new Date(Date.UTC(...))` to support years below 100 which doesn't work\n * otherwise due to the nature of the\n * [`Date` constructor](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#interpretation_of_two-digit_years.\n *\n * For `Date.UTC(...)`, use `newDateUTC(...).getTime()`.\n */\nexport function newDateUTC(fullYear, month, day, hour, minute, second, millisecond) {\n    const utcDate = new Date(0);\n    utcDate.setUTCFullYear(fullYear, month, day);\n    utcDate.setUTCHours(hour, minute, second, millisecond);\n    return utcDate;\n}\n","import { tzTokenizeDate } from '../tzTokenizeDate/index.js';\nimport { newDateUTC } from '../newDateUTC/index.js';\nconst MILLISECONDS_IN_HOUR = 3600000;\nconst MILLISECONDS_IN_MINUTE = 60000;\nconst patterns = {\n    timezone: /([Z+-].*)$/,\n    timezoneZ: /^(Z)$/,\n    timezoneHH: /^([+-]\\d{2})$/,\n    timezoneHHMM: /^([+-])(\\d{2}):?(\\d{2})$/,\n};\n// Parse constious time zone offset formats to an offset in milliseconds\nexport function tzParseTimezone(timezoneString, date, isUtcDate) {\n    // Empty string\n    if (!timezoneString) {\n        return 0;\n    }\n    // Z\n    let token = patterns.timezoneZ.exec(timezoneString);\n    if (token) {\n        return 0;\n    }\n    let hours;\n    let absoluteOffset;\n    // ±hh\n    token = patterns.timezoneHH.exec(timezoneString);\n    if (token) {\n        hours = parseInt(token[1], 10);\n        if (!validateTimezone(hours)) {\n            return NaN;\n        }\n        return -(hours * MILLISECONDS_IN_HOUR);\n    }\n    // ±hh:mm or ±hhmm\n    token = patterns.timezoneHHMM.exec(timezoneString);\n    if (token) {\n        hours = parseInt(token[2], 10);\n        const minutes = parseInt(token[3], 10);\n        if (!validateTimezone(hours, minutes)) {\n            return NaN;\n        }\n        absoluteOffset = Math.abs(hours) * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE;\n        return token[1] === '+' ? -absoluteOffset : absoluteOffset;\n    }\n    // IANA time zone\n    if (isValidTimezoneIANAString(timezoneString)) {\n        date = new Date(date || Date.now());\n        const utcDate = isUtcDate ? date : toUtcDate(date);\n        const offset = calcOffset(utcDate, timezoneString);\n        const fixedOffset = isUtcDate ? offset : fixOffset(date, offset, timezoneString);\n        return -fixedOffset;\n    }\n    return NaN;\n}\nfunction toUtcDate(date) {\n    return newDateUTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n}\nfunction calcOffset(date, timezoneString) {\n    const tokens = tzTokenizeDate(date, timezoneString);\n    // ms dropped because it's not provided by tzTokenizeDate\n    const asUTC = newDateUTC(tokens[0], tokens[1] - 1, tokens[2], tokens[3] % 24, tokens[4], tokens[5], 0).getTime();\n    let asTS = date.getTime();\n    const over = asTS % 1000;\n    asTS -= over >= 0 ? over : 1000 + over;\n    return asUTC - asTS;\n}\nfunction fixOffset(date, offset, timezoneString) {\n    const localTS = date.getTime();\n    // Our UTC time is just a guess because our offset is just a guess\n    let utcGuess = localTS - offset;\n    // Test whether the zone matches the offset for this ts\n    const o2 = calcOffset(new Date(utcGuess), timezoneString);\n    // If so, offset didn't change, and we're done\n    if (offset === o2) {\n        return offset;\n    }\n    // If not, change the ts by the difference in the offset\n    utcGuess -= o2 - offset;\n    // If that gives us the local time we want, we're done\n    const o3 = calcOffset(new Date(utcGuess), timezoneString);\n    if (o2 === o3) {\n        return o2;\n    }\n    // If it's different, we're in a hole time. The offset has changed, but we don't adjust the time\n    return Math.max(o2, o3);\n}\nfunction validateTimezone(hours, minutes) {\n    return -23 <= hours && hours <= 23 && (minutes == null || (0 <= minutes && minutes <= 59));\n}\nconst validIANATimezoneCache = {};\nfunction isValidTimezoneIANAString(timeZoneString) {\n    if (validIANATimezoneCache[timeZoneString])\n        return true;\n    try {\n        new Intl.DateTimeFormat(undefined, { timeZone: timeZoneString });\n        validIANATimezoneCache[timeZoneString] = true;\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\n","import { tzIntlTimeZoneName } from '../../_lib/tzIntlTimeZoneName/index.js';\nimport { tzParseTimezone } from '../../_lib/tzParseTimezone/index.js';\nconst MILLISECONDS_IN_MINUTE = 60 * 1000;\nexport const formatters = {\n    // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n    X: function (date, token, options) {\n        const timezoneOffset = getTimeZoneOffset(options.timeZone, date);\n        if (timezoneOffset === 0) {\n            return 'Z';\n        }\n        switch (token) {\n            // Hours and optional minutes\n            case 'X':\n                return formatTimezoneWithOptionalMinutes(timezoneOffset);\n            // Hours, minutes and optional seconds without `:` delimeter\n            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n            // so this token always has the same output as `XX`\n            case 'XXXX':\n            case 'XX': // Hours and minutes without `:` delimeter\n                return formatTimezone(timezoneOffset);\n            // Hours, minutes and optional seconds with `:` delimeter\n            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n            // so this token always has the same output as `XXX`\n            case 'XXXXX':\n            case 'XXX': // Hours and minutes with `:` delimeter\n            default:\n                return formatTimezone(timezoneOffset, ':');\n        }\n    },\n    // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n    x: function (date, token, options) {\n        const timezoneOffset = getTimeZoneOffset(options.timeZone, date);\n        switch (token) {\n            // Hours and optional minutes\n            case 'x':\n                return formatTimezoneWithOptionalMinutes(timezoneOffset);\n            // Hours, minutes and optional seconds without `:` delimeter\n            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n            // so this token always has the same output as `xx`\n            case 'xxxx':\n            case 'xx': // Hours and minutes without `:` delimeter\n                return formatTimezone(timezoneOffset);\n            // Hours, minutes and optional seconds with `:` delimeter\n            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n            // so this token always has the same output as `xxx`\n            case 'xxxxx':\n            case 'xxx': // Hours and minutes with `:` delimeter\n            default:\n                return formatTimezone(timezoneOffset, ':');\n        }\n    },\n    // Timezone (GMT)\n    O: function (date, token, options) {\n        const timezoneOffset = getTimeZoneOffset(options.timeZone, date);\n        switch (token) {\n            // Short\n            case 'O':\n            case 'OO':\n            case 'OOO':\n                return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n            // Long\n            case 'OOOO':\n            default:\n                return 'GMT' + formatTimezone(timezoneOffset, ':');\n        }\n    },\n    // Timezone (specific non-location)\n    z: function (date, token, options) {\n        switch (token) {\n            // Short\n            case 'z':\n            case 'zz':\n            case 'zzz':\n                return tzIntlTimeZoneName('short', date, options);\n            // Long\n            case 'zzzz':\n            default:\n                return tzIntlTimeZoneName('long', date, options);\n        }\n    },\n};\nfunction getTimeZoneOffset(timeZone, originalDate) {\n    const timeZoneOffset = timeZone\n        ? tzParseTimezone(timeZone, originalDate, true) / MILLISECONDS_IN_MINUTE\n        : originalDate?.getTimezoneOffset() ?? 0;\n    if (Number.isNaN(timeZoneOffset)) {\n        throw new RangeError('Invalid time zone specified: ' + timeZone);\n    }\n    return timeZoneOffset;\n}\nfunction addLeadingZeros(number, targetLength) {\n    const sign = number < 0 ? '-' : '';\n    let output = Math.abs(number).toString();\n    while (output.length < targetLength) {\n        output = '0' + output;\n    }\n    return sign + output;\n}\nfunction formatTimezone(offset, delimiter = '') {\n    const sign = offset > 0 ? '-' : '+';\n    const absOffset = Math.abs(offset);\n    const hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n    const minutes = addLeadingZeros(Math.floor(absOffset % 60), 2);\n    return sign + hours + delimiter + minutes;\n}\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n    if (offset % 60 === 0) {\n        const sign = offset > 0 ? '-' : '+';\n        return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n    }\n    return formatTimezone(offset, delimiter);\n}\nfunction formatTimezoneShort(offset, delimiter = '') {\n    const sign = offset > 0 ? '-' : '+';\n    const absOffset = Math.abs(offset);\n    const hours = Math.floor(absOffset / 60);\n    const minutes = absOffset % 60;\n    if (minutes === 0) {\n        return sign + String(hours);\n    }\n    return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n    const utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n    utcDate.setUTCFullYear(date.getFullYear());\n    return +date - +utcDate;\n}\n","/** Regex to identify the presence of a time zone specifier in a date string */\nexport const tzPattern = /(Z|[+-]\\d{2}(?::?\\d{2})?| UTC| [a-zA-Z]+\\/[a-zA-Z_]+(?:\\/[a-zA-Z_]+)?)$/;\n","import { getTimezoneOffsetInMilliseconds } from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { tzParseTimezone } from '../_lib/tzParseTimezone/index.js';\nimport { tzPattern } from '../_lib/tzPattern/index.js';\nconst MILLISECONDS_IN_HOUR = 3600000;\nconst MILLISECONDS_IN_MINUTE = 60000;\nconst DEFAULT_ADDITIONAL_DIGITS = 2;\nconst patterns = {\n    dateTimePattern: /^([0-9W+-]+)(T| )(.*)/,\n    datePattern: /^([0-9W+-]+)(.*)/,\n    plainTime: /:/,\n    // year tokens\n    YY: /^(\\d{2})$/,\n    YYY: [\n        /^([+-]\\d{2})$/, // 0 additional digits\n        /^([+-]\\d{3})$/, // 1 additional digit\n        /^([+-]\\d{4})$/, // 2 additional digits\n    ],\n    YYYY: /^(\\d{4})/,\n    YYYYY: [\n        /^([+-]\\d{4})/, // 0 additional digits\n        /^([+-]\\d{5})/, // 1 additional digit\n        /^([+-]\\d{6})/, // 2 additional digits\n    ],\n    // date tokens\n    MM: /^-(\\d{2})$/,\n    DDD: /^-?(\\d{3})$/,\n    MMDD: /^-?(\\d{2})-?(\\d{2})$/,\n    Www: /^-?W(\\d{2})$/,\n    WwwD: /^-?W(\\d{2})-?(\\d{1})$/,\n    HH: /^(\\d{2}([.,]\\d*)?)$/,\n    HHMM: /^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/,\n    HHMMSS: /^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/,\n    // time zone tokens (to identify the presence of a tz)\n    timeZone: tzPattern,\n};\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If an argument is a string, the function tries to parse it.\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n * If the function cannot parse the string or the values are invalid, it returns Invalid Date.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n * All *date-fns* functions will throw `RangeError` if `options.additionalDigits` is not 0, 1, 2 or undefined.\n *\n * @param argument the value to convert\n * @param options the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @param {string} [options.timeZone=''] - used to specify the IANA time zone offset of a date String.\n *\n * @returns the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = toDate('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = toDate('+02014101', {additionalDigits: 1})\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport function toDate(argument, options = {}) {\n    if (arguments.length < 1) {\n        throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n    }\n    if (argument === null) {\n        return new Date(NaN);\n    }\n    const additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : Number(options.additionalDigits);\n    if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n        throw new RangeError('additionalDigits must be 0, 1 or 2');\n    }\n    // Clone the date\n    if (argument instanceof Date ||\n        (typeof argument === 'object' && Object.prototype.toString.call(argument) === '[object Date]')) {\n        // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n        return new Date(argument.getTime());\n    }\n    else if (typeof argument === 'number' ||\n        Object.prototype.toString.call(argument) === '[object Number]') {\n        return new Date(argument);\n    }\n    else if (!(Object.prototype.toString.call(argument) === '[object String]')) {\n        return new Date(NaN);\n    }\n    const dateStrings = splitDateString(argument);\n    const { year, restDateString } = parseYear(dateStrings.date, additionalDigits);\n    const date = parseDate(restDateString, year);\n    if (date === null || isNaN(date.getTime())) {\n        return new Date(NaN);\n    }\n    if (date) {\n        const timestamp = date.getTime();\n        let time = 0;\n        let offset;\n        if (dateStrings.time) {\n            time = parseTime(dateStrings.time);\n            if (time === null || isNaN(time)) {\n                return new Date(NaN);\n            }\n        }\n        if (dateStrings.timeZone || options.timeZone) {\n            offset = tzParseTimezone(dateStrings.timeZone || options.timeZone, new Date(timestamp + time));\n            if (isNaN(offset)) {\n                return new Date(NaN);\n            }\n        }\n        else {\n            // get offset accurate to hour in time zones that change offset\n            offset = getTimezoneOffsetInMilliseconds(new Date(timestamp + time));\n            offset = getTimezoneOffsetInMilliseconds(new Date(timestamp + time + offset));\n        }\n        return new Date(timestamp + time + offset);\n    }\n    else {\n        return new Date(NaN);\n    }\n}\nfunction splitDateString(dateString) {\n    const dateStrings = {};\n    let parts = patterns.dateTimePattern.exec(dateString);\n    let timeString;\n    if (!parts) {\n        parts = patterns.datePattern.exec(dateString);\n        if (parts) {\n            dateStrings.date = parts[1];\n            timeString = parts[2];\n        }\n        else {\n            dateStrings.date = null;\n            timeString = dateString;\n        }\n    }\n    else {\n        dateStrings.date = parts[1];\n        timeString = parts[3];\n    }\n    if (timeString) {\n        const token = patterns.timeZone.exec(timeString);\n        if (token) {\n            dateStrings.time = timeString.replace(token[1], '');\n            dateStrings.timeZone = token[1].trim();\n        }\n        else {\n            dateStrings.time = timeString;\n        }\n    }\n    return dateStrings;\n}\nfunction parseYear(dateString, additionalDigits) {\n    if (dateString) {\n        const patternYYY = patterns.YYY[additionalDigits];\n        const patternYYYYY = patterns.YYYYY[additionalDigits];\n        // YYYY or ±YYYYY\n        let token = patterns.YYYY.exec(dateString) || patternYYYYY.exec(dateString);\n        if (token) {\n            const yearString = token[1];\n            return {\n                year: parseInt(yearString, 10),\n                restDateString: dateString.slice(yearString.length),\n            };\n        }\n        // YY or ±YYY\n        token = patterns.YY.exec(dateString) || patternYYY.exec(dateString);\n        if (token) {\n            const centuryString = token[1];\n            return {\n                year: parseInt(centuryString, 10) * 100,\n                restDateString: dateString.slice(centuryString.length),\n            };\n        }\n    }\n    // Invalid ISO-formatted year\n    return {\n        year: null,\n    };\n}\nfunction parseDate(dateString, year) {\n    // Invalid ISO-formatted year\n    if (year === null) {\n        return null;\n    }\n    let date;\n    let month;\n    let week;\n    // YYYY\n    if (!dateString || !dateString.length) {\n        date = new Date(0);\n        date.setUTCFullYear(year);\n        return date;\n    }\n    // YYYY-MM\n    let token = patterns.MM.exec(dateString);\n    if (token) {\n        date = new Date(0);\n        month = parseInt(token[1], 10) - 1;\n        if (!validateDate(year, month)) {\n            return new Date(NaN);\n        }\n        date.setUTCFullYear(year, month);\n        return date;\n    }\n    // YYYY-DDD or YYYYDDD\n    token = patterns.DDD.exec(dateString);\n    if (token) {\n        date = new Date(0);\n        const dayOfYear = parseInt(token[1], 10);\n        if (!validateDayOfYearDate(year, dayOfYear)) {\n            return new Date(NaN);\n        }\n        date.setUTCFullYear(year, 0, dayOfYear);\n        return date;\n    }\n    // yyyy-MM-dd or YYYYMMDD\n    token = patterns.MMDD.exec(dateString);\n    if (token) {\n        date = new Date(0);\n        month = parseInt(token[1], 10) - 1;\n        const day = parseInt(token[2], 10);\n        if (!validateDate(year, month, day)) {\n            return new Date(NaN);\n        }\n        date.setUTCFullYear(year, month, day);\n        return date;\n    }\n    // YYYY-Www or YYYYWww\n    token = patterns.Www.exec(dateString);\n    if (token) {\n        week = parseInt(token[1], 10) - 1;\n        if (!validateWeekDate(week)) {\n            return new Date(NaN);\n        }\n        return dayOfISOWeekYear(year, week);\n    }\n    // YYYY-Www-D or YYYYWwwD\n    token = patterns.WwwD.exec(dateString);\n    if (token) {\n        week = parseInt(token[1], 10) - 1;\n        const dayOfWeek = parseInt(token[2], 10) - 1;\n        if (!validateWeekDate(week, dayOfWeek)) {\n            return new Date(NaN);\n        }\n        return dayOfISOWeekYear(year, week, dayOfWeek);\n    }\n    // Invalid ISO-formatted date\n    return null;\n}\nfunction parseTime(timeString) {\n    let hours;\n    let minutes;\n    // hh\n    let token = patterns.HH.exec(timeString);\n    if (token) {\n        hours = parseFloat(token[1].replace(',', '.'));\n        if (!validateTime(hours)) {\n            return NaN;\n        }\n        return (hours % 24) * MILLISECONDS_IN_HOUR;\n    }\n    // hh:mm or hhmm\n    token = patterns.HHMM.exec(timeString);\n    if (token) {\n        hours = parseInt(token[1], 10);\n        minutes = parseFloat(token[2].replace(',', '.'));\n        if (!validateTime(hours, minutes)) {\n            return NaN;\n        }\n        return (hours % 24) * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE;\n    }\n    // hh:mm:ss or hhmmss\n    token = patterns.HHMMSS.exec(timeString);\n    if (token) {\n        hours = parseInt(token[1], 10);\n        minutes = parseInt(token[2], 10);\n        const seconds = parseFloat(token[3].replace(',', '.'));\n        if (!validateTime(hours, minutes, seconds)) {\n            return NaN;\n        }\n        return (hours % 24) * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n    }\n    // Invalid ISO-formatted time\n    return null;\n}\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n    week = week || 0;\n    day = day || 0;\n    const date = new Date(0);\n    date.setUTCFullYear(isoWeekYear, 0, 4);\n    const fourthOfJanuaryDay = date.getUTCDay() || 7;\n    const diff = week * 7 + day + 1 - fourthOfJanuaryDay;\n    date.setUTCDate(date.getUTCDate() + diff);\n    return date;\n}\n// Validation functions\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nfunction isLeapYearIndex(year) {\n    return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\nfunction validateDate(year, month, date) {\n    if (month < 0 || month > 11) {\n        return false;\n    }\n    if (date != null) {\n        if (date < 1) {\n            return false;\n        }\n        const isLeapYear = isLeapYearIndex(year);\n        if (isLeapYear && date > DAYS_IN_MONTH_LEAP_YEAR[month]) {\n            return false;\n        }\n        if (!isLeapYear && date > DAYS_IN_MONTH[month]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction validateDayOfYearDate(year, dayOfYear) {\n    if (dayOfYear < 1) {\n        return false;\n    }\n    const isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear && dayOfYear > 366) {\n        return false;\n    }\n    if (!isLeapYear && dayOfYear > 365) {\n        return false;\n    }\n    return true;\n}\nfunction validateWeekDate(week, day) {\n    if (week < 0 || week > 52) {\n        return false;\n    }\n    if (day != null && (day < 0 || day > 6)) {\n        return false;\n    }\n    return true;\n}\nfunction validateTime(hours, minutes, seconds) {\n    if (hours < 0 || hours >= 25) {\n        return false;\n    }\n    if (minutes != null && (minutes < 0 || minutes >= 60)) {\n        return false;\n    }\n    if (seconds != null && (seconds < 0 || seconds >= 60)) {\n        return false;\n    }\n    return true;\n}\n","import { format as dateFnsFormat } from 'date-fns/format';\nimport { formatters } from './formatters/index.js';\nimport { toDate } from '../toDate/index.js';\nconst tzFormattingTokensRegExp = /([xXOz]+)|''|'(''|[^'])+('|$)/g;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may consty by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 8     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 8     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | PDT, EST, CEST                    | 6     |\n * |                                 | zzzz    | Pacific Daylight Time             | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are created using the Intl browser API. The output is determined by the\n *    preferred standard of the current locale (en-US by default) which may not always give the expected result.\n *    For this reason it is recommended to supply a `locale` in the format options when formatting a time zone name.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. These tokens are often confused with others. See: https://git.io/fxCyr\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole\n *   library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard\n *   #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table). See [this\n *   post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param date the original date\n * @param formatStr the string of tokens\n * @param options the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link\n *   https://date-fns.org/docs/toDate}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See\n *   [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:\n *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).\n *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens\n *   (`yy`, `yyyy`). See: https://git.io/fxCyr\n * @param {String} [options.timeZone=''] - used to specify the IANA time zone offset of a date String.\n * @param {Date|Number} [options.originalDate] - can be used to pass the original unmodified date to `format` to\n *   improve correctness of the replaced timezone token close to the DST threshold.\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.awareOfUnicodeTokens` must be set to `true` to use `XX` token; see:\n *   https://git.io/fxCyr\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options = {}) {\n    formatStr = String(formatStr);\n    const matches = formatStr.match(tzFormattingTokensRegExp);\n    if (matches) {\n        const d = toDate(options.originalDate || date, options);\n        // Work through each match and replace the tz token in the format string with the quoted\n        // formatted time zone so the remaining tokens can be filled in by date-fns#format.\n        formatStr = matches.reduce(function (result, token) {\n            if (token[0] === \"'\") {\n                return result; // This is a quoted portion, matched only to ensure we don't match inside it\n            }\n            const pos = result.indexOf(token);\n            const precededByQuotedSection = result[pos - 1] === \"'\";\n            const replaced = result.replace(token, \"'\" + formatters[token[0]](d, token, options) + \"'\");\n            // If the replacement results in two adjoining quoted strings, the back to back quotes\n            // are removed, so it doesn't look like an escaped quote.\n            return precededByQuotedSection\n                ? replaced.substring(0, pos - 1) + replaced.substring(pos + 1)\n                : replaced;\n        }, formatStr);\n    }\n    return dateFnsFormat(date, formatStr, options);\n}\n","import { tzParseTimezone } from '../_lib/tzParseTimezone/index.js';\nimport { toDate } from '../toDate/index.js';\n/**\n * @name toZonedTime\n * @category Time Zone Helpers\n * @summary Get a date/time representing local time in a given time zone from the UTC date\n *\n * @description\n * Returns a date instance with values representing the local time in the time zone\n * specified of the UTC time from the date provided. In other words, when the new date\n * is formatted it will show the equivalent hours in the target time zone regardless\n * of the current system time zone.\n *\n * @param date the date with the relevant UTC time\n * @param timeZone the time zone to get local time for, can be an offset or IANA time zone\n * @param options the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n *\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // In June 10am UTC is 6am in New York (-04:00)\n * const result = toZonedTime('2014-06-25T10:00:00.000Z', 'America/New_York')\n * //=> Jun 25 2014 06:00:00\n */\nexport function toZonedTime(date, timeZone, options) {\n    date = toDate(date, options);\n    const offsetMilliseconds = tzParseTimezone(timeZone, date, true);\n    const d = new Date(date.getTime() - offsetMilliseconds);\n    const resultDate = new Date(0);\n    resultDate.setFullYear(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate());\n    resultDate.setHours(d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds());\n    return resultDate;\n}\n","import { format } from '../format/index.js';\nimport { toZonedTime } from '../toZonedTime/index.js';\n/**\n * @name formatInTimeZone\n * @category Time Zone Helpers\n * @summary Gets the offset in milliseconds between the time zone and Universal Coordinated Time (UTC)\n *\n * @param date the date representing the local time / real UTC time\n * @param timeZone the time zone this date should be formatted for; can be an offset or IANA time zone\n * @param formatStr the string of tokens\n * @param options the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link\n *   https://date-fns.org/docs/toDate}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See\n *   [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:\n *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).\n *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens\n *   (`yy`, `yyyy`). See: https://git.io/fxCyr\n * @param {String} [options.timeZone=''] - used to specify the IANA time zone offset of a date String.\n */\nexport function formatInTimeZone(date, timeZone, formatStr, options) {\n    options = {\n        ...options,\n        timeZone,\n        originalDate: date,\n    };\n    return format(toZonedTime(date, timeZone, { timeZone: options.timeZone }), formatStr, options);\n}\n","import { toDate } from '../toDate/index.js';\nimport { tzPattern } from '../_lib/tzPattern/index.js';\nimport { tzParseTimezone } from '../_lib/tzParseTimezone/index.js';\nimport { newDateUTC } from '../_lib/newDateUTC/index.js';\n/**\n * @name fromZonedTime\n * @category Time Zone Helpers\n * @summary Get the UTC date/time from a date representing local time in a given time zone\n *\n * @description\n * Returns a date instance with the UTC time of the provided date of which the values\n * represented the local time in the time zone specified. In other words, if the input\n * date represented local time in time zone, the timestamp of the output date will\n * give the equivalent UTC of that local time regardless of the current system time zone.\n *\n * @param date the date with values representing the local time\n * @param timeZone the time zone of this local time, can be an offset or IANA time zone\n * @param options the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // In June 10am in Los Angeles is 5pm UTC\n * const result = fromZonedTime(new Date(2014, 5, 25, 10, 0, 0), 'America/Los_Angeles')\n * //=> 2014-06-25T17:00:00.000Z\n */\nexport function fromZonedTime(date, timeZone, options) {\n    if (typeof date === 'string' && !date.match(tzPattern)) {\n        return toDate(date, { ...options, timeZone });\n    }\n    date = toDate(date, options);\n    const utc = newDateUTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()).getTime();\n    const offsetMilliseconds = tzParseTimezone(timeZone, new Date(utc));\n    return new Date(utc + offsetMilliseconds);\n}\n","import { tzParseTimezone } from '../_lib/tzParseTimezone/index.js';\n/**\n * @name getTimezoneOffset\n * @category Time Zone Helpers\n * @summary Gets the offset in milliseconds between the time zone and Universal Coordinated Time (UTC)\n *\n * @description\n * Returns the time zone offset from UTC time in milliseconds for IANA time zones as well\n * as other time zone offset string formats.\n *\n * For time zones where daylight savings time is applicable a `Date` should be passed on\n * the second parameter to ensure the offset correctly accounts for DST at that time of\n * year. When omitted, the current date is used.\n *\n * @param timeZone the time zone of this local time, can be an offset or IANA time zone\n * @param date the date with values representing the local time\n *\n * @example\n * const result = getTimezoneOffset('-07:00')\n *   //=> -18000000 (-7 * 60 * 60 * 1000)\n * const result = getTimezoneOffset('Africa/Johannesburg')\n *   //=> 7200000 (2 * 60 * 60 * 1000)\n * const result = getTimezoneOffset('America/New_York', new Date(2016, 0, 1))\n *   //=> -18000000 (-5 * 60 * 60 * 1000)\n * const result = getTimezoneOffset('America/New_York', new Date(2016, 6, 1))\n *   //=> -14400000 (-4 * 60 * 60 * 1000)\n */\nexport function getTimezoneOffset(timeZone, date) {\n    return -tzParseTimezone(timeZone, date);\n}\n","function getContentEditableSelection(element) {\n    const { anchorOffset = 0, focusOffset = 0 } = element.ownerDocument.getSelection() || {};\n    const from = Math.min(anchorOffset, focusOffset);\n    const to = Math.max(anchorOffset, focusOffset);\n    return [from, to];\n}\n\nfunction setContentEditableSelection(element, [from, to]) {\n    var _a, _b;\n    const document = element.ownerDocument;\n    const range = document.createRange();\n    range.setStart(element.firstChild || element, Math.min(from, ((_a = element.textContent) === null || _a === void 0 ? void 0 : _a.length) || 0));\n    range.setEnd(element.lastChild || element, Math.min(to, ((_b = element.textContent) === null || _b === void 0 ? void 0 : _b.length) || 0));\n    const selection = document.getSelection();\n    if (selection) {\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n}\n\nclass ContentEditableAdapter {\n    constructor(element) {\n        this.element = element;\n        this.maxLength = Infinity;\n    }\n    get value() {\n        return this.element.innerText.replace(/\\n\\n$/, '\\n');\n    }\n    set value(value) {\n        // Setting into innerHTML of element with `white-space: pre;` style\n        this.element.innerHTML = value.replace(/\\n$/, '\\n\\n');\n    }\n    get selectionStart() {\n        return getContentEditableSelection(this.element)[0];\n    }\n    get selectionEnd() {\n        return getContentEditableSelection(this.element)[1];\n    }\n    setSelectionRange(from, to) {\n        setContentEditableSelection(this.element, [from || 0, to || 0]);\n    }\n    select() {\n        this.setSelectionRange(0, this.value.length);\n    }\n}\nfunction maskitoAdaptContentEditable(element) {\n    const adapter = new ContentEditableAdapter(element);\n    return new Proxy(element, {\n        get(target, prop) {\n            if (prop in adapter) {\n                return adapter[prop];\n            }\n            const nativeProperty = target[prop];\n            return typeof nativeProperty === 'function'\n                ? nativeProperty.bind(target)\n                : nativeProperty;\n        },\n        set(target, prop, val, receiver) {\n            return Reflect.set(prop in adapter ? adapter : target, prop, val, receiver);\n        },\n    });\n}\n\nconst MASKITO_DEFAULT_ELEMENT_PREDICATE = (e) => e.isContentEditable\n    ? maskitoAdaptContentEditable(e)\n    : e.querySelector('input,textarea') ||\n        e;\n\nconst MASKITO_DEFAULT_OPTIONS = {\n    mask: /^.*$/,\n    preprocessors: [],\n    postprocessors: [],\n    plugins: [],\n    overwriteMode: 'shift',\n};\n\nclass MaskHistory {\n    constructor() {\n        this.now = null;\n        this.past = [];\n        this.future = [];\n    }\n    undo() {\n        const state = this.past.pop();\n        if (state && this.now) {\n            this.future.push(this.now);\n            this.updateElement(state, 'historyUndo');\n        }\n    }\n    redo() {\n        const state = this.future.pop();\n        if (state && this.now) {\n            this.past.push(this.now);\n            this.updateElement(state, 'historyRedo');\n        }\n    }\n    updateHistory(state) {\n        if (!this.now) {\n            this.now = state;\n            return;\n        }\n        const isValueChanged = this.now.value !== state.value;\n        const isSelectionChanged = this.now.selection.some((item, index) => item !== state.selection[index]);\n        if (!isValueChanged && !isSelectionChanged) {\n            return;\n        }\n        if (isValueChanged) {\n            this.past.push(this.now);\n            this.future = [];\n        }\n        this.now = state;\n    }\n    updateElement(state, inputType) {\n        this.now = state;\n        this.updateElementState(state, { inputType, data: null });\n    }\n}\n\nfunction areElementValuesEqual(sampleState, ...states) {\n    return states.every(({ value }) => value === sampleState.value);\n}\nfunction areElementStatesEqual(sampleState, ...states) {\n    return states.every(({ value, selection }) => value === sampleState.value &&\n        selection[0] === sampleState.selection[0] &&\n        selection[1] === sampleState.selection[1]);\n}\n\nfunction applyOverwriteMode({ value, selection }, newCharacters, mode) {\n    const [from, to] = selection;\n    const computedMode = typeof mode === 'function' ? mode({ value, selection }) : mode;\n    return {\n        value,\n        selection: computedMode === 'replace' ? [from, from + newCharacters.length] : [from, to],\n    };\n}\n\nfunction isFixedCharacter(char) {\n    return typeof char === 'string';\n}\n\nfunction getLeadingFixedCharacters(mask, validatedValuePart, newCharacter, initialElementState) {\n    let leadingFixedCharacters = '';\n    for (let i = validatedValuePart.length; i < mask.length; i++) {\n        const charConstraint = mask[i] || '';\n        const isInitiallyExisted = (initialElementState === null || initialElementState === void 0 ? void 0 : initialElementState.value[i]) === charConstraint;\n        if (!isFixedCharacter(charConstraint) ||\n            (charConstraint === newCharacter && !isInitiallyExisted)) {\n            return leadingFixedCharacters;\n        }\n        leadingFixedCharacters += charConstraint;\n    }\n    return leadingFixedCharacters;\n}\n\nfunction validateValueWithMask(value, maskExpression) {\n    if (Array.isArray(maskExpression)) {\n        return (value.length === maskExpression.length &&\n            Array.from(value).every((char, i) => {\n                const charConstraint = maskExpression[i] || '';\n                return isFixedCharacter(charConstraint)\n                    ? char === charConstraint\n                    : char.match(charConstraint);\n            }));\n    }\n    return maskExpression.test(value);\n}\n\nfunction guessValidValueByPattern(elementState, mask, initialElementState) {\n    let maskedFrom = null;\n    let maskedTo = null;\n    const maskedValue = Array.from(elementState.value).reduce((validatedCharacters, char, charIndex) => {\n        const leadingCharacters = getLeadingFixedCharacters(mask, validatedCharacters, char, initialElementState);\n        const newValidatedChars = validatedCharacters + leadingCharacters;\n        const charConstraint = mask[newValidatedChars.length] || '';\n        if (isFixedCharacter(charConstraint)) {\n            return newValidatedChars + charConstraint;\n        }\n        if (!char.match(charConstraint)) {\n            return newValidatedChars;\n        }\n        if (maskedFrom === null && charIndex >= elementState.selection[0]) {\n            maskedFrom = newValidatedChars.length;\n        }\n        if (maskedTo === null && charIndex >= elementState.selection[1]) {\n            maskedTo = newValidatedChars.length;\n        }\n        return newValidatedChars + char;\n    }, '');\n    const trailingFixedCharacters = getLeadingFixedCharacters(mask, maskedValue, '', initialElementState);\n    return {\n        value: validateValueWithMask(maskedValue + trailingFixedCharacters, mask)\n            ? maskedValue + trailingFixedCharacters\n            : maskedValue,\n        selection: [maskedFrom !== null && maskedFrom !== void 0 ? maskedFrom : maskedValue.length, maskedTo !== null && maskedTo !== void 0 ? maskedTo : maskedValue.length],\n    };\n}\n\nfunction guessValidValueByRegExp({ value, selection }, maskRegExp) {\n    const [from, to] = selection;\n    let newFrom = from;\n    let newTo = to;\n    const validatedValue = Array.from(value).reduce((validatedValuePart, char, i) => {\n        const newPossibleValue = validatedValuePart + char;\n        if (from === i) {\n            newFrom = validatedValuePart.length;\n        }\n        if (to === i) {\n            newTo = validatedValuePart.length;\n        }\n        return newPossibleValue.match(maskRegExp) ? newPossibleValue : validatedValuePart;\n    }, '');\n    return { value: validatedValue, selection: [newFrom, newTo] };\n}\n\nfunction calibrateValueByMask(elementState, mask, initialElementState = null) {\n    if (validateValueWithMask(elementState.value, mask)) {\n        return elementState;\n    }\n    const { value, selection } = Array.isArray(mask)\n        ? guessValidValueByPattern(elementState, mask, initialElementState)\n        : guessValidValueByRegExp(elementState, mask);\n    return {\n        selection,\n        value: Array.isArray(mask) ? value.slice(0, mask.length) : value,\n    };\n}\n\nfunction removeFixedMaskCharacters(initialElementState, mask) {\n    if (!Array.isArray(mask)) {\n        return initialElementState;\n    }\n    const [from, to] = initialElementState.selection;\n    const selection = [];\n    const unmaskedValue = Array.from(initialElementState.value).reduce((rawValue, char, i) => {\n        const charConstraint = mask[i] || '';\n        if (i === from) {\n            selection.push(rawValue.length);\n        }\n        if (i === to) {\n            selection.push(rawValue.length);\n        }\n        return isFixedCharacter(charConstraint) && charConstraint === char\n            ? rawValue\n            : rawValue + char;\n    }, '');\n    if (selection.length < 2) {\n        selection.push(...new Array(2 - selection.length).fill(unmaskedValue.length));\n    }\n    return {\n        value: unmaskedValue,\n        selection: [selection[0], selection[1]],\n    };\n}\n\nclass MaskModel {\n    constructor(initialElementState, maskOptions) {\n        this.initialElementState = initialElementState;\n        this.maskOptions = maskOptions;\n        this.value = '';\n        this.selection = [0, 0];\n        const { value, selection } = calibrateValueByMask(this.initialElementState, this.getMaskExpression(this.initialElementState));\n        this.value = value;\n        this.selection = selection;\n    }\n    addCharacters([from, to], newCharacters) {\n        const { value, maskOptions } = this;\n        const maskExpression = this.getMaskExpression({\n            value: value.slice(0, from) + newCharacters + value.slice(to),\n            selection: [from + newCharacters.length, from + newCharacters.length],\n        });\n        const initialElementState = { value, selection: [from, to] };\n        const unmaskedElementState = removeFixedMaskCharacters(initialElementState, maskExpression);\n        const [unmaskedFrom, unmaskedTo] = applyOverwriteMode(unmaskedElementState, newCharacters, maskOptions.overwriteMode).selection;\n        const newUnmaskedLeadingValuePart = unmaskedElementState.value.slice(0, unmaskedFrom) + newCharacters;\n        const newCaretIndex = newUnmaskedLeadingValuePart.length;\n        const maskedElementState = calibrateValueByMask({\n            value: newUnmaskedLeadingValuePart +\n                unmaskedElementState.value.slice(unmaskedTo),\n            selection: [newCaretIndex, newCaretIndex],\n        }, maskExpression, initialElementState);\n        const isInvalidCharsInsertion = \n        // eslint-disable-next-line @typescript-eslint/prefer-string-starts-ends-with\n        value.slice(0, unmaskedFrom) ===\n            calibrateValueByMask({\n                value: newUnmaskedLeadingValuePart,\n                selection: [newCaretIndex, newCaretIndex],\n            }, maskExpression, initialElementState).value;\n        if (isInvalidCharsInsertion ||\n            areElementStatesEqual(this, maskedElementState) // If typing new characters does not change value\n        ) {\n            throw new Error('Invalid mask value');\n        }\n        this.value = maskedElementState.value;\n        this.selection = maskedElementState.selection;\n    }\n    deleteCharacters([from, to]) {\n        if (from === to || !to) {\n            return;\n        }\n        const { value } = this;\n        const maskExpression = this.getMaskExpression({\n            value: value.slice(0, from) + value.slice(to),\n            selection: [from, from],\n        });\n        const initialElementState = { value, selection: [from, to] };\n        const unmaskedElementState = removeFixedMaskCharacters(initialElementState, maskExpression);\n        const [unmaskedFrom, unmaskedTo] = unmaskedElementState.selection;\n        const newUnmaskedValue = unmaskedElementState.value.slice(0, unmaskedFrom) +\n            unmaskedElementState.value.slice(unmaskedTo);\n        const maskedElementState = calibrateValueByMask({ value: newUnmaskedValue, selection: [unmaskedFrom, unmaskedFrom] }, maskExpression, initialElementState);\n        this.value = maskedElementState.value;\n        this.selection = maskedElementState.selection;\n    }\n    getMaskExpression(elementState) {\n        const { mask } = this.maskOptions;\n        return typeof mask === 'function' ? mask(elementState) : mask;\n    }\n}\n\nclass EventListener {\n    constructor(element) {\n        this.element = element;\n        this.listeners = [];\n    }\n    listen(eventType, fn, options) {\n        const untypedFn = fn;\n        this.element.addEventListener(eventType, untypedFn, options);\n        this.listeners.push(() => this.element.removeEventListener(eventType, untypedFn));\n    }\n    destroy() {\n        this.listeners.forEach((stopListen) => stopListen());\n    }\n}\n\nconst HotkeyModifier = {\n    CTRL: 1 << 0,\n    ALT: 1 << 1,\n    SHIFT: 1 << 2,\n    META: 1 << 3,\n};\n// TODO add variants that can be processed correctly\nconst HotkeyCode = {\n    Y: 89,\n    Z: 90,\n};\n/**\n * Checks if the passed keyboard event match the required hotkey.\n *\n * @example\n * input.addEventListener('keydown', (event) => {\n *     if (isHotkey(event, HotkeyModifier.CTRL | HotkeyModifier.SHIFT, HotkeyCode.Z)) {\n *         // redo hotkey pressed\n *     }\n * })\n *\n * @return will return `true` only if the {@link HotkeyCode} matches and only the necessary\n * {@link HotkeyModifier modifiers} have been pressed\n */\nfunction isHotkey(event, modifiers, hotkeyCode) {\n    return (event.ctrlKey === !!(modifiers & HotkeyModifier.CTRL) &&\n        event.altKey === !!(modifiers & HotkeyModifier.ALT) &&\n        event.shiftKey === !!(modifiers & HotkeyModifier.SHIFT) &&\n        event.metaKey === !!(modifiers & HotkeyModifier.META) &&\n        /**\n         * We intentionally use legacy {@link KeyboardEvent#keyCode `keyCode`} property. It is more\n         * \"keyboard-layout\"-independent than {@link KeyboardEvent#key `key`} or {@link KeyboardEvent#code `code`} properties.\n         * @see {@link https://github.com/taiga-family/maskito/issues/315 `KeyboardEvent#code` issue}\n         */\n        event.keyCode === hotkeyCode);\n}\n\nfunction isRedo(event) {\n    return (isHotkey(event, HotkeyModifier.CTRL, HotkeyCode.Y) || // Windows\n        isHotkey(event, HotkeyModifier.CTRL | HotkeyModifier.SHIFT, HotkeyCode.Z) || // Windows & Android\n        isHotkey(event, HotkeyModifier.META | HotkeyModifier.SHIFT, HotkeyCode.Z) // macOS & iOS\n    );\n}\nfunction isUndo(event) {\n    return (isHotkey(event, HotkeyModifier.CTRL, HotkeyCode.Z) || // Windows & Android\n        isHotkey(event, HotkeyModifier.META, HotkeyCode.Z) // macOS & iOS\n    );\n}\n\n/**\n * Sets value to element, and dispatches input event\n * if you passed ELementState, it also sets selection range\n *\n * @example\n * maskitoUpdateElement(input, newValue);\n * maskitoUpdateElement(input, elementState);\n *\n * @see {@link https://github.com/taiga-family/maskito/issues/804 issue}\n *\n * @return void\n */\nfunction maskitoUpdateElement(element, valueOrElementState) {\n    var _a;\n    const initialValue = element.value;\n    if (typeof valueOrElementState === 'string') {\n        element.value = valueOrElementState;\n    }\n    else {\n        const [from, to] = valueOrElementState.selection;\n        element.value = valueOrElementState.value;\n        if (element.matches(':focus')) {\n            (_a = element.setSelectionRange) === null || _a === void 0 ? void 0 : _a.call(element, from, to);\n        }\n    }\n    if (element.value !== initialValue) {\n        element.dispatchEvent(new Event('input', \n        /**\n         * React handles this event only on bubbling phase\n         *\n         * here is the list of events that are processed in the capture stage, others are processed in the bubbling stage\n         * https://github.com/facebook/react/blob/cb2439624f43c510007f65aea5c50a8bb97917e4/packages/react-dom-bindings/src/events/DOMPluginEventSystem.js#L222\n         */\n        { bubbles: true }));\n    }\n}\n\nfunction getLineSelection({ value, selection }, isForward) {\n    const [from, to] = selection;\n    if (from !== to) {\n        return [from, to];\n    }\n    const nearestBreak = isForward\n        ? value.slice(from).indexOf('\\n') + 1 || value.length\n        : value.slice(0, to).lastIndexOf('\\n') + 1;\n    const selectFrom = isForward ? from : nearestBreak;\n    const selectTo = isForward ? nearestBreak : to;\n    return [selectFrom, selectTo];\n}\n\nfunction getNotEmptySelection({ value, selection }, isForward) {\n    const [from, to] = selection;\n    if (from !== to) {\n        return [from, to];\n    }\n    const notEmptySelection = isForward ? [from, to + 1] : [from - 1, to];\n    return notEmptySelection.map((x) => Math.min(Math.max(x, 0), value.length));\n}\n\nconst TRAILING_SPACES_REG = /\\s+$/g;\nconst LEADING_SPACES_REG = /^\\s+/g;\nconst SPACE_REG = /\\s/;\nfunction getWordSelection({ value, selection }, isForward) {\n    const [from, to] = selection;\n    if (from !== to) {\n        return [from, to];\n    }\n    if (isForward) {\n        const valueAfterSelectionStart = value.slice(from);\n        const [leadingSpaces] = valueAfterSelectionStart.match(LEADING_SPACES_REG) || [\n            '',\n        ];\n        const nearestWordEndIndex = valueAfterSelectionStart\n            .trimStart()\n            .search(SPACE_REG);\n        return [\n            from,\n            nearestWordEndIndex !== -1\n                ? from + leadingSpaces.length + nearestWordEndIndex\n                : value.length,\n        ];\n    }\n    const valueBeforeSelectionEnd = value.slice(0, to);\n    const [trailingSpaces] = valueBeforeSelectionEnd.match(TRAILING_SPACES_REG) || [''];\n    const selectedWordLength = valueBeforeSelectionEnd\n        .trimEnd()\n        .split('')\n        .reverse()\n        .findIndex((char) => char.match(SPACE_REG));\n    return [\n        selectedWordLength !== -1 ? to - trailingSpaces.length - selectedWordLength : 0,\n        to,\n    ];\n}\n\n/* eslint-disable @typescript-eslint/ban-types */\n/**\n * @internal\n */\nfunction maskitoPipe(processors = []) {\n    return (initialData, ...readonlyArgs) => processors.reduce((data, fn) => (Object.assign(Object.assign({}, data), fn(data, ...readonlyArgs))), initialData);\n}\n\nfunction maskitoTransform(valueOrState, maskitoOptions) {\n    const options = Object.assign(Object.assign({}, MASKITO_DEFAULT_OPTIONS), maskitoOptions);\n    const preprocessor = maskitoPipe(options.preprocessors);\n    const postprocessor = maskitoPipe(options.postprocessors);\n    const initialElementState = typeof valueOrState === 'string'\n        ? { value: valueOrState, selection: [0, 0] }\n        : valueOrState;\n    const { elementState } = preprocessor({ elementState: initialElementState, data: '' }, 'validation');\n    const maskModel = new MaskModel(elementState, options);\n    const { value, selection } = postprocessor(maskModel, initialElementState);\n    return typeof valueOrState === 'string' ? value : { value, selection };\n}\n\nclass Maskito extends MaskHistory {\n    constructor(element, maskitoOptions) {\n        super();\n        this.element = element;\n        this.maskitoOptions = maskitoOptions;\n        this.isTextArea = this.element.nodeName === 'TEXTAREA';\n        this.eventListener = new EventListener(this.element);\n        this.options = Object.assign(Object.assign({}, MASKITO_DEFAULT_OPTIONS), this.maskitoOptions);\n        this.preprocessor = maskitoPipe(this.options.preprocessors);\n        this.postprocessor = maskitoPipe(this.options.postprocessors);\n        this.teardowns = this.options.plugins.map((plugin) => plugin(this.element, this.options));\n        this.updateHistory(this.elementState);\n        this.eventListener.listen('keydown', (event) => {\n            if (isRedo(event)) {\n                event.preventDefault();\n                return this.redo();\n            }\n            if (isUndo(event)) {\n                event.preventDefault();\n                return this.undo();\n            }\n        });\n        this.eventListener.listen('beforeinput', (event) => {\n            var _a;\n            const isForward = event.inputType.includes('Forward');\n            this.updateHistory(this.elementState);\n            switch (event.inputType) {\n                // historyUndo/historyRedo will not be triggered if value was modified programmatically\n                case 'historyUndo':\n                    event.preventDefault();\n                    return this.undo();\n                case 'historyRedo':\n                    event.preventDefault();\n                    return this.redo();\n                case 'deleteByCut':\n                case 'deleteContentBackward':\n                case 'deleteContentForward':\n                    return this.handleDelete({\n                        event,\n                        isForward,\n                        selection: getNotEmptySelection(this.elementState, isForward),\n                    });\n                case 'deleteWordForward':\n                case 'deleteWordBackward':\n                    return this.handleDelete({\n                        event,\n                        isForward,\n                        selection: getWordSelection(this.elementState, isForward),\n                        force: true,\n                    });\n                case 'deleteSoftLineBackward':\n                case 'deleteSoftLineForward':\n                case 'deleteHardLineBackward':\n                case 'deleteHardLineForward':\n                    return this.handleDelete({\n                        event,\n                        isForward,\n                        selection: getLineSelection(this.elementState, isForward),\n                        force: true,\n                    });\n                case 'insertCompositionText':\n                    return; // will be handled inside `compositionend` event\n                case 'insertReplacementText':\n                    /**\n                     * According {@link https://www.w3.org/TR/input-events-2 W3C specification}:\n                     * > `insertReplacementText` – insert or replace existing text by means of a spell checker,\n                     * > auto-correct, writing suggestions or similar.\n                     * ___\n                     * Firefox emits `insertReplacementText` event for its suggestion/autofill and for spell checker.\n                     * However, it is impossible to detect which part of the textfield value is going to be replaced\n                     * (`selectionStart` and `selectionEnd` just equal to the last caret position).\n                     * ___\n                     * Chrome does not fire `beforeinput` event for its suggestion/autofill.\n                     * It emits only `input` event with `inputType` and `data` set to `undefined`.\n                     * ___\n                     * All these browser limitations make us to validate the result value later in `input` event.\n                     */\n                    return;\n                case 'insertLineBreak':\n                case 'insertParagraph':\n                    return this.handleEnter(event);\n                case 'insertFromPaste':\n                case 'insertText':\n                case 'insertFromDrop':\n                default:\n                    return this.handleInsert(event, event.data ||\n                        (\n                        // `event.data` for `contentEditable` is always `null` for paste/drop events\n                        (_a = event.dataTransfer) === null || _a === void 0 ? void 0 : _a.getData('text/plain')) ||\n                        '');\n            }\n        });\n        this.eventListener.listen('input', ({ inputType }) => {\n            if (inputType === 'insertCompositionText') {\n                return; // will be handled inside `compositionend` event\n            }\n            this.ensureValueFitsMask();\n            this.updateHistory(this.elementState);\n        });\n        this.eventListener.listen('compositionend', () => {\n            this.ensureValueFitsMask();\n            this.updateHistory(this.elementState);\n        });\n    }\n    get elementState() {\n        const { value, selectionStart, selectionEnd } = this.element;\n        return {\n            value,\n            selection: [selectionStart || 0, selectionEnd || 0],\n        };\n    }\n    get maxLength() {\n        const { maxLength } = this.element;\n        return maxLength === -1 ? Infinity : maxLength;\n    }\n    destroy() {\n        this.eventListener.destroy();\n        this.teardowns.forEach((teardown) => teardown === null || teardown === void 0 ? void 0 : teardown());\n    }\n    updateElementState({ value, selection }, eventInit = {\n        inputType: 'insertText',\n        data: null,\n    }) {\n        const initialValue = this.elementState.value;\n        this.updateValue(value);\n        this.updateSelectionRange(selection);\n        if (initialValue !== value) {\n            this.dispatchInputEvent(eventInit);\n        }\n    }\n    updateSelectionRange([from, to]) {\n        var _a;\n        const { element } = this;\n        if (element.matches(':focus') &&\n            (element.selectionStart !== from || element.selectionEnd !== to)) {\n            (_a = element.setSelectionRange) === null || _a === void 0 ? void 0 : _a.call(element, from, to);\n        }\n    }\n    updateValue(value) {\n        this.element.value = value;\n    }\n    ensureValueFitsMask() {\n        this.updateElementState(maskitoTransform(this.elementState, this.options));\n    }\n    dispatchInputEvent(eventInit = {\n        inputType: 'insertText',\n        data: null,\n    }) {\n        if (globalThis.InputEvent) {\n            this.element.dispatchEvent(new InputEvent('input', Object.assign(Object.assign({}, eventInit), { bubbles: true, cancelable: false })));\n        }\n    }\n    handleDelete({ event, selection, isForward, force = false, }) {\n        const initialState = {\n            value: this.elementState.value,\n            selection,\n        };\n        const [initialFrom, initialTo] = initialState.selection;\n        const { elementState } = this.preprocessor({\n            elementState: initialState,\n            data: '',\n        }, isForward ? 'deleteForward' : 'deleteBackward');\n        const maskModel = new MaskModel(elementState, this.options);\n        const [from, to] = elementState.selection;\n        maskModel.deleteCharacters([from, to]);\n        const newElementState = this.postprocessor(maskModel, initialState);\n        const newPossibleValue = initialState.value.slice(0, initialFrom) +\n            initialState.value.slice(initialTo);\n        if (newPossibleValue === newElementState.value &&\n            !force &&\n            !this.element.isContentEditable) {\n            return;\n        }\n        event.preventDefault();\n        if (areElementValuesEqual(initialState, elementState, maskModel, newElementState)) {\n            // User presses Backspace/Delete for the fixed value\n            return this.updateSelectionRange(isForward ? [to, to] : [from, from]);\n        }\n        this.updateElementState(newElementState, {\n            inputType: event.inputType,\n            data: null,\n        });\n        this.updateHistory(newElementState);\n    }\n    handleInsert(event, data) {\n        const initialElementState = this.elementState;\n        const { elementState, data: insertedText = data } = this.preprocessor({\n            data,\n            elementState: initialElementState,\n        }, 'insert');\n        const maskModel = new MaskModel(elementState, this.options);\n        try {\n            maskModel.addCharacters(elementState.selection, insertedText);\n        }\n        catch (_a) {\n            return event.preventDefault();\n        }\n        const [from, to] = elementState.selection;\n        const newPossibleValue = initialElementState.value.slice(0, from) +\n            data +\n            initialElementState.value.slice(to);\n        const newElementState = this.postprocessor(maskModel, initialElementState);\n        if (newElementState.value.length > this.maxLength) {\n            return event.preventDefault();\n        }\n        if (newPossibleValue !== newElementState.value ||\n            this.element.isContentEditable) {\n            event.preventDefault();\n            this.updateElementState(newElementState, {\n                data,\n                inputType: event.inputType,\n            });\n            this.updateHistory(newElementState);\n        }\n    }\n    handleEnter(event) {\n        if (this.isTextArea || this.element.isContentEditable) {\n            this.handleInsert(event, '\\n');\n        }\n    }\n}\n\nfunction maskitoChangeEventPlugin() {\n    return (element) => {\n        if (element.isContentEditable) {\n            return;\n        }\n        let value = element.value;\n        const valueListener = () => {\n            value = element.value;\n        };\n        const blurListener = () => {\n            if (element.value !== value) {\n                element.dispatchEvent(new Event('change', { bubbles: true }));\n            }\n        };\n        element.addEventListener('focus', valueListener);\n        element.addEventListener('change', valueListener);\n        element.addEventListener('blur', blurListener);\n        return () => {\n            element.removeEventListener('focus', valueListener);\n            element.removeEventListener('change', valueListener);\n            element.removeEventListener('blur', blurListener);\n        };\n    };\n}\n\nfunction maskitoInitialCalibrationPlugin(customOptions) {\n    return (element, options) => {\n        const from = element.selectionStart || 0;\n        const to = element.selectionEnd || 0;\n        maskitoUpdateElement(element, {\n            value: maskitoTransform(element.value, customOptions || options),\n            selection: [from, to],\n        });\n    };\n}\n\nfunction maskitoStrictCompositionPlugin() {\n    return (element, maskitoOptions) => {\n        const listener = (event) => {\n            if (event.inputType !== 'insertCompositionText') {\n                return;\n            }\n            const selection = [\n                element.selectionStart || 0,\n                element.selectionEnd || 0,\n            ];\n            const elementState = {\n                selection,\n                value: element.value,\n            };\n            const validatedState = maskitoTransform(elementState, maskitoOptions);\n            if (!areElementStatesEqual(elementState, validatedState)) {\n                event.preventDefault();\n                maskitoUpdateElement(element, validatedState);\n            }\n        };\n        element.addEventListener('input', listener);\n        return () => element.removeEventListener('input', listener);\n    };\n}\n\nexport { MASKITO_DEFAULT_ELEMENT_PREDICATE, MASKITO_DEFAULT_OPTIONS, Maskito, maskitoAdaptContentEditable, maskitoChangeEventPlugin, maskitoInitialCalibrationPlugin, maskitoPipe, maskitoStrictCompositionPlugin, maskitoTransform, maskitoUpdateElement };\n","import { maskitoUpdateElement, MASKITO_DEFAULT_OPTIONS, maskitoTransform } from '@maskito/core';\n\n/**\n * Clamps a value between two inclusive limits\n *\n * @param value\n * @param min lower limit\n * @param max upper limit\n */\nfunction clamp(value, min, max) {\n    const clampedValue = Math.min(Number(max), Math.max(Number(min), Number(value)));\n    return (value instanceof Date ? new Date(clampedValue) : clampedValue);\n}\n\nfunction countDigits(str) {\n    return str.replaceAll(/\\W/g, '').length;\n}\n\nfunction appendDate(initialDate, { day, month, year } = {}) {\n    const date = new Date(initialDate);\n    if (day) {\n        date.setDate(date.getDate() + day);\n    }\n    if (month) {\n        date.setMonth(date.getMonth() + month);\n    }\n    if (year) {\n        date.setFullYear(date.getFullYear() + year);\n    }\n    return date;\n}\n\nconst getDateSegmentValueLength = (dateString) => {\n    var _a, _b, _c;\n    return ({\n        day: ((_a = dateString.match(/d/g)) === null || _a === void 0 ? void 0 : _a.length) || 0,\n        month: ((_b = dateString.match(/m/g)) === null || _b === void 0 ? void 0 : _b.length) || 0,\n        year: ((_c = dateString.match(/y/g)) === null || _c === void 0 ? void 0 : _c.length) || 0,\n    });\n};\n\nfunction dateToSegments(date) {\n    return {\n        day: String(date.getDate()).padStart(2, '0'),\n        month: String(date.getMonth() + 1).padStart(2, '0'),\n        year: String(date.getFullYear()).padStart(4, '0'),\n        hours: String(date.getHours()).padStart(2, '0'),\n        minutes: String(date.getMinutes()).padStart(2, '0'),\n        seconds: String(date.getSeconds()).padStart(2, '0'),\n        milliseconds: String(date.getMilliseconds()).padStart(3, '0'),\n    };\n}\n\nfunction getFirstCompleteDate(dateString, dateModeTemplate) {\n    const digitsInDate = countDigits(dateModeTemplate);\n    const [completeDate = ''] = dateString.match(new RegExp(`(\\\\D*\\\\d){${digitsInDate}}`)) || [];\n    return completeDate;\n}\n\nfunction isDateStringComplete(dateString, dateModeTemplate) {\n    if (dateString.length < dateModeTemplate.length) {\n        return false;\n    }\n    return dateString.split(/\\D/).every((segment) => !segment.match(/^0+$/));\n}\n\nfunction parseDateRangeString(dateRange, dateModeTemplate, rangeSeparator) {\n    const digitsInDate = countDigits(dateModeTemplate);\n    return (dateRange\n        .replace(rangeSeparator, '')\n        .match(new RegExp(`(\\\\D*\\\\d[^\\\\d\\\\s]*){1,${digitsInDate}}`, 'g')) || []);\n}\n\nfunction parseDateString(dateString, fullMode) {\n    const cleanMode = fullMode.replaceAll(/[^dmy]/g, '');\n    const onlyDigitsDate = dateString.replaceAll(/\\D+/g, '');\n    const dateSegments = {\n        day: onlyDigitsDate.slice(cleanMode.indexOf('d'), cleanMode.lastIndexOf('d') + 1),\n        month: onlyDigitsDate.slice(cleanMode.indexOf('m'), cleanMode.lastIndexOf('m') + 1),\n        year: onlyDigitsDate.slice(cleanMode.indexOf('y'), cleanMode.lastIndexOf('y') + 1),\n    };\n    return Object.fromEntries(Object.entries(dateSegments)\n        .filter(([_, value]) => Boolean(value))\n        .sort(([a], [b]) => fullMode.toLowerCase().indexOf(a.slice(0, 1)) >\n        fullMode.toLowerCase().indexOf(b.slice(0, 1))\n        ? 1\n        : -1));\n}\n\nfunction segmentsToDate(parsedDate, parsedTime) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const year = ((_a = parsedDate.year) === null || _a === void 0 ? void 0 : _a.length) === 2 ? `20${parsedDate.year}` : parsedDate.year;\n    const date = new Date(Number(year !== null && year !== void 0 ? year : '0'), Number((_b = parsedDate.month) !== null && _b !== void 0 ? _b : '1') - 1, Number((_c = parsedDate.day) !== null && _c !== void 0 ? _c : '1'), Number((_d = parsedTime === null || parsedTime === void 0 ? void 0 : parsedTime.hours) !== null && _d !== void 0 ? _d : '0'), Number((_e = parsedTime === null || parsedTime === void 0 ? void 0 : parsedTime.minutes) !== null && _e !== void 0 ? _e : '0'), Number((_f = parsedTime === null || parsedTime === void 0 ? void 0 : parsedTime.seconds) !== null && _f !== void 0 ? _f : '0'), Number((_g = parsedTime === null || parsedTime === void 0 ? void 0 : parsedTime.milliseconds) !== null && _g !== void 0 ? _g : '0'));\n    // needed for years less than 1900\n    date.setFullYear(Number(year !== null && year !== void 0 ? year : '0'));\n    return date;\n}\n\nconst DATE_TIME_SEPARATOR = ', ';\n\nfunction toDateString({ day, month, year, hours, minutes, seconds, milliseconds, }, { dateMode, dateTimeSeparator = DATE_TIME_SEPARATOR, timeMode, }) {\n    var _a;\n    const safeYear = ((_a = dateMode.match(/y/g)) === null || _a === void 0 ? void 0 : _a.length) === 2 ? year === null || year === void 0 ? void 0 : year.slice(-2) : year;\n    const fullMode = dateMode + (timeMode ? dateTimeSeparator + timeMode : '');\n    return fullMode\n        .replaceAll(/d+/g, day !== null && day !== void 0 ? day : '')\n        .replaceAll(/m+/g, month !== null && month !== void 0 ? month : '')\n        .replaceAll(/y+/g, safeYear !== null && safeYear !== void 0 ? safeYear : '')\n        .replaceAll(/H+/g, hours !== null && hours !== void 0 ? hours : '')\n        .replaceAll('MSS', milliseconds !== null && milliseconds !== void 0 ? milliseconds : '')\n        .replaceAll(/M+/g, minutes !== null && minutes !== void 0 ? minutes : '')\n        .replaceAll(/S+/g, seconds !== null && seconds !== void 0 ? seconds : '')\n        .replaceAll(/^\\D+/g, '')\n        .replaceAll(/\\D+$/g, '');\n}\n\nconst DATE_SEGMENTS_MAX_VALUES = {\n    day: 31,\n    month: 12,\n    year: 9999,\n};\n\nconst DEFAULT_DECIMAL_PSEUDO_SEPARATORS = ['.', ',', 'б', 'ю'];\n\nconst DEFAULT_MIN_DATE = new Date('0001-01-01');\nconst DEFAULT_MAX_DATE = new Date('9999-12-31');\n\nconst DEFAULT_TIME_SEGMENT_MAX_VALUES = {\n    hours: 23,\n    minutes: 59,\n    seconds: 59,\n    milliseconds: 999,\n};\n\nconst TIME_FIXED_CHARACTERS = [':', '.'];\n\nconst TIME_SEGMENT_VALUE_LENGTHS = {\n    hours: 2,\n    minutes: 2,\n    seconds: 2,\n    milliseconds: 3,\n};\n\n/**\n * {@link https://unicode-table.com/en/00A0/ Non-breaking space}.\n */\nconst CHAR_NO_BREAK_SPACE = '\\u00A0';\n/**\n * {@link https://symbl.cc/en/200B/ Zero width space}.\n */\nconst CHAR_ZERO_WIDTH_SPACE = '\\u200B';\n/**\n * {@link https://unicode-table.com/en/2013/ EN dash}\n * is used to indicate a range of numbers or a span of time.\n * @example 2006–2022\n */\nconst CHAR_EN_DASH = '\\u2013';\n/**\n * {@link https://unicode-table.com/en/2014/ EM dash}\n * is used to mark a break in a sentence.\n * @example Taiga UI — powerful set of open source components for Angular\n * ___\n * Don't confuse with {@link CHAR_EN_DASH} or {@link CHAR_HYPHEN}!\n */\nconst CHAR_EM_DASH = '\\u2014';\n/**\n * {@link https://unicode-table.com/en/002D/ Hyphen (minus sign)}\n * is used to combine words.\n * @example well-behaved\n * ___\n * Don't confuse with {@link CHAR_EN_DASH} or {@link CHAR_EM_DASH}!\n */\nconst CHAR_HYPHEN = '\\u002D';\n/**\n * {@link https://unicode-table.com/en/2212/ Minus}\n * is used as math operator symbol or before negative digits.\n * ---\n * Can be used as `&minus;`. Don't confuse with {@link CHAR_HYPHEN}\n */\nconst CHAR_MINUS = '\\u2212';\n/**\n * {@link https://symbl.cc/en/30FC/ Katakana-Hiragana Prolonged Sound Mark}\n * is used as prolonged sounds in Japanese.\n */\nconst CHAR_JP_HYPHEN = '\\u30FC';\n/**\n * {@link https://symbl.cc/en/003A/ Colon}\n * is a punctuation mark that connects parts of a text logically.\n * ---\n * is also used as separator in time.\n */\nconst CHAR_COLON = '\\u003A';\n/**\n * {@link https://symbl.cc/en/FF1A/ Full-width colon}\n * is a full-width punctuation mark used to separate parts of a text commonly in Japanese.\n */\nconst CHAR_JP_COLON = '\\uFF1A';\n\nfunction validateDateString({ dateString, dateModeTemplate, dateSegmentsSeparator, offset, selection: [from, to], }) {\n    const parsedDate = parseDateString(dateString, dateModeTemplate);\n    const dateSegments = Object.entries(parsedDate);\n    const validatedDateSegments = {};\n    for (const [segmentName, segmentValue] of dateSegments) {\n        const validatedDate = toDateString(validatedDateSegments, {\n            dateMode: dateModeTemplate,\n        });\n        const maxSegmentValue = DATE_SEGMENTS_MAX_VALUES[segmentName];\n        const fantomSeparator = validatedDate.length && dateSegmentsSeparator.length;\n        const lastSegmentDigitIndex = offset +\n            validatedDate.length +\n            fantomSeparator +\n            getDateSegmentValueLength(dateModeTemplate)[segmentName];\n        const isLastSegmentDigitAdded = lastSegmentDigitIndex >= from && lastSegmentDigitIndex === to;\n        if (isLastSegmentDigitAdded && Number(segmentValue) > Number(maxSegmentValue)) {\n            // 3|1.10.2010 => Type 9 => 3|1.10.2010\n            return { validatedDateString: '', updatedSelection: [from, to] }; // prevent changes\n        }\n        if (isLastSegmentDigitAdded && Number(segmentValue) < 1) {\n            // 31.0|1.2010 => Type 0 => 31.0|1.2010\n            return { validatedDateString: '', updatedSelection: [from, to] }; // prevent changes\n        }\n        validatedDateSegments[segmentName] = segmentValue;\n    }\n    const validatedDateString = toDateString(validatedDateSegments, {\n        dateMode: dateModeTemplate,\n    });\n    const addedDateSegmentSeparators = validatedDateString.length - dateString.length;\n    return {\n        validatedDateString,\n        updatedSelection: [\n            from + addedDateSegmentSeparators,\n            to + addedDateSegmentSeparators,\n        ],\n    };\n}\n\n/**\n * Copy-pasted solution from lodash\n * @see https://lodash.com/docs/4.17.15#escapeRegExp\n */\nconst reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\nconst reHasRegExpChar = new RegExp(reRegExpChar.source);\nfunction escapeRegExp(str) {\n    return str && reHasRegExpChar.test(str)\n        ? str.replaceAll(reRegExpChar, String.raw `\\$&`)\n        : str;\n}\n\nfunction extractAffixes(value, { prefix, postfix }) {\n    var _a, _b;\n    const prefixRegExp = new RegExp(`^${escapeRegExp(prefix)}`);\n    const postfixRegExp = new RegExp(`${escapeRegExp(postfix)}$`);\n    const [extractedPrefix = ''] = (_a = value.match(prefixRegExp)) !== null && _a !== void 0 ? _a : [];\n    const [extractedPostfix = ''] = (_b = value.match(postfixRegExp)) !== null && _b !== void 0 ? _b : [];\n    const cleanValue = value.replace(prefixRegExp, '').replace(postfixRegExp, '');\n    return { extractedPrefix, extractedPostfix, cleanValue };\n}\n\nfunction findCommonBeginningSubstr(a, b) {\n    let res = '';\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return res;\n        }\n        res += a[i];\n    }\n    return res;\n}\n\nfunction identity(x) {\n    return x;\n}\n\nfunction isEmpty(entity) {\n    return !entity || (typeof entity === 'object' && Object.keys(entity).length === 0);\n}\n\nconst ALL_ZEROES_RE = /^0+$/;\nfunction padWithZeroesUntilValid(segmentValue, paddedMaxValue, prefixedZeroesCount = 0) {\n    const paddedSegmentValue = segmentValue.padEnd(paddedMaxValue.length, '0');\n    if (Number(paddedSegmentValue) <= Number(paddedMaxValue)) {\n        return { validatedSegmentValue: segmentValue, prefixedZeroesCount };\n    }\n    if (paddedSegmentValue.endsWith('0')) {\n        // 00:|00 => Type 9 => 00:09|\n        return padWithZeroesUntilValid(`0${segmentValue.slice(0, paddedMaxValue.length - 1)}`, paddedMaxValue, prefixedZeroesCount + 1);\n    }\n    const valueWithoutLastChar = segmentValue.slice(0, paddedMaxValue.length - 1);\n    if (valueWithoutLastChar.match(ALL_ZEROES_RE)) {\n        return { validatedSegmentValue: '', prefixedZeroesCount };\n    }\n    // |19:00 => Type 2 => 2|0:00\n    return padWithZeroesUntilValid(`${valueWithoutLastChar}0`, paddedMaxValue, prefixedZeroesCount);\n}\n\n/**\n * Replace fullwidth colon with half width colon\n * @param fullWidthColon full width colon\n * @returns processed half width colon\n */\nfunction toHalfWidthColon(fullWidthColon) {\n    return fullWidthColon.replaceAll(new RegExp(CHAR_JP_COLON, 'g'), CHAR_COLON);\n}\n\n/**\n * Replace fullwidth numbers with half width number\n * @param fullWidthNumber full width number\n * @returns processed half width number\n */\nfunction toHalfWidthNumber(fullWidthNumber) {\n    return fullWidthNumber.replaceAll(/[０-９]/g, (s) => String.fromCharCode(s.charCodeAt(0) - 0xfee0));\n}\n\n/**\n * Convert full width colon (：) to half width one (:)\n */\nfunction createColonConvertPreprocessor() {\n    return ({ elementState, data }) => {\n        const { value, selection } = elementState;\n        return {\n            elementState: {\n                selection,\n                value: toHalfWidthColon(value),\n            },\n            data: toHalfWidthColon(data),\n        };\n    };\n}\n\nfunction createDateSegmentsZeroPaddingPostprocessor({ dateModeTemplate, dateSegmentSeparator, splitFn, uniteFn, }) {\n    return ({ value, selection }) => {\n        var _a;\n        const [from, to] = selection;\n        const { dateStrings, restPart = '' } = splitFn(value);\n        const validatedDateStrings = [];\n        let caretShift = 0;\n        dateStrings.forEach((dateString) => {\n            const parsedDate = parseDateString(dateString, dateModeTemplate);\n            const dateSegments = Object.entries(parsedDate);\n            const validatedDateSegments = dateSegments.reduce((acc, [segmentName, segmentValue]) => {\n                const { validatedSegmentValue, prefixedZeroesCount } = padWithZeroesUntilValid(segmentValue, `${DATE_SEGMENTS_MAX_VALUES[segmentName]}`);\n                caretShift += prefixedZeroesCount;\n                return Object.assign(Object.assign({}, acc), { [segmentName]: validatedSegmentValue });\n            }, {});\n            validatedDateStrings.push(toDateString(validatedDateSegments, { dateMode: dateModeTemplate }));\n        });\n        const validatedValue = uniteFn(validatedDateStrings, value) +\n            (((_a = dateStrings[dateStrings.length - 1]) === null || _a === void 0 ? void 0 : _a.endsWith(dateSegmentSeparator))\n                ? dateSegmentSeparator\n                : '') +\n            restPart;\n        if (caretShift &&\n            validatedValue.slice(to + caretShift, to + caretShift + dateSegmentSeparator.length) === dateSegmentSeparator) {\n            /**\n             * If `caretShift` > 0, it means that time segment was padded with zero.\n             * It is only possible if any character insertion happens.\n             * If caret is before `dateSegmentSeparator` => it should be moved after `dateSegmentSeparator`.\n             */\n            caretShift += dateSegmentSeparator.length;\n        }\n        return {\n            selection: [from + caretShift, to + caretShift],\n            value: validatedValue,\n        };\n    };\n}\n\n/**\n * It replaces pseudo range separators with valid one.\n * @example '01.01.2000_11.11.2000' -> '01.01.2000 - 01.01.2000'\n * @example '01.01.2000_23:59' -> '01.01.2000, 23:59'\n */\nfunction createFirstDateEndSeparatorPreprocessor({ dateModeTemplate, firstDateEndSeparator, dateSegmentSeparator, pseudoFirstDateEndSeparators, }) {\n    return ({ elementState, data }) => {\n        const { value, selection } = elementState;\n        const firstCompleteDate = getFirstCompleteDate(value, dateModeTemplate);\n        const pseudoSeparators = pseudoFirstDateEndSeparators.filter((x) => !firstDateEndSeparator.includes(x) && x !== dateSegmentSeparator);\n        const pseudoSeparatorsRE = new RegExp(`[${pseudoSeparators.join('')}]`, 'gi');\n        return {\n            elementState: {\n                selection,\n                value: firstCompleteDate && value.length > firstCompleteDate.length\n                    ? firstCompleteDate +\n                        value\n                            .slice(firstCompleteDate.length)\n                            .replace(/^[\\D\\s]*/, firstDateEndSeparator)\n                    : value,\n            },\n            data: data.replace(pseudoSeparatorsRE, firstDateEndSeparator),\n        };\n    };\n}\n\n/**\n * Convert full width numbers like １, ２ to half width numbers 1, 2\n */\nfunction createFullWidthToHalfWidthPreprocessor() {\n    return ({ elementState, data }) => {\n        const { value, selection } = elementState;\n        return {\n            elementState: {\n                selection,\n                value: toHalfWidthNumber(value),\n            },\n            data: toHalfWidthNumber(data),\n        };\n    };\n}\n\nfunction raiseSegmentValueToMin(segments, fullMode) {\n    const segmentsLength = getDateSegmentValueLength(fullMode);\n    return Object.fromEntries(Object.entries(segments).map(([key, value]) => {\n        const segmentLength = segmentsLength[key];\n        return [\n            key,\n            value.length === segmentLength && value.match(/^0+$/)\n                ? '1'.padStart(segmentLength, '0')\n                : value,\n        ];\n    }));\n}\n\nfunction createMinMaxDatePostprocessor({ dateModeTemplate, min = DEFAULT_MIN_DATE, max = DEFAULT_MAX_DATE, rangeSeparator = '', dateSegmentSeparator = '.', }) {\n    return ({ value, selection }) => {\n        const endsWithRangeSeparator = rangeSeparator && value.endsWith(rangeSeparator);\n        const dateStrings = parseDateRangeString(value, dateModeTemplate, rangeSeparator);\n        let validatedValue = '';\n        for (const dateString of dateStrings) {\n            validatedValue += validatedValue ? rangeSeparator : '';\n            const parsedDate = parseDateString(dateString, dateModeTemplate);\n            if (!isDateStringComplete(dateString, dateModeTemplate)) {\n                const fixedDate = raiseSegmentValueToMin(parsedDate, dateModeTemplate);\n                const fixedValue = toDateString(fixedDate, { dateMode: dateModeTemplate });\n                const tail = dateString.endsWith(dateSegmentSeparator)\n                    ? dateSegmentSeparator\n                    : '';\n                validatedValue += fixedValue + tail;\n                continue;\n            }\n            const date = segmentsToDate(parsedDate);\n            const clampedDate = clamp(date, min, max);\n            validatedValue += toDateString(dateToSegments(clampedDate), {\n                dateMode: dateModeTemplate,\n            });\n        }\n        return {\n            selection,\n            value: validatedValue + (endsWithRangeSeparator ? rangeSeparator : ''),\n        };\n    };\n}\n\nfunction normalizeDatePreprocessor({ dateModeTemplate, dateSegmentsSeparator, rangeSeparator = '', dateTimeSeparator = DATE_TIME_SEPARATOR, }) {\n    return ({ elementState, data }) => {\n        const separator = rangeSeparator\n            ? new RegExp(`${rangeSeparator}|-`)\n            : dateTimeSeparator;\n        const possibleDates = data.split(separator);\n        const dates = data.includes(dateTimeSeparator)\n            ? [possibleDates[0] || '']\n            : possibleDates;\n        if (dates.every((date) => date.trim().split(/\\D/).filter(Boolean).length ===\n            dateModeTemplate.split(dateSegmentsSeparator).length)) {\n            const newData = dates\n                .map((date) => normalizeDateString(date, dateModeTemplate, dateSegmentsSeparator))\n                .join(rangeSeparator);\n            return {\n                elementState,\n                data: `${newData}${data.includes(dateTimeSeparator)\n                    ? dateTimeSeparator + possibleDates[1] || ''\n                    : ''}`,\n            };\n        }\n        return { elementState, data };\n    };\n}\nfunction normalizeDateString(dateString, template, separator) {\n    const dateSegments = dateString.split(/\\D/).filter(Boolean);\n    const templateSegments = template.split(separator);\n    const normalizedSegments = dateSegments.map((segment, index) => {\n        var _a;\n        return index === templateSegments.length - 1\n            ? segment\n            : segment.padStart(((_a = templateSegments[index]) === null || _a === void 0 ? void 0 : _a.length) || 0, '0');\n    });\n    return normalizedSegments.join(separator);\n}\n\nfunction maskitoPostfixPostprocessorGenerator(postfix) {\n    const postfixRE = new RegExp(`${escapeRegExp(postfix)}$`);\n    return postfix\n        ? ({ value, selection }, initialElementState) => {\n            if (!value && !initialElementState.value.endsWith(postfix)) {\n                // cases when developer wants input to be empty (programmatically)\n                return { value, selection };\n            }\n            if (!value.endsWith(postfix) &&\n                !initialElementState.value.endsWith(postfix)) {\n                return { selection, value: value + postfix };\n            }\n            const initialValueBeforePostfix = initialElementState.value.replace(postfixRE, '');\n            const postfixWasModified = initialElementState.selection[1] >= initialValueBeforePostfix.length;\n            const alreadyExistedValueBeforePostfix = findCommonBeginningSubstr(initialValueBeforePostfix, value);\n            return {\n                selection,\n                value: Array.from(postfix)\n                    .reverse()\n                    .reduce((newValue, char, index) => {\n                    const i = newValue.length - 1 - index;\n                    const isInitiallyMirroredChar = alreadyExistedValueBeforePostfix[i] === char &&\n                        postfixWasModified;\n                    return newValue[i] !== char || isInitiallyMirroredChar\n                        ? newValue.slice(0, i + 1) + char + newValue.slice(i + 1)\n                        : newValue;\n                }, value),\n            };\n        }\n        : identity;\n}\n\nfunction maskitoPrefixPostprocessorGenerator(prefix) {\n    return prefix\n        ? ({ value, selection }, initialElementState) => {\n            if (value.startsWith(prefix) || // already valid\n                (!value && !initialElementState.value.startsWith(prefix)) // cases when developer wants input to be empty\n            ) {\n                return { value, selection };\n            }\n            const [from, to] = selection;\n            const prefixedValue = Array.from(prefix).reduce((modifiedValue, char, i) => modifiedValue[i] === char\n                ? modifiedValue\n                : modifiedValue.slice(0, i) + char + modifiedValue.slice(i), value);\n            const addedCharsCount = prefixedValue.length - value.length;\n            return {\n                selection: [from + addedCharsCount, to + addedCharsCount],\n                value: prefixedValue,\n            };\n        }\n        : identity;\n}\n\nfunction createValidDatePreprocessor({ dateModeTemplate, dateSegmentsSeparator, rangeSeparator = '', }) {\n    return ({ elementState, data }) => {\n        const { value, selection } = elementState;\n        if (data === dateSegmentsSeparator) {\n            return {\n                elementState,\n                data: selection[0] === value.length ? data : '',\n            };\n        }\n        const newCharacters = data.replaceAll(new RegExp(`[^\\\\d${escapeRegExp(dateSegmentsSeparator)}${rangeSeparator}]`, 'g'), '');\n        if (!newCharacters) {\n            return { elementState, data: '' };\n        }\n        const [from, rawTo] = selection;\n        let to = rawTo + data.length;\n        const newPossibleValue = value.slice(0, from) + newCharacters + value.slice(to);\n        const dateStrings = parseDateRangeString(newPossibleValue, dateModeTemplate, rangeSeparator);\n        let validatedValue = '';\n        const hasRangeSeparator = Boolean(rangeSeparator) && newPossibleValue.includes(rangeSeparator);\n        for (const dateString of dateStrings) {\n            const { validatedDateString, updatedSelection } = validateDateString({\n                dateString,\n                dateModeTemplate,\n                dateSegmentsSeparator,\n                offset: validatedValue.length,\n                selection: [from, to],\n            });\n            if (dateString && !validatedDateString) {\n                return { elementState, data: '' }; // prevent changes\n            }\n            to = updatedSelection[1];\n            validatedValue +=\n                hasRangeSeparator && !validatedValue\n                    ? validatedDateString + rangeSeparator\n                    : validatedDateString;\n        }\n        const newData = validatedValue.slice(from, to);\n        return {\n            elementState: {\n                selection,\n                value: validatedValue.slice(0, from) +\n                    newData\n                        .split(dateSegmentsSeparator)\n                        .map((segment) => '0'.repeat(segment.length))\n                        .join(dateSegmentsSeparator) +\n                    validatedValue.slice(to),\n            },\n            data: newData,\n        };\n    };\n}\n\nfunction maskitoEventHandler(name, handler, eventListenerOptions) {\n    return (element, maskitoOptions) => {\n        const listener = () => handler(element, maskitoOptions);\n        element.addEventListener(name, listener, eventListenerOptions);\n        return () => element.removeEventListener(name, listener, eventListenerOptions);\n    };\n}\n\nfunction maskitoAddOnFocusPlugin(value) {\n    return maskitoEventHandler('focus', (element) => {\n        if (!element.value) {\n            maskitoUpdateElement(element, value);\n        }\n    });\n}\n\nfunction maskitoCaretGuard(guard) {\n    return (element) => {\n        const document = element.ownerDocument;\n        let isPointerDown = 0;\n        const onPointerDown = () => isPointerDown++;\n        const onPointerUp = () => {\n            isPointerDown = Math.max(--isPointerDown, 0);\n        };\n        const listener = () => {\n            if (!element.matches(':focus')) {\n                return;\n            }\n            if (isPointerDown) {\n                return document.addEventListener('mouseup', listener, {\n                    once: true,\n                    passive: true,\n                });\n            }\n            const start = element.selectionStart || 0;\n            const end = element.selectionEnd || 0;\n            const [fromLimit, toLimit] = guard(element.value, [start, end]);\n            if (fromLimit > start || toLimit < end) {\n                element.setSelectionRange(clamp(start, fromLimit, toLimit), clamp(end, fromLimit, toLimit));\n            }\n        };\n        document.addEventListener('selectionchange', listener, { passive: true });\n        element.addEventListener('mousedown', onPointerDown, { passive: true });\n        document.addEventListener('mouseup', onPointerUp, { passive: true });\n        return () => {\n            document.removeEventListener('selectionchange', listener);\n            document.removeEventListener('mousedown', onPointerDown);\n            document.removeEventListener('mouseup', onPointerUp);\n        };\n    };\n}\n\nconst maskitoRejectEvent = (element) => {\n    const listener = () => {\n        const value = element.value;\n        element.addEventListener('beforeinput', (event) => {\n            if (event.defaultPrevented && value === element.value) {\n                element.dispatchEvent(new CustomEvent('maskitoReject', { bubbles: true }));\n            }\n        }, { once: true });\n    };\n    element.addEventListener('beforeinput', listener, true);\n    return () => element.removeEventListener('beforeinput', listener, true);\n};\n\nfunction maskitoRemoveOnBlurPlugin(value) {\n    return maskitoEventHandler('blur', (element) => {\n        if (element.value === value) {\n            maskitoUpdateElement(element, '');\n        }\n    });\n}\n\nconst noop = () => { };\nfunction createTimeSegmentsSteppingPlugin({ step, fullMode, timeSegmentMaxValues, }) {\n    const segmentsIndexes = createTimeSegmentsIndexes(fullMode);\n    return step <= 0\n        ? noop\n        : (element) => {\n            const listener = (event) => {\n                if (event.key !== 'ArrowUp' && event.key !== 'ArrowDown') {\n                    return;\n                }\n                event.preventDefault();\n                const selectionStart = element.selectionStart || 0;\n                const activeSegment = getActiveSegment({\n                    segmentsIndexes,\n                    selectionStart,\n                });\n                if (!activeSegment) {\n                    return;\n                }\n                const updatedValue = updateSegmentValue({\n                    selection: segmentsIndexes.get(activeSegment),\n                    value: element.value,\n                    toAdd: event.key === 'ArrowUp' ? step : -step,\n                    max: timeSegmentMaxValues[activeSegment],\n                });\n                maskitoUpdateElement(element, {\n                    value: updatedValue,\n                    selection: [selectionStart, selectionStart],\n                });\n            };\n            element.addEventListener('keydown', listener);\n            return () => element.removeEventListener('keydown', listener);\n        };\n}\nfunction createTimeSegmentsIndexes(fullMode) {\n    return new Map([\n        ['hours', getSegmentRange(fullMode, 'HH')],\n        ['minutes', getSegmentRange(fullMode, 'MM')],\n        ['seconds', getSegmentRange(fullMode, 'SS')],\n        ['milliseconds', getSegmentRange(fullMode, 'MSS')],\n    ]);\n}\nfunction getSegmentRange(mode, segment) {\n    const index = mode.indexOf(segment);\n    return index === -1 ? [-1, -1] : [index, index + segment.length];\n}\nfunction getActiveSegment({ segmentsIndexes, selectionStart, }) {\n    for (const [segmentName, segmentRange] of segmentsIndexes.entries()) {\n        const [from, to] = segmentRange;\n        if (from <= selectionStart && selectionStart <= to) {\n            return segmentName;\n        }\n    }\n    return null;\n}\nfunction updateSegmentValue({ selection, value, toAdd, max, }) {\n    const [from, to] = selection;\n    const segmentValue = Number(value.slice(from, to).padEnd(to - from, '0'));\n    const newSegmentValue = mod(segmentValue + toAdd, max + 1);\n    return (value.slice(0, from) +\n        String(newSegmentValue).padStart(to - from, '0') +\n        value.slice(to, value.length));\n}\nfunction mod(value, max) {\n    if (value < 0) {\n        value += Math.floor(Math.abs(value) / max + 1) * max;\n    }\n    return value % max;\n}\n\nfunction maskitoWithPlaceholder(placeholder, focusedOnly = false) {\n    let lastClearValue = '';\n    let action = 'validation';\n    const removePlaceholder = (value) => {\n        for (let i = value.length - 1; i >= lastClearValue.length; i--) {\n            if (value[i] !== placeholder[i]) {\n                return value.slice(0, i + 1);\n            }\n        }\n        return value.slice(0, lastClearValue.length);\n    };\n    const plugins = [maskitoCaretGuard((value) => [0, removePlaceholder(value).length])];\n    let focused = false;\n    if (focusedOnly) {\n        const focus = maskitoEventHandler('focus', (element) => {\n            focused = true;\n            maskitoUpdateElement(element, element.value + placeholder.slice(element.value.length));\n        }, { capture: true });\n        const blur = maskitoEventHandler('blur', (element) => {\n            focused = false;\n            maskitoUpdateElement(element, removePlaceholder(element.value));\n        }, { capture: true });\n        plugins.push(focus, blur);\n    }\n    return {\n        plugins,\n        removePlaceholder,\n        preprocessors: [\n            ({ elementState, data }, actionType) => {\n                action = actionType;\n                const { value, selection } = elementState;\n                return {\n                    elementState: {\n                        selection,\n                        value: removePlaceholder(value),\n                    },\n                    data,\n                };\n            },\n        ],\n        postprocessors: [\n            ({ value, selection }, initialElementState) => {\n                lastClearValue = value;\n                const justPlaceholderRemoval = value +\n                    placeholder.slice(value.length, initialElementState.value.length) ===\n                    initialElementState.value;\n                if (action === 'validation' && justPlaceholderRemoval) {\n                    /**\n                     * If `value` still equals to `initialElementState.value`,\n                     * then it means that value is patched programmatically (from Maskito's plugin or externally).\n                     * In this case, we don't want to mutate value and automatically add/remove placeholder.\n                     * ___\n                     * For example, developer wants to remove manually placeholder (+ do something else with value) on blur.\n                     * Without this condition, placeholder will be unexpectedly added again.\n                     */\n                    return { selection, value: initialElementState.value };\n                }\n                const newValue = focused || !focusedOnly\n                    ? value + placeholder.slice(value.length)\n                    : value;\n                if (newValue === initialElementState.value &&\n                    action === 'deleteBackward') {\n                    const [caretIndex] = initialElementState.selection;\n                    return {\n                        value: newValue,\n                        selection: [caretIndex, caretIndex],\n                    };\n                }\n                return { value: newValue, selection };\n            },\n        ],\n    };\n}\n\nfunction createZeroPlaceholdersPreprocessor() {\n    return ({ elementState }, actionType) => {\n        const { value, selection } = elementState;\n        if (!value || isLastChar(value, selection)) {\n            return { elementState };\n        }\n        const [from, to] = selection;\n        const zeroes = value.slice(from, to).replaceAll(/\\d/g, '0');\n        const newValue = value.slice(0, from) + zeroes + value.slice(to);\n        if (actionType === 'validation' || (actionType === 'insert' && from === to)) {\n            return {\n                elementState: { selection, value: newValue },\n            };\n        }\n        return {\n            elementState: {\n                selection: actionType === 'deleteBackward' || actionType === 'insert'\n                    ? [from, from]\n                    : [to, to],\n                value: newValue,\n            },\n        };\n    };\n}\nfunction isLastChar(value, [_, to]) {\n    return to === value.length;\n}\n\nfunction maskitoDateOptionsGenerator({ mode, separator = '.', max, min, }) {\n    const dateModeTemplate = mode.split('/').join(separator);\n    return Object.assign(Object.assign({}, MASKITO_DEFAULT_OPTIONS), { mask: Array.from(dateModeTemplate).map((char) => separator.includes(char) ? char : /\\d/), overwriteMode: 'replace', preprocessors: [\n            createFullWidthToHalfWidthPreprocessor(),\n            createZeroPlaceholdersPreprocessor(),\n            normalizeDatePreprocessor({\n                dateModeTemplate,\n                dateSegmentsSeparator: separator,\n            }),\n            createValidDatePreprocessor({\n                dateModeTemplate,\n                dateSegmentsSeparator: separator,\n            }),\n        ], postprocessors: [\n            createDateSegmentsZeroPaddingPostprocessor({\n                dateModeTemplate,\n                dateSegmentSeparator: separator,\n                splitFn: (value) => ({ dateStrings: [value] }),\n                uniteFn: ([dateString = '']) => dateString,\n            }),\n            createMinMaxDatePostprocessor({\n                min,\n                max,\n                dateModeTemplate,\n                dateSegmentSeparator: separator,\n            }),\n        ] });\n}\n\nconst POSSIBLE_DATE_RANGE_SEPARATOR = [\n    CHAR_HYPHEN,\n    CHAR_EN_DASH,\n    CHAR_EM_DASH,\n    CHAR_MINUS,\n    CHAR_JP_HYPHEN,\n];\n\nfunction createMinMaxRangeLengthPostprocessor({ dateModeTemplate, rangeSeparator, minLength, maxLength, max = DEFAULT_MAX_DATE, }) {\n    if (isEmpty(minLength) && isEmpty(maxLength)) {\n        return identity;\n    }\n    return ({ value, selection }) => {\n        const dateStrings = parseDateRangeString(value, dateModeTemplate, rangeSeparator);\n        if (dateStrings.length !== 2 ||\n            dateStrings.some((date) => !isDateStringComplete(date, dateModeTemplate))) {\n            return { value, selection };\n        }\n        const [fromDate, toDate] = dateStrings.map((dateString) => segmentsToDate(parseDateString(dateString, dateModeTemplate)));\n        if (!fromDate || !toDate) {\n            return { value, selection };\n        }\n        const minDistantToDate = appendDate(fromDate, Object.assign(Object.assign({}, minLength), { \n            // 06.02.2023 - 07.02.2023 => {minLength: {day: 3}} => 06.02.2023 - 08.02.2023\n            // \"from\"-day is included in the range\n            day: (minLength === null || minLength === void 0 ? void 0 : minLength.day) && minLength.day - 1 }));\n        const maxDistantToDate = !isEmpty(maxLength)\n            ? appendDate(fromDate, Object.assign(Object.assign({}, maxLength), { day: (maxLength === null || maxLength === void 0 ? void 0 : maxLength.day) && maxLength.day - 1 }))\n            : max;\n        const minLengthClampedToDate = clamp(toDate, minDistantToDate, max);\n        const minMaxLengthClampedToDate = minLengthClampedToDate > maxDistantToDate\n            ? maxDistantToDate\n            : minLengthClampedToDate;\n        return {\n            selection,\n            value: dateStrings[0] +\n                rangeSeparator +\n                toDateString(dateToSegments(minMaxLengthClampedToDate), {\n                    dateMode: dateModeTemplate,\n                }),\n        };\n    };\n}\n\nfunction createSwapDatesPostprocessor({ dateModeTemplate, rangeSeparator, }) {\n    return ({ value, selection }) => {\n        const dateStrings = parseDateRangeString(value, dateModeTemplate, rangeSeparator);\n        const isDateRangeComplete = dateStrings.length === 2 &&\n            dateStrings.every((date) => isDateStringComplete(date, dateModeTemplate));\n        const [from, to] = selection;\n        const caretAtTheEnd = from >= value.length;\n        const allValueSelected = from === 0 && to >= value.length; // dropping text inside with a pointer\n        if (!(caretAtTheEnd || allValueSelected) || !isDateRangeComplete) {\n            return { value, selection };\n        }\n        const [fromDate, toDate] = dateStrings.map((dateString) => segmentsToDate(parseDateString(dateString, dateModeTemplate)));\n        return {\n            selection,\n            value: fromDate && toDate && fromDate > toDate\n                ? dateStrings.reverse().join(rangeSeparator)\n                : value,\n        };\n    };\n}\n\nfunction maskitoDateRangeOptionsGenerator({ mode, min, max, minLength, maxLength, dateSeparator = '.', rangeSeparator = `${CHAR_NO_BREAK_SPACE}${CHAR_EN_DASH}${CHAR_NO_BREAK_SPACE}`, }) {\n    const dateModeTemplate = mode.split('/').join(dateSeparator);\n    const dateMask = Array.from(dateModeTemplate).map((char) => dateSeparator.includes(char) ? char : /\\d/);\n    return Object.assign(Object.assign({}, MASKITO_DEFAULT_OPTIONS), { mask: [...dateMask, ...Array.from(rangeSeparator), ...dateMask], overwriteMode: 'replace', preprocessors: [\n            createFullWidthToHalfWidthPreprocessor(),\n            createFirstDateEndSeparatorPreprocessor({\n                dateModeTemplate,\n                dateSegmentSeparator: dateSeparator,\n                firstDateEndSeparator: rangeSeparator,\n                pseudoFirstDateEndSeparators: POSSIBLE_DATE_RANGE_SEPARATOR,\n            }),\n            createZeroPlaceholdersPreprocessor(),\n            normalizeDatePreprocessor({\n                dateModeTemplate,\n                rangeSeparator,\n                dateSegmentsSeparator: dateSeparator,\n            }),\n            createValidDatePreprocessor({\n                dateModeTemplate,\n                rangeSeparator,\n                dateSegmentsSeparator: dateSeparator,\n            }),\n        ], postprocessors: [\n            createDateSegmentsZeroPaddingPostprocessor({\n                dateModeTemplate,\n                dateSegmentSeparator: dateSeparator,\n                splitFn: (value) => ({\n                    dateStrings: parseDateRangeString(value, dateModeTemplate, rangeSeparator),\n                }),\n                uniteFn: (validatedDateStrings, initialValue) => validatedDateStrings.reduce((acc, dateString, dateIndex) => acc +\n                    dateString +\n                    (!dateIndex && initialValue.includes(rangeSeparator)\n                        ? rangeSeparator\n                        : ''), ''),\n            }),\n            createMinMaxDatePostprocessor({\n                min,\n                max,\n                dateModeTemplate,\n                rangeSeparator,\n                dateSegmentSeparator: dateSeparator,\n            }),\n            createMinMaxRangeLengthPostprocessor({\n                dateModeTemplate,\n                minLength,\n                maxLength,\n                max,\n                rangeSeparator,\n            }),\n            createSwapDatesPostprocessor({\n                dateModeTemplate,\n                rangeSeparator,\n            }),\n        ] });\n}\n\nfunction padTimeSegments(timeSegments, pad) {\n    return Object.fromEntries(Object.entries(timeSegments).map(([segmentName, segmentValue]) => [\n        segmentName,\n        pad(String(segmentValue), TIME_SEGMENT_VALUE_LENGTHS[segmentName]),\n    ]));\n}\n\nfunction padEndTimeSegments(timeSegments) {\n    return padTimeSegments(timeSegments, (value, length) => value.padEnd(length, '0'));\n}\n\nfunction padStartTimeSegments(timeSegments) {\n    return padTimeSegments(timeSegments, (value, length) => value.padStart(length, '0'));\n}\n\nconst SEGMENT_FULL_NAME = {\n    HH: 'hours',\n    MM: 'minutes',\n    SS: 'seconds',\n    MSS: 'milliseconds',\n};\n/**\n * @param timeString can be with/without fixed characters\n */\nfunction parseTimeString(timeString, timeMode) {\n    const onlyDigits = timeString.replaceAll(/\\D+/g, '');\n    let offset = 0;\n    return Object.fromEntries(timeMode.split(/\\W/).map((segmentAbbr) => {\n        const segmentValue = onlyDigits.slice(offset, offset + segmentAbbr.length);\n        offset += segmentAbbr.length;\n        return [SEGMENT_FULL_NAME[segmentAbbr], segmentValue];\n    }));\n}\n\nconst LEADING_NON_DIGITS = /^\\D*/;\nconst TRAILING_NON_DIGITS = /\\D*$/;\nfunction toTimeString({ hours = '', minutes = '', seconds = '', milliseconds = '', }) {\n    return `${hours}:${minutes}:${seconds}.${milliseconds}`\n        .replace(LEADING_NON_DIGITS, '')\n        .replace(TRAILING_NON_DIGITS, '');\n}\n\nconst TRAILING_TIME_SEGMENT_SEPARATOR_REG = new RegExp(`[${TIME_FIXED_CHARACTERS.map(escapeRegExp).join('')}]$`);\nfunction validateTimeString({ timeString, paddedMaxValues, offset, selection: [from, to], timeMode, }) {\n    const parsedTime = parseTimeString(timeString, timeMode);\n    const possibleTimeSegments = Object.entries(parsedTime);\n    const validatedTimeSegments = {};\n    let paddedZeroes = 0;\n    for (const [segmentName, segmentValue] of possibleTimeSegments) {\n        const validatedTime = toTimeString(validatedTimeSegments);\n        const maxSegmentValue = paddedMaxValues[segmentName];\n        const fantomSeparator = validatedTime.length && 1;\n        const lastSegmentDigitIndex = offset +\n            validatedTime.length +\n            fantomSeparator +\n            TIME_SEGMENT_VALUE_LENGTHS[segmentName];\n        const isLastSegmentDigitAdded = lastSegmentDigitIndex >= from && lastSegmentDigitIndex <= to;\n        if (isLastSegmentDigitAdded && Number(segmentValue) > Number(maxSegmentValue)) {\n            // 2|0:00 => Type 9 => 2|0:00\n            return { validatedTimeString: '', updatedTimeSelection: [from, to] }; // prevent changes\n        }\n        const { validatedSegmentValue, prefixedZeroesCount } = padWithZeroesUntilValid(segmentValue, `${maxSegmentValue}`);\n        paddedZeroes += prefixedZeroesCount;\n        validatedTimeSegments[segmentName] = validatedSegmentValue;\n    }\n    const [trailingSegmentSeparator = ''] = timeString.match(TRAILING_TIME_SEGMENT_SEPARATOR_REG) || [];\n    const validatedTimeString = toTimeString(validatedTimeSegments) + trailingSegmentSeparator;\n    const addedDateSegmentSeparators = Math.max(validatedTimeString.length - timeString.length, 0);\n    return {\n        validatedTimeString,\n        updatedTimeSelection: [\n            from + paddedZeroes + addedDateSegmentSeparators,\n            to + paddedZeroes + addedDateSegmentSeparators,\n        ],\n    };\n}\n\nfunction isDateTimeStringComplete(dateTimeString, { dateMode, timeMode, dateTimeSeparator = DATE_TIME_SEPARATOR, }) {\n    return (dateTimeString.length >=\n        dateMode.length + timeMode.length + dateTimeSeparator.length &&\n        (dateTimeString.split(dateTimeSeparator)[0] || '')\n            .split(/\\D/)\n            .every((segment) => !segment.match(/^0+$/)));\n}\n\nfunction parseDateTimeString(dateTime, { dateModeTemplate, dateTimeSeparator, }) {\n    const hasSeparator = dateTime.includes(dateTimeSeparator);\n    return [\n        dateTime.slice(0, dateModeTemplate.length),\n        dateTime.slice(hasSeparator\n            ? dateModeTemplate.length + dateTimeSeparator.length\n            : dateModeTemplate.length),\n    ];\n}\n\nfunction createMinMaxDateTimePostprocessor({ dateModeTemplate, timeMode, min = DEFAULT_MIN_DATE, max = DEFAULT_MAX_DATE, dateTimeSeparator, }) {\n    return ({ value, selection }) => {\n        const [dateString, timeString] = parseDateTimeString(value, {\n            dateModeTemplate,\n            dateTimeSeparator,\n        });\n        const parsedDate = parseDateString(dateString, dateModeTemplate);\n        const parsedTime = parseTimeString(timeString, timeMode);\n        if (!isDateTimeStringComplete(value, {\n            dateMode: dateModeTemplate,\n            timeMode,\n            dateTimeSeparator,\n        })) {\n            const fixedDate = raiseSegmentValueToMin(parsedDate, dateModeTemplate);\n            const { year, month, day } = isDateStringComplete(dateString, dateModeTemplate)\n                ? dateToSegments(clamp(segmentsToDate(fixedDate), min, max))\n                : fixedDate;\n            const fixedValue = toDateString(Object.assign({ year,\n                month,\n                day }, parsedTime), { dateMode: dateModeTemplate, dateTimeSeparator, timeMode });\n            const tail = value.slice(fixedValue.length);\n            return {\n                selection,\n                value: fixedValue + tail,\n            };\n        }\n        const date = segmentsToDate(parsedDate, parsedTime);\n        const clampedDate = clamp(date, min, max);\n        const validatedValue = toDateString(dateToSegments(clampedDate), {\n            dateMode: dateModeTemplate,\n            dateTimeSeparator,\n            timeMode,\n        });\n        return {\n            selection,\n            value: validatedValue,\n        };\n    };\n}\n\nfunction createValidDateTimePreprocessor({ dateModeTemplate, dateSegmentsSeparator, dateTimeSeparator, timeMode, }) {\n    const invalidCharsRegExp = new RegExp(`[^\\\\d${TIME_FIXED_CHARACTERS.map(escapeRegExp).join('')}${escapeRegExp(dateSegmentsSeparator)}]+`);\n    return ({ elementState, data }) => {\n        const { value, selection } = elementState;\n        if (data === dateSegmentsSeparator) {\n            return {\n                elementState,\n                data: selection[0] === value.length ? data : '',\n            };\n        }\n        const newCharacters = data.replace(invalidCharsRegExp, '');\n        if (!newCharacters) {\n            return { elementState, data: '' };\n        }\n        const [from, rawTo] = selection;\n        let to = rawTo + data.length;\n        const newPossibleValue = value.slice(0, from) + newCharacters + value.slice(to);\n        const [dateString, timeString] = parseDateTimeString(newPossibleValue, {\n            dateModeTemplate,\n            dateTimeSeparator,\n        });\n        let validatedValue = '';\n        const hasDateTimeSeparator = newPossibleValue.includes(dateTimeSeparator);\n        const { validatedDateString, updatedSelection } = validateDateString({\n            dateString,\n            dateSegmentsSeparator,\n            dateModeTemplate,\n            offset: 0,\n            selection: [from, to],\n        });\n        if (dateString && !validatedDateString) {\n            return { elementState, data: '' }; // prevent changes\n        }\n        to = updatedSelection[1];\n        validatedValue += validatedDateString;\n        const paddedMaxValues = padStartTimeSegments(DEFAULT_TIME_SEGMENT_MAX_VALUES);\n        const { validatedTimeString, updatedTimeSelection } = validateTimeString({\n            timeString,\n            paddedMaxValues,\n            offset: validatedValue.length + dateTimeSeparator.length,\n            selection: [from, to],\n            timeMode,\n        });\n        if (timeString && !validatedTimeString) {\n            return { elementState, data: '' }; // prevent changes\n        }\n        to = updatedTimeSelection[1];\n        validatedValue += hasDateTimeSeparator\n            ? dateTimeSeparator + validatedTimeString\n            : validatedTimeString;\n        const newData = validatedValue.slice(from, to);\n        return {\n            elementState: {\n                selection,\n                value: validatedValue.slice(0, from) +\n                    newData\n                        .split(dateSegmentsSeparator)\n                        .map((segment) => '0'.repeat(segment.length))\n                        .join(dateSegmentsSeparator) +\n                    validatedValue.slice(to),\n            },\n            data: newData,\n        };\n    };\n}\n\nfunction maskitoDateTimeOptionsGenerator({ dateMode, timeMode, dateSeparator = '.', min, max, dateTimeSeparator = DATE_TIME_SEPARATOR, timeStep = 0, }) {\n    const dateModeTemplate = dateMode.split('/').join(dateSeparator);\n    return Object.assign(Object.assign({}, MASKITO_DEFAULT_OPTIONS), { mask: [\n            ...Array.from(dateModeTemplate).map((char) => dateSeparator.includes(char) ? char : /\\d/),\n            ...dateTimeSeparator.split(''),\n            ...Array.from(timeMode).map((char) => TIME_FIXED_CHARACTERS.includes(char) ? char : /\\d/),\n        ], overwriteMode: 'replace', preprocessors: [\n            createFullWidthToHalfWidthPreprocessor(),\n            createColonConvertPreprocessor(),\n            createFirstDateEndSeparatorPreprocessor({\n                dateModeTemplate,\n                dateSegmentSeparator: dateSeparator,\n                firstDateEndSeparator: dateTimeSeparator,\n                pseudoFirstDateEndSeparators: dateTimeSeparator.split(''),\n            }),\n            createZeroPlaceholdersPreprocessor(),\n            normalizeDatePreprocessor({\n                dateModeTemplate,\n                dateSegmentsSeparator: dateSeparator,\n                dateTimeSeparator,\n            }),\n            createValidDateTimePreprocessor({\n                dateModeTemplate,\n                dateSegmentsSeparator: dateSeparator,\n                dateTimeSeparator,\n                timeMode,\n            }),\n        ], postprocessors: [\n            createDateSegmentsZeroPaddingPostprocessor({\n                dateModeTemplate,\n                dateSegmentSeparator: dateSeparator,\n                splitFn: (value) => {\n                    const [dateString, timeString] = parseDateTimeString(value, {\n                        dateModeTemplate,\n                        dateTimeSeparator,\n                    });\n                    return { dateStrings: [dateString], restPart: timeString };\n                },\n                uniteFn: ([validatedDateString], initialValue) => validatedDateString +\n                    (initialValue.includes(dateTimeSeparator) ? dateTimeSeparator : ''),\n            }),\n            createMinMaxDateTimePostprocessor({\n                min,\n                max,\n                dateModeTemplate,\n                timeMode,\n                dateTimeSeparator,\n            }),\n        ], plugins: [\n            createTimeSegmentsSteppingPlugin({\n                step: timeStep,\n                fullMode: `${dateModeTemplate}${dateTimeSeparator}${timeMode}`,\n                timeSegmentMaxValues: DEFAULT_TIME_SEGMENT_MAX_VALUES,\n            }),\n        ] });\n}\n\n/**\n * It drops prefix and postfix from data\n * Needed for case, when prefix or postfix contain decimalSeparator, to ignore it in resulting number\n * @example User pastes '{prefix}123.45{postfix}' => 123.45\n */\nfunction createAffixesFilterPreprocessor({ prefix, postfix, }) {\n    return ({ elementState, data }) => {\n        const { cleanValue: cleanData } = extractAffixes(data, {\n            prefix,\n            postfix,\n        });\n        return {\n            elementState,\n            data: cleanData,\n        };\n    };\n}\n\nfunction generateMaskExpression({ decimalSeparator, isNegativeAllowed, precision, thousandSeparator, prefix, postfix, decimalPseudoSeparators = [], pseudoMinuses = [], minusSign, }) {\n    const computedPrefix = computeAllOptionalCharsRegExp(prefix);\n    const digit = String.raw `\\d`;\n    const optionalMinus = isNegativeAllowed\n        ? `[${minusSign}${pseudoMinuses.map((x) => `\\\\${x}`).join('')}]?`\n        : '';\n    const integerPart = thousandSeparator\n        ? `[${digit}${escapeRegExp(thousandSeparator).replaceAll(/\\s/g, String.raw `\\s`)}]*`\n        : `[${digit}]*`;\n    const decimalPart = precision > 0\n        ? `([${escapeRegExp(decimalSeparator)}${decimalPseudoSeparators\n            .map(escapeRegExp)\n            .join('')}]${digit}{0,${Number.isFinite(precision) ? precision : ''}})?`\n        : '';\n    const computedPostfix = computeAllOptionalCharsRegExp(postfix);\n    return new RegExp(`^${computedPrefix}${optionalMinus}${integerPart}${decimalPart}${computedPostfix}$`);\n}\nfunction computeAllOptionalCharsRegExp(str) {\n    return str\n        ? `${str\n            .split('')\n            .map((char) => `${escapeRegExp(char)}?`)\n            .join('')}`\n        : '';\n}\n\nfunction maskitoParseNumber(maskedNumber, decimalSeparator = '.') {\n    const hasNegativeSign = !!maskedNumber.match(new RegExp(`^\\\\D*[${CHAR_MINUS}\\\\${CHAR_HYPHEN}${CHAR_EN_DASH}${CHAR_EM_DASH}${CHAR_JP_HYPHEN}]`));\n    const escapedDecimalSeparator = escapeRegExp(decimalSeparator);\n    const unmaskedNumber = maskedNumber\n        // drop all decimal separators not followed by a digit\n        .replaceAll(new RegExp(`${escapedDecimalSeparator}(?!\\\\d)`, 'g'), '')\n        // drop all non-digit characters except decimal separator\n        .replaceAll(new RegExp(`[^\\\\d${escapedDecimalSeparator}]`, 'g'), '')\n        .replace(decimalSeparator, '.');\n    return unmaskedNumber\n        ? Number((hasNegativeSign ? CHAR_HYPHEN : '') + unmaskedNumber)\n        : NaN;\n}\n\n/**\n * Convert number to string with replacing exponent part on decimals\n *\n * @param value the number\n * @return string representation of a number\n */\nfunction stringifyNumberWithoutExp(value) {\n    const valueAsString = String(value);\n    const [numberPart = '', expPart] = valueAsString.split('e-');\n    let valueWithoutExp = valueAsString;\n    if (expPart) {\n        const [, fractionalPart] = numberPart.split('.');\n        const decimalDigits = Number(expPart) + ((fractionalPart === null || fractionalPart === void 0 ? void 0 : fractionalPart.length) || 0);\n        valueWithoutExp = value.toFixed(decimalDigits);\n    }\n    return valueWithoutExp;\n}\n\nfunction toNumberParts(value, { decimalSeparator, thousandSeparator, }) {\n    const [integerWithMinus = '', decimalPart = ''] = value.split(decimalSeparator);\n    const [, minus = '', integerPart = ''] = integerWithMinus.match(new RegExp(`([^\\\\d${escapeRegExp(thousandSeparator)}]+)?(.*)`)) || [];\n    return { minus, integerPart, decimalPart };\n}\n\nfunction validateDecimalPseudoSeparators({ decimalSeparator, thousandSeparator, decimalPseudoSeparators = DEFAULT_DECIMAL_PSEUDO_SEPARATORS, }) {\n    return decimalPseudoSeparators.filter((char) => char !== thousandSeparator && char !== decimalSeparator);\n}\n\n/**\n * If `decimalZeroPadding` is `true`, it pads decimal part with zeroes\n * (until number of digits after decimalSeparator is equal to the `precision`).\n * @example 1,42 => (`precision` is equal to 4) => 1,4200.\n */\nfunction createDecimalZeroPaddingPostprocessor({ decimalSeparator, precision, decimalZeroPadding, prefix, postfix, }) {\n    if (precision <= 0 || !decimalZeroPadding) {\n        return identity;\n    }\n    return ({ value, selection }) => {\n        const { cleanValue, extractedPrefix, extractedPostfix } = extractAffixes(value, {\n            prefix,\n            postfix,\n        });\n        if (Number.isNaN(maskitoParseNumber(cleanValue, decimalSeparator))) {\n            return { value, selection };\n        }\n        const [integerPart, decimalPart = ''] = cleanValue.split(decimalSeparator);\n        return {\n            value: extractedPrefix +\n                integerPart +\n                decimalSeparator +\n                decimalPart.padEnd(precision, '0') +\n                extractedPostfix,\n            selection,\n        };\n    };\n}\n\n/**\n * Make textfield empty if there is no integer part and all decimal digits are zeroes.\n * @example 0|,00 => Backspace => Empty.\n * @example -0|,00 => Backspace => -.\n * @example ,42| => Backspace x2 => ,|00 => Backspace => Empty\n */\nfunction emptyPostprocessor({ prefix, postfix, decimalSeparator, thousandSeparator, }) {\n    return ({ value, selection }) => {\n        const [caretIndex] = selection;\n        const { cleanValue, extractedPrefix, extractedPostfix } = extractAffixes(value, {\n            prefix,\n            postfix,\n        });\n        const { minus, integerPart, decimalPart } = toNumberParts(cleanValue, {\n            decimalSeparator,\n            thousandSeparator,\n        });\n        const aloneDecimalSeparator = !integerPart && !decimalPart && cleanValue.includes(decimalSeparator);\n        if ((!integerPart &&\n            !Number(decimalPart) &&\n            caretIndex === (minus + extractedPrefix).length) ||\n            aloneDecimalSeparator) {\n            return {\n                selection,\n                value: extractedPrefix + minus + extractedPostfix,\n            };\n        }\n        return { value, selection };\n    };\n}\n\n/**\n * This preprocessor works only once at initialization phase (when `new Maskito(...)` is executed).\n * This preprocessor helps to avoid conflicts during transition from one mask to another (for the same input).\n * For example, the developer changes postfix (or other mask's props) during run-time.\n * ```\n * let maskitoOptions = maskitoNumberOptionsGenerator({postfix: ' year'});\n * // [3 seconds later]\n * maskitoOptions = maskitoNumberOptionsGenerator({postfix: ' years'});\n * ```\n */\nfunction createInitializationOnlyPreprocessor({ decimalSeparator, decimalPseudoSeparators, pseudoMinuses, prefix, postfix, minusSign, }) {\n    let isInitializationPhase = true;\n    const cleanNumberMask = generateMaskExpression({\n        decimalSeparator,\n        decimalPseudoSeparators,\n        pseudoMinuses,\n        prefix: '',\n        postfix: '',\n        thousandSeparator: '',\n        precision: Infinity,\n        isNegativeAllowed: true,\n        minusSign,\n    });\n    return ({ elementState, data }) => {\n        if (!isInitializationPhase) {\n            return { elementState, data };\n        }\n        isInitializationPhase = false;\n        const { value, selection } = elementState;\n        const [from, to] = selection;\n        const { extractedPrefix, cleanValue, extractedPostfix } = extractAffixes(value, {\n            prefix,\n            postfix,\n        });\n        const cleanState = maskitoTransform({\n            selection: [\n                Math.max(from - extractedPrefix.length, 0),\n                clamp(to - extractedPrefix.length, 0, cleanValue.length),\n            ],\n            value: cleanValue,\n        }, {\n            mask: cleanNumberMask,\n        });\n        const [cleanFrom, cleanTo] = cleanState.selection;\n        return {\n            elementState: {\n                selection: [\n                    cleanFrom + extractedPrefix.length,\n                    cleanTo + extractedPrefix.length,\n                ],\n                value: extractedPrefix + cleanState.value + extractedPostfix,\n            },\n            data,\n        };\n    };\n}\n\n/**\n * It removes repeated leading zeroes for integer part.\n * @example 0,|00005 => Backspace => |5\n * @example -0,|00005 => Backspace => -|5\n * @example User types \"000000\" => 0|\n * @example 0| => User types \"5\" => 5|\n */\nfunction createLeadingZeroesValidationPostprocessor({ decimalSeparator, thousandSeparator, prefix, postfix, }) {\n    const trimLeadingZeroes = (value) => {\n        const escapedThousandSeparator = escapeRegExp(thousandSeparator);\n        return value\n            .replace(\n        // all leading zeroes followed by another zero\n        new RegExp(`^(\\\\D+)?[0${escapedThousandSeparator}]+(?=0)`), '$1')\n            .replace(\n        // zero followed by not-zero digit\n        new RegExp(`^(\\\\D+)?[0${escapedThousandSeparator}]+(?=[1-9])`), '$1');\n    };\n    const countTrimmedZeroesBefore = (value, index) => {\n        const valueBefore = value.slice(0, index);\n        const followedByZero = value.slice(index).startsWith('0');\n        return (valueBefore.length -\n            trimLeadingZeroes(valueBefore).length +\n            (followedByZero ? 1 : 0));\n    };\n    return ({ value, selection }) => {\n        const [from, to] = selection;\n        const { cleanValue, extractedPrefix, extractedPostfix } = extractAffixes(value, {\n            prefix,\n            postfix,\n        });\n        const hasDecimalSeparator = cleanValue.includes(decimalSeparator);\n        const [integerPart = '', decimalPart = ''] = cleanValue.split(decimalSeparator);\n        const zeroTrimmedIntegerPart = trimLeadingZeroes(integerPart);\n        if (integerPart === zeroTrimmedIntegerPart) {\n            return { value, selection };\n        }\n        const newFrom = from - countTrimmedZeroesBefore(value, from);\n        const newTo = to - countTrimmedZeroesBefore(value, to);\n        return {\n            value: extractedPrefix +\n                zeroTrimmedIntegerPart +\n                (hasDecimalSeparator ? decimalSeparator : '') +\n                decimalPart +\n                extractedPostfix,\n            selection: [Math.max(newFrom, 0), Math.max(newTo, 0)],\n        };\n    };\n}\n\n/**\n * This postprocessor is connected with {@link createMinMaxPlugin}:\n * both validate `min`/`max` bounds of entered value (but at the different point of time).\n */\nfunction createMinMaxPostprocessor({ min, max, decimalSeparator, minusSign, }) {\n    return ({ value, selection }) => {\n        const parsedNumber = maskitoParseNumber(value, decimalSeparator);\n        const limitedValue = \n        /**\n         * We cannot limit lower bound if user enters positive number.\n         * The same for upper bound and negative number.\n         * ___\n         * @example (min = 5)\n         * Empty input => Without this condition user cannot type 42 (the first digit will be rejected)\n         * ___\n         * @example (max = -10)\n         * Value is -10 => Without this condition user cannot delete 0 to enter another digit\n         */\n        parsedNumber > 0 ? Math.min(parsedNumber, max) : Math.max(parsedNumber, min);\n        if (parsedNumber && limitedValue !== parsedNumber) {\n            const newValue = `${limitedValue}`\n                .replace('.', decimalSeparator)\n                .replace(CHAR_HYPHEN, minusSign);\n            return {\n                value: newValue,\n                selection: [newValue.length, newValue.length],\n            };\n        }\n        return {\n            value,\n            selection,\n        };\n    };\n}\n\n/**\n * Manage caret-navigation when user \"deletes\" non-removable digits or separators\n * @example 1,|42 => Backspace => 1|,42 (only if `decimalZeroPadding` is `true`)\n * @example 1|,42 => Delete => 1,|42 (only if `decimalZeroPadding` is `true`)\n * @example 0,|00 => Delete => 0,0|0 (only if `decimalZeroPadding` is `true`)\n * @example 1 |000 => Backspace => 1| 000 (always)\n */\nfunction createNonRemovableCharsDeletionPreprocessor({ decimalSeparator, thousandSeparator, decimalZeroPadding, }) {\n    return ({ elementState, data }, actionType) => {\n        const { value, selection } = elementState;\n        const [from, to] = selection;\n        const selectedCharacters = value.slice(from, to);\n        const nonRemovableSeparators = decimalZeroPadding\n            ? [decimalSeparator, thousandSeparator]\n            : [thousandSeparator];\n        const areNonRemovableZeroesSelected = decimalZeroPadding &&\n            from > value.indexOf(decimalSeparator) &&\n            Boolean(selectedCharacters.match(/^0+$/gi));\n        if ((actionType !== 'deleteBackward' && actionType !== 'deleteForward') ||\n            (!nonRemovableSeparators.includes(selectedCharacters) &&\n                !areNonRemovableZeroesSelected)) {\n            return {\n                elementState,\n                data,\n            };\n        }\n        return {\n            elementState: {\n                value,\n                selection: actionType === 'deleteForward' ? [to, to] : [from, from],\n            },\n            data,\n        };\n    };\n}\n\n/**\n * It pads integer part with zero if user types decimal separator (for empty input).\n * @example Empty input => User types \",\" (decimal separator) => 0,|\n */\nfunction createNotEmptyIntegerPartPreprocessor({ decimalSeparator, precision, prefix, postfix, }) {\n    const startWithDecimalSepRegExp = new RegExp(`^\\\\D*${escapeRegExp(decimalSeparator)}`);\n    return ({ elementState, data }) => {\n        const { value, selection } = elementState;\n        const { cleanValue, extractedPrefix } = extractAffixes(value, {\n            prefix,\n            postfix,\n        });\n        const [from, to] = selection;\n        const cleanFrom = clamp(from - extractedPrefix.length, 0, cleanValue.length);\n        const cleanTo = clamp(to - extractedPrefix.length, 0, cleanValue.length);\n        if (precision <= 0 ||\n            cleanValue.slice(0, cleanFrom).includes(decimalSeparator) ||\n            cleanValue.slice(cleanTo).includes(decimalSeparator) ||\n            !data.match(startWithDecimalSepRegExp)) {\n            return { elementState, data };\n        }\n        const digitsBeforeCursor = cleanValue.slice(0, cleanFrom).match(/\\d+/);\n        return {\n            elementState,\n            data: digitsBeforeCursor ? data : `0${data}`,\n        };\n    };\n}\n\n/**\n * It replaces pseudo characters with valid one.\n * @example User types '.' (but separator is equal to comma) => dot is replaced with comma.\n * @example User types hyphen / en-dash / em-dash => it is replaced with minus.\n */\nfunction createPseudoCharactersPreprocessor({ validCharacter, pseudoCharacters, prefix, postfix, }) {\n    const pseudoCharactersRegExp = new RegExp(`[${pseudoCharacters.join('')}]`, 'gi');\n    return ({ elementState, data }) => {\n        const { value, selection } = elementState;\n        const { cleanValue, extractedPostfix, extractedPrefix } = extractAffixes(value, {\n            prefix,\n            postfix,\n        });\n        return {\n            elementState: {\n                selection,\n                value: extractedPrefix +\n                    cleanValue.replace(pseudoCharactersRegExp, validCharacter) +\n                    extractedPostfix,\n            },\n            data: data.replace(pseudoCharactersRegExp, validCharacter),\n        };\n    };\n}\n\n/**\n * It rejects new typed decimal separator if it already exists in text field.\n * Behaviour is similar to native <input type=\"number\"> (Chrome).\n * @example 1|23,45 => Press comma (decimal separator) => 1|23,45 (do nothing).\n */\nfunction createRepeatedDecimalSeparatorPreprocessor({ decimalSeparator, prefix, postfix, }) {\n    return ({ elementState, data }) => {\n        const { value, selection } = elementState;\n        const [from, to] = selection;\n        const { cleanValue } = extractAffixes(value, { prefix, postfix });\n        return {\n            elementState,\n            data: !cleanValue.includes(decimalSeparator) ||\n                value.slice(from, to + 1).includes(decimalSeparator)\n                ? data\n                : data.replaceAll(new RegExp(escapeRegExp(decimalSeparator), 'gi'), ''),\n        };\n    };\n}\n\n/**\n * It adds symbol for separating thousands.\n * @example 1000000 => (thousandSeparator is equal to space) => 1 000 000.\n */\nfunction createThousandSeparatorPostprocessor({ thousandSeparator, decimalSeparator, prefix, postfix, }) {\n    if (!thousandSeparator) {\n        return identity;\n    }\n    const isAllSpaces = (...chars) => chars.every((x) => /\\s/.test(x));\n    return ({ value, selection }) => {\n        const { cleanValue, extractedPostfix, extractedPrefix } = extractAffixes(value, {\n            prefix,\n            postfix,\n        });\n        const { minus, integerPart, decimalPart } = toNumberParts(cleanValue, {\n            decimalSeparator,\n            thousandSeparator,\n        });\n        const [initialFrom, initialTo] = selection;\n        let [from, to] = selection;\n        const processedIntegerPart = Array.from(integerPart).reduceRight((formattedValuePart, char, i) => {\n            const isLeadingThousandSeparator = !i && char === thousandSeparator;\n            const isPositionForSeparator = !isLeadingThousandSeparator &&\n                formattedValuePart.length &&\n                (formattedValuePart.length + 1) % 4 === 0;\n            if (isPositionForSeparator &&\n                (char === thousandSeparator || isAllSpaces(char, thousandSeparator))) {\n                return thousandSeparator + formattedValuePart;\n            }\n            if (char === thousandSeparator && !isPositionForSeparator) {\n                if (i && i <= initialFrom) {\n                    from--;\n                }\n                if (i && i <= initialTo) {\n                    to--;\n                }\n                return formattedValuePart;\n            }\n            if (!isPositionForSeparator) {\n                return char + formattedValuePart;\n            }\n            if (i <= initialFrom) {\n                from++;\n            }\n            if (i <= initialTo) {\n                to++;\n            }\n            return char + thousandSeparator + formattedValuePart;\n        }, '');\n        return {\n            value: extractedPrefix +\n                minus +\n                processedIntegerPart +\n                (cleanValue.includes(decimalSeparator) ? decimalSeparator : '') +\n                decimalPart +\n                extractedPostfix,\n            selection: [from, to],\n        };\n    };\n}\n\n/**\n * It drops decimal part if precision is zero.\n * @example User pastes '123.45' (but precision is zero) => 123\n */\nfunction createZeroPrecisionPreprocessor({ precision, decimalSeparator, prefix, postfix, }) {\n    if (precision > 0) {\n        return identity;\n    }\n    const decimalPartRegExp = new RegExp(`${escapeRegExp(decimalSeparator)}.*$`, 'g');\n    return ({ elementState, data }) => {\n        const { value, selection } = elementState;\n        const { cleanValue, extractedPrefix, extractedPostfix } = extractAffixes(value, {\n            prefix,\n            postfix,\n        });\n        const [from, to] = selection;\n        const newValue = extractedPrefix +\n            cleanValue.replace(decimalPartRegExp, '') +\n            extractedPostfix;\n        return {\n            elementState: {\n                selection: [\n                    Math.min(from, newValue.length),\n                    Math.min(to, newValue.length),\n                ],\n                value: newValue,\n            },\n            data: data.replace(decimalPartRegExp, ''),\n        };\n    };\n}\n\nconst DUMMY_SELECTION = [0, 0];\n/**\n * It removes repeated leading zeroes for integer part on blur-event.\n * @example 000000 => blur => 0\n * @example 00005 => blur => 5\n */\nfunction createLeadingZeroesValidationPlugin({ decimalSeparator, thousandSeparator, prefix, postfix, }) {\n    const dropRepeatedLeadingZeroes = createLeadingZeroesValidationPostprocessor({\n        decimalSeparator,\n        thousandSeparator,\n        prefix,\n        postfix,\n    });\n    return maskitoEventHandler('blur', (element) => {\n        const newValue = dropRepeatedLeadingZeroes({\n            value: element.value,\n            selection: DUMMY_SELECTION,\n        }, { value: '', selection: DUMMY_SELECTION }).value;\n        maskitoUpdateElement(element, newValue);\n    }, { capture: true });\n}\n\n/**\n * This plugin is connected with {@link createMinMaxPostprocessor}:\n * both validate `min`/`max` bounds of entered value (but at the different point of time).\n */\nfunction createMinMaxPlugin({ min, max, decimalSeparator, }) {\n    return maskitoEventHandler('blur', (element, options) => {\n        const parsedNumber = maskitoParseNumber(element.value, decimalSeparator);\n        const clampedNumber = clamp(parsedNumber, min, max);\n        if (!Number.isNaN(parsedNumber) && parsedNumber !== clampedNumber) {\n            maskitoUpdateElement(element, maskitoTransform(stringifyNumberWithoutExp(clampedNumber), options));\n        }\n    }, { capture: true });\n}\n\n/**\n * It pads EMPTY integer part with zero if decimal parts exists.\n * It works on blur event only!\n * @example 1|,23 => Backspace => Blur => 0,23\n */\nfunction createNotEmptyIntegerPlugin({ decimalSeparator, prefix, postfix, }) {\n    return maskitoEventHandler('blur', (element) => {\n        const { cleanValue, extractedPostfix, extractedPrefix } = extractAffixes(element.value, { prefix, postfix });\n        const newValue = extractedPrefix +\n            cleanValue.replace(new RegExp(`^(\\\\D+)?${escapeRegExp(decimalSeparator)}`), `$10${decimalSeparator}`) +\n            extractedPostfix;\n        maskitoUpdateElement(element, newValue);\n    }, { capture: true });\n}\n\nfunction maskitoNumberOptionsGenerator({ max = Number.MAX_SAFE_INTEGER, min = Number.MIN_SAFE_INTEGER, precision = 0, thousandSeparator = CHAR_NO_BREAK_SPACE, decimalSeparator = '.', decimalPseudoSeparators, decimalZeroPadding = false, prefix: unsafePrefix = '', postfix = '', minusSign = CHAR_MINUS, } = {}) {\n    const pseudoMinuses = [\n        CHAR_HYPHEN,\n        CHAR_EN_DASH,\n        CHAR_EM_DASH,\n        CHAR_JP_HYPHEN,\n        CHAR_MINUS,\n    ].filter((char) => char !== thousandSeparator && char !== decimalSeparator && char !== minusSign);\n    const validatedDecimalPseudoSeparators = validateDecimalPseudoSeparators({\n        decimalSeparator,\n        thousandSeparator,\n        decimalPseudoSeparators,\n    });\n    const prefix = unsafePrefix.endsWith(decimalSeparator) && precision > 0\n        ? `${unsafePrefix}${CHAR_ZERO_WIDTH_SPACE}`\n        : unsafePrefix;\n    return Object.assign(Object.assign({}, MASKITO_DEFAULT_OPTIONS), { mask: generateMaskExpression({\n            decimalSeparator,\n            precision,\n            thousandSeparator,\n            prefix,\n            postfix,\n            isNegativeAllowed: min < 0,\n            minusSign,\n        }), preprocessors: [\n            createFullWidthToHalfWidthPreprocessor(),\n            createInitializationOnlyPreprocessor({\n                decimalSeparator,\n                decimalPseudoSeparators: validatedDecimalPseudoSeparators,\n                pseudoMinuses,\n                prefix,\n                postfix,\n                minusSign,\n            }),\n            createAffixesFilterPreprocessor({ prefix, postfix }),\n            createPseudoCharactersPreprocessor({\n                validCharacter: minusSign,\n                pseudoCharacters: pseudoMinuses,\n                prefix,\n                postfix,\n            }),\n            createPseudoCharactersPreprocessor({\n                validCharacter: decimalSeparator,\n                pseudoCharacters: validatedDecimalPseudoSeparators,\n                prefix,\n                postfix,\n            }),\n            createNotEmptyIntegerPartPreprocessor({\n                decimalSeparator,\n                precision,\n                prefix,\n                postfix,\n            }),\n            createNonRemovableCharsDeletionPreprocessor({\n                decimalSeparator,\n                decimalZeroPadding,\n                thousandSeparator,\n            }),\n            createZeroPrecisionPreprocessor({\n                precision,\n                decimalSeparator,\n                prefix,\n                postfix,\n            }),\n            createRepeatedDecimalSeparatorPreprocessor({\n                decimalSeparator,\n                prefix,\n                postfix,\n            }),\n        ], postprocessors: [\n            createMinMaxPostprocessor({ decimalSeparator, min, max, minusSign }),\n            maskitoPrefixPostprocessorGenerator(prefix),\n            maskitoPostfixPostprocessorGenerator(postfix),\n            createThousandSeparatorPostprocessor({\n                decimalSeparator,\n                thousandSeparator,\n                prefix,\n                postfix,\n            }),\n            createDecimalZeroPaddingPostprocessor({\n                decimalSeparator,\n                decimalZeroPadding,\n                precision,\n                prefix,\n                postfix,\n            }),\n            emptyPostprocessor({ prefix, postfix, decimalSeparator, thousandSeparator }),\n        ], plugins: [\n            createLeadingZeroesValidationPlugin({\n                decimalSeparator,\n                thousandSeparator,\n                prefix,\n                postfix,\n            }),\n            createNotEmptyIntegerPlugin({\n                decimalSeparator,\n                prefix,\n                postfix,\n            }),\n            createMinMaxPlugin({ min, max, decimalSeparator }),\n        ], overwriteMode: decimalZeroPadding\n            ? ({ value, selection: [from] }) => from <= value.indexOf(decimalSeparator) ? 'shift' : 'replace'\n            : 'shift' });\n}\n\nfunction createMaxValidationPreprocessor(timeSegmentMaxValues, timeMode) {\n    const paddedMaxValues = padStartTimeSegments(timeSegmentMaxValues);\n    const invalidCharsRegExp = new RegExp(`[^\\\\d${TIME_FIXED_CHARACTERS.map(escapeRegExp).join('')}]+`);\n    return ({ elementState, data }, actionType) => {\n        if (actionType === 'deleteBackward' || actionType === 'deleteForward') {\n            return { elementState, data };\n        }\n        const { value, selection } = elementState;\n        if (actionType === 'validation') {\n            const { validatedTimeString, updatedTimeSelection } = validateTimeString({\n                timeString: value,\n                paddedMaxValues,\n                offset: 0,\n                selection,\n                timeMode,\n            });\n            return {\n                elementState: {\n                    value: validatedTimeString,\n                    selection: updatedTimeSelection,\n                },\n                data,\n            };\n        }\n        const newCharacters = data.replace(invalidCharsRegExp, '');\n        const [from, rawTo] = selection;\n        let to = rawTo + newCharacters.length; // to be conformed with `overwriteMode: replace`\n        const newPossibleValue = value.slice(0, from) + newCharacters + value.slice(to);\n        const { validatedTimeString, updatedTimeSelection } = validateTimeString({\n            timeString: newPossibleValue,\n            paddedMaxValues,\n            offset: 0,\n            selection: [from, to],\n            timeMode,\n        });\n        if (newPossibleValue && !validatedTimeString) {\n            return { elementState, data: '' }; // prevent changes\n        }\n        to = updatedTimeSelection[1];\n        const newData = validatedTimeString.slice(from, to);\n        return {\n            elementState: {\n                selection,\n                value: validatedTimeString.slice(0, from) +\n                    '0'.repeat(newData.length) +\n                    validatedTimeString.slice(to),\n            },\n            data: newData,\n        };\n    };\n}\n\nfunction maskitoTimeOptionsGenerator({ mode, timeSegmentMaxValues = {}, step = 0, }) {\n    const enrichedTimeSegmentMaxValues = Object.assign(Object.assign({}, DEFAULT_TIME_SEGMENT_MAX_VALUES), timeSegmentMaxValues);\n    return Object.assign(Object.assign({}, MASKITO_DEFAULT_OPTIONS), { mask: Array.from(mode).map((char) => TIME_FIXED_CHARACTERS.includes(char) ? char : /\\d/), preprocessors: [\n            createFullWidthToHalfWidthPreprocessor(),\n            createColonConvertPreprocessor(),\n            createZeroPlaceholdersPreprocessor(),\n            createMaxValidationPreprocessor(enrichedTimeSegmentMaxValues, mode),\n        ], plugins: [\n            createTimeSegmentsSteppingPlugin({\n                fullMode: mode,\n                step,\n                timeSegmentMaxValues: enrichedTimeSegmentMaxValues,\n            }),\n        ], overwriteMode: 'replace' });\n}\n\n/**\n * Converts a formatted time string to milliseconds based on the given `options.mode`.\n *\n * @param maskedTime a formatted time string by {@link maskitoTimeOptionsGenerator} or {@link maskitoStringifyTime}\n * @param params\n */\nfunction maskitoParseTime(maskedTime, { mode, timeSegmentMaxValues = {} }) {\n    var _a, _b, _c, _d;\n    const maxValues = Object.assign(Object.assign({}, DEFAULT_TIME_SEGMENT_MAX_VALUES), timeSegmentMaxValues);\n    const msInSecond = maxValues.milliseconds + 1;\n    const msInMinute = (maxValues.seconds + 1) * msInSecond;\n    const msInHour = (maxValues.minutes + 1) * msInMinute;\n    const parsedTime = padEndTimeSegments(parseTimeString(maskedTime, mode));\n    return (Number((_a = parsedTime.hours) !== null && _a !== void 0 ? _a : '') * msInHour +\n        Number((_b = parsedTime.minutes) !== null && _b !== void 0 ? _b : '') * msInMinute +\n        Number((_c = parsedTime.seconds) !== null && _c !== void 0 ? _c : '') * msInSecond +\n        Number((_d = parsedTime.milliseconds) !== null && _d !== void 0 ? _d : ''));\n}\n\n/**\n * Converts milliseconds to a formatted time string based on the given `options.mode`.\n *\n * @param milliseconds unsigned integer milliseconds\n * @param params\n */\nfunction maskitoStringifyTime(milliseconds, { mode, timeSegmentMaxValues = {} }) {\n    const maxValues = Object.assign(Object.assign({}, DEFAULT_TIME_SEGMENT_MAX_VALUES), timeSegmentMaxValues);\n    const msInSecond = maxValues.milliseconds + 1;\n    const msInMinute = (maxValues.seconds + 1) * msInSecond;\n    const msInHour = (maxValues.minutes + 1) * msInMinute;\n    const hours = Math.trunc(milliseconds / msInHour);\n    milliseconds -= hours * msInHour;\n    const minutes = Math.trunc(milliseconds / msInMinute);\n    milliseconds -= minutes * msInMinute;\n    const seconds = Math.trunc(milliseconds / msInSecond);\n    milliseconds -= seconds * msInSecond;\n    const result = padStartTimeSegments({ hours, minutes, seconds, milliseconds });\n    return mode\n        .replaceAll(/H+/g, result.hours)\n        .replaceAll('MSS', result.milliseconds)\n        .replaceAll(/M+/g, result.minutes)\n        .replaceAll(/S+/g, result.seconds);\n}\n\nexport { maskitoAddOnFocusPlugin, maskitoCaretGuard, maskitoDateOptionsGenerator, maskitoDateRangeOptionsGenerator, maskitoDateTimeOptionsGenerator, maskitoEventHandler, maskitoNumberOptionsGenerator, maskitoParseNumber, maskitoParseTime, maskitoPostfixPostprocessorGenerator, maskitoPrefixPostprocessorGenerator, maskitoRejectEvent, maskitoRemoveOnBlurPlugin, maskitoStringifyTime, maskitoTimeOptionsGenerator, maskitoWithPlaceholder };\n","popover-select-date {\n}\n","import {Component, h, Host, Element, Prop, State} from \"@stencil/core\";\nimport {Environment} from \"../../../../global/env\";\nimport {toZonedTime} from \"date-fns-tz\";\nimport {format, formatISO, isValid, parse} from \"date-fns\";\nimport {showDate} from \"../../../../helpers/utils\";\nimport {Maskito} from \"@maskito/core\";\nimport {\n  maskitoDateOptionsGenerator,\n  maskitoDateTimeOptionsGenerator,\n} from \"@maskito/kit\";\n\n@Component({\n  tag: \"popover-select-date\",\n  styleUrl: \"popover-select-date.scss\",\n})\nexport class PopoverSelectDate {\n  @Element() el: HTMLElement;\n  @State() inputValue: string;\n\n  @Prop() value: string;\n  @Prop() labelTag?: string;\n  @Prop() labelText?: string;\n  @Prop() labelReplace?: any;\n  @Prop() appendText?: any;\n  @Prop() datePresentation?:\n    | \"date\"\n    | \"date-time\"\n    | \"month\"\n    | \"month-year\"\n    | \"time\"\n    | \"time-date\"\n    | \"year\" = \"date\";\n  @Prop() preferWheel?: boolean = false; //prefer wheel type for dates\n  @Prop() showDateTitle?: boolean = true; //show date title for dates\n  @Prop() maxDate?: string;\n  localTime: Date;\n  @State() updateView = true;\n  targetTimeZone: string;\n  popover: HTMLIonPopoverElement;\n  maskedInput: Maskito;\n\n  componentWillLoad() {\n    // The target timezone, i.e., the user's local timezone\n    this.targetTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    // Convert the provided date string (in the original timezone) to the user's local time\n    this.setLocalTime(this.value);\n    this.popover = this.el.closest(\"ion-popover\");\n  }\n  componentDidLoad() {\n    this.initializeMask();\n  }\n\n  disconnectedCallback() {\n    this.maskedInput.destroy();\n  }\n\n  setLocalTime(date) {\n    // Parsing as UTC or specified timezone\n    this.localTime = toZonedTime(new Date(date), this.targetTimeZone);\n    this.inputValue = showDate(\n      formatISO(this.localTime),\n      this.datePresentation,\n      true\n    );\n    this.updateView = !this.updateView;\n  }\n\n  async initializeMask() {\n    const optionsDate = maskitoDateOptionsGenerator({\n      mode: \"dd/mm/yyyy\",\n      separator: \"/\",\n    });\n    const optionsDateTime = maskitoDateTimeOptionsGenerator({\n      dateMode: \"dd/mm/yyyy\",\n      timeMode: \"HH:MM\",\n      dateSeparator: \"/\",\n    });\n    const ionInput = document.querySelector(\n      \"#dateInput\"\n    ) as HTMLIonInputElement;\n    const nativeEl = await ionInput.getInputElement();\n    this.maskedInput = new Maskito(\n      nativeEl,\n      this.datePresentation == \"date\" ? optionsDate : optionsDateTime\n    );\n  }\n\n  handleChange(ev) {\n    this.value = ev.detail.value;\n    this.setLocalTime(this.value);\n  }\n\n  handleInputChange(ev) {\n    const inputDate = ev.target.value;\n    const parsedDate = parse(\n      inputDate,\n      this.datePresentation == \"date\" ? \"dd/MM/yyyy\" : \"dd/MM/yyyy HH:ss\",\n      new Date()\n    );\n    if (isValid(parsedDate)) {\n      this.value = formatISO(parsedDate);\n      this.setLocalTime(this.value);\n    }\n  }\n\n  close() {\n    this.popover.dismiss();\n  }\n  save() {\n    //save in database in UTC format\n    const utcDate = toZonedTime(this.value, \"UTC\");\n    const formatDate = format(utcDate, \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n    this.popover.dismiss(formatDate);\n  }\n\n  render() {\n    return (\n      <Host>\n        <ion-content>\n          <ion-datetime\n            color={Environment.getAppColor()}\n            presentation={this.datePresentation}\n            prefer-wheel={this.preferWheel}\n            show-default-title={!this.showDateTitle}\n            onIonChange={(ev) => this.handleChange(ev)}\n            max={this.maxDate}\n            value={formatISO(this.localTime)}\n          >\n            {this.showDateTitle ? (\n              <span slot=\"title\">\n                {this.labelTag ? (\n                  <my-transl\n                    tag={this.labelTag}\n                    text={this.labelText}\n                    replace={this.labelReplace}\n                  ></my-transl>\n                ) : this.labelText ? (\n                  this.labelText\n                ) : undefined}\n                {this.appendText ? this.appendText : undefined}\n              </span>\n            ) : undefined}\n          </ion-datetime>\n          {this.datePresentation == \"date-time\" ||\n          this.datePresentation == \"time-date\" ||\n          this.datePresentation == \"date\" ? (\n            <ion-item>\n              <ion-input\n                id=\"dateInput\"\n                fill=\"outline\"\n                type=\"text\"\n                debounce={300}\n                inputmode=\"numeric\"\n                value={this.inputValue}\n                onIonInput={(ev) => this.handleInputChange(ev)}\n              ></ion-input>\n            </ion-item>\n          ) : undefined}\n        </ion-content>\n        <ion-footer>\n          <app-modal-footer\n            onCancelEmit={() => this.close()}\n            onSaveEmit={() => this.save()}\n          />\n        </ion-footer>\n      </Host>\n    );\n  }\n}\n"],"version":3}