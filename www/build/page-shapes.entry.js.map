{"file":"page-shapes.entry.esm.js","mappings":"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","names":["cloneDeep","find","orderBy"],"sources":["src/components/trasteel/pages/refractories/page-shapes/page-shapes.scss?tag=page-shapes","src/components/trasteel/pages/refractories/page-shapes/page-shapes.tsx"],"sourcesContent":["page-shapes {\n  /* Component styles go here */\n}\n","import {Component, Element, State, h} from \"@stencil/core\";\nimport {\n  SHAPESCOLLECTION,\n  ShapesService,\n} from \"../../../../../services/trasteel/refractories/shapes\";\nimport {\n  MapDataShape,\n  ShapeFilter,\n} from \"../../../../../interfaces/trasteel/refractories/shapes\";\nimport {TrasteelFilterService} from \"../../../../../services/trasteel/common/trs-db-filter\";\nimport {TrasteelService} from \"../../../../../services/trasteel/common/services\";\nimport {cloneDeep, find, orderBy} from \"lodash\";\nimport {DatabaseService} from \"../../../../../services/common/database\";\nimport {SystemService} from \"../../../../../services/common/system\";\nimport Swiper from \"swiper\";\nimport {TranslationService} from \"../../../../../services/common/translations\";\nimport {MapDataDatasheet} from \"../../../../../interfaces/trasteel/refractories/datasheets\";\nimport {DatasheetsService} from \"../../../../../services/trasteel/refractories/datasheets\";\n\n@Component({\n  tag: \"page-shapes\",\n  styleUrl: \"page-shapes.scss\",\n})\nexport class PageShapes {\n  @Element() el: HTMLElement;\n  @State() filteredShapesList: MapDataShape[] = [];\n  shapesList: MapDataShape[] = [];\n  nonFilteredShapesList: MapDataShape[] = [];\n  @State() loading = true;\n  @State() filter: ShapeFilter = new ShapeFilter();\n  searchToolbar: any;\n  @State() slider: Swiper;\n  @State() updateView = true;\n  @State() showDownload = true;\n  @State() activateDownload = false;\n  @State() basket: {shape: MapDataShape; datasheet: MapDataDatasheet}[] = [];\n  localDocName = \"shapeBasket\";\n\n  async componentWillLoad() {\n    const filter = await DatabaseService.getLocalDocument(\"shapesFilter\");\n    this.filter = new ShapeFilter(filter);\n    ShapesService.shapesList$.subscribe(async (list: MapDataShape[]) => {\n      this.updateList(list);\n      this.nonFilteredShapesList = list;\n      this.loading = false;\n      this.filterLists();\n    });\n    const basket = await DatabaseService.getLocalDocument(this.localDocName);\n    if (basket) {\n      this.basket = basket;\n      this.basket.forEach((basket) => {\n        if (basket.datasheet) {\n          this.activateDownload = true;\n        } else {\n          this.activateDownload = false;\n        }\n      });\n    }\n  }\n\n  componentDidLoad() {\n    this.searchToolbar = this.el.querySelector(\n      \"#searchToolbar\"\n    ) as HTMLAppSearchToolbarElement;\n    this.slider = new Swiper(\".slider-show-shape\", {\n      speed: 400,\n      spaceBetween: 0,\n      allowTouchMove: false,\n      autoHeight: true,\n      slidesPerView: 1,\n      on: {\n        slideChange: () => {\n          this.slider ? this.slider.updateAutoHeight() : null;\n        },\n      },\n    });\n    this.downloadShapes();\n  }\n\n  updateList(list) {\n    this.shapesList = list;\n    this.searchToolbar ? this.searchToolbar.forceFilter(list) : undefined;\n    this.updateSlider();\n  }\n\n  updateSlider() {\n    this.updateView = !this.updateView;\n    //wait for view to update and then reset slider height\n    setTimeout(() => {\n      this.slider ? this.slider.update() : undefined;\n    }, 100);\n  }\n\n  addShape() {\n    ShapesService.presentShapeUpdate();\n  }\n\n  getOptions() {\n    if (TrasteelService.isRefraDBAdmin()) {\n      return [\n        {\n          tag: \"delete\",\n          text: \"Delete\",\n          icon: \"trash\",\n          color: \"danger\",\n          func: (returnField) => ShapesService.deleteShape(returnField, false),\n        },\n        {\n          tag: \"duplicate\",\n          text: \"Duplicate\",\n          icon: \"duplicate\",\n          color: \"secondary\",\n          func: (returnField) => ShapesService.duplicateShape(returnField),\n        },\n        {\n          tag: \"edit\",\n          text: \"Edit\",\n          icon: \"create\",\n          color: \"primary\",\n          func: (returnField) => ShapesService.presentShapeUpdate(returnField),\n        },\n      ];\n    } else return null;\n  }\n\n  async openShapeFilter() {\n    DatabaseService.deleteLocalDocument(\"filteredShapesList\");\n    this.filter = await ShapesService.openShapeFilter(this.filter);\n    this.filterLists();\n  }\n\n  clearShapeFilter() {\n    this.filter = new ShapeFilter();\n    this.shapesList = cloneDeep(this.nonFilteredShapesList);\n    DatabaseService.deleteLocalDocument(\"filteredShapesList\");\n    this.filterLists();\n  }\n\n  async filterLists() {\n    DatabaseService.saveLocalDocument(\"shapesFilter\", this.filter);\n    if (this.filter.isActive()) {\n      const localShapesList =\n        await DatabaseService.getLocalDocument(\"filteredShapesList\");\n      if (!localShapesList) {\n        this.loading = true;\n        SystemService.presentLoading(\"searching\");\n        this.shapesList = await ShapesService.filterShapes(this.filter);\n        SystemService.dismissLoading();\n        this.filteredShapesList = cloneDeep(this.shapesList);\n        DatabaseService.saveLocalDocument(\n          \"filteredShapesList\",\n          this.filteredShapesList\n        );\n        this.loading = false;\n      } else {\n        this.filteredShapesList = localShapesList;\n      }\n    } else {\n      this.filteredShapesList = cloneDeep(this.nonFilteredShapesList);\n    }\n    this.searchToolbar\n      ? this.searchToolbar.forceFilter(this.shapesList)\n      : undefined;\n    this.slider ? this.updateSlider() : undefined;\n  }\n\n  downloadShapes() {\n    this.showDownload = !this.showDownload;\n    this.slider.params.slidesPerView = this.showDownload ? 2 : 1;\n    this.updateSlider();\n  }\n\n  openShape(shapeId) {\n    if (this.showDownload) {\n      const shape = ShapesService.getShapeById(shapeId);\n      if (!find(this.basket, {shape}))\n        this.basket.push({shape, datasheet: null});\n      this.basket = orderBy(this.basket, \"shape.shapeName\");\n      this.saveBasket();\n    } else {\n      ShapesService.presentShapeDetails(shapeId);\n    }\n  }\n\n  async openDataSheet(index) {\n    const ds = await DatasheetsService.openSelectDataSheet();\n    if (ds) {\n      this.basket[index].datasheet = ds;\n      //fill empty ds\n      this.basket.forEach((basket) => {\n        if (!basket.datasheet) basket.datasheet = ds;\n      });\n      this.activateDownload = true;\n      this.saveBasket();\n    }\n  }\n\n  async downloadShapesList() {\n    ShapesService.exportShapes(this.basket, \"en\");\n    this.downloadShapes();\n  }\n\n  emptyBasket() {\n    this.basket = [];\n    this.activateDownload = false;\n    this.saveBasket();\n  }\n\n  removeItemFromBasket(index) {\n    if (this.basket.length == 1) {\n      this.emptyBasket();\n    } else {\n      this.basket.splice(index, 1);\n      this.saveBasket();\n    }\n  }\n\n  saveBasket() {\n    this.updateSlider();\n    DatabaseService.saveLocalDocument(this.localDocName, this.basket);\n  }\n\n  render() {\n    return [\n      <ion-header>\n        <app-navbar tag=\"shapes\" text=\"Shapes\" color=\"trasteel\"></app-navbar>\n        <ion-grid class=\"ion-no-padding\">\n          <ion-row class=\"ion-no-padding\">\n            <ion-col size=\"1\" class=\"ion-no-padding\">\n              <ion-toolbar color=\"trasteel\">\n                <ion-button\n                  fill=\"clear\"\n                  expand=\"full\"\n                  icon-only\n                  onClick={() => this.openShapeFilter()}\n                >\n                  <ion-icon name=\"filter\" color=\"light\"></ion-icon>\n                </ion-button>\n              </ion-toolbar>\n            </ion-col>\n            <ion-col size=\"11\" class=\"ion-no-padding\">\n              <app-search-toolbar\n                id=\"searchToolbar\"\n                searchTitle=\"shapes\"\n                list={this.shapesList}\n                orderFields={[\"shapeName\"]}\n                color=\"trasteel\"\n                placeholder=\"Search by shape name\"\n                filterBy={[\"shapeName\", \"shapeTypeId\"]}\n                onFilteredList={(ev) => (this.filteredShapesList = ev.detail)}\n              ></app-search-toolbar>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </ion-header>,\n      <ion-content class=\"slides\">\n        {TrasteelService.isRefraDBAdmin() ? (\n          !this.showDownload ? (\n            <ion-fab vertical=\"top\" horizontal=\"end\" slot=\"fixed\" edge>\n              <ion-fab-button size=\"small\" color=\"trasteel\">\n                <ion-icon name=\"chevron-down\"></ion-icon>\n              </ion-fab-button>\n              <ion-fab-list side=\"bottom\">\n                <ion-fab-button\n                  onClick={() => this.addShape()}\n                  color=\"trasteel\"\n                >\n                  <ion-icon name=\"add\"></ion-icon>\n                </ion-fab-button>\n                <ion-fab-button\n                  onClick={() => this.downloadShapes()}\n                  color=\"trasteel\"\n                >\n                  <ion-icon name=\"download\"></ion-icon>\n                </ion-fab-button>\n              </ion-fab-list>\n            </ion-fab>\n          ) : (\n            <ion-fab vertical=\"top\" horizontal=\"end\" slot=\"fixed\" edge>\n              <ion-fab-button\n                onClick={() => this.downloadShapes()}\n                size=\"small\"\n                color=\"trasteel\"\n              >\n                <ion-icon name=\"close\"></ion-icon>\n              </ion-fab-button>\n            </ion-fab>\n          )\n        ) : undefined}\n        <swiper-container class=\"slider-show-shape swiper\">\n          <swiper-wrapper class=\"swiper-wrapper\">\n            <swiper-slide class=\"swiper-slide\">\n              {this.filter.isActive()\n                ? [\n                    <ion-breadcrumbs>\n                      <ion-button\n                        icon-only\n                        fill=\"clear\"\n                        onClick={() => this.clearShapeFilter()}\n                      >\n                        <ion-icon color=\"danger\" name=\"trash\"></ion-icon>\n                      </ion-button>\n                      <ion-breadcrumb>\n                        {this.filteredShapesList.length}\n                      </ion-breadcrumb>\n                      {Object.keys(this.filter).map((key) =>\n                        !key.includes(\"operator\") &&\n                        (this.filter[key] > 0 || this.filter[key] !== null) ? (\n                          <ion-breadcrumb>\n                            {key != \"shapeTypeId\"\n                              ? key +\n                                \" \" +\n                                this.filter[key + \"_operator\"] +\n                                \" \" +\n                                this.filter[key]\n                              : ShapesService.getShapeTypeName(\n                                    this.filter.shapeTypeId\n                                  )\n                                ? ShapesService.getShapeTypeName(\n                                    this.filter.shapeTypeId\n                                  ).en\n                                : null}\n                          </ion-breadcrumb>\n                        ) : undefined\n                      )}\n                      <ion-breadcrumb></ion-breadcrumb>\n                    </ion-breadcrumbs>,\n                  ]\n                : undefined}\n\n              <app-infinite-scroll\n                list={this.filteredShapesList}\n                loading={this.loading}\n                showFields={[\"shapeName\"]}\n                orderBy={[\"shapeName\"]}\n                options={this.getOptions()}\n                returnField=\"id\"\n                icon={\n                  TrasteelFilterService.getMapDocs(SHAPESCOLLECTION).icon.name\n                }\n                onItemClicked={(ev) => this.openShape(ev.detail)}\n                onListChanged={() => {\n                  this.updateSlider();\n                }}\n              ></app-infinite-scroll>\n            </swiper-slide>\n            {this.showDownload ? (\n              <swiper-slide class=\"swiper-slide\">\n                <ion-list>\n                  {this.basket.length == 0 ? (\n                    <ion-item>\n                      Click on the shapes on the left to add to basket\n                    </ion-item>\n                  ) : (\n                    <ion-grid>\n                      <ion-row>\n                        <ion-col>\n                          <ion-button\n                            onClick={() => this.downloadShapesList()}\n                            expand=\"block\"\n                            fill=\"outline\"\n                            color=\"trasteel\"\n                            disabled={!this.activateDownload}\n                          >\n                            <ion-icon name=\"download\" slot=\"start\"></ion-icon>\n                            <ion-label>\n                              {TranslationService.getTransl(\n                                \"download\",\n                                \"Download\"\n                              )}\n                            </ion-label>\n                            <ion-badge slot=\"end\" color=\"trasteel\">\n                              {this.basket.length}\n                            </ion-badge>\n                          </ion-button>\n                        </ion-col>\n                        <ion-col size=\"1\">\n                          <ion-button\n                            fill=\"clear\"\n                            icon-only\n                            onClick={() => this.emptyBasket()}\n                          >\n                            <ion-icon name=\"trash\" color=\"danger\"></ion-icon>\n                          </ion-button>\n                        </ion-col>\n                      </ion-row>\n                    </ion-grid>\n                  )}\n                  {this.basket.map((basket, index) => (\n                    <ion-grid class=\"ion-no-padding\">\n                      <ion-row class=\"ion-no-padding\">\n                        <ion-col class=\"ion-no-padding\">\n                          <ion-item color=\"light\">\n                            <ion-label>{basket.shape.shapeName}</ion-label>\n                            <ion-icon slot=\"end\" name=\"arrow-right\"></ion-icon>\n                          </ion-item>\n                        </ion-col>\n                        <ion-col class=\"ion-no-padding\">\n                          <ion-item\n                            button\n                            color=\"light\"\n                            onClick={() => this.openDataSheet(index)}\n                          >\n                            <ion-label>\n                              {basket.datasheet\n                                ? basket.datasheet.productName\n                                : \"insert datasheet\"}\n                            </ion-label>\n                          </ion-item>\n                        </ion-col>\n                        <ion-col size=\"2\" class=\"ion-no-padding\">\n                          <ion-item color=\"light\">\n                            <ion-button\n                              slot=\"end\"\n                              fill=\"clear\"\n                              icon-only\n                              onClick={() => this.removeItemFromBasket(index)}\n                            >\n                              <ion-icon name=\"trash\" color=\"danger\"></ion-icon>\n                            </ion-button>\n                          </ion-item>\n                        </ion-col>\n                      </ion-row>\n                    </ion-grid>\n                  ))}\n                </ion-list>\n              </swiper-slide>\n            ) : undefined}\n          </swiper-wrapper>\n        </swiper-container>\n      </ion-content>,\n    ];\n  }\n}\n"],"version":3}