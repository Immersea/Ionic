{"file":"page-projects.entry.esm.js","mappings":"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","names":["cloneDeep"],"sources":["src/components/trasteel/pages/refractories/page-projects/page-projects.scss?tag=page-projects","src/components/trasteel/pages/refractories/page-projects/page-projects.tsx"],"sourcesContent":["page-projects {\n  /* Component styles go here */\n}\n","import {Component, State, h} from \"@stencil/core\";\nimport {MapDataProject} from \"../../../../../interfaces/trasteel/refractories/projects\";\nimport {\n  PROJECTSCOLLECTION,\n  ProjectsService,\n} from \"../../../../../services/trasteel/refractories/projects\";\nimport {TrasteelFilterService} from \"../../../../../services/trasteel/common/trs-db-filter\";\nimport {cloneDeep} from \"lodash\";\nimport {CustomersService} from \"../../../../../services/trasteel/crm/customers\";\nimport {TrasteelService} from \"../../../../../services/trasteel/common/services\";\nimport {Element} from \"@stencil/core\";\n\n@Component({\n  tag: \"page-projects\",\n  styleUrl: \"page-projects.scss\",\n})\nexport class PageProjects {\n  @Element() el: HTMLElement;\n  projectsList: MapDataProject[] = [];\n  @State() filteredProjectsList: MapDataProject[] = [];\n  @State() loading = true;\n  @State() updateView = true;\n  searchToolbar: any;\n\n  componentWillLoad() {\n    ProjectsService.projectsList$.subscribe(async (list: MapDataProject[]) => {\n      //replace name of customers\n      const customersList = [];\n      list.map((item) => {\n        const newItem = cloneDeep(item);\n        const customer = CustomersService.getCustomersDetails(item.customerId);\n        if (customer) {\n          newItem.customerId = customer.fullName;\n          customersList.push(newItem);\n        }\n      });\n      this.updateList(customersList);\n      this.loading = false;\n    });\n  }\n\n  componentDidLoad() {\n    this.searchToolbar = this.el.querySelector(\n      \"#searchToolbar\"\n    ) as HTMLAppSearchToolbarElement;\n    this.updateList(this.projectsList);\n  }\n\n  updateList(list) {\n    this.projectsList = list;\n    this.searchToolbar\n      ? this.searchToolbar.forceFilter(this.projectsList)\n      : undefined;\n    this.updateView = !this.updateView;\n  }\n\n  addProject() {\n    ProjectsService.presentProjectUpdate();\n  }\n\n  getOptions() {\n    if (TrasteelService.isRefraDBAdmin()) {\n      return [\n        {\n          tag: \"delete\",\n          text: \"Delete\",\n          icon: \"trash\",\n          color: \"danger\",\n          func: (returnField) =>\n            ProjectsService.deleteProject(returnField, false),\n        },\n        {\n          tag: \"duplicate\",\n          text: \"Duplicate\",\n          icon: \"duplicate\",\n          color: \"secondary\",\n          func: (returnField) => ProjectsService.duplicateProject(returnField),\n        },\n        {\n          tag: \"edit\",\n          text: \"Edit\",\n          icon: \"create\",\n          color: \"primary\",\n          func: (returnField) =>\n            ProjectsService.presentProjectUpdate(returnField),\n        },\n      ];\n    } else return null;\n  }\n\n  render() {\n    return [\n      <ion-header>\n        <app-navbar\n          tag=\"projects\"\n          text=\"Projects\"\n          color=\"trasteel\"\n        ></app-navbar>\n        <app-search-toolbar\n          id=\"searchToolbar\"\n          searchTitle=\"projects\"\n          list={this.projectsList}\n          orderFields={[\"customerId\", \"projectLocalId\"]}\n          color=\"trasteel\"\n          placeholder=\"Search by customer or project\"\n          filterBy={[\"customerId\", \"projectLocalId\", \"projectDescription\"]}\n          onFilteredList={(ev) => (this.filteredProjectsList = ev.detail)}\n        ></app-search-toolbar>\n      </ion-header>,\n      <ion-content>\n        {TrasteelService.isRefraDBAdmin() ? (\n          <ion-fab vertical=\"top\" horizontal=\"end\" slot=\"fixed\" edge>\n            <ion-fab-button\n              size=\"small\"\n              onClick={() => this.addProject()}\n              color=\"trasteel\"\n            >\n              <ion-icon name=\"add\"></ion-icon>\n            </ion-fab-button>\n          </ion-fab>\n        ) : undefined}\n        <app-infinite-scroll\n          list={this.filteredProjectsList}\n          loading={this.loading}\n          showFields={[\"projectLocalId\"]}\n          showNotes={[\"projectDescription\"]}\n          groupBy={[\"customerId\"]}\n          options={this.getOptions()}\n          returnField=\"id\"\n          icon={TrasteelFilterService.getMapDocs(PROJECTSCOLLECTION).icon.name}\n          onItemClicked={(ev) =>\n            ProjectsService.presentProjectDetails(ev.detail)\n          }\n        ></app-infinite-scroll>\n      </ion-content>,\n    ];\n  }\n}\n"],"version":3}