{"file":"app-decoplanner-gas.entry.esm.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,oBAAoB,GAAG,yNAAyN;;MCkBzO,iBAAiB;;;QAiB5B,kBAAa,GAAG,EAAE,CAAC;QAKnB,yBAAoB,GAAG,MAAM,CAAC;QAC9B,qBAAgB,GAAG,KAAK,CAAC;QACzB,WAAM,GAAQ;YACZ,IAAI,EAAE,EAAE;YACR,GAAG,EAAE,EAAE;SACR,CAAC;QACF,WAAM,GAAQ;YACZ,MAAM,EAAE,EAAE;YACV,IAAI,EAAE,EAAE;SACT,CAAC;QACF,WAAM,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC5B,aAAQ,GAAG;YACT,MAAM,EAAE,KAAK;YACb,SAAS,EAAE,CAAC;YACZ,OAAO,EAAE,CAAC;YACV,KAAK,EAAE,KAAK;YACZ,KAAK,EAAE,IAAI;SACZ,CAAC;QACF,YAAO,GAAG,CAAC,CAAC;QAKZ,aAAQ,GAAG,IAAI,CAAC;;;oBAxCiB,IAAI,eAAe,EAAE;0BAChC,IAAI;;IAE1B,MAAM;QACJ,IAAI,IAAI,CAAC,OAAO;YAAE,IAAI,CAAC,YAAY,EAAE,CAAC;KACvC;IAGD,qBAAqB;QACnB,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAgCD,iBAAiB;QACf,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAED,oBAAoB;QAClB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK;YACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,GAAG;gBACtD,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;oBACtB,IAAI,OAAO,GAAG,QAAQ,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;oBAC3C,mBAAmB,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;iBAC3C;aACF,CAAC,CAAC;SACJ,CAAC,CAAC;QACH,mBAAmB,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC;KACzD;IAED,gBAAgB;QACd,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,IAAI,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;QACxD,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC;QACzD,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,IAAI,IAAI,CAAC;QAC7D,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;QACnD,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;IAED,aAAa;QACX,IAAI,CAAC,UAAU,GAAG;YAChB,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;YACvD,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI;YAC3D,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI;SAC5D,CAAC;QACF,IAAI,CAAC,aAAa,GAAG;YACnB,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;YACvD,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI;YAC3D,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI;SAC5D,CAAC;QACF,IAAI,CAAC,WAAW,GAAG;YACjB,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,GAAGA,oBAAK,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;YACpE,IAAI,EACF,IAAI,CAAC,UAAU,CAAC,IAAI,GAAGA,oBAAK,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;YACtE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO;SAC7C,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;KACpC;IAED,YAAY;QACV,IAAI,KAAK,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG;YACZ,MAAM,EAAE,EAAE;YACV,IAAI,EAAE,EAAE;SACT,CAAC;QACF,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK;YAClB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG;gBACnB,QAAQ,EAAEC,wBAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC;gBAC9C,WAAW,EAAEA,wBAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC;gBACpD,aAAa,EAAEA,wBAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC;aACpE,CAAC;;;;YAKF,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI;gBACnD,MAAM,iBAAiB,GAAG,gBAAgB,CAAC,QAAQ,EAAE;sBACjD,EAAE;sBACF,gBAAgB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAClC,IAAI,IAAI,CAAC,MAAM,GAAG,iBAAiB,EAAE;oBACnC,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;iBAC3B;qBAAM;oBACL,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;iBACvB;;gBAED,MAAM,aAAa,GAAG,gBAAgB,CAAC,QAAQ,EAAE;sBAC7C,CAAC;sBACD,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACjC,IAAI,IAAI,CAAC,MAAM,GAAG,aAAa,EAAE;oBAC/B,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE;wBACrB,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;qBAC1B;yBAAM;wBACL,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;qBAC3B;;iBAEF;aACF,CAAC,CAAC;;YAEH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,MAAM,GAAGC,qBAAM,CAC9C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,MAAM,EACvC,QAAQ,CACT,CAAC;;YAEF,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,IAAI,GAAGA,qBAAM,CAC5C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,IAAI,EACrC,eAAe,CAChB,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,GAAGA,qBAAM,CACrC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,EAC9B,WAAW,CACZ,CAAC;;YAGF,IAAI,YAAY,GAAG,CAAC,CAAC;YACrBC,sBAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC,GAAG;gBAC1C,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;gBAC5B,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;gBACpB,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE;;oBAEb,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE;;wBAEhB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI;4BACnD,IAAI,IAAI,CAAC,IAAI,IAAI,YAAY,EAAE;gCAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;gCACrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gCACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gCACrB,IAAI,CAAC,YAAY,GAAGH,oBAAK,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,IAAI,GAAG,CAAC,CAAC;gCACzD,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,CAChB,GAAG,CAAC,GAAG,EACP,GAAG,CAAC,GAAG,EACP,GAAG,CAAC,SAAS,EACb,GAAG,CAAC,IAAI,EACR,GAAG,CAAC,KAAK,CACV,CAAC;gCACF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gCACjB,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;gCAC5B,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;gCAC3C,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;6BACjC;yBACF,CAAC,CAAC;qBACJ;yBAAM;;;wBAGL,IAAI,OAAO,GAAGI,mBAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,MAAM,EAAE;4BAC1D,IAAI,EAAE,aAAa;yBACpB,CAAC,CAAC;wBACH,IAAI,OAAO,EAAE;4BACX,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC;4BAC3C,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;4BACpB,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;4BACxB,OAAO,CAAC,YAAY,GAAGJ,oBAAK,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC,SAAS,IAAI,GAAG,CAAC,CAAC;4BAC/D,IAAI,GAAG,CAAC,CAAC;4BACT,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;yBACrB;;wBAED,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI;4BACnD,IAAI,IAAI,CAAC,IAAI,IAAI,YAAY,IAAI,IAAI,CAAC,IAAI,IAAI,aAAa,EAAE;gCAC3D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;gCACrC,IAAI,CAAC,IAAI;oCACP,IAAI,CAAC,IAAI,IAAI,aAAa,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS;0CAC/C,IAAI,CAAC,SAAS;0CACd,IAAI,CAAC;gCACX,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC;gCAClB,IAAI,CAAC,QAAQ;oCACX,IAAI,CAAC,IAAI,IAAI,aAAa,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS;0CACnD,IAAI,CAAC,SAAS;0CACd,QAAQ,CAAC;gCACf,IAAI,CAAC,YAAY,GAAGA,oBAAK,CACvB,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,IAAI,GAAG,CACvC,CAAC;gCACF,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC;gCAC3B,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,CAChB,GAAG,CAAC,GAAG,EACP,GAAG,CAAC,GAAG,EACP,GAAG,CAAC,SAAS,EACb,GAAG,CAAC,IAAI,EACR,GAAG,CAAC,KAAK,CACV,CAAC;gCACF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;6BAClB;;4BAED,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;4BAC3B,QAAQ,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;yBACxC,CAAC,CAAC;qBACJ;iBACF;qBAAM;;oBAEL,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;wBACvD,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;wBAC/D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;wBACrC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;wBAC7B,IAAI,CAAC,YAAY,GAAGA,oBAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,IAAI,GAAG,CAAC,CAAC;wBAClE,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;wBACrB,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,CAChB,GAAG,CAAC,GAAG,EACP,GAAG,CAAC,GAAG,EACP,GAAG,CAAC,SAAS,EACb,GAAG,CAAC,IAAI,EACR,GAAG,CAAC,KAAK,CACV,CAAC;wBACF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;wBACjB,YAAY,EAAE,CAAC;qBAChB;iBACF;aACF,CAAC,CAAC;SACJ,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,MAAM,YAAY;;QAEhB,IAAI,SAAS,GAAG;YACd,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,GAAG;YACX,UAAU,EAAE,MAAM;YAClB,UAAU,EAAE,IAAI;SACjB,CAAC;;QAEF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK;YACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,GAAG;gBACtD,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;oBACtB,IAAI,OAAO,GAAG,QAAQ,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;oBAC3C,IAAI,WAAW,GAAG,kBAAkB,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;oBACzD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;oBACvC,SAAS,CAAC,EAAE,GAAG,OAAO,CAAC;oBACvB,SAAS,CAAC,QAAQ,GAAG,WAAW,CAAC;oBACjC,MAAM,KAAK,GAAG,mBAAmB,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;oBACzD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;wBACtB,KAAK;wBACL,IAAI;qBACL,CAAC,CAAC;iBACJ;aACF,CAAC,CAAC;SACJ,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACxB,IAAI,OAAO,GAAG,WAAW,CAAC;YAC1B,IAAI,WAAW,GAAG,qBAAqB,CAAC;YACxC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;YACvC,SAAS,CAAC,EAAE,GAAG,OAAO,CAAC;YACvB,SAAS,CAAC,QAAQ,GAAG,WAAW,CAAC;YACjC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,mBAAmB,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;YACjE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACxC;QACD,UAAU,CAAC,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;KACvC;IAED,YAAY;QACV,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK;YACxB,IAAI,UAAU,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,OAAO,CACjE,CAAC,IAAI,EAAE,GAAG;gBACR,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;oBACtB,IAAI,QAAQ,GAAGA,oBAAK,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,IAAI,GAAG,CAAC,CAAC;oBACzD,IAAI,YAAY,GAAGA,oBAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,IAAI,GAAG,CAAC,CAAC;oBACjE,QAAQ,GAAG,QAAQ,GAAG,GAAG,GAAG,GAAG,GAAG,QAAQ,CAAC;oBAC3C,YAAY,GAAG,YAAY,GAAG,GAAG,GAAG,GAAG,GAAG,YAAY,CAAC;oBACvD,UAAU,GAAG;wBACX,KAAK,EAAE;4BACL,YAAY,EAAE,GAAG;4BACjB,aAAa,EAAE,KAAK;4BACpB,cAAc,EAAE,KAAK;4BACrB,UAAU,EAAE,KAAK;4BACjB,UAAU,EAAE,IAAI,CAAC,YAAY,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,GAAG;4BAC7D,UAAU,EAAE,GAAG;4BACf,QAAQ,EAAE,GAAG;4BACb,MAAM,EAAE,GAAG;4BACX,YAAY,EAAE,GAAG;4BACjB,OAAO,EAAE,GAAG;4BACZ,kBAAkB,EAAE,GAAG;4BACvB,UAAU,EAAE,GAAG;4BACf,OAAO,EAAE,IAAI,CAAC,YAAY,GAAG,GAAG,GAAG,SAAS,GAAG,SAAS;4BACxD,OAAO,EAAE,GAAG;4BACZ,cAAc,EAAE,IAAI,CAAC,YAAY,GAAG,GAAG,GAAG,SAAS,GAAG,SAAS;yBAChE;wBACD,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL;oCACE,QAAQ,EAAE,GAAG;oCACb,QAAQ,EAAE,QAAQ;oCAClB,IAAI,EAAE,QAAQ;iCACf;gCACD;oCACE,QAAQ,EAAE,QAAQ;oCAClB,QAAQ,EAAE,YAAY;oCACtB,IAAI,EAAE,QAAQ;iCACf;gCACD;oCACE,QAAQ,EAAE,YAAY;oCACtB,QAAQ,EAAE,IAAI,CAAC,YAAY,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY;oCAC3D,IAAI,EAAE,QAAQ;iCACf;gCACD;oCACE,QAAQ,EAAE,IAAI,CAAC,SAAS;oCACxB,QAAQ,EAAE,IAAI,CAAC,SAAS;oCACxB,IAAI,EAAE,QAAQ;iCACf;6BACF;yBACF;wBACD,KAAK,EAAE,IAAI,CAAC,YAAY;qBACzB,CAAC;oBACF,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;oBACpC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;oBACtD,IACE,IAAI,CAAC,aAAa,CAAC,kBAAkB,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;wBAC1D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK;wBAE7B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;iBAC1C;aACF,CACF,CAAC;YAEF,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;gBACxB,IAAI,CAAC,QAAQ,CAAC,OAAO;oBACnB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,OAAO,CAAC;gBACnD,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;gBAC5D,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;gBAC5B,UAAU,CAAC,KAAK,CAAC,YAAY,GAAG,MAAM,CAAC;gBACvC,UAAU,CAAC,KAAK,CAAC,UAAU,GAAG,KAAK;sBAC/B,IAAI,CAAC,QAAQ,CAAC,OAAO;sBACrB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;gBAC5B,UAAU,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,GAAG,SAAS,GAAG,SAAS,CAAC;gBACzD,UAAU,CAAC,KAAK,CAAC,cAAc,GAAG,KAAK,GAAG,SAAS,GAAG,SAAS,CAAC;gBAChE,IAAI,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;gBACpE,IAAI,MAAM,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;gBACrD,IAAI,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,MAAM,CAAC;gBACnD,UAAU,CAAC,UAAU,CAAC,KAAK,GAAG;oBAC5B;wBACE,QAAQ,EAAE,GAAG;wBACb,QAAQ,EAAE,KAAK;wBACf,IAAI,EAAE,QAAQ;qBACf;oBACD;wBACE,QAAQ,EAAE,KAAK;wBACf,QAAQ,EAAE,MAAM;wBAChB,IAAI,EAAE,QAAQ;qBACf;oBACD;wBACE,QAAQ,EAAE,MAAM;wBAChB,QAAQ,EAAE,KAAK;wBACf,IAAI,EAAE,QAAQ;qBACf;iBACF,CAAC;gBACF,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;gBACzC,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;oBACvB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;oBAC5C,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;iBAC9B;aACF;SACF,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;KACpC;IAED,aAAa,CAAC,EAAE;QACd,IAAI,CAAC,OAAO,GAAGK,uBAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,oBAAoB;QAClB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO;YAC9C,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,GAAG,GAAG,OAAO,CAAC,CAAC;SACpE,CAAC,CAAC;KACJ;IAED,cAAc,CAAC,EAAE;QACf,IAAI,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;YAC5C,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;KACF;IAED,MAAM;QACJ,QACE,4DAAK,KAAK,EAAC,kBAAkB,IAC3B,4DAAK,KAAK,EAAC,0BAA0B,IACnC,oEACE,IAAI,EAAC,KAAK,EACV,KAAK,EAAE,WAAW,CAAC,WAAW,EAAE,EAChC,WAAW,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAC5C,KAAK,EAAE,IAAI,CAAC,oBAAoB,IAEhC,2EAAoB,KAAK,EAAC,MAAM,IAC9B,2EAA2B,CACR,EACrB,2EAAoB,KAAK,EAAC,KAAK,IAC7B,0EAA0B,CACP,CACT,CACV,EACN,4DAAK,KAAK,EAAC,6BAA6B,IACtC,mEACG,IAAI,CAAC,QAAQ,IACZ,oBACE,kBACE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CACjC,iBAAiB,EACjB,iBAAiB,CAClB,EACD,WAAW,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,EAC3C,KAAK,EAAE,IAAI,CAAC,OAAO,IAEnB,yBAAmB,KAAK,EAAE,CAAC,iBAAgC,EAC3D,yBAAmB,KAAK,EAAE,CAAC,kBAAiC,EAC5D,yBAAmB,KAAK,EAAE,CAAC,uBAEP,CACT,CACJ,IACT,SAAS,EAEb,mEACE,kEAAW,QAAQ,EAAC,SAAS,IAC3B,kEAAW,GAAG,EAAC,aAAa,EAAC,IAAI,EAAC,aAAa,GAAG,CACxC,EACZ,oFACE,+DACGL,oBAAK,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,YAAQ,GAAG,EACzC,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,UAAU,IAClC,gBAAOA,oBAAK,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC,CAAQ,KAE3C,gBAAOA,oBAAK,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,MAAS,CAC/C,EAAE,GAAG,EACL,IAAI,CAAC,UAAU,CAAC,UAAU,EAC1B,IAAI,CAAC,gBAAgB,IACpB,qBAEG,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,UAAU,IAClC,gBAAOA,oBAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,CAAQ,KAE5C,gBAAOA,oBAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,MAAS,CAC9C,EAAE,GAAG,EACL,IAAI,CAAC,UAAU,CAAC,YAAY,CACxB,IACL,SAAS,CACR,CACH,CACG,EACX,mEACE,kEAAW,QAAQ,EAAC,SAAS,IAC3B,kEAAW,GAAG,EAAC,YAAY,EAAC,IAAI,EAAC,YAAY,GAAG,CACtC,EACZ,oFACE,+DACGA,oBAAK,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC,YAAQ,GAAG,EAC5C,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,UAAU,IAClC,gBAAOA,oBAAK,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,CAAC,CAAC,CAAQ,KAE9C,gBAAOA,oBAAK,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC,MAAS,CAClD,EAAE,GAAG,EACL,IAAI,CAAC,UAAU,CAAC,UAAU,EAC1B,IAAI,CAAC,gBAAgB,IACpB,qBAEG,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,UAAU,IAClC,gBAAOA,oBAAK,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,CAAC,CAAQ,KAE/C,gBAAOA,oBAAK,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,CAAC,CAAQ,CAChD,EAAE,GAAG,EACL,IAAI,CAAC,UAAU,CAAC,YAAY,CACxB,IACL,SAAS,CACR,CACH,CACG,EACV,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,IAC9C,oBACE,iBAAW,QAAQ,EAAC,SAAS,IAC3B,iBAAW,GAAG,EAAC,UAAU,EAAC,IAAI,EAAC,UAAU,GAAG,CAClC,EACZ,mCACE,gBACGA,oBAAK,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,YAAQ,GAAG,EAC1C,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,UAAU,IAClC,gBAAOA,oBAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC,CAAQ,KAE5C,gBAAOA,oBAAK,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,MAAS,CAChD,EAAE,GAAG,EACL,IAAI,CAAC,UAAU,CAAC,UAAU,EAC1B,IAAI,CAAC,gBAAgB,IACpB,qBAEG,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,UAAU,IAClC,gBAAOA,oBAAK,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,CAAC,CAAQ,KAE7C,gBAAOA,oBAAK,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,CAAC,CAAQ,CAC9C,EAAE,GAAG,EACL,IAAI,CAAC,UAAU,CAAC,YAAY,CACxB,IACL,SAAS,CACR,CACH,CACG,IACT,SAAS,EAEZ,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,MACrB,eACG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC;aACzD,MAAM,GAAG,CAAC,IACX,2BACE,gBAAU,KAAK,EAAC,gBAAgB,IAC9B,mBACG,KAAK,IAAI,QAAQ,IAChB,mBACE,iBACE,GAAG,EAAC,QAAQ,EACZ,IAAI,EAAC,QAAQ,EACb,OAAO,SACI,CACL,KAEV,mBACE,iBACE,GAAG,EAAC,MAAM,EACV,IAAI,EAAC,MAAM,EACX,OAAO,SACI,CACL,CACX,CACO,CACD,CACK,IAChB,SAAS,EACZ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC;aACzD,MAAM,GAAG,CAAC,IACX,oBACE,eAAS,KAAK,EAAC,4BAA4B,IACxC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,MAC9B,eAAS,IAAI,EAAC,IAAI,qBACf,IAAI,CAAC,MAAM,IACV,gBACE,KAAK,EAAE;gBACL,QAAQ,EAAE,OAAO;gBACjB,UAAU,EAAE,IAAI,CAAC,KAAK,GAAG,SAAS,GAAG,SAAS;aAC/C,IAED,wBAAkB,KAAK,EAAC,iBAAiB,IACvC,gBAAU,KAAK,EAAC,gBAAgB,IAC9B,eAAS,KAAK,EAAC,4BAA4B,IACzC,eAAS,IAAI,EAAC,GAAG,IACf,WACE,EAAE,EAAC,qBAAqB,EACxB,KAAK,EAAE,EAAC,MAAM,EAAE,OAAO,EAAC,GACnB,CACC,EACV,eAAS,IAAI,EAAC,GAAG,IACf,mBACE,kBACE,iBAAW,GAAG,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,GAAG,CAC3B,CACD,EACV,mBACE,eAAa,CACL,EACV,mBACE,aACE,iBACE,GAAG,EAAC,WAAW,EACf,IAAI,EAAC,WAAW,GAChB,CACA,MAEI,EACV,mBAAU,IAAI,CAAC,SAAS,SAAe,EACvC,mBACE,wBAAe,EACf,qBAAe,CACP,EACV,mBAAU,IAAI,CAAC,OAAO,SAAe,EACpC,IAAI,CAAC,KAAK,IACT,eAAS,KAAK,EAAC,4BAA4B,IACzC,gBACE,IAAI,EAAC,SAAS,EACd,KAAK,EAAC,WAAW,GACP,CACJ,IACR,SAAS,CACL,CACF,CACD,CACM,CACV,IACT,SAAS,EACZ,IAAI,CAAC,IAAI,IACR,gBACE,KAAK,EAAE;gBACL,QAAQ,EAAE,OAAO;gBACjB,UAAU,EACR,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG;sBACrC,SAAS;sBACT,SAAS;aAChB,IAED,wBACE,KAAK,EAAC,iBAAiB,EACvB,EAAE,EAAC,cAAc,IAEjB,gBAAU,KAAK,EAAC,gBAAgB,IAC9B,mBACE,eAAS,IAAI,EAAC,GAAG,IACf,WACE,EAAE,EACA,kBAAkB,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,EAEtC,KAAK,EAAE,EAAC,MAAM,EAAE,OAAO,EAAC,GACnB,CACC,EACV,eAAS,IAAI,EAAC,GAAG,IACf,eAAS,KAAK,EAAC,4BAA4B,IACzC,mBACE,kBACG,IAAI,CAAC,IAAI,CAAC,IAAI,QACd,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,MAClB,CACD,CACF,EACV,mBACE,mBACE,eAAa,CACL,CACF,EACV,eAAS,KAAK,EAAC,4BAA4B,IACzC,mBACE,aACE,iBACE,GAAG,EAAC,WAAW,EACf,IAAI,EAAC,WAAW,GAChB,CACA,OACF,GAAG,EACJ,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG,IAC3B,cAAQ,KAAK,EAAC,cAAc,WAEnB,IACP,SAAS,CACL,CACF,EACV,eAAS,KAAK,EAAC,4BAA4B,IACzC,mBACG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAClB,IAAI,CAAC,UAAU,CAAC,YAAY,QAAI,GAAG,EACnCA,oBAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,EAClC,IAAI,CAAC,UAAU,CAAC,UAAU,CACnB,CACF,EACV,eAAS,KAAK,EAAC,4BAA4B,IACzC,mBACE,aACE,iBACE,GAAG,EAAC,UAAU,EACd,IAAI,EAAC,UAAU,GACf,CACA,OACF,GAAG,EACL,cACE,KAAK,EACH,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG;kBACxB,WAAW;kBACX,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,GAAG;sBAC3B,cAAc;sBACd,SAAS,IAGhBA,oBAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,MAC1B,CACD,CACF,EACV,eAAS,KAAK,EAAC,4BAA4B,IACzC,mBACGA,oBAAK,CACJ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ;YACjB,IAAI,CAAC,IAAI,CAAC,QAAQ;YAClB,IAAI,CAAC,IAAI,CAAC,SAAS,EACrB,CAAC,CACF,EACA,IAAI,CAAC,UAAU,CAAC,YAAY,QAAI,GAAG,EACnCA,oBAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,EAC5B,IAAI,CAAC,UAAU,CAAC,UAAU,CACnB,CACF,EACV,eAAS,KAAK,EAAC,4BAA4B,IACzC,mBACE,aACE,iBAAW,GAAG,EAAC,MAAM,EAAC,IAAI,EAAC,MAAM,GAAG,CAClC,OACF,GAAG,EACL,cAAQ,KAAK,EAAC,aAAa,IACxBA,oBAAK,CACJ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;YACb,IAAI,CAAC,IAAI,CAAC,SAAS;YACnB,GAAG,EACL,CAAC,CACF,MAEM,CACD,CACF,EACV,eAAS,KAAK,EAAC,4BAA4B,IACzC,mBACGA,oBAAK,CACJ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ;YACjB,IAAI,CAAC,IAAI,CAAC,IAAI;YACd,IAAI,CAAC,IAAI,CAAC,SAAS,EACrB,CAAC,CACF,EACA,IAAI,CAAC,UAAU,CAAC,YAAY,QAAI,GAAG,EACnCA,oBAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EACxB,IAAI,CAAC,UAAU,CAAC,UAAU,CACnB,CACF,EACT,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG,IAC3B,eAAS,KAAK,EAAC,4BAA4B,IACzC,gBACE,IAAI,EAAC,SAAS,EACd,KAAK,EAAC,WAAW,GACP,CACJ,IACR,SAAS,CACL,CACF,CACD,CACM,CACV,IACT,SAAS,CACL,CACX,CAAC,CACM,CACD,IACT,SAAS,CACT,CACP,CAAC,CACO,CACP,CACF,EACN;KACH;;;;;;;;;;;","names":["round","cloneDeep","sortBy","forEach","find","toNumber"],"sources":["src/components/udive/app/decoplanner/app-decoplanner-gas/app-decoplanner-gas.scss?tag=app-decoplanner-gas","src/components/udive/app/decoplanner/app-decoplanner-gas/app-decoplanner-gas.tsx"],"sourcesContent":["app-decoplanner-gas {\n  .color-red {\n    color: #d00000;\n  }\n  .color-green {\n    color: #69bb7b;\n  }\n  .color-yellow {\n    color: #e0a800;\n  }\n  ion-icon {\n    font-size: 50px;\n  }\n\n  width: 100%;\n}\n","import {Component, h, Prop, State, Element, Watch} from \"@stencil/core\";\nimport {DecoplannerDive} from \"../../../../../interfaces/udive/planner/decoplanner-dive\";\nimport {DivePlan} from \"../../../../../services/udive/planner/dive-plan\";\nimport {DecoplannerParameters} from \"../../../../../interfaces/udive/planner/decoplanner-parameters\";\n//import { GasBlenderService } from \"../../../../services/planner/gas-blender\";\n//import { DiveConfiguration } from \"../../../../interfaces/udive/planner/dive-configuration\";\n\nimport {cloneDeep, find, forEach, round, sortBy, toNumber} from \"lodash\";\nimport {Gas} from \"../../../../../interfaces/udive/planner/gas\";\nimport {DiveToolsService} from \"../../../../../services/udive/planner/dive-tools\";\nimport {Environment} from \"../../../../../global/env\";\nimport {FusionchartsService} from \"../../../../../services/common/fusioncharts\";\nimport {TranslationService} from \"../../../../../services/common/translations\";\n\n@Component({\n  tag: \"app-decoplanner-gas\",\n  styleUrl: \"app-decoplanner-gas.scss\",\n})\nexport class AppDecoplannerGas {\n  @Element() el: HTMLElement;\n\n  @Prop() isShown: boolean;\n  @Prop() diveDataToShare: any;\n  @State() dive: DecoplannerDive = new DecoplannerDive();\n  @State() updateView = true;\n  @Watch(\"isShown\")\n  update() {\n    if (this.isShown) this.updateCharts();\n  }\n\n  @Watch(\"diveDataToShare\")\n  updateDiveDataToShare() {\n    this.updateViewParams();\n  }\n\n  chartElements = {};\n  dives: Array<DecoplannerDive>;\n  index: number;\n  divePlan: DivePlan;\n  parameters: DecoplannerParameters;\n  selectedModelGasView = \"BUHL\";\n  showAvailableGas = false;\n  models: any = {\n    BUHL: {},\n    VPM: {},\n  };\n  charts: any = {\n    bottom: [],\n    deco: [],\n  };\n  stages = [\"bottom\", \"deco\"];\n  aceChart = {\n    render: false,\n    available: 0,\n    runtime: 0,\n    error: false,\n    chart: null,\n  };\n  gasRule = 1;\n  diveMinGas: any;\n  diveUsableGas: any;\n  diveTurnGas: any;\n\n  editPlan = true;\n\n  componentWillLoad() {\n    this.updateViewParams();\n  }\n\n  disconnectedCallback() {\n    this.stages.forEach((stage) => {\n      this.models.BUHL.configuration[stage].forEach((tank, key) => {\n        if (tank.show === true) {\n          let chartId = \"chart-\" + stage + \"-\" + key;\n          FusionchartsService.disposeChart(chartId);\n        }\n      });\n    });\n    FusionchartsService.disposeChart(\"chart-container-ace\");\n  }\n\n  updateViewParams() {\n    const params = this.diveDataToShare;\n    this.editPlan = params.editPlan == false ? false : true;\n    this.divePlan = params.divePlan;\n    this.index = params.index;\n    this.dives = this.divePlan.dives;\n    this.dive = this.divePlan.dives[this.index];\n    this.parameters = this.divePlan.configuration.parameters;\n    this.aceChart.render = this.parameters.configuration != \"OC\";\n    this.aceChart.available = this.parameters.ace_time;\n    this.calculateGas();\n    this.createCharts();\n  }\n\n  updateGasRule() {\n    this.diveMinGas = {\n      Lt: this.dive[this.selectedModelGasView].gasRules.MG.Lt,\n      cuft: this.dive[this.selectedModelGasView].gasRules.MG.cuft,\n      time: this.dive[this.selectedModelGasView].gasRules.MG.time,\n    };\n    this.diveUsableGas = {\n      Lt: this.dive[this.selectedModelGasView].gasRules.UG.Lt,\n      cuft: this.dive[this.selectedModelGasView].gasRules.UG.cuft,\n      time: this.dive[this.selectedModelGasView].gasRules.UG.time,\n    };\n    this.diveTurnGas = {\n      Lt: this.diveMinGas.Lt + round(this.diveUsableGas.Lt / this.gasRule),\n      cuft:\n        this.diveMinGas.cuft + round(this.diveUsableGas.cuft / this.gasRule),\n      time: this.diveUsableGas.time / this.gasRule,\n    };\n    this.updateView = !this.updateView;\n  }\n\n  calculateGas() {\n    let array = [\"BUHL\", \"VPM\"];\n    this.charts = {\n      bottom: [],\n      deco: [],\n    };\n    array.forEach((model) => {\n      this.models[model] = {\n        gasRules: cloneDeep(this.dive[model].gasRules),\n        consumption: cloneDeep(this.dive[model].consumption),\n        configuration: cloneDeep(this.divePlan.configuration.configuration),\n      };\n\n      //find back gas\n      //let totalBottomVolume = 0;\n      //let CCR = this.parameters.configuration == \"CCR\";\n      this.models[model].configuration.bottom.forEach((tank) => {\n        const bottomStageVolume = DiveToolsService.isMetric()\n          ? 14\n          : DiveToolsService.ltToCuFt(14);\n        if (tank.volume < bottomStageVolume) {\n          tank.type = \"bottomStage\";\n        } else {\n          tank.type = \"backGas\";\n        }\n        //totalBottomVolume += tank.volume;\n        const O2StageVolume = DiveToolsService.isMetric()\n          ? 7\n          : DiveToolsService.ltToCuFt(7);\n        if (tank.volume < O2StageVolume) {\n          if (tank.gas.fO2 == 1) {\n            tank.type = \"CCR_Oxygen\";\n          } else {\n            tank.type = \"CCR_Diluent\";\n          }\n          //totalBottomVolume -= tank.volume;\n        }\n      });\n      //order by volume inverse\n      this.models[model].configuration.bottom = sortBy(\n        this.models[model].configuration.bottom,\n        \"volume\"\n      );\n      //order deco starting from Oxygen\n      this.models[model].configuration.deco = sortBy(\n        this.models[model].configuration.deco,\n        \"gas.fromDepth\"\n      );\n      this.models[model].consumption = sortBy(\n        this.models[model].consumption,\n        \"fromDepth\"\n      );\n\n      //calculate available and used volumes\n      let decoGasCount = 0;\n      forEach(this.models[model].consumption, (gas) => {\n        let required = gas.required;\n        let used = gas.used;\n        if (!gas.deco) {\n          //bottom gas\n          if (gas.fO2 == 1) {\n            //CCR oxygen\n            this.models[model].configuration.bottom.forEach((tank) => {\n              if (tank.type == \"CCR_Oxygen\") {\n                tank.available = tank.getGasVolume();\n                tank.used = used;\n                tank.required = used;\n                tank.chartPercent = round((used / tank.available) * 100);\n                tank.gas = new Gas(\n                  gas.fO2,\n                  gas.fHe,\n                  gas.fromDepth,\n                  gas.ppO2,\n                  gas.units\n                );\n                tank.show = true;\n                this.aceChart.render = true;\n                let runtime = this.dive.CCR[model].runtime;\n                this.aceChart.runtime = runtime;\n              }\n            });\n          } else {\n            //bottom gas\n            //fill diluent bottle\n            let diluent = find(this.models[model].configuration.bottom, {\n              type: \"CCR_Diluent\",\n            });\n            if (diluent) {\n              diluent.available = diluent.getGasVolume();\n              diluent.used = used;\n              diluent.required = used;\n              diluent.chartPercent = round((used / diluent.available) * 100);\n              used = 0;\n              diluent.show = true;\n            }\n            //fill back gas or bailout\n            this.models[model].configuration.bottom.forEach((tank) => {\n              if (tank.type != \"CCR_Oxygen\" && tank.type != \"CCR_Diluent\") {\n                tank.available = tank.getGasVolume();\n                tank.used =\n                  tank.type == \"bottomStage\" && used > tank.available\n                    ? tank.available\n                    : used;\n                used -= tank.used;\n                tank.required =\n                  tank.type == \"bottomStage\" && required > tank.available\n                    ? tank.available\n                    : required;\n                tank.chartPercent = round(\n                  (tank.required / tank.available) * 100\n                );\n                required -= tank.available;\n                tank.gas = new Gas(\n                  gas.fO2,\n                  gas.fHe,\n                  gas.fromDepth,\n                  gas.ppO2,\n                  gas.units\n                );\n                tank.show = true;\n              }\n              //set to 0 if extra tank\n              used = used < 0 ? 0 : used;\n              required = required < 0 ? 0 : required;\n            });\n          }\n        } else {\n          //find deco tank\n          if (this.models[model].configuration.deco[decoGasCount]) {\n            let tank = this.models[model].configuration.deco[decoGasCount];\n            tank.available = tank.getGasVolume();\n            tank.required = gas.required;\n            tank.chartPercent = round((tank.required / tank.available) * 100);\n            tank.used = gas.used;\n            tank.gas = new Gas(\n              gas.fO2,\n              gas.fHe,\n              gas.fromDepth,\n              gas.ppO2,\n              gas.units\n            );\n            tank.show = true;\n            decoGasCount++;\n          }\n        }\n      });\n    });\n    this.updateGasRule();\n  }\n\n  async createCharts() {\n    //create charts\n    let chartData = {\n      id: null,\n      type: \"vled\",\n      renderAt: null,\n      width: 50,\n      height: 200,\n      dataFormat: \"json\",\n      dataSource: null,\n    };\n    //create charts\n    this.stages.forEach((stage) => {\n      this.models.BUHL.configuration[stage].forEach((tank, key) => {\n        if (tank.show === true) {\n          let chartId = \"chart-\" + stage + \"-\" + key;\n          let containerId = \"chart-container-\" + stage + \"-\" + key;\n          this.chartElements[containerId] = null;\n          chartData.id = chartId;\n          chartData.renderAt = containerId;\n          const chart = FusionchartsService.createChart(chartData);\n          this.charts[stage].push({\n            chart,\n            tank,\n          });\n        }\n      });\n    });\n\n    if (this.aceChart.render) {\n      let chartId = \"chart-ace\";\n      let containerId = \"chart-container-ace\";\n      this.chartElements[containerId] = null;\n      chartData.id = chartId;\n      chartData.renderAt = containerId;\n      this.aceChart.chart = FusionchartsService.createChart(chartData);\n      this.charts.bottom.push(this.aceChart);\n    }\n    setTimeout(() => this.updateCharts());\n  }\n\n  updateCharts() {\n    this.refreshChartElements();\n    this.stages.forEach((stage) => {\n      let dataSource;\n      this.models[this.selectedModelGasView].configuration[stage].forEach(\n        (tank, key) => {\n          if (tank.show === true) {\n            let usedPerc = round((tank.used / tank.available) * 100);\n            let requiredPerc = round((tank.required / tank.available) * 100);\n            usedPerc = usedPerc > 100 ? 100 : usedPerc;\n            requiredPerc = requiredPerc > 100 ? 100 : requiredPerc;\n            dataSource = {\n              chart: {\n                manageresize: \"1\",\n                showTickMarks: false,\n                showTickValues: false,\n                showLimits: false,\n                upperlimit: tank.chartPercent > 100 ? tank.chartPercent : 100,\n                lowerlimit: \"0\",\n                decimals: \"0\",\n                ledgap: \"0\",\n                numberSuffix: \"%\",\n                ledsize: \"1\",\n                ledborderthickness: \"4\",\n                showborder: \"0\",\n                bgColor: tank.chartPercent > 100 ? \"#f55d5d\" : \"#ffffff\",\n                bgAlpha: 100,\n                valueFontColor: tank.chartPercent > 100 ? \"#d00000\" : \"#000000\",\n              },\n              colorrange: {\n                color: [\n                  {\n                    minvalue: \"0\",\n                    maxvalue: usedPerc,\n                    code: \"99cc00\",\n                  },\n                  {\n                    minvalue: usedPerc,\n                    maxvalue: requiredPerc,\n                    code: \"ffcc33\",\n                  },\n                  {\n                    minvalue: requiredPerc,\n                    maxvalue: tank.chartPercent < 100 ? 100 : tank.chartPercent,\n                    code: \"cf0000\",\n                  },\n                  {\n                    minvalue: tank.available,\n                    maxvalue: tank.available,\n                    code: \"000000\",\n                  },\n                ],\n              },\n              value: tank.chartPercent,\n            };\n            this.charts[stage][key].tank = tank;\n            this.charts[stage][key].chart.setJSONData(dataSource);\n            if (\n              this.chartElements[\"chart-container-\" + stage + \"-\" + key] &&\n              this.charts[stage][key].chart\n            )\n              this.charts[stage][key].chart.render();\n          }\n        }\n      );\n\n      if (this.aceChart.render) {\n        this.aceChart.runtime =\n          this.dive.CCR[this.selectedModelGasView].runtime;\n        let error = this.aceChart.runtime > this.aceChart.available;\n        this.aceChart.error = error;\n        dataSource.chart.numberSuffix = \" min\";\n        dataSource.chart.upperlimit = error\n          ? this.aceChart.runtime\n          : this.aceChart.available;\n        dataSource.chart.bgColor = error ? \"#f55d5d\" : \"#ffffff\";\n        dataSource.chart.valueFontColor = error ? \"#d00000\" : \"#000000\";\n        let first = error ? this.aceChart.available : this.aceChart.runtime;\n        let second = error ? first : this.aceChart.available;\n        let third = error ? this.aceChart.runtime : second;\n        dataSource.colorrange.color = [\n          {\n            minvalue: \"0\",\n            maxvalue: first,\n            code: \"99cc00\",\n          },\n          {\n            minvalue: first,\n            maxvalue: second,\n            code: \"ffffff\",\n          },\n          {\n            minvalue: second,\n            maxvalue: third,\n            code: \"cf0000\",\n          },\n        ];\n        dataSource.value = this.aceChart.runtime;\n        if (this.aceChart.chart) {\n          this.aceChart.chart.setJSONData(dataSource);\n          this.aceChart.chart.render();\n        }\n      }\n    });\n    this.updateView = !this.updateView;\n  }\n\n  selectGasRule(ev) {\n    this.gasRule = toNumber(ev.detail.value);\n    this.updateGasRule();\n  }\n\n  refreshChartElements() {\n    Object.keys(this.chartElements).forEach((element) => {\n      this.chartElements[element] = this.el.querySelector(\"#\" + element);\n    });\n  }\n\n  segmentChanged(ev) {\n    if (ev.detail.value) {\n      this.selectedModelGasView = ev.detail.value;\n      this.updateCharts();\n      this.updateGasRule();\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"slider-container\">\n        <div class=\"slider-scrollable-header\">\n          <ion-segment\n            mode=\"ios\"\n            color={Environment.getAppColor()}\n            onIonChange={(ev) => this.segmentChanged(ev)}\n            value={this.selectedModelGasView}\n          >\n            <ion-segment-button value=\"BUHL\">\n              <ion-label>BUHL</ion-label>\n            </ion-segment-button>\n            <ion-segment-button value=\"VPM\">\n              <ion-label>VPM</ion-label>\n            </ion-segment-button>\n          </ion-segment>\n        </div>\n        <div class=\"slider-scrollable-container\">\n          <ion-list>\n            {this.editPlan ? (\n              <ion-item>\n                <ion-select\n                  label={TranslationService.getTransl(\n                    \"bottom-gas-rule\",\n                    \"Bottom Gas Rule\"\n                  )}\n                  onIonChange={(ev) => this.selectGasRule(ev)}\n                  value={this.gasRule}\n                >\n                  <ion-select-option value={1}>All Usable</ion-select-option>\n                  <ion-select-option value={2}>Half Usable</ion-select-option>\n                  <ion-select-option value={3}>\n                    One Third Usable\n                  </ion-select-option>\n                </ion-select>\n              </ion-item>\n            ) : undefined}\n\n            <ion-item>\n              <ion-label position=\"stacked\">\n                <my-transl tag=\"minimum-gas\" text=\"Minimum Gas\" />\n              </ion-label>\n              <div item-content>\n                <span>\n                  {round(this.diveMinGas.time, 1)} min /{\" \"}\n                  {this.parameters.units != \"Imperial\" ? (\n                    <span>{round(this.diveMinGas.Lt, 1)}</span>\n                  ) : (\n                    <span>{round(this.diveMinGas.cuft, 0)} </span>\n                  )}{\" \"}\n                  {this.parameters.volumeUnit}\n                  {this.showAvailableGas ? (\n                    <span>\n                      /\n                      {this.parameters.units != \"Imperial\" ? (\n                        <span>{round(this.diveMinGas.bar, 1)}</span>\n                      ) : (\n                        <span>{round(this.diveMinGas.psi, 0)} </span>\n                      )}{\" \"}\n                      {this.parameters.pressureUnit}\n                    </span>\n                  ) : undefined}\n                </span>\n              </div>\n            </ion-item>\n            <ion-item>\n              <ion-label position=\"stacked\">\n                <my-transl tag=\"usable-gas\" text=\"Usable Gas\" />\n              </ion-label>\n              <div item-content>\n                <span>\n                  {round(this.diveUsableGas.time, 1)} min /{\" \"}\n                  {this.parameters.units != \"Imperial\" ? (\n                    <span>{round(this.diveUsableGas.Lt, 1)}</span>\n                  ) : (\n                    <span>{round(this.diveUsableGas.cuft, 0)} </span>\n                  )}{\" \"}\n                  {this.parameters.volumeUnit}\n                  {this.showAvailableGas ? (\n                    <span>\n                      /\n                      {this.parameters.units != \"Imperial\" ? (\n                        <span>{round(this.diveUsableGas.bar, 1)}</span>\n                      ) : (\n                        <span>{round(this.diveUsableGas.psi, 0)}</span>\n                      )}{\" \"}\n                      {this.parameters.pressureUnit}\n                    </span>\n                  ) : undefined}\n                </span>\n              </div>\n            </ion-item>\n            {this.diveTurnGas.time < this.diveUsableGas.time ? (\n              <ion-item>\n                <ion-label position=\"stacked\">\n                  <my-transl tag=\"turn-gas\" text=\"Turn Gas\" />\n                </ion-label>\n                <div item-content>\n                  <span>\n                    {round(this.diveTurnGas.time, 1)} min /{\" \"}\n                    {this.parameters.units != \"Imperial\" ? (\n                      <span>{round(this.diveTurnGas.Lt, 1)}</span>\n                    ) : (\n                      <span>{round(this.diveTurnGas.cuft, 0)} </span>\n                    )}{\" \"}\n                    {this.parameters.volumeUnit}\n                    {this.showAvailableGas ? (\n                      <span>\n                        /\n                        {this.parameters.units != \"Imperial\" ? (\n                          <span>{round(this.diveTurnGas.bar, 1)}</span>\n                        ) : (\n                          <span>{round(this.diveTurnGas.psi, 0)}</span>\n                        )}{\" \"}\n                        {this.parameters.pressureUnit}\n                      </span>\n                    ) : undefined}\n                  </span>\n                </div>\n              </ion-item>\n            ) : undefined}\n\n            {this.stages.map((stage) => (\n              <div>\n                {this.models[this.selectedModelGasView].configuration[stage]\n                  .length > 0 ? (\n                  <ion-list-header>\n                    <ion-grid class=\"ion-no-padding\">\n                      <ion-row>\n                        {stage == \"bottom\" ? (\n                          <ion-col>\n                            <my-transl\n                              tag=\"bottom\"\n                              text=\"Bottom\"\n                              isLabel\n                            ></my-transl>\n                          </ion-col>\n                        ) : (\n                          <ion-col>\n                            <my-transl\n                              tag=\"deco\"\n                              text=\"Deco\"\n                              isLabel\n                            ></my-transl>\n                          </ion-col>\n                        )}\n                      </ion-row>\n                    </ion-grid>\n                  </ion-list-header>\n                ) : undefined}\n                {this.models[this.selectedModelGasView].configuration[stage]\n                  .length > 0 ? (\n                  <ion-grid>\n                    <ion-row class=\"ion-justify-content-center\">\n                      {this.charts[stage].map((item, i) => (\n                        <ion-col size=\"12\" size-sm>\n                          {item.render ? (\n                            <ion-card\n                              style={{\n                                minWidth: \"150px\",\n                                background: item.error ? \"#f55d5d\" : \"#ffffff\",\n                              }}\n                            >\n                              <ion-card-content class=\"ion-text-center\">\n                                <ion-grid class=\"ion-no-padding\">\n                                  <ion-row class=\"ion-justify-content-center\">\n                                    <ion-col size=\"4\">\n                                      <div\n                                        id=\"chart-container-ace\"\n                                        style={{height: \"200px\"}}\n                                      ></div>\n                                    </ion-col>\n                                    <ion-col size=\"8\">\n                                      <ion-row>\n                                        <strong>\n                                          <my-transl tag=\"ace\" text=\"ACE\" />\n                                        </strong>\n                                      </ion-row>\n                                      <ion-row>\n                                        <span></span>\n                                      </ion-row>\n                                      <ion-row>\n                                        <i>\n                                          <my-transl\n                                            tag=\"available\"\n                                            text=\"Available\"\n                                          />\n                                        </i>\n                                        :\n                                      </ion-row>\n                                      <ion-row>{item.available} min</ion-row>\n                                      <ion-row>\n                                        <i>Required</i>\n                                        <span>: </span>\n                                      </ion-row>\n                                      <ion-row>{item.runtime} min</ion-row>\n                                      {item.error ? (\n                                        <ion-row class=\"ion-justify-content-center\">\n                                          <ion-icon\n                                            name=\"warning\"\n                                            class=\"color-red\"\n                                          ></ion-icon>\n                                        </ion-row>\n                                      ) : undefined}\n                                    </ion-col>\n                                  </ion-row>\n                                </ion-grid>\n                              </ion-card-content>\n                            </ion-card>\n                          ) : undefined}\n                          {item.tank ? (\n                            <ion-card\n                              style={{\n                                minWidth: \"150px\",\n                                background:\n                                  item.tank && item.tank.chartPercent > 100\n                                    ? \"#f55d5d\"\n                                    : \"#ffffff\",\n                              }}\n                            >\n                              <ion-card-content\n                                class=\"ion-text-center\"\n                                id=\"card-content\"\n                              >\n                                <ion-grid class=\"ion-no-padding\">\n                                  <ion-row>\n                                    <ion-col size=\"4\">\n                                      <div\n                                        id={\n                                          \"chart-container-\" + stage + \"-\" + i\n                                        }\n                                        style={{height: \"200px\"}}\n                                      ></div>\n                                    </ion-col>\n                                    <ion-col size=\"8\">\n                                      <ion-row class=\"ion-justify-content-center\">\n                                        <ion-col>\n                                          <strong>\n                                            {item.tank.name} (\n                                            {item.tank.gas.toString()})\n                                          </strong>\n                                        </ion-col>\n                                      </ion-row>\n                                      <ion-row>\n                                        <ion-col>\n                                          <span></span>\n                                        </ion-col>\n                                      </ion-row>\n                                      <ion-row class=\"ion-justify-content-center\">\n                                        <ion-col>\n                                          <i>\n                                            <my-transl\n                                              tag=\"available\"\n                                              text=\"Available\"\n                                            />\n                                          </i>\n                                          :{\" \"}\n                                          {item.tank.chartPercent > 100 ? (\n                                            <strong class=\"color-yellow\">\n                                              100%\n                                            </strong>\n                                          ) : undefined}\n                                        </ion-col>\n                                      </ion-row>\n                                      <ion-row class=\"ion-justify-content-center\">\n                                        <ion-col>\n                                          {item.tank.pressure}\n                                          {this.parameters.pressureUnit} /{\" \"}\n                                          {round(item.tank.getGasVolume(), 0)}\n                                          {this.parameters.volumeUnit}\n                                        </ion-col>\n                                      </ion-row>\n                                      <ion-row class=\"ion-justify-content-center\">\n                                        <ion-col>\n                                          <i>\n                                            <my-transl\n                                              tag=\"required\"\n                                              text=\"Required\"\n                                            />\n                                          </i>\n                                          :{\" \"}\n                                          <strong\n                                            class={\n                                              item.tank.chartPercent > 100\n                                                ? \"color-red\"\n                                                : item.tank.chartPercent <= 100\n                                                  ? \"color-yellow\"\n                                                  : undefined\n                                            }\n                                          >\n                                            {round(item.tank.chartPercent, 0)}%\n                                          </strong>\n                                        </ion-col>\n                                      </ion-row>\n                                      <ion-row class=\"ion-justify-content-center\">\n                                        <ion-col>\n                                          {round(\n                                            (item.tank.pressure *\n                                              item.tank.required) /\n                                              item.tank.available,\n                                            0\n                                          )}\n                                          {this.parameters.pressureUnit} /{\" \"}\n                                          {round(item.tank.required, 0)}\n                                          {this.parameters.volumeUnit}\n                                        </ion-col>\n                                      </ion-row>\n                                      <ion-row class=\"ion-justify-content-center\">\n                                        <ion-col>\n                                          <i>\n                                            <my-transl tag=\"used\" text=\"Used\" />\n                                          </i>\n                                          :{\" \"}\n                                          <strong class=\"color-green\">\n                                            {round(\n                                              (item.tank.used /\n                                                item.tank.available) *\n                                                100,\n                                              0\n                                            )}\n                                            %\n                                          </strong>\n                                        </ion-col>\n                                      </ion-row>\n                                      <ion-row class=\"ion-justify-content-center\">\n                                        <ion-col>\n                                          {round(\n                                            (item.tank.pressure *\n                                              item.tank.used) /\n                                              item.tank.available,\n                                            0\n                                          )}\n                                          {this.parameters.pressureUnit} /{\" \"}\n                                          {round(item.tank.used, 0)}\n                                          {this.parameters.volumeUnit}\n                                        </ion-col>\n                                      </ion-row>\n                                      {item.tank.chartPercent > 100 ? (\n                                        <ion-row class=\"ion-justify-content-center\">\n                                          <ion-icon\n                                            name=\"warning\"\n                                            class=\"color-red\"\n                                          ></ion-icon>\n                                        </ion-row>\n                                      ) : undefined}\n                                    </ion-col>\n                                  </ion-row>\n                                </ion-grid>\n                              </ion-card-content>\n                            </ion-card>\n                          ) : undefined}\n                        </ion-col>\n                      ))}\n                    </ion-row>\n                  </ion-grid>\n                ) : undefined}\n              </div>\n            ))}\n          </ion-list>\n        </div>\n      </div>\n    );\n  }\n}\n"],"version":3}