{"file":"app-star-rating.entry.esm.js","mappings":";;AAAA,MAAM,gBAAgB,GAAG,mBAAmB;;MCe/B,UAAU;IAmBrB;;;QAFQ,iBAAY,GAAmB,IAAI,KAAK,EAAW,CAAC;sBAhBnC,CAAC;oBACH,EAAE;qBACD,CAAC;qBACD,MAAM;wBACX,KAAK;;KAcR;IAEhB,iBAAiB;QACf,IAAI,CAAC,QAAQ,EAAE,CAAC;KACjB;IAED,QAAQ;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,uBAAuB,EAAE,CAAC;KAChC;IAED,mBAAmB;QACjB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC;QACnC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,KAAK,CAAC;QACzC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC;KAClC;IAED,uBAAuB;QACrB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC;QACvD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,IAAI,KAAK,CAAU,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC/D;IAED,gBAAgB;QACd,OAAO,EACL,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,sBAAsB;YAC3C,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,iBAAiB;YACpC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,cAAc;YAClC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,sBAAsB,CAC3C,CAAC;KACH;IAED,gBAAgB;QACd,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,QAAQ,EAAE,CAAC;SACjB;KACF;IAED,MAAM;QACJ,QACE,+DACG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,YAAY,MACrC,gBACE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,CAAC,CAAC,EACrC,OAAO,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,CAAC,CAAC,EACnD,KAAK,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,mBAAmB,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,GACzD,CACb,CAAC,CACG,EACP;KACH;IAED,YAAY,CAAC,MAAc;QACzB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;YAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACzB;KACF;IAED,QAAQ,CAAC,UAAkB;QACzB,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;QAClD,IAAI,SAAS,IAAI,CAAC,EAAE;YAClB,OAAO,MAAM,CAAC;SACf;aAAM;YACL,OAAO,cAAc,CAAC;SACvB;KACF;;;;;;","names":[],"sources":["src/components/common/app/reviews/app-star-rating/app-star-rating.scss?tag=app-star-rating&encapsulation=shadow","src/components/common/app/reviews/app-star-rating/app-star-rating.tsx"],"sourcesContent":["app-star-rating {\n    /* Component styles go here */\n}\n","import { Component, h, State, Prop, EventEmitter, Event } from \"@stencil/core\";\n\n/*\n *\n * Star Rating component written with Stencil.js\n * by Aaron Sterling\n * https://github.com/Aaron-Sterling/star-rating-web-component\n *\n */\n\n@Component({\n  tag: \"app-star-rating\",\n  styleUrl: \"app-star-rating.scss\",\n  shadow: true,\n})\nexport class StarRating {\n  @Prop() rating: number = 0;\n  @Prop() size: number = 25;\n  @Prop() stars: number = 5;\n  @Prop() color: string = \"gold\";\n  @Prop() editable = false;\n  //\n  private _initialRatingOriginal: number;\n  private _fontSizeOriginal: number;\n  private _colorOriginal: string;\n  private _numberOfStarsOriginal: number;\n\n  @State() currentRating: number;\n\n  @Event() rated: EventEmitter<number>;\n\n  private _fontSizeExpression: string;\n  private _starCounter: Array<boolean> = new Array<boolean>();\n\n  constructor() {}\n\n  componentWillLoad() {\n    this.firstRun();\n  }\n\n  firstRun() {\n    this.backupOriginalProps();\n    this.initializeInternalState();\n  }\n\n  backupOriginalProps() {\n    this._initialRatingOriginal = this.rating;\n    this._fontSizeOriginal = this.size;\n    this._numberOfStarsOriginal = this.stars;\n    this._colorOriginal = this.color;\n  }\n\n  initializeInternalState() {\n    this._fontSizeExpression = this.size.toString() + \"px\";\n    this.currentRating = this.rating;\n    this._starCounter = new Array<boolean>(this.stars).fill(true);\n  }\n\n  propsHaveChanged(): boolean {\n    return !(\n      this.rating === this._initialRatingOriginal &&\n      this.size === this._fontSizeOriginal &&\n      this.color === this._colorOriginal &&\n      this.stars === this._numberOfStarsOriginal\n    );\n  }\n\n  componentDidLoad() {\n    if (this.propsHaveChanged) {\n      this.firstRun();\n    }\n  }\n\n  render() {\n    return (\n      <span>\n        {this._starCounter.map((_, currentIndex) => (\n          <ion-icon\n            name={this.iconName(currentIndex + 1)}\n            onClick={(_) => this.updateRating(currentIndex + 1)}\n            style={{ \"font-size\": this._fontSizeExpression, color: this.color }}\n          ></ion-icon>\n        ))}\n      </span>\n    );\n  }\n\n  updateRating(rating: number) {\n    if (this.editable) {\n      this.currentRating = rating;\n      this.rated.emit(rating);\n    }\n  }\n\n  iconName(starNumber: number): string {\n    const threshold = this.currentRating - starNumber;\n    if (threshold >= 0) {\n      return \"star\";\n    } else {\n      return \"star-outline\";\n    }\n  }\n}\n"],"version":3}