{"file":"modal-tank-configuration.entry.esm.js","mappings":"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","names":["isString"],"sources":["src/components/udive/modals/dive-plan/modal-tank-configuration/modal-tank-configuration.scss?tag=modal-tank-configuration","src/components/udive/modals/dive-plan/modal-tank-configuration/modal-tank-configuration.tsx"],"sourcesContent":["modal-tank-configuration {\n  .scrollx {\n    display: flex;\n    flex-wrap: nowrap;\n    overflow-x: auto;\n\n    .item {\n      flex: 0 0 0 0;\n    }\n\n    ::-webkit-scrollbar {\n      display: none;\n    }\n  }\n\n  input {\n    text-align: right;\n  }\n  .fixedLabel {\n    min-width: 80% !important;\n    max-width: 80% !important;\n  }\n  ion-item .item-inner {\n    box-shadow: none !important;\n    border-bottom: 1px solid #dedede !important;\n  }\n\n  .item-input .label-md,\n  .item-select .label-md,\n  .item-datetime .label-md {\n    color: rgb(0, 0, 0);\n  }\n}\n","import {Component, h, Prop, Element, State} from \"@stencil/core\";\nimport {isString} from \"lodash\";\nimport {Environment} from \"../../../../../global/env\";\nimport {DiveToolsService} from \"../../../../../services/udive/planner/dive-tools\";\nimport {TranslationService} from \"../../../../../services/common/translations\";\nimport {TankModel} from \"../../../../../interfaces/udive/planner/tank-model\";\n\n@Component({\n  tag: \"modal-tank-configuration\",\n  styleUrl: \"modal-tank-configuration.scss\",\n})\nexport class ModalTankConfiguration {\n  @Element() el: HTMLElement;\n  @Prop() tank: TankModel;\n  @State() updateView = true;\n  validForm = {\n    name: false,\n    depth: false,\n    time: false,\n    bottom: false,\n  };\n  @State() showSave = false;\n\n  componentWillLoad() {}\n  componentDidLoad() {\n    this.validateAll();\n  }\n\n  save() {\n    this.el.closest(\"ion-modal\").dismiss(this.tank);\n  }\n\n  close() {\n    this.el.closest(\"ion-modal\").dismiss();\n  }\n\n  inputHandler(event: any) {\n    this.tank[event.detail.name] = event.detail.value;\n    this.validateAll();\n  }\n\n  validateAll() {\n    this.showSave =\n      isString(this.tank.name) &&\n      this.tank.volume > 0.1 &&\n      this.tank.no_of_tanks > 0 &&\n      this.tank.pressure > 1;\n    this.updateView = !this.updateView;\n  }\n\n  render() {\n    return [\n      <app-navbar\n        tag=\"tank-configuration\"\n        text=\"Tank Configuration\"\n        color={Environment.getAppColor()}\n        modal={true}\n      ></app-navbar>,\n      <ion-content>\n        <ion-list>\n          <app-form-item\n            label-tag=\"name\"\n            label-text=\"Name\"\n            value={this.tank.name}\n            name=\"name\"\n            input-type=\"text\"\n            lines=\"inset\"\n            onFormItemChanged={(ev) => this.inputHandler(ev)}\n            validator={[\"required\"]}\n          ></app-form-item>\n          <app-form-item\n            label-tag=\"volume\"\n            label-text=\"Volume\"\n            appendText={\" (lt)\"}\n            value={this.tank.volume}\n            name=\"volume\"\n            input-type=\"number\"\n            lines=\"inset\"\n            onFormItemChanged={(ev) => this.inputHandler(ev)}\n            validator={[\n              \"required\",\n              {\n                name: \"minvalue\",\n                options: {min: 0.1},\n              },\n            ]}\n          ></app-form-item>\n          <app-item-detail\n            labelTag=\"volume\"\n            labelText=\"Volume\"\n            appendText={\" (cuft)\"}\n            lines=\"inset\"\n            alignRight\n            detailText={DiveToolsService.ltToCuFt(this.tank.volume)}\n          ></app-item-detail>\n          <ion-item>\n            <ion-select\n              label={TranslationService.getTransl(\n                \"no_of_tanks\",\n                \"Number Of Tanks\"\n              )}\n              interface=\"action-sheet\"\n              onIonChange={(ev) =>\n                this.inputHandler({\n                  detail: {name: \"no_of_tanks\", value: ev.detail.value},\n                })\n              }\n              value={this.tank.no_of_tanks}\n            >\n              <ion-select-option value={1}>1</ion-select-option>\n              <ion-select-option value={2}>2</ion-select-option>\n            </ion-select>\n          </ion-item>\n          <app-form-item\n            label-tag=\"pressure\"\n            label-text=\"Pressure\"\n            appendText={\" (bar)\"}\n            value={this.tank.pressure}\n            name=\"pressure\"\n            input-type=\"number\"\n            lines=\"inset\"\n            onFormItemChanged={(ev) => this.inputHandler(ev)}\n            validator={[\n              \"required\",\n              {\n                name: \"minvalue\",\n                options: {min: 1},\n              },\n            ]}\n          ></app-form-item>\n          <app-item-detail\n            label-tag=\"pressure\"\n            label-text=\"Pressure\"\n            appendText={\" (psi)\"}\n            lines=\"inset\"\n            alignRight\n            detailText={DiveToolsService.barToPsi(this.tank.pressure)}\n          ></app-item-detail>\n          <app-form-item\n            label-tag=\"for-deco\"\n            label-text=\"For Decompression\"\n            value={this.tank.forDeco}\n            name=\"forDeco\"\n            input-type=\"boolean\"\n            lines=\"inset\"\n            onFormItemChanged={(ev) => this.inputHandler(ev)}\n          ></app-form-item>\n        </ion-list>\n      </ion-content>,\n      <app-modal-footer\n        disableSave={!this.showSave}\n        onCancelEmit={() => this.close()}\n        onSaveEmit={() => this.save()}\n      />,\n    ];\n  }\n}\n"],"version":3}