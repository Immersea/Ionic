{"file":"popover-gas-blender.entry.esm.js","mappings":"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","names":["round","toNumber"],"sources":["src/components/udive/popovers/popover-gas-blender/popover-gas-blender.scss?tag=popover-gas-blender","src/components/udive/popovers/popover-gas-blender/popover-gas-blender.tsx"],"sourcesContent":["popover-gas-blender {\n  /* Component styles go here */\n  .scrollx {\n    display: flex;\n    flex-wrap: nowrap;\n    overflow-x: auto;\n\n    .item {\n      flex: 0 0 0 0;\n    }\n\n    ::-webkit-scrollbar {\n      display: none;\n    }\n  }\n}\n","import {Component, h, Host, Prop, Element, State} from \"@stencil/core\";\n\nimport {Gas} from \"../../../../interfaces/udive/planner/gas\";\nimport {Cylinder} from \"../../../../interfaces/udive/planner/cylinder\";\nimport {GasSupply} from \"../../../../interfaces/udive/planner/gas-supply\";\nimport {GasModel} from \"../../../../interfaces/udive/planner/gas-model\";\nimport {GasBlenderService} from \"../../../../services/udive/planner/gas-blender\";\nimport {UserService} from \"../../../../services/common/user\";\nimport {DiveToolsService} from \"../../../../services/udive/planner/dive-tools\";\nimport {popoverController} from \"@ionic/core\";\nimport {round, toNumber} from \"lodash\";\n\n@Component({\n  tag: \"popover-gas-blender\",\n  styleUrl: \"popover-gas-blender.scss\",\n})\nexport class PopoverGasBlender {\n  @Element() el: HTMLElement;\n\n  @Prop() gasProp: any;\n  @Prop() stdGasesList: Array<GasModel>;\n  @Prop() showBar: boolean = true;\n  @Prop() hasTrimixlicence: boolean = true;\n\n  scrollGas: HTMLElement;\n\n  @State() gas: GasSupply = new GasSupply(\n    new Cylinder(10, DiveToolsService.isMetric() ? 200 : 3000),\n    new Gas(0.21, 0),\n    DiveToolsService.isMetric() ? 200 : 3000,\n    false,\n    DiveToolsService.isMetric() ? 20 : 68\n  );\n  @State() form: any;\n  stdGases: Array<any>;\n\n  maxPressure = DiveToolsService.isMetric() ? 300 : 4300;\n  maxTemperature = DiveToolsService.isMetric() ? 60 : 140;\n\n  async componentWillLoad() {\n    this.hasTrimixlicence = await UserService.checkLicence(\"trimix\");\n    if (this.gasProp && this.gasProp.getFO2()) {\n      this.gas = this.gasProp;\n    }\n    this.setForm();\n    this.updateStdGasList();\n  }\n\n  componentDidLoad() {\n    this.scrollGas = this.el.querySelector(\"#scrollGas\");\n    this.updateStdGasList();\n  }\n\n  disconnectedCallback() {\n    //check valid gases\n    this.setForm();\n  }\n\n  save() {\n    popoverController.dismiss(this.gas);\n  }\n\n  async setForm() {\n    this.form = this.gas.getForm();\n    this.hasTrimixlicence = await UserService.checkLicence(\"trimix\");\n  }\n\n  updateStdGasList() {\n    //create gas list\n    this.stdGases = [];\n    var isStandardGas = false;\n    var i = 0;\n    var n = 0;\n    this.stdGasesList.forEach((gas) => {\n      i++;\n      let selected =\n        this.gas.mMix.O2 === gas.O2 && this.gas.mMix.He === gas.He\n          ? true\n          : false;\n      if (selected) {\n        isStandardGas = true;\n        n = i;\n      }\n      this.stdGases.push({\n        selected: selected,\n        gas: gas.getGas(),\n      });\n    });\n    setTimeout(() => {\n      if (isStandardGas && this.scrollGas) {\n        //scroll list to the left at the selected gas\n        let width = this.scrollGas.scrollWidth;\n        let clientWidth = this.scrollGas.clientWidth;\n        let pagination = i / (width / clientWidth);\n        n = n - pagination;\n        n = n < 0 ? 0 : n;\n        this.scrollGas.scrollLeft = ((width * n) / i) * 1.15;\n      }\n    });\n  }\n\n  selectStdGas(gas) {\n    if (!this.hasTrimixlicence && gas.He > 0) {\n      UserService.checkLicence(\"trimix\", true);\n      return;\n    }\n    this.gas.setMix(\n      new Gas(\n        round(gas.fO2, 3),\n        round(gas.fHe, 3),\n        gas.fromDepth,\n        gas.ppO2,\n        gas.units\n      )\n    );\n    this.setForm();\n    this.updateStdGasList();\n  }\n\n  inputHandler(event: any) {\n    this.form[event.detail.name] = event.detail.value;\n  }\n\n  blurHandler(event: any) {\n    this.updateGas(event.detail.name);\n    if (event.detail.name == \"bar\") {\n      this.gas.setPressure(\n        toNumber(this.form.bar) > this.maxPressure\n          ? this.maxPressure\n          : toNumber(this.form.bar)\n      );\n    } else if (event.detail.name == \"temp\") {\n      this.gas.setTemperature(\n        toNumber(this.form.temp) > this.maxTemperature\n          ? this.maxTemperature\n          : toNumber(this.form.temp)\n      );\n    }\n    this.setForm();\n  }\n\n  updateGas(input: string) {\n    if (input == \"o2\") {\n      this.gas.mMix.setFO2(round(toNumber(this.form.o2), 2) / 100);\n    } else if (input == \"he\") {\n      this.gas.mMix.setFHe(round(toNumber(this.form.he), 2) / 100);\n    } else if (input == \"bar\") {\n      this.gas.setPressure(toNumber(this.form.bar));\n    } else if (input == \"temp\") {\n      this.gas.setTemperature(toNumber(this.form.temp));\n    }\n    this.updateStdGasList();\n  }\n\n  render() {\n    return (\n      <Host>\n        <ion-list>\n          <ion-grid class=\"ion-no-padding\">\n            <ion-row>\n              <ion-col size=\"6\">\n                <app-form-item\n                  label-tag=\"o2\"\n                  label-text=\"O2\"\n                  value={this.form.o2}\n                  name=\"o2\"\n                  input-type=\"number\"\n                  onFormItemChanged={(ev) => this.inputHandler(ev)}\n                  onFormItemBlur={(ev) => this.blurHandler(ev)}\n                  validator={[\n                    \"required\",\n                    {\n                      name: \"minmaxvalue\",\n                      options: {min: 0, max: 100 - this.form.he},\n                    },\n                  ]}\n                ></app-form-item>\n              </ion-col>\n              <ion-col size=\"6\">\n                {this.hasTrimixlicence ? (\n                  <app-form-item\n                    label-text=\"He\"\n                    value={this.form.he}\n                    name=\"he\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.inputHandler(ev)}\n                    onFormItemBlur={(ev) => this.blurHandler(ev)}\n                    validator={[\n                      \"required\",\n                      {\n                        name: \"minmaxvalue\",\n                        options: {min: 0, max: 100 - this.form.o2},\n                      },\n                    ]}\n                  ></app-form-item>\n                ) : (\n                  <app-form-item\n                    label-text=\"He\"\n                    value={this.form.he}\n                    onClick={() => UserService.checkLicence(\"trimix\", true)}\n                  ></app-form-item>\n                )}\n              </ion-col>\n            </ion-row>\n            <ion-row>\n              <ion-col size=\"6\">\n                <app-form-item\n                  label-tag=\"pressure\"\n                  label-text=\"Pressure\"\n                  appendText={\" (\" + DiveToolsService.pressUnit + \")\"}\n                  value={this.form.bar}\n                  name=\"bar\"\n                  input-type=\"number\"\n                  onFormItemChanged={(ev) => this.inputHandler(ev)}\n                  onFormItemBlur={(ev) => this.blurHandler(ev)}\n                  validator={[\n                    \"required\",\n                    {\n                      name: \"minmaxvalue\",\n                      options: {min: 1, max: this.maxPressure},\n                    },\n                  ]}\n                ></app-form-item>\n              </ion-col>\n              <ion-col size=\"6\">\n                <app-form-item\n                  label-tag=\"temperature\"\n                  label-text=\"Temperature\"\n                  appendText={\n                    \" (\" + (DiveToolsService.isMetric() ? \"°C\" : \"°F\") + \")\"\n                  }\n                  value={this.form.temp}\n                  name=\"temp\"\n                  input-type=\"number\"\n                  onFormItemChanged={(ev) => this.inputHandler(ev)}\n                  onFormItemBlur={(ev) => this.blurHandler(ev)}\n                  validator={[\n                    \"required\",\n                    {\n                      name: \"minmaxvalue\",\n                      options: {min: 0, max: this.maxTemperature},\n                    },\n                  ]}\n                ></app-form-item>\n              </ion-col>\n            </ion-row>\n\n            <ion-row class=\"scrollx\" id=\"scrollGas\">\n              {this.stdGases.map((gas) => (\n                <ion-col class=\"item\">\n                  <ion-button\n                    shape=\"round\"\n                    color={gas.selected ? \"secondary\" : \"primary\"}\n                    onClick={() => this.selectStdGas(gas.gas)}\n                  >\n                    {GasBlenderService.getGasName(gas.gas)}\n                  </ion-button>\n                </ion-col>\n              ))}\n            </ion-row>\n            <ion-row>\n              <ion-col class=\"item\">\n                <ion-button\n                  expand=\"block\"\n                  fill=\"outline\"\n                  size=\"small\"\n                  color=\"success\"\n                  onClick={() => this.save()}\n                >\n                  <my-transl tag=\"save\" text=\"Save\" />\n                </ion-button>\n              </ion-col>\n            </ion-row>\n          </ion-grid>\n        </ion-list>\n      </Host>\n    );\n  }\n}\n"],"version":3}