import{m as e,U as s,R as a,T as t}from"./p-364f0bff.js";import{U as n}from"./p-d2a582b5.js";import"./p-cbe60c68.js";import"./p-c7ee7cfe.js";import{b as r}from"./p-5d4a8e1f.js";import{K as l}from"./p-66796388.js";const i="userPlans";class o{constructor(){this.userPlans=new n;this.userPlans$=new l({});this.serviceInit=true}async init(){if(this.serviceInit){this.serviceInit=false;const a=await e.getDocumentObservable(i,s.userProfile.uid);this.userPlansSub=a.subscribe((e=>{this.userPlans=new n(e);this.userPlans$.next(this.userPlans)}))}}async presentUserPlansUpdate(e,s,t){return await a.openModal("modal-user-plans-update",{uid:e,userPlans:s,planIndex:t})}async presentUserPlanDetails(e,s){a.push("/"+i+"/details/"+e+"/"+s,"forward")}openUsersPlans(e){a.push("/"+i+"/user/"+e,"forward")}async updateUserPlan(s,a){return e.saveItem(s,a,s,i)}async deletePlan(s){return new Promise((async(n,l)=>{const o=await r.create({header:t.getTransl("delete-user-plan-header","Delete User Plan?"),message:t.getTransl("delete-user-plan-message","This plan will be deleted! Are you sure?"),buttons:[{text:t.getTransl("cancel","Cancel"),role:"cancel",handler:()=>{l()}},{text:t.getTransl("ok","OK"),handler:async()=>{e.deleteItem(i,s);a.goBack();n(null)}}]});o.present()}))}async getPlansOfUser(s){const a=await e.getDocument(i,s);return a?a:false}}const c=new o;export{c as U};
//# sourceMappingURL=p-4fa7e13f.js.map