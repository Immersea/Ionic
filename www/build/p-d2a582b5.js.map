{"version":3,"names":["ProductLines","refractories","electrodes","rawmaterials","engineering","UserPlans","constructor","data","this","userPlans","length","forEach","plan","push","UserPlan","users","Object","keys","key","customerId","otherName","planOfActions","PlanOfAction","orderBy","updated","Date","toISOString","product","situation","dueDate"],"sources":["src/interfaces/trasteel/users/user-plans.ts"],"sourcesContent":["import {orderBy} from \"lodash\";\n\nexport const ProductLines = {\n  refractories: \"Refractories\",\n  electrodes: \"Electrodes\",\n  rawmaterials: \"Raw Materials\",\n  engineering: \"Engineering\",\n  //longterm: \"Long Term\",\n};\n\nexport class UserPlans {\n  userPlans: UserPlan[];\n  users: {\n    [id: string]: string[]; //[\"owner\", \"editor\", etc.]\n  };\n  constructor(data?) {\n    this.userPlans = [];\n    if (data && data.userPlans && data.userPlans.length > 0) {\n      data.userPlans.forEach((plan) => {\n        this.userPlans.push(new UserPlan(plan));\n      });\n    }\n    this.users = {};\n    if (data && data.users) {\n      Object.keys(data.users).forEach((key) => {\n        this.users[key] = data.users[key];\n      });\n    }\n  }\n}\nexport class UserPlan {\n  customerId: string;\n  otherName: string;\n  planOfActions: PlanOfAction[];\n  constructor(data?) {\n    this.customerId = data && data.customerId ? data.customerId : null;\n    this.otherName = data && data.otherName ? data.otherName : null;\n    this.planOfActions = [];\n    if (data && data.planOfActions && data.planOfActions.length > 0) {\n      data.planOfActions.forEach((plan) => {\n        this.planOfActions.push(new PlanOfAction(plan));\n      });\n      this.planOfActions = orderBy(this.planOfActions, \"dueDate\");\n    }\n  }\n}\n\nexport class PlanOfAction {\n  updated: string;\n  product: string;\n  situation: string;\n  plan: string;\n  dueDate: string;\n  constructor(data?) {\n    this.updated =\n      data && data.updated ? data.updated : new Date().toISOString();\n    this.product = data && data.product ? data.product : null;\n    this.situation = data && data.situation ? data.situation : null;\n    this.plan = data && data.plan ? data.plan : null;\n    this.dueDate =\n      data && data.dueDate ? data.dueDate : new Date().toISOString();\n  }\n}\n"],"mappings":"0CAEaA,EAAe,CAC1BC,aAAc,eACdC,WAAY,aACZC,aAAc,gBACdC,YAAa,e,MAIFC,EAKX,WAAAC,CAAYC,GACVC,KAAKC,UAAY,GACjB,GAAIF,GAAQA,EAAKE,WAAaF,EAAKE,UAAUC,OAAS,EAAG,CACvDH,EAAKE,UAAUE,SAASC,IACtBJ,KAAKC,UAAUI,KAAK,IAAIC,EAASF,GAAM,G,CAG3CJ,KAAKO,MAAQ,GACb,GAAIR,GAAQA,EAAKQ,MAAO,CACtBC,OAAOC,KAAKV,EAAKQ,OAAOJ,SAASO,IAC/BV,KAAKO,MAAMG,GAAOX,EAAKQ,MAAMG,EAAI,G,SAK5BJ,EAIX,WAAAR,CAAYC,GACVC,KAAKW,WAAaZ,GAAQA,EAAKY,WAAaZ,EAAKY,WAAa,KAC9DX,KAAKY,UAAYb,GAAQA,EAAKa,UAAYb,EAAKa,UAAY,KAC3DZ,KAAKa,cAAgB,GACrB,GAAId,GAAQA,EAAKc,eAAiBd,EAAKc,cAAcX,OAAS,EAAG,CAC/DH,EAAKc,cAAcV,SAASC,IAC1BJ,KAAKa,cAAcR,KAAK,IAAIS,EAAaV,GAAM,IAEjDJ,KAAKa,cAAgBE,kBAAQf,KAAKa,cAAe,U,SAK1CC,EAMX,WAAAhB,CAAYC,GACVC,KAAKgB,QACHjB,GAAQA,EAAKiB,QAAUjB,EAAKiB,SAAU,IAAIC,MAAOC,cACnDlB,KAAKmB,QAAUpB,GAAQA,EAAKoB,QAAUpB,EAAKoB,QAAU,KACrDnB,KAAKoB,UAAYrB,GAAQA,EAAKqB,UAAYrB,EAAKqB,UAAY,KAC3DpB,KAAKI,KAAOL,GAAQA,EAAKK,KAAOL,EAAKK,KAAO,KAC5CJ,KAAKqB,QACHtB,GAAQA,EAAKsB,QAAUtB,EAAKsB,SAAU,IAAIJ,MAAOC,a","ignoreList":[]}