{"file":"app-decoplanner-plan.entry.esm.js","mappings":"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","names":["find","cloneDeep","orderBy","last","min","filter","format"],"sources":["src/components/udive/app/decoplanner/app-decoplanner-plan/app-decoplanner-plan.scss?tag=app-decoplanner-plan","src/components/udive/app/decoplanner/app-decoplanner-plan/app-decoplanner-plan.tsx"],"sourcesContent":["app-decoplanner-plan {\n  width: 100%;\n}\n","import {\n  Component,\n  h,\n  Prop,\n  State,\n  Element,\n  Event,\n  EventEmitter,\n} from \"@stencil/core\";\nimport {isPlatform, popoverController} from \"@ionic/core\";\n\n//import { Config } from '../../../../providers/config';\nimport {cloneDeep, filter, find, last, min, orderBy} from \"lodash\";\n//import { LicenceCheckProvider } from '../../../../providers/licence-check';\n//import { ARPCModel } from '../../../../models/dive/arpc';\nimport {DecoplannerDive} from \"../../../../../interfaces/udive/planner/decoplanner-dive\";\nimport {DivePlan} from \"../../../../../services/udive/planner/dive-plan\";\nimport {Gas} from \"../../../../../interfaces/udive/planner/gas\";\nimport {GasModel} from \"../../../../../interfaces/udive/planner/gas-model\";\nimport {DecoplannerParameters} from \"../../../../../interfaces/udive/planner/decoplanner-parameters\";\nimport {DiveConfiguration} from \"../../../../../interfaces/udive/planner/dive-configuration\";\nimport {TranslationService} from \"../../../../../services/common/translations\";\nimport {UserService} from \"../../../../../services/common/user\";\nimport {DiveSitesService} from \"../../../../../services/udive/diveSites\";\nimport {MapDataDivingCenter} from \"../../../../../interfaces/udive/diving-center/divingCenter\";\nimport {DivingCentersService} from \"../../../../../services/udive/divingCenters\";\nimport {SystemService} from \"../../../../../services/common/system\";\nimport {RouterService} from \"../../../../../services/common/router\";\nimport {MapDataDiveSite} from \"../../../../../interfaces/udive/dive-site/diveSite\";\nimport {Environment} from \"../../../../../global/env\";\nimport {format} from \"date-fns\";\n\n@Component({\n  tag: \"app-decoplanner-plan\",\n  styleUrl: \"app-decoplanner-plan.scss\",\n})\nexport class AppDecoplannerPlan {\n  @Element() el: HTMLElement;\n  @Event() updateParamsEvent: EventEmitter<DecoplannerParameters>;\n\n  @Prop() diveDataToShare: any;\n  @Prop() planner? = false;\n  @State() segment = \"levels\";\n  @State() dive: DecoplannerDive = new DecoplannerDive();\n  @State() updateView = true;\n\n  user: any;\n  dives: Array<DecoplannerDive>;\n  screenWidth: number;\n  screenHeight: number;\n  index: number;\n  divePlan: DivePlan;\n  stdGases: Array<GasModel>;\n  stdDecoGases: Array<GasModel>;\n  stdConfigurations: Array<DiveConfiguration> = [];\n  parameters: DecoplannerParameters;\n  loading: any;\n  confSelectOptions: any;\n  diveConfiguration: DiveConfiguration;\n  allowSelectConfiguration = false;\n  segmentTitles: {\n    location: string;\n    date: string;\n    surface: string;\n    levels: string;\n    deco: string;\n  };\n  showArpc = false;\n  sitesList: MapDataDiveSite[] = [];\n  divingCentersList: MapDataDivingCenter[] = [];\n  @State() diveSite: MapDataDiveSite;\n\n  async componentWillLoad() {\n    this.diveParamsUpdate();\n    this.segmentTitles = {\n      location: TranslationService.getTransl(\"location\", \"Location\"),\n      date: TranslationService.getTransl(\"date\", \"Date\"),\n      surface: TranslationService.getTransl(\"surface-time\", \"Surface Time\"),\n      levels: TranslationService.getTransl(\"levels\", \"Levels\"),\n      deco: TranslationService.getTransl(\"deco-gases\", \"Deco Gases\"),\n    };\n    this.confSelectOptions = {\n      title: TranslationService.getTransl(\n        \"dive-configurations\",\n        \"Dive Configurations\"\n      ),\n      subTitle: TranslationService.getTransl(\n        \"dive-configuration-select\",\n        \"Select your dive configuration\"\n      ),\n      mode: \"md\",\n    };\n    this.sitesList = DiveSitesService.diveSitesList;\n    this.divingCentersList = DivingCentersService.divingCentersList;\n  }\n\n  diveParamsUpdate() {\n    const params = this.diveDataToShare;\n    this.divePlan = params.divePlan;\n    this.index = params.index;\n    //this.licence = params.licence;\n    this.stdGases = params.stdGases;\n    this.stdDecoGases = params.stdDecoGases;\n    this.stdConfigurations = params.stdConfigurations;\n    this.user = params.user;\n    this.findConfig();\n  }\n\n  findDiveSite() {\n    if (this.dive.diveSiteId) {\n      this.diveSite = this.sitesList.find(\n        (site) => site.id === this.dive.diveSiteId\n      );\n      this.setSelectDivingCenters();\n    }\n  }\n\n  async openSearchSite() {\n    const popover = await popoverController.create({\n      component: \"popover-search-dive-site\",\n      translucent: true,\n    });\n    popover.onDidDismiss().then((ev) => {\n      const siteId = ev.data;\n      this.dive.diveSiteId = siteId;\n      this.findDiveSite();\n    });\n    popover.present();\n  }\n\n  setSelectDivingCenters() {\n    const selectDCElement: HTMLIonSelectElement = this.el.querySelector(\n      \"#selectDivingCenter\"\n    );\n    const customDCPopoverOptions = {\n      header: TranslationService.getTransl(\"diving-center\", \"Diving Center\"),\n    };\n\n    selectDCElement.interfaceOptions = customDCPopoverOptions;\n    //remove previously defined options\n    const selectDCOptions = Array.from(\n      selectDCElement.getElementsByTagName(\"ion-select-option\")\n    );\n    selectDCOptions.map((option) => {\n      selectDCElement.removeChild(option);\n    });\n    if (this.diveSite.divingCenters && this.diveSite.divingCenters.length > 0) {\n      selectDCElement.placeholder = TranslationService.getTransl(\n        \"select\",\n        \"Select\"\n      );\n      this.diveSite.divingCenters.map((dcId) => {\n        const selectOption = document.createElement(\"ion-select-option\");\n        const dc = this.divingCentersList.find((dc) => dc.id === dcId);\n        selectOption.value = dcId;\n        selectOption.textContent = dc.displayName;\n        selectDCElement.appendChild(selectOption);\n      });\n      selectDCElement.disabled = false;\n    } else {\n      selectDCElement.placeholder = TranslationService.getTransl(\n        \"no-divecenters\",\n        \"No Diving Centers available for this site\"\n      );\n      this.dive.divingCenterId = \"\";\n      selectDCElement.disabled = true;\n    }\n    this.updateView = !this.updateView;\n  }\n\n  findConfig() {\n    //find in std configs\n    let findConf = find(this.stdConfigurations, this.divePlan.configuration);\n    if (!findConf) {\n      //user changed the configuration - search by name\n      findConf = find(this.stdConfigurations, {\n        stdName: this.divePlan.configuration.stdName,\n      });\n      //add modified configuration in the list\n      let updatedConf = cloneDeep(this.divePlan.configuration);\n      updatedConf.stdName = updatedConf.stdName;\n      //check if already added in a previous call\n      findConf = find(this.stdConfigurations, {stdName: updatedConf.stdName});\n      if (!findConf) {\n        this.stdConfigurations.push(updatedConf);\n        findConf = updatedConf;\n      }\n    }\n    this.diveConfiguration = findConf;\n    this.showArpc =\n      this.diveConfiguration.parameters.configuration == \"CCR\" &&\n      ((this.dive.diveSiteId && this.diveDataToShare.showDiveSite) ||\n        this.diveDataToShare.showPositionTab); //show only in log book\n    this.parameters = this.divePlan.configuration.parameters;\n    if (this.stdDecoGases) {\n      this.stdDecoGases.forEach((gas) => {\n        //update setpoint according to parameters\n        if (gas.O2 == 100) {\n          gas.ppO2 = this.parameters.oxygenppO2;\n        } else {\n          gas.ppO2 = this.parameters.decoppO2;\n        }\n      });\n    }\n    this.dive = this.divePlan.dives[this.index];\n    this.updateView = !this.updateView;\n  }\n\n  updateParams() {\n    this.findConfig();\n    this.updateView = !this.updateView;\n    this.updateParamsEvent.emit(this.parameters);\n  }\n\n  updateDiveConfiguration(conf) {\n    let updatedConf = cloneDeep(conf);\n    this.divePlan.setConfiguration(updatedConf);\n    this.parameters = this.divePlan.configuration.parameters;\n    //reset deco tanks\n    this.divePlan.resetDecoTanksWithConfiguration(this.dive, updatedConf);\n    this.saveDoc();\n  }\n\n  async editDiveConfig() {\n    let openModal = await UserService.checkLicence(\"configs\", true);\n    if (openModal) {\n      const confModal = await RouterService.openModal(\n        \"modal-dive-configuration\",\n        {\n          diveDataToShare: this.diveDataToShare,\n        }\n      );\n      confModal.onDidDismiss().then((updatedConf) => {\n        updatedConf = updatedConf.data;\n        if (updatedConf) {\n          this.updateDiveConfiguration(updatedConf);\n        }\n      });\n    }\n  }\n\n  saveDoc() {\n    this.updateParams();\n    setTimeout(() => {\n      SystemService.dismissLoading();\n    }, 50);\n  }\n\n  async showLoading() {\n    await SystemService.presentLoading(\"updating\");\n  }\n  async reorderItems(reorder) {\n    await this.showLoading();\n    let element = this.dive.profilePoints[reorder.detail.from];\n    this.dive.profilePoints.splice(reorder.detail.from, 1);\n    this.dive.profilePoints.splice(reorder.detail.to, 0, element);\n    let index = 0;\n    this.dive.profilePoints.map((point) => {\n      point.index = index++;\n      return point;\n    });\n    reorder.detail.complete(this.dive.profilePoints);\n    this.divePlan.updateCalculations();\n    this.dive.profilePoints = orderBy(this.dive.profilePoints, \"index\");\n    this.saveDoc();\n  }\n\n  async presentPopover(event, type, index?) {\n    let page;\n    let update = index >= 0 ? true : false;\n    let level, gas;\n    if (type == \"level\") {\n      page = \"popover-level\";\n      if (update) {\n        level = this.dive.profilePoints[index];\n        level.index = index;\n      }\n      if (!update && this.dive.profilePoints.length > 0) {\n        //insert standard value\n        //get last value of profile points\n        level = last(this.dive.profilePoints);\n        level = cloneDeep(level);\n        level.setValue(\"depth\", level.depth - 10);\n        level.setValue(\"time\", 10);\n        level.setValue(\"updateGas\", false);\n      } else if (index > 0) {\n        level.setValue(\"updateGas\", false);\n      } else {\n        level.setValue(\"updateGas\", true);\n      }\n    } else if (type == \"gas\") {\n      //check deco gases limitation\n      if (\n        this.dive.decoGases.length >=\n        UserService.userRoles.licences.getUserLimitations().maxDecoGases\n      ) {\n        UserService.userRoles.licences.presentLicenceLimitation(\"decogases\");\n        return;\n      }\n\n      page = \"popover-gas\";\n      if (!update) {\n        //insert next standard gas\n        let decoGasDepths = [];\n        for (let i in this.dive.decoGases) {\n          decoGasDepths.push(this.dive.decoGases[i].fromDepth);\n        }\n        let minDecoGasDepth = min(decoGasDepths);\n        let decoGas = find(this.stdDecoGases, (gas) => {\n          return gas.fromDepth < minDecoGasDepth;\n        });\n        if (decoGas) {\n          gas = new Gas(\n            decoGas.O2 / 100,\n            decoGas.He / 100,\n            decoGas.fromDepth,\n            decoGas.ppO2,\n            decoGas.units\n          );\n          gas.setUseAsDiluent(decoGas.useAsDiluent);\n        }\n      } else {\n        gas = this.dive.decoGases[index];\n      }\n    }\n    const data = {\n      gasProp: gas,\n      levelProp: level,\n      stdGasesList: this.stdGases,\n      stdDecoGases: this.stdDecoGases,\n      trimixlicence: UserService.checkLicence(\"trimix\"),\n      ccr: this.parameters.configuration == \"CCR\",\n      parameters: this.parameters,\n    };\n    var cssClass = undefined;\n    //make custom popover for capacitor apps\n    if (isPlatform(\"capacitor\")) {\n      cssClass = \"custom-mobile-popover\";\n      event = null;\n    }\n    const popover = await popoverController.create({\n      component: page,\n      event: event,\n      translucent: true,\n      backdropDismiss: true,\n      cssClass: cssClass,\n      componentProps: data,\n    });\n    popover.present();\n    popover.onDidDismiss().then(async (updatedData: any) => {\n      updatedData = updatedData.data;\n      if (updatedData) {\n        await this.showLoading();\n        if (type == \"level\") {\n          if (update) {\n            //update level\n            this.divePlan.updateDiveProfilePoint(\n              this.dive,\n              updatedData.index,\n              updatedData.depth,\n              updatedData.time,\n              updatedData.o2 / 100,\n              updatedData.he / 100,\n              updatedData.setpoint\n            );\n          } else {\n            //add new\n            this.divePlan.addDiveProfilePoint(\n              this.dive,\n              updatedData.depth,\n              updatedData.time,\n              updatedData.o2 / 100,\n              updatedData.he / 100,\n              updatedData.setpoint\n            );\n          }\n        } else if (type == \"gas\") {\n          if (update) {\n            //update gas\n            this.divePlan.updateDiveDecoGas(\n              this.dive,\n              index,\n              updatedData.o2 / 100,\n              updatedData.he / 100,\n              updatedData.fromDepth,\n              updatedData.ppO2,\n              updatedData.useAsDiluent\n            );\n          } else {\n            //add new\n            this.divePlan.addDiveDecoGas(\n              this.dive,\n              updatedData.o2 / 100,\n              updatedData.he / 100,\n              updatedData.fromDepth,\n              updatedData.ppO2,\n              updatedData.useAsDiluent\n            );\n          }\n        }\n        this.saveDoc();\n      }\n    });\n  }\n\n  async addStdDecoGases() {\n    await this.showLoading();\n\n    let decoGases = filter(this.stdDecoGases, (gas) => {\n      return gas.fromDepth <= this.dive.getDecoStartDepth(); //return all gases below 74% of max depth\n    });\n    this.dive.decoGases = [];\n    decoGases.forEach((gas) => {\n      this.divePlan.addDiveDecoGas(\n        this.dive,\n        gas.O2 / 100,\n        gas.He / 100,\n        gas.fromDepth,\n        gas.ppO2,\n        gas.useAsDiluent\n      );\n    });\n    this.saveDoc();\n  }\n\n  async removeProfilePoint(dive, index) {\n    await this.showLoading();\n    this.divePlan.removeDiveProfilePoint(dive, index);\n    this.saveDoc();\n  }\n\n  async removeDecoGas(dive, index) {\n    await this.showLoading();\n    this.divePlan.removeDiveDecoGas(dive, index);\n    this.saveDoc();\n  }\n\n  segmentChanged(ev) {\n    const segment = ev.detail.value;\n    this.segment = segment;\n    if (segment == \"location\" && Environment.isUdive()) {\n      setTimeout(() => {\n        this.findDiveSite();\n      }, 100);\n    }\n  }\n\n  updateDate(ev) {\n    this.dive.date = new Date(ev.detail.value);\n  }\n\n  updateParam(param, value) {\n    this[param] = value;\n    this.updateParams();\n  }\n\n  updateSurfaceInterval(value) {\n    this.dive.surfaceInterval = value;\n    this.divePlan.updateDates();\n    this.updateParams();\n  }\n\n  updateDiveSite(ev) {\n    this.dive.diveSiteId = ev.detail.value;\n  }\n\n  updateDivingCenter(ev) {\n    this.dive.divingCenterId = ev.detail.value;\n  }\n\n  saveArpc(ev) {\n    this.dive.arpc = ev.detail;\n    this.updateView = !this.updateView;\n  }\n\n  render() {\n    return [\n      <ion-content class=\"slide-container\">\n        <div class=\"ion-no-padding\">\n          <ion-row>\n            <ion-col>\n              <ion-segment\n                mode=\"ios\"\n                color={Environment.getAppColor()}\n                onIonChange={(ev) => this.segmentChanged(ev)}\n                value={this.segment}\n              >\n                {(this.dive.diveSiteId && this.diveDataToShare.showDiveSite) ||\n                this.diveDataToShare.showPositionTab ? (\n                  <ion-segment-button value=\"location\">\n                    <ion-label>\n                      {this.index == 0\n                        ? Environment.isDecoplanner()\n                          ? this.segmentTitles.date\n                          : this.segmentTitles.location\n                        : this.segmentTitles.surface}\n                    </ion-label>\n                  </ion-segment-button>\n                ) : undefined}\n\n                <ion-segment-button value=\"levels\">\n                  <ion-label>{this.segmentTitles.levels}</ion-label>\n                </ion-segment-button>\n                <ion-segment-button value=\"gases\" layout=\"icon-start\">\n                  <ion-label>{this.segmentTitles.deco}</ion-label>\n                  {this.dive.decoGases.length > 0 ? (\n                    <ion-badge\n                      color={\n                        Environment.isDecoplanner() ? \"gue-blue\" : \"planner\"\n                      }\n                    >\n                      {this.dive.decoGases.length}\n                    </ion-badge>\n                  ) : undefined}\n                </ion-segment-button>\n                {this.showArpc ? (\n                  <ion-segment-button value=\"arpc\" layout=\"icon-start\">\n                    <ion-label>ARPC</ion-label>\n                    <ion-badge\n                      color={\n                        this.dive.arpc && this.dive.arpc.approved\n                          ? \"success\"\n                          : \"danger\"\n                      }\n                    >\n                      <ion-icon\n                        style={{fontSize: \"10px\"}}\n                        name={\n                          this.dive.arpc && this.dive.arpc.approved\n                            ? \"checkmark\"\n                            : \"close\"\n                        }\n                      ></ion-icon>\n                    </ion-badge>\n                  </ion-segment-button>\n                ) : undefined}\n              </ion-segment>\n            </ion-col>\n          </ion-row>\n          {this.segment == \"location\"\n            ? [\n                <ion-row>\n                  <ion-col>\n                    {this.index == 0 ? (\n                      <app-form-item\n                        label-tag=\"dive-date\"\n                        label-text=\"Dive Date\"\n                        value={\n                          this.dive.date ? this.dive.date.toISOString() : null\n                        }\n                        name=\"tripDate\"\n                        input-type=\"date\"\n                        datePresentation=\"date-time\"\n                        lines=\"inset\"\n                        onFormItemChanged={(ev) => this.updateDate(ev)}\n                      ></app-form-item>\n                    ) : (\n                      [\n                        <ion-item>\n                          <my-transl tag=\"dive-date\" text=\"Dive Date\" />\n                          <ion-note slot=\"end\">\n                            {format(this.dive.date, \"dd MMM, yyyy HH:mm\")}\n                          </ion-note>\n                        </ion-item>,\n                        <ion-item>\n                          <ion-icon name=\"time\" slot=\"start\"></ion-icon>\n                          <ion-select\n                            label={TranslationService.getTransl(\n                              \"surface-interval\",\n                              \"Surface Interval\"\n                            )}\n                            onIonChange={(ev) =>\n                              this.updateSurfaceInterval(ev.detail.value)\n                            }\n                            value={this.dive.surfaceInterval}\n                          >\n                            <ion-select-option value={0.5}>\n                              0:30\n                            </ion-select-option>\n                            <ion-select-option value={1}>\n                              1:00\n                            </ion-select-option>\n                            <ion-select-option value={1.5}>\n                              1:30\n                            </ion-select-option>\n                            <ion-select-option value={2}>\n                              2:00\n                            </ion-select-option>\n                            <ion-select-option value={2.5}>\n                              2:30\n                            </ion-select-option>\n                            <ion-select-option value={3}>\n                              3:00\n                            </ion-select-option>\n                            <ion-select-option value={3.5}>\n                              3:30\n                            </ion-select-option>\n                            <ion-select-option value={4}>\n                              4:00\n                            </ion-select-option>\n                            <ion-select-option value={4.5}>\n                              4:30\n                            </ion-select-option>\n                            <ion-select-option value={5}>\n                              5:00\n                            </ion-select-option>\n                            <ion-select-option value={5.5}>\n                              5:30\n                            </ion-select-option>\n                            <ion-select-option value={6}>\n                              6:00\n                            </ion-select-option>\n                            <ion-select-option value={6.5}>\n                              6:30\n                            </ion-select-option>\n                            <ion-select-option value={7}>\n                              7:00\n                            </ion-select-option>\n                            <ion-select-option value={7.5}>\n                              7:30\n                            </ion-select-option>\n                            <ion-select-option value={8}>\n                              8:00\n                            </ion-select-option>\n                            <ion-select-option value={8.5}>\n                              8:30\n                            </ion-select-option>\n                            <ion-select-option value={9}>\n                              9:00\n                            </ion-select-option>\n                            <ion-select-option value={9.5}>\n                              9:30\n                            </ion-select-option>\n                            <ion-select-option value={10}>\n                              10:00\n                            </ion-select-option>\n                            <ion-select-option value={10.5}>\n                              10:30\n                            </ion-select-option>\n                            <ion-select-option value={11}>\n                              11:00\n                            </ion-select-option>\n                            <ion-select-option value={11.5}>\n                              11:30\n                            </ion-select-option>\n                            <ion-select-option value={12}>\n                              12:00\n                            </ion-select-option>\n                          </ion-select>\n                        </ion-item>,\n                      ]\n                    )}\n                  </ion-col>\n                </ion-row>,\n                Environment.isDecoplanner()\n                  ? undefined\n                  : [\n                      <ion-row>\n                        <ion-col>\n                          <ion-item\n                            button\n                            onClick={() => this.openSearchSite()}\n                          >\n                            <ion-input\n                              label={TranslationService.getTransl(\n                                \"dive-site\",\n                                \"Dive Site\"\n                              )}\n                              labelPlacement=\"floating\"\n                              placeholder={TranslationService.getTransl(\n                                \"select-dive-site\",\n                                \"Select Dive Site\"\n                              )}\n                              value={\n                                this.diveSite\n                                  ? this.diveSite.displayName\n                                  : undefined\n                              }\n                            ></ion-input>\n                            <ion-icon\n                              slot=\"end\"\n                              name=\"search-outline\"\n                            ></ion-icon>\n                          </ion-item>\n                        </ion-col>\n                      </ion-row>,\n                      <ion-row>\n                        <ion-col>\n                          <ion-item>\n                            <ion-select\n                              label={TranslationService.getTransl(\n                                \"diving-center\",\n                                \"Diving Center\"\n                              )}\n                              labelPlacement=\"floating\"\n                              id=\"selectDivingCenter\"\n                              onIonChange={(ev) => this.updateDivingCenter(ev)}\n                              disabled={true}\n                              value={this.dive.divingCenterId}\n                            ></ion-select>\n                          </ion-item>\n                        </ion-col>\n                      </ion-row>,\n                    ],\n              ]\n            : undefined}\n          {this.segment == \"levels\" ? (\n            <ion-row>\n              <ion-col>\n                <ion-list class=\"ion-text-wrap\">\n                  <ion-item>\n                    <div slot=\"end\" style={{width: \"1.9em\"}}>\n                      <ion-button\n                        icon-only\n                        color={\n                          Environment.isDecoplanner() ? \"gue-blue\" : \"planner\"\n                        }\n                        fill=\"clear\"\n                        style={{\"--padding-start\": \"0.4em\"}}\n                        onClick={() => this.editDiveConfig()}\n                      >\n                        <ion-icon name=\"create-outline\"></ion-icon>\n                      </ion-button>\n                    </div>\n                    <ion-grid class=\"ion-text-center ion-no-padding\">\n                      <ion-row\n                        class=\"ion-justify-content-center  ion-no-padding\"\n                        onClick={() => this.editDiveConfig()}\n                      >\n                        <ion-col size=\"6\">\n                          <ion-item lines=\"none\">\n                            <my-transl\n                              tag=\"configuration\"\n                              text=\"Configuration\"\n                            />\n                          </ion-item>\n                        </ion-col>\n\n                        <ion-col>\n                          <ion-item lines=\"none\">\n                            {this.allowSelectConfiguration ? (\n                              <ion-select\n                                interfaceOptions={this.confSelectOptions}\n                                onIonChange={(ev) =>\n                                  this.updateDiveConfiguration(ev.detail.value)\n                                }\n                                class=\"select-class\"\n                                value={this.diveConfiguration.stdName}\n                              >\n                                {this.stdConfigurations.map((conf) => (\n                                  <ion-select-option value={conf}>\n                                    {conf.stdName}\n                                  </ion-select-option>\n                                ))}\n                              </ion-select>\n                            ) : (\n                              <ion-label class=\"ion-text-end\">\n                                {this.diveConfiguration.stdName}\n                              </ion-label>\n                            )}\n                          </ion-item>\n                        </ion-col>\n                      </ion-row>\n                    </ion-grid>\n                  </ion-item>\n\n                  <ion-item>\n                    <div slot=\"end\" style={{width: \"1.9em\"}}>\n                      <ion-button\n                        icon-only\n                        fill=\"clear\"\n                        color={\n                          Environment.isDecoplanner() ? \"gue-blue\" : \"planner\"\n                        }\n                        style={{\n                          marginTop: \"10px\",\n                          \"--padding-start\": \"0.4em\",\n                        }}\n                        onClick={(ev) => this.presentPopover(ev, \"level\")}\n                      >\n                        <ion-icon name=\"add-circle\"></ion-icon>\n                      </ion-button>\n                    </div>\n                    <ion-grid class=\"ion-text-center\">\n                      <ion-row\n                        small-capitals\n                        class=\"ion-align-items-center ion-no-padding\"\n                      >\n                        <ion-col>\n                          <ion-text color=\"dark\">\n                            <h6>\n                              <my-transl tag=\"depth\" text=\"Depth\" />\n                            </h6>\n                          </ion-text>\n                        </ion-col>\n                        <ion-col>\n                          <ion-text color=\"dark\">\n                            <h6>\n                              <my-transl tag=\"time\" text=\"Time\" />\n                            </h6>\n                          </ion-text>\n                        </ion-col>\n                        <ion-col>\n                          <ion-text color=\"dark\">\n                            <h6>\n                              O<sub>2</sub>\n                            </h6>\n                          </ion-text>\n                        </ion-col>\n                        <ion-col>\n                          <ion-text color=\"dark\">\n                            <h6>He</h6>\n                          </ion-text>\n                        </ion-col>\n                        {this.parameters.configuration == \"CCR\" ? (\n                          <ion-col>\n                            <ion-text color=\"dark\">\n                              <h6>\n                                <my-transl tag=\"po2\" text=\"pO2\" />\n                              </h6>\n                            </ion-text>\n                          </ion-col>\n                        ) : undefined}\n\n                        <ion-col></ion-col>\n                      </ion-row>\n                    </ion-grid>\n                  </ion-item>\n                  <ion-reorder-group\n                    disabled={false}\n                    onIonItemReorder={(ev) => this.reorderItems(ev)}\n                  >\n                    {this.dive.profilePoints.map((level) => (\n                      <ion-item>\n                        <ion-reorder slot=\"end\"></ion-reorder>\n                        <ion-grid class=\"ion-text-center\">\n                          <ion-row class=\"ion-align-items-center ion-no-padding\">\n                            <ion-col\n                              onClick={(ev) =>\n                                this.presentPopover(ev, \"level\", level.index)\n                              }\n                            >\n                              {level.depth}\n                            </ion-col>\n                            <ion-col\n                              onClick={(ev) =>\n                                this.presentPopover(ev, \"level\", level.index)\n                              }\n                            >\n                              {level.time}\n                            </ion-col>\n                            <ion-col\n                              onClick={(ev) =>\n                                this.presentPopover(ev, \"level\", level.index)\n                              }\n                            >\n                              {level.gas.O2}\n                            </ion-col>\n                            <ion-col\n                              onClick={(ev) =>\n                                this.presentPopover(ev, \"level\", level.index)\n                              }\n                            >\n                              {level.gas.He}\n                            </ion-col>\n                            {this.parameters.configuration == \"CCR\" ? (\n                              <ion-col\n                                onClick={(ev) =>\n                                  this.presentPopover(ev, \"level\", level.index)\n                                }\n                              >\n                                {level.setpoint}\n                              </ion-col>\n                            ) : undefined}\n\n                            <ion-col>\n                              <ion-button\n                                icon-only\n                                fill=\"clear\"\n                                size=\"small\"\n                                color=\"danger\"\n                                disabled={\n                                  level.index == 0 &&\n                                  this.dive.profilePoints.length <= 1\n                                }\n                                onClick={() =>\n                                  this.removeProfilePoint(\n                                    this.dive,\n                                    level.index\n                                  )\n                                }\n                              >\n                                <ion-icon name=\"trash\"></ion-icon>\n                              </ion-button>\n                            </ion-col>\n                          </ion-row>\n                        </ion-grid>\n                      </ion-item>\n                    ))}\n                  </ion-reorder-group>\n                </ion-list>\n              </ion-col>\n            </ion-row>\n          ) : undefined}\n          {this.segment == \"gases\" ? (\n            <ion-row>\n              <ion-col>\n                <ion-list class=\"ion-text-wrap\">\n                  <ion-item>\n                    <ion-grid class=\"ion-text-center ion-no-padding\">\n                      <ion-row small-capitals class=\"ion-no-padding\">\n                        <ion-col>\n                          <ion-text color=\"dark\">\n                            <h6>\n                              <my-transl tag=\"from-depth\" text=\"from Depth\" />\n                            </h6>\n                          </ion-text>\n                        </ion-col>\n                        <ion-col>\n                          <ion-text color=\"dark\">\n                            <h6>\n                              O<sub>2</sub>\n                            </h6>\n                          </ion-text>\n                        </ion-col>\n                        <ion-col>\n                          <ion-text color=\"dark\">\n                            <h6>He</h6>\n                          </ion-text>\n                        </ion-col>\n                        {this.parameters.configuration == \"CCR\" ? (\n                          <ion-col>\n                            <ion-text color=\"dark\">\n                              <h6>\n                                <my-transl tag=\"po2\" text=\"pO2\" />\n                              </h6>\n                            </ion-text>\n                          </ion-col>\n                        ) : undefined}\n\n                        <ion-col class=\"ion-no-padding\">\n                          <ion-row class=\"ion-no-padding\">\n                            <ion-col\n                              class=\"ion-no-padding\"\n                              size={\n                                UserService.userRoles &&\n                                UserService.userRoles.licences.unlimited\n                                  ? \"6\"\n                                  : \"12\"\n                              }\n                            >\n                              <ion-button\n                                icon-only\n                                fill=\"clear\"\n                                color=\"primary\"\n                                onClick={(ev) => this.presentPopover(ev, \"gas\")}\n                                style={{marginTop: \"10px\"}}\n                              >\n                                <ion-icon name=\"add-circle\"></ion-icon>\n                              </ion-button>\n                            </ion-col>\n                            {UserService.userRoles &&\n                            UserService.userRoles.licences.unlimited ? (\n                              <ion-col size=\"6\" class=\"ion-no-padding\">\n                                <ion-button\n                                  icon-only\n                                  fill=\"clear\"\n                                  color=\"secondary\"\n                                  onClick={() => this.addStdDecoGases()}\n                                  style={{marginTop: \"10px\"}}\n                                >\n                                  <ion-icon name=\"color-wand\"></ion-icon>\n                                </ion-button>\n                              </ion-col>\n                            ) : undefined}\n                          </ion-row>\n                        </ion-col>\n                      </ion-row>\n                    </ion-grid>\n                  </ion-item>\n                  {this.dive.decoGases.map((gas, i) => (\n                    <ion-item class=\"ion-text-center\">\n                      <ion-grid class=\"ion-text-center\">\n                        <ion-row class=\"ion-no-padding\">\n                          <ion-col\n                            style={{marginTop: \"5px\"}}\n                            onClick={(ev) => this.presentPopover(ev, \"gas\", i)}\n                          >\n                            {gas.fromDepth}\n                          </ion-col>\n                          <ion-col\n                            style={{marginTop: \"5px\"}}\n                            onClick={(ev) => this.presentPopover(ev, \"gas\", i)}\n                          >\n                            {gas.O2}\n                          </ion-col>\n                          <ion-col\n                            style={{marginTop: \"5px\"}}\n                            onClick={(ev) => this.presentPopover(ev, \"gas\", i)}\n                          >\n                            {gas.He}\n                          </ion-col>\n                          {this.parameters.configuration == \"CCR\" ? (\n                            <ion-col\n                              style={{marginTop: \"5px\"}}\n                              onClick={(ev) =>\n                                this.presentPopover(ev, \"gas\", i)\n                              }\n                            >\n                              {gas.ppO2}{\" \"}\n                              {gas.useAsDiluent ? (\n                                <ion-note>(diluent gas)</ion-note>\n                              ) : undefined}\n                            </ion-col>\n                          ) : undefined}\n\n                          <ion-col>\n                            <ion-button\n                              icon-only\n                              fill=\"clear\"\n                              size=\"small\"\n                              color=\"danger\"\n                              onClick={() => this.removeDecoGas(this.dive, i)}\n                            >\n                              <ion-icon name=\"trash\"></ion-icon>\n                            </ion-button>\n                          </ion-col>\n                        </ion-row>\n                      </ion-grid>\n                    </ion-item>\n                  ))}\n                </ion-list>\n              </ion-col>\n            </ion-row>\n          ) : undefined}\n          {this.segment == \"arpc\" ? (\n            <app-decoplanner-arpc\n              diveDataToShare={this.diveDataToShare}\n              planner={this.planner}\n              onSaveArpc={(arpc) => this.saveArpc(arpc)}\n            ></app-decoplanner-arpc>\n          ) : undefined}\n        </div>\n      </ion-content>,\n    ];\n  }\n}\n"],"version":3}