{"file":"app-navbar.entry.esm.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,YAAY,GAAG,EAAE;;MCOV,SAAS;;;;;;qBAIK,SAAS;yBACL,SAAS;qBAEZ,KAAK;0BACA,KAAK;;;;IAUpC,gBAAgB,MAAK;IAErB,MAAM;QACJ,QACE,EAAC,IAAI,uDACF,IAAI,CAAC,KAAK,IAAI,aAAa,IAC1B;YACE,eACG,CAAC,IAAI,CAAC,KAAK,IACV,eAAS,QAAQ,EAAC,KAAK,EAAC,UAAU,EAAC,OAAO,EAAC,IAAI,EAAC,OAAO,IACrD,YAAM,IAAI,EAAC,OAAO,GAAG,EACrB,sBAAgB,KAAK,EAAC,aAAa,IACjC,uBAAiB,KAAK,EAAE,IAAI,CAAC,SAAS,GAAI,CAC3B,CACT,IACR,SAAS,CACT;YACN,YAAM,IAAI,EAAC,KAAK,GAAG;SACpB,KAED,sBACE,mBAAa,KAAK,EAAE,IAAI,CAAC,KAAK,IAC5B,mBAAa,IAAI,EAAC,OAAO,IACtB,CAAC,IAAI,CAAC,KAAK,GAAG,0BAAmB,GAAG,SAAS,EAC7C,IAAI,CAAC,UAAU,IACd,kBAAY,OAAO,EAAE,MAAM,aAAa,CAAC,MAAM,EAAE,IAC/C,gBAAU,IAAI,EAAC,sBAAsB,EAAC,IAAI,EAAC,OAAO,GAAG,CAC1C,IACX,SAAS,EACb,YAAM,IAAI,EAAC,OAAO,GAAG,CACT,EACd,qBACG,IAAI,CAAC,GAAG,IACP,iBAAW,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,GAAc,KAEvD,IAAI,CAAC,IAAI,CACV,EACA,IAAI,CAAC,UAAU,GAAG,KAAK,GAAG,IAAI,CAAC,UAAU,GAAG,SAAS,CAC5C,EACZ,mBAAa,IAAI,EAAC,KAAK,IACpB,IAAI,CAAC,eAAe,IACnB,kBACE,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,EAC/B,OAAO,EAAE,MAAM,IAAI,CAAC,aAAa,EAAE,IAElC,IAAI,CAAC,eAAe,CAAC,IAAI,IACxB,gBAAU,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,EAAC,OAAO,GAAG,IACxD,SAAS,EACZ,IAAI,CAAC,eAAe,CAAC,GAAG,IACvB,qBACE,iBACE,GAAG,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,EAC7B,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,GACpB,CACH,IACV,SAAS,CACF,IACX,SAAS,EACb,YAAM,IAAI,EAAC,KAAK,GAAG,CACP,CACF,CACH,CACd,CACI,EACP;KACH;;;;;;","names":[],"sources":["src/components/common/app/common/app-navbar/app-navbar.scss?tag=app-navbar","src/components/common/app/common/app-navbar/app-navbar.tsx"],"sourcesContent":["app-navbar {\n}\n","import {Component, h, Prop, Host} from \"@stencil/core\";\nimport {RouterService} from \"../../../../../services/common/router\";\n\n@Component({\n  tag: \"app-navbar\",\n  styleUrl: \"app-navbar.scss\",\n})\nexport class AppNavbar {\n  @Prop() tag?: string;\n  @Prop() text?: string;\n  @Prop() extraTitle?: string;\n  @Prop() color?: string = \"primary\";\n  @Prop() iconColor?: string = \"primary\";\n\n  @Prop() modal?: boolean = false;\n  @Prop() backButton?: boolean = false;\n\n  @Prop() rightButtonText?: {\n    icon: string;\n    tag: string;\n    text: string;\n    fill: \"clear\" | \"outline\" | \"solid\" | \"default\";\n  };\n  @Prop() rightButtonFc?: any;\n\n  componentDidLoad() {}\n\n  render() {\n    return (\n      <Host>\n        {this.color == \"transparent\" ? (\n          [\n            <div>\n              {!this.modal ? (\n                <ion-fab vertical=\"top\" horizontal=\"start\" slot=\"fixed\">\n                  <slot name=\"start\" />\n                  <ion-fab-button color=\"transparent\">\n                    <ion-menu-button color={this.iconColor} />\n                  </ion-fab-button>\n                </ion-fab>\n              ) : undefined}\n            </div>,\n            <slot name=\"end\" />,\n          ]\n        ) : (\n          <ion-header>\n            <ion-toolbar color={this.color}>\n              <ion-buttons slot=\"start\">\n                {!this.modal ? <ion-menu-button /> : undefined}\n                {this.backButton ? (\n                  <ion-button onClick={() => RouterService.goBack()}>\n                    <ion-icon name=\"chevron-back-outline\" slot=\"start\" />\n                  </ion-button>\n                ) : undefined}\n                <slot name=\"start\" />\n              </ion-buttons>\n              <ion-title>\n                {this.tag ? (\n                  <my-transl tag={this.tag} text={this.text}></my-transl>\n                ) : (\n                  this.text\n                )}\n                {this.extraTitle ? \" - \" + this.extraTitle : undefined}\n              </ion-title>\n              <ion-buttons slot=\"end\">\n                {this.rightButtonText ? (\n                  <ion-button\n                    fill={this.rightButtonText.fill}\n                    onClick={() => this.rightButtonFc()}\n                  >\n                    {this.rightButtonText.icon ? (\n                      <ion-icon name={this.rightButtonText.icon} slot=\"start\" />\n                    ) : undefined}\n                    {this.rightButtonText.tag ? (\n                      <ion-label>\n                        <my-transl\n                          tag={this.rightButtonText.tag}\n                          text={this.rightButtonText.text}\n                        ></my-transl>\n                      </ion-label>\n                    ) : undefined}\n                  </ion-button>\n                ) : undefined}\n                <slot name=\"end\" />\n              </ion-buttons>\n            </ion-toolbar>\n          </ion-header>\n        )}\n      </Host>\n    );\n  }\n}\n"],"version":3}