{"file":"app-coordinates.entry.esm.js","mappings":"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","names":["toNumber","toString"],"sources":["src/components/common/app/map/app-coordinates/app-coordinates.scss?tag=app-coordinates","src/components/common/app/map/app-coordinates/app-coordinates.tsx"],"sourcesContent":["app-coordinates {\n  width: 100%;\n  height: 100%;\n}\n","import {\n  Component,\n  h,\n  Prop,\n  State,\n  Watch,\n  Host,\n  Event,\n  EventEmitter,\n} from \"@stencil/core\";\nimport {reverseGeocode} from \"../../../../../helpers/utils\";\nimport {LocationIQ} from \"../../../../../services/common/map\";\nimport {toNumber, toString} from \"lodash\";\n\nexport interface DecimalCoords {\n  lat: number;\n  lon: number;\n}\nexport interface DMSCoords {\n  lat: {\n    degrees: number;\n    minutes: number;\n    seconds: number;\n  };\n  lon: {\n    degrees: number;\n    minutes: number;\n    seconds: number;\n  };\n}\n\n@Component({\n  tag: \"app-coordinates\",\n  styleUrl: \"app-coordinates.scss\",\n})\nexport class AppCoordinates {\n  @Event() coordinatesEmit: EventEmitter<DecimalCoords>;\n  @Event() addressEmit: EventEmitter<LocationIQ>;\n  @Prop({mutable: true}) coordinates: DecimalCoords;\n  @State() DMSCoordinates: DMSCoords;\n  @State() location: LocationIQ;\n  timer: number;\n\n  @Watch(\"coordinates\")\n  updateCoords() {\n    this.convertFromDecimals();\n  }\n\n  componentWillLoad() {\n    this.convertFromDecimals();\n  }\n\n  decimalCoordinatesHandler(event: any) {\n    this.coordinates[event.detail.name] = toNumber(event.detail.value);\n  }\n\n  DMSCoordinatesHandler(event: any) {\n    switch (event.detail.name) {\n      case \"latitude-degrees\":\n        this.DMSCoordinates.lat.degrees = toNumber(event.detail.value);\n        break;\n      case \"latitude-minutes\":\n        this.DMSCoordinates.lat.minutes = toNumber(event.detail.value);\n        break;\n      case \"latitude-seconds\":\n        this.DMSCoordinates.lat.seconds = toNumber(event.detail.value);\n        break;\n      case \"longitude-degrees\":\n        this.DMSCoordinates.lon.degrees = toNumber(event.detail.value);\n        break;\n      case \"longitude-minutes\":\n        this.DMSCoordinates.lon.minutes = toNumber(event.detail.value);\n        break;\n      case \"longitude-seconds\":\n        this.DMSCoordinates.lon.seconds = toNumber(event.detail.value);\n        break;\n    }\n    this.convertToDecimals();\n  }\n\n  convertFromDecimals() {\n    if (this.coordinates && this.coordinates.lat) {\n      const lat = this.coordinates.lat;\n      const lat_degree = Math.trunc(lat);\n      const lat_minutesdecimal = (lat - lat_degree) * 60;\n      const lat_minutes = Math.trunc(lat_minutesdecimal);\n      const lat_seconds = Math.round((lat_minutesdecimal - lat_minutes) * 60);\n      const lon = this.coordinates.lon;\n      const lon_degree = Math.trunc(lon);\n      const lon_minutesdecimal = (lon - lon_degree) * 60;\n      const lon_minutes = Math.trunc(lon_minutesdecimal);\n      const lon_seconds = Math.round((lon_minutesdecimal - lon_minutes) * 60);\n      this.DMSCoordinates = {\n        lat: {\n          degrees: lat_degree,\n          minutes: lat_minutes,\n          seconds: lat_seconds,\n        },\n        lon: {\n          degrees: lon_degree,\n          minutes: lon_minutes,\n          seconds: lon_seconds,\n        },\n      };\n      this.reverseGeocode();\n    }\n  }\n\n  convertToDecimals() {\n    if (this.DMSCoordinates && this.DMSCoordinates.lat) {\n      const lat =\n        this.DMSCoordinates.lat.degrees +\n        this.DMSCoordinates.lat.minutes / 60 +\n        this.DMSCoordinates.lat.seconds / 3600;\n      const lon =\n        this.DMSCoordinates.lon.degrees +\n        this.DMSCoordinates.lon.minutes / 60 +\n        this.DMSCoordinates.lon.seconds / 3600;\n      this.coordinates.lat = lat;\n      this.coordinates.lon = lon;\n      this.reverseGeocode();\n    }\n  }\n  async reverseGeocode() {\n    //set timer for geocode - wait until draggable marker is fixed or coordinates are written\n    this.timer = 2000;\n    this.countdown();\n  }\n\n  async executeReverseGeocode() {\n    this.location = await reverseGeocode(\n      this.coordinates.lat,\n      this.coordinates.lon\n    );\n    this.addressEmit.emit(this.location);\n  }\n\n  countdown() {\n    const timer = setTimeout(() => {\n      this.timer -= 1;\n      if (this.timer == 0) {\n        this.executeReverseGeocode();\n      } else {\n        clearTimeout(timer);\n        this.countdown();\n      }\n    }, 1);\n  }\n\n  coordinatesUpdated() {\n    this.coordinatesEmit.emit(this.coordinates);\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.coordinates &&\n        this.coordinates.lat &&\n        this.DMSCoordinates &&\n        this.DMSCoordinates.lat ? (\n          <ion-grid>\n            <ion-row>\n              <ion-col>\n                <app-form-item\n                  label-tag=\"latitude\"\n                  label-text=\"Latitude\"\n                  value={toString(this.coordinates.lat)}\n                  name=\"lat\"\n                  input-type=\"number\"\n                  onFormItemChanged={(ev) => this.decimalCoordinatesHandler(ev)}\n                  onFormItemBlur={() => this.coordinatesUpdated()}\n                  validator={[\n                    {\n                      name: \"minmaxvalue\",\n                      options: {min: -90, max: 90},\n                    },\n                  ]}\n                ></app-form-item>\n              </ion-col>\n              <ion-col>\n                <ion-row>\n                  <ion-col>\n                    <app-form-item\n                      label-tag=\"degrees\"\n                      label-text=\"Degrees\"\n                      value={toString(this.DMSCoordinates.lat.degrees)}\n                      name=\"latitude-degrees\"\n                      input-type=\"number\"\n                      onFormItemChanged={(ev) => this.DMSCoordinatesHandler(ev)}\n                      onFormItemBlur={() => this.coordinatesUpdated()}\n                      validator={[\n                        {\n                          name: \"minmaxvalue\",\n                          options: {min: -90, max: 90},\n                        },\n                      ]}\n                    ></app-form-item>\n                  </ion-col>\n                  <ion-col>\n                    <app-form-item\n                      label-tag=\"minutes\"\n                      label-text=\"Minutes\"\n                      value={toString(\n                        Math.abs(this.DMSCoordinates.lat.minutes)\n                      )}\n                      name=\"latitude-minutes\"\n                      input-type=\"number\"\n                      onFormItemChanged={(ev) => this.DMSCoordinatesHandler(ev)}\n                      onFormItemBlur={() => this.coordinatesUpdated()}\n                      validator={[\n                        {\n                          name: \"minmaxvalue\",\n                          options: {min: 0, max: 60},\n                        },\n                      ]}\n                    ></app-form-item>\n                  </ion-col>\n                  <ion-col>\n                    <app-form-item\n                      label-tag=\"seconds\"\n                      label-text=\"Seconds\"\n                      value={toString(\n                        Math.abs(this.DMSCoordinates.lat.seconds)\n                      )}\n                      name=\"latitude-seconds\"\n                      input-type=\"number\"\n                      onFormItemChanged={(ev) => this.DMSCoordinatesHandler(ev)}\n                      onFormItemBlur={() => this.coordinatesUpdated()}\n                      validator={[\n                        {\n                          name: \"minmaxvalue\",\n                          options: {min: 0, max: 60},\n                        },\n                      ]}\n                    ></app-form-item>\n                  </ion-col>\n                </ion-row>\n              </ion-col>\n            </ion-row>\n            <ion-row>\n              <ion-col>\n                <app-form-item\n                  label-tag=\"longitude\"\n                  label-text=\"Longitude\"\n                  value={toString(this.coordinates.lon)}\n                  name=\"lon\"\n                  input-type=\"number\"\n                  onFormItemChanged={(ev) => this.decimalCoordinatesHandler(ev)}\n                  onFormItemBlur={() => this.coordinatesUpdated()}\n                  validator={[\n                    {\n                      name: \"minmaxvalue\",\n                      options: {min: -180, max: 180},\n                    },\n                  ]}\n                ></app-form-item>\n              </ion-col>\n              <ion-col>\n                <ion-row>\n                  <ion-col>\n                    <app-form-item\n                      label-tag=\"degrees\"\n                      label-text=\"Degrees\"\n                      value={toString(this.DMSCoordinates.lon.degrees)}\n                      name=\"longitude-degrees\"\n                      input-type=\"number\"\n                      onFormItemChanged={(ev) => this.DMSCoordinatesHandler(ev)}\n                      onFormItemBlur={() => this.coordinatesUpdated()}\n                      validator={[\n                        {\n                          name: \"minmaxvalue\",\n                          options: {min: -180, max: 180},\n                        },\n                      ]}\n                    ></app-form-item>\n                  </ion-col>\n                  <ion-col>\n                    <app-form-item\n                      label-tag=\"minutes\"\n                      label-text=\"Minutes\"\n                      value={toString(\n                        Math.abs(this.DMSCoordinates.lon.minutes)\n                      )}\n                      name=\"longitude-minutes\"\n                      input-type=\"number\"\n                      onFormItemChanged={(ev) => this.DMSCoordinatesHandler(ev)}\n                      onFormItemBlur={() => this.coordinatesUpdated()}\n                      validator={[\n                        {\n                          name: \"minmaxvalue\",\n                          options: {min: 0, max: 60},\n                        },\n                      ]}\n                    ></app-form-item>\n                  </ion-col>\n                  <ion-col>\n                    <app-form-item\n                      label-tag=\"seconds\"\n                      label-text=\"Seconds\"\n                      value={toString(\n                        Math.abs(this.DMSCoordinates.lon.seconds)\n                      )}\n                      name=\"longitude-seconds\"\n                      input-type=\"number\"\n                      onFormItemChanged={(ev) => this.DMSCoordinatesHandler(ev)}\n                      onFormItemBlur={() => this.coordinatesUpdated()}\n                      validator={[\n                        {\n                          name: \"minmaxvalue\",\n                          options: {min: 0, max: 60},\n                        },\n                      ]}\n                    ></app-form-item>\n                  </ion-col>\n                </ion-row>\n              </ion-col>\n            </ion-row>\n            {this.location ? (\n              <ion-row>\n                <ion-col>\n                  <ion-item color=\"dark\" lines=\"none\">\n                    <ion-icon\n                      name=\"navigate-circle-outline\"\n                      slot=\"start\"\n                    ></ion-icon>\n                    <ion-label>{this.location.display_name}</ion-label>\n                  </ion-item>\n                </ion-col>\n              </ion-row>\n            ) : undefined}\n          </ion-grid>\n        ) : undefined}\n      </Host>\n    );\n  }\n}\n"],"version":3}