{"file":"app-language-picker.entry.esm.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,oBAAoB,GAAG,6ipCAA6ipC;;MCkB7jpC,iBAAiB;;;;;QAQ5B,cAAS,GAAG,EAAE,CAAC;gCALmC,IAAI;sBAC5B,KAAK;0BACD,KAAK;wBACP,KAAK;4BASJ,EAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAC;0BACtC,KAAK;;IAL3B,MAAM;QACJ,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAOD,iBAAiB;QACf,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,YAAY,EAAE,CAAC;QAC9C,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAED,cAAc;QACZ,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC1E,IAAI,CAAC,YAAY,qBAAO,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;KACpC;IAED,UAAU,CAAC,EAAE;QACX,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;KACpC;IAED,MAAM,kBAAkB;QACtB,MAAM,OAAO,GAAG,EAAE,CAAC;QACnB,aAAa,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,CAAC,IAAI;YACxC,OAAO,CAAC,IAAI,CAAC;gBACX,IAAI,EAAE,IAAI,CAAC,KAAK;gBAChB,OAAO,EAAE;oBACP,IAAI,CAAC,UAAU,CAAC,EAAC,MAAM,EAAE,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAC,EAAC,CAAC,CAAC;iBAChD;aACF,CAAC,CAAC;SACJ,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,qBAAqB,CAAC,MAAM,CAAC;YAChD,MAAM,EAAE,kBAAkB,CAAC,SAAS,CAAC,UAAU,EAAE,UAAU,CAAC;YAC5D,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,EAAE,CAAC;KAClB;IAED,MAAM;QACJ,QACE,EAAC,IAAI,uDACF,IAAI,CAAC,MAAM;cACR,IAAI,CAAC,UAAU;kBACb;oBACE,qCAEE,IAAI,EAAC,OAAO,EACZ,IAAI,EAAC,KAAK,EACV,OAAO,EAAE,MAAM,IAAI,CAAC,kBAAkB,EAAE,IAExC,gBACE,KAAK,EACH,sBAAsB;6BACrB,IAAI,CAAC,YAAY,CAAC,WAAW,IAAI,IAAI;kCAClC,IAAI;kCACJ,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAE1B,CACD;iBACd;kBACD;oBACE,oBACE,kBACE,KAAK,EAAE,kBAAkB,CAAC,SAAS,CAAC,UAAU,EAAE,UAAU,CAAC,EAC3D,SAAS,EAAC,cAAc,EACxB,WAAW,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EACxC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,IAE7B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,MACvB,yBAAmB,KAAK,EAAE,IAAI,CAAC,KAAK,IACjC,IAAI,CAAC,KAAK,CACO,CACrB,CAAC,CACS,EACb,gBACE,IAAI,EAAC,KAAK,EACV,KAAK,EACH,sBAAsB;6BACrB,IAAI,CAAC,YAAY,CAAC,WAAW,IAAI,IAAI;kCAClC,IAAI;kCACJ,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAE1B,CACH;iBACZ;cACH;gBACE,aACE,gBACE,KAAK,EACH,sBAAsB;yBACrB,IAAI,CAAC,YAAY,CAAC,WAAW,IAAI,IAAI;8BAClC,IAAI;8BACJ,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAE1B,EACX,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,EAAE,CACpD;aACL,CACA,EACP;KACH;;;;;;;;;","names":[],"sources":["src/components/common/app/common/app-language-picker/app-language-picker.scss?tag=app-language-picker","src/components/common/app/common/app-language-picker/app-language-picker.tsx"],"sourcesContent":["@import \"../../../../../assets/css/flag-icon.min.css\";\napp-language-picker {\n}\n","import {actionSheetController} from \"@ionic/core\";\nimport {\n  Component,\n  h,\n  State,\n  Event,\n  EventEmitter,\n  Prop,\n  Host,\n  Watch,\n} from \"@stencil/core\";\nimport {SystemService} from \"../../../../../services/common/system\";\nimport {TranslationService} from \"../../../../../services/common/translations\";\n\n@Component({\n  tag: \"app-language-picker\",\n  styleUrl: \"app-language-picker.scss\",\n})\nexport class AppLanguagePicker {\n  @Event() languageChanged: EventEmitter;\n\n  @Prop({mutable: true}) selectedLangCode: string = \"en\";\n  @Prop() picker: boolean = false;\n  @Prop() selectOnly: boolean = false;\n  @Prop() iconOnly: boolean = false;\n\n  listItems = [];\n\n  @Watch(\"selectedLangCode\")\n  update() {\n    this.selectLanguage();\n  }\n\n  @State() selectedItem: any = {label: \"English\", value: \"en\"};\n  @State() updateView = false;\n\n  @Event() clickedItem: EventEmitter;\n\n  componentWillLoad() {\n    this.listItems = SystemService.getLanguages();\n    this.selectLanguage();\n  }\n\n  selectLanguage() {\n    const item = this.listItems.find((x) => x.value == this.selectedLangCode);\n    this.selectedItem = {...item};\n    this.updateView = !this.updateView;\n  }\n\n  changeLang(ev) {\n    this.selectedLangCode = ev.detail.value;\n    this.selectLanguage();\n    this.languageChanged.emit(ev.detail.value);\n    this.updateView = !this.updateView;\n  }\n\n  async openLanguagePicker() {\n    const buttons = [];\n    SystemService.getLanguages().forEach((lang) => {\n      buttons.push({\n        text: lang.label,\n        handler: () => {\n          this.changeLang({detail: {value: lang.value}});\n        },\n      });\n    });\n    const action = await actionSheetController.create({\n      header: TranslationService.getTransl(\"language\", \"Language\"),\n      buttons: buttons,\n    });\n    action.present();\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.picker\n          ? this.selectOnly\n            ? [\n                <ion-button\n                  icon-only\n                  fill=\"clear\"\n                  slot=\"end\"\n                  onClick={() => this.openLanguagePicker()}\n                >\n                  <ion-icon\n                    class={\n                      \"flag-icon flag-icon-\" +\n                      (this.selectedItem.countryCode == \"en\"\n                        ? \"gb\"\n                        : this.selectedItem.countryCode)\n                    }\n                  ></ion-icon>\n                </ion-button>,\n              ]\n            : [\n                <ion-item>\n                  <ion-select\n                    label={TranslationService.getTransl(\"language\", \"Language\")}\n                    interface=\"action-sheet\"\n                    onIonChange={(ev) => this.changeLang(ev)}\n                    value={this.selectedItem.value}\n                  >\n                    {this.listItems.map((lang) => (\n                      <ion-select-option value={lang.value}>\n                        {lang.label}\n                      </ion-select-option>\n                    ))}\n                  </ion-select>\n                  <ion-icon\n                    slot=\"end\"\n                    class={\n                      \"flag-icon flag-icon-\" +\n                      (this.selectedItem.countryCode == \"en\"\n                        ? \"gb\"\n                        : this.selectedItem.countryCode)\n                    }\n                  ></ion-icon>\n                </ion-item>,\n              ]\n          : [\n              <p>\n                <ion-icon\n                  class={\n                    \"flag-icon flag-icon-\" +\n                    (this.selectedItem.countryCode == \"en\"\n                      ? \"gb\"\n                      : this.selectedItem.countryCode)\n                  }\n                ></ion-icon>\n                {!this.iconOnly ? \"   \" + this.selectedItem.label : \"\"}\n              </p>,\n            ]}\n      </Host>\n    );\n  }\n}\n"],"version":3}