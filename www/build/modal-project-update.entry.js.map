{"file":"modal-project-update.entry.esm.js","mappings":"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","names":["isString","some","orderBy","toNumber","max","maxBy","cloneDeep"],"sources":["src/components/trasteel/modals/modal-project-update/modal-project-update.scss?tag=modal-project-update","src/components/trasteel/modals/modal-project-update/modal-project-update.tsx"],"sourcesContent":["modal-project-update {\n  .small {\n    font-size: 0.75rem;\n    color: black;\n  }\n\n  .project-grid {\n    --ion-grid-column-padding: 0px;\n  }\n\n  .reduce-padding {\n    position: relative;\n    left: -16px;\n  }\n\n  .reduce-padding-top {\n    position: relative;\n    top: -10px;\n    --ion-item-background: rgba(255, 255, 255, 0);\n  }\n\n  .separator {\n    background-color: var(--ion-color-trasteel-tint);\n    height: 3px;\n    ion-col {\n      height: 0px !important;\n    }\n  }\n\n  .positions-box {\n    margin-top: 10px;\n    padding-top: 5px;\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 10px;\n    border: 1px solid black;\n  }\n\n  #responsive-grid {\n    ion-grid {\n      --ion-grid-padding: 5px;\n      --ion-grid-column-padding: 0px;\n\n      .header {\n        background-color: var(--ion-color-trasteel);\n        font-size: 0.75rem;\n        font-weight: bold;\n        color: var(--ion-color-trasteel-contrast);\n      }\n\n      .courseSelected {\n        background-color: var(--ion-color-trasteel-tint);\n      }\n\n      .emptyCell {\n        background-color: var(--ion-color-trasteel-tint);\n      }\n      .noborder {\n        border: 0px;\n      }\n      ion-col {\n        align-items: center;\n        justify-content: center;\n        text-align: center;\n      }\n      .ext-row {\n        border: 1px solid black;\n      }\n      .ext-col {\n        border-right: 0px solid black;\n      }\n      .inner-row1 {\n        border-bottom: 1px solid black;\n        //small devices\n        .top-border {\n          border-top: 0px solid black;\n        }\n        .top-border1 {\n          border-top: 1px solid black;\n        }\n        //large devices\n        @media screen and (min-width: 992px) {\n          .top-border {\n            border-top: 1px solid black;\n          }\n          .top-border1 {\n            border-top: 0px solid black;\n          }\n        }\n\n        .inner-col2 {\n          border-right: 1px solid black;\n          //large devices\n          @media screen and (min-width: 992px) {\n            border-right: 0px solid black;\n          }\n        }\n      }\n      .inner-row1:last-child {\n        //small devices\n        border-bottom: 1px solid black;\n        //large devices\n        @media screen and (min-width: 992px) {\n          border-bottom: 0px solid black;\n        }\n      }\n      .inner-row1a {\n        //small devices\n        border-top: 0px solid black;\n        .inner-col1 {\n          border-right: 0px solid black;\n        }\n        .inner-col1:first-child {\n          border-right: 1px solid black;\n        }\n        //large devices\n        @media screen and (min-width: 992px) {\n          border-top: 1px solid black;\n          .inner-col1 {\n            border-right: 1px solid black;\n          }\n        }\n        .inner-col1:last-child {\n          border-right: 0px solid black;\n        }\n      }\n      .inner-row2 {\n        border-bottom: 1px solid black;\n        //small devices\n        border-left: 0px solid black;\n        //large devices\n        @media screen and (min-width: 992px) {\n          border-left: 1px solid black;\n        }\n      }\n      .inner-row2:last-child {\n        border-bottom: 0px solid black;\n      }\n      .inner-col {\n        border-right: 1px solid black;\n      }\n\n      .button-no-margin {\n        --padding-top: 0px;\n        --padding-bottom: 0px;\n        --padding-start: 5px;\n        --padding-end: 5px;\n        @media screen and (min-width: 1100px) {\n          --padding-start: 10px;\n          --padding-end: 10px;\n        }\n      }\n    }\n  }\n}\n","import {Component, h, Host, Prop, State, Element} from \"@stencil/core\";\nimport {alertController, modalController, popoverController} from \"@ionic/core\";\nimport {cloneDeep, isString, max, maxBy, orderBy, some, toNumber} from \"lodash\";\nimport {Subscription} from \"rxjs\";\nimport Swiper from \"swiper\";\nimport {UserProfile} from \"../../../../interfaces/common/user/user-profile\";\nimport {UserService} from \"../../../../services/common/user\";\nimport {TranslationService} from \"../../../../services/common/translations\";\nimport {\n  Project,\n  ProjectAreaQuality,\n  ProjectAreaQualityShape,\n  ProjectCourse,\n  ProjectMass,\n  AutoFillCourses,\n} from \"../../../../interfaces/trasteel/refractories/projects\";\nimport {ProjectsService} from \"../../../../services/trasteel/refractories/projects\";\nimport {Environment} from \"../../../../global/env\";\nimport {SystemService} from \"../../../../services/common/system\";\nimport {CustomersService} from \"../../../../services/trasteel/crm/customers\";\nimport {MapDataCustomer} from \"../../../../interfaces/trasteel/customer/customer\";\nimport {DatasheetsService} from \"../../../../services/trasteel/refractories/datasheets\";\nimport {ShapesService} from \"../../../../services/trasteel/refractories/shapes\";\nimport {Shape} from \"../../../../interfaces/trasteel/refractories/shapes\";\nimport {roundDecimals} from \"../../../../helpers/utils\";\nimport {RouterService} from \"../../../../services/common/router\";\n\n@Component({\n  tag: \"modal-project-update\",\n  styleUrl: \"modal-project-update.scss\",\n})\nexport class ModalProjectUpdate {\n  @Element() el: HTMLElement;\n  @Prop({mutable: true}) projectId: string = undefined;\n  @Prop() duplicateProject: Project = undefined;\n  @State() project: Project;\n  @State() updateView = true;\n  @State() scrollTop = 0;\n  @State() allocationAreaSegment: any = \"add\";\n  @State() areaShapes: {areaIndex: number; shapes: Shape[]}[] = [];\n  @State() lastPosition = 1;\n  @State() positions = [];\n  @State() previousMassItems = null;\n  @State() selectedCustomer: MapDataCustomer;\n  @State() selectedRows: number[] = [];\n  @State() undoHistory: Project[] = [];\n  @State() currentUndoStep: number = 0;\n  listOfSpecialShapes = [\"spout-block\", \"door-block\", \"starter-set\"];\n\n  lastSelectedRowIndex: number = null;\n  validProject = false;\n  titles = [\n    {tag: \"summary\", text: \"Summary\", disabled: false},\n    {tag: \"information\", text: \"Information\", disabled: false},\n    {tag: \"shaped\", text: \"Shaped\", disabled: false},\n    {tag: \"unshaped\", text: \"Unshaped\", disabled: false},\n    {tag: \"files\", text: \"Files\", disabled: true},\n  ];\n  @State() slider: Swiper;\n  userProfile: UserProfile;\n  userProfileSub$: Subscription;\n\n  async componentWillLoad() {\n    this.userProfileSub$ = UserService.userProfile$.subscribe(\n      (userProfile: UserProfile) => {\n        this.userProfile = new UserProfile(userProfile);\n      }\n    );\n    await this.loadProject();\n    this.preventShiftSelect();\n    this.checkKeyboardEvent();\n  }\n\n  checkKeyboardEvent() {\n    document.addEventListener(\"keydown\", (event) => {\n      if (event.key === \"canc\") {\n        //prevent deleting the focused input with canc\n        event.preventDefault();\n      }\n      if (event.key === \"Escape\") {\n        //prevent deleting the focused input with canc\n        event.preventDefault();\n        this.undo();\n      }\n    });\n    document.addEventListener(\"keyup\", (event) => {\n      if (this.allocationAreaSegment >= 0 && this.selectedRows.length > 0) {\n        //area is selected and row is selected\n        const selectedRow = this.selectedRows[0];\n        const maxRows =\n          this.project.projectAreaQuality[this.allocationAreaSegment].courses\n            .length;\n        if (event.key === \"canc\" || event.key === \"Meta\") {\n          event.preventDefault();\n          //delete the selected course\n          this.deleteAreaCourse(\n            this.allocationAreaSegment,\n            this.selectedRows[0]\n          );\n        } else if (event.key === \"ArrowDown\" || event.key === \"Enter\") {\n          event.preventDefault();\n          //select next course\n          this.selectedRows[0] =\n            selectedRow < maxRows - 1 ? selectedRow + 1 : maxRows - 1;\n        } else if (event.key === \"ArrowUp\") {\n          event.preventDefault();\n          //select next course\n          this.selectedRows[0] = selectedRow > 0 ? selectedRow - 1 : 0;\n        }\n        this.updateSlider();\n      }\n    });\n  }\n\n  courseFocus(courseIndex) {\n    this.selectedRows = [courseIndex];\n    this.updateSlider();\n  }\n\n  async loadProject() {\n    await ProjectsService.downloadProjectSettings();\n    if (this.projectId) {\n      try {\n        const res = await ProjectsService.getProject(this.projectId);\n        this.project = res;\n        if (this.project.projectAreaQuality.length > 0) {\n          this.allocationAreaSegment = 0;\n        }\n        this.areaShapes = await ProjectsService.loadShapesForApplication(\n          this.project\n        );\n        this.resetPositions();\n        //select customer\n        this.selectedCustomer = CustomersService.getCustomersDetails(\n          this.project.customerId\n        );\n        //check allocation areas\n        await ProjectsService.checkBricksAllocationAreasForProject(\n          this.project\n        );\n      } catch (error) {\n        SystemService.dismissLoading();\n        RouterService.goBack();\n      }\n    } else {\n      this.project = new Project(this.duplicateProject);\n      if (this.duplicateProject)\n        this.project.projectLocalId = \"NEW-\" + this.project.projectLocalId;\n\n      this.project.users = {\n        [UserService.userRoles.uid]: [\"owner\"],\n      };\n    }\n    this.updateUndoHistory();\n  }\n\n  async componentDidLoad() {\n    this.slider = new Swiper(\".slider-edit-project\", {\n      speed: 400,\n      spaceBetween: 100,\n      allowTouchMove: false,\n      autoHeight: true,\n    });\n    if (this.project.projectDescription) {\n      //update and validate\n      setTimeout(() => {\n        this.validateProject();\n      });\n    }\n    const reorderGroup = document.querySelector(\"ion-reorder-group\");\n    reorderItems(this.project.projectAreaQuality);\n\n    reorderGroup.addEventListener(\"ionItemReorder\", ({detail}) => {\n      // Finish the reorder and position the item in the DOM based on\n      // where the gesture ended. Update the items variable to the\n      // new order of items\n      this.project.projectAreaQuality = detail.complete(\n        this.project.projectAreaQuality\n      );\n      // Reorder the items in the DOM\n      reorderItems(this.project.projectAreaQuality);\n      // After complete is called the items will be in the new order\n      this.validateProject();\n    });\n\n    function reorderItems(items: ProjectAreaQuality[]) {\n      reorderGroup.replaceChildren();\n      let reordered = \"\";\n      for (const area of items) {\n        reordered += `\n        <ion-item>\n          <ion-label>\n            ${\n              area.bricksAllocationAreaId\n                ? ProjectsService.getBricksAllocationAreas(\n                    area.bricksAllocationAreaId\n                  )[0].bricksAllocationAreaName.en\n                : null\n            }\n          </ion-label>\n          <ion-reorder slot=\"end\"></ion-reorder>\n        </ion-item>\n      `;\n      }\n      reorderGroup.innerHTML = reordered;\n    }\n  }\n\n  disconnectedCallback() {\n    this.userProfileSub$.unsubscribe();\n  }\n\n  handleChange(ev) {\n    this.project[ev.detail.name] = ev.detail.value;\n    this.updateUndoHistory();\n    this.validateProject();\n  }\n\n  validateProject() {\n    this.validProject =\n      isString(this.project.projectDescription) &&\n      this.project.customerId != null &&\n      this.project.docsCaption != null &&\n      this.project.projectLocalId != null;\n\n    this.updateSlider();\n  }\n\n  async openSelectCustomer() {\n    const cust = await CustomersService.openSelectCustomer(\n      this.selectedCustomer\n    );\n    if (cust) {\n      this.project.customerId = cust.id;\n      this.selectedCustomer = cust;\n      this.updateUndoHistory();\n    }\n  }\n\n  async openSelectDataSheet(area, index, mass = false) {\n    const ds = await DatasheetsService.openSelectDataSheet(\n      DatasheetsService.getDatasheetsById(area.datasheetId)\n    );\n    if (ds) {\n      const datasheet = await DatasheetsService.getDatasheet(ds.id);\n      if (mass) {\n        this.project.projectMass[index].datasheetId = ds.id;\n        this.project.projectMass[index].density = datasheet.getDensity();\n      } else {\n        this.project.projectAreaQuality[index].datasheetId = ds.id;\n        this.project.projectAreaQuality[index].density = datasheet.getDensity();\n      }\n      this.updateUndoHistory();\n      this.updateSlider();\n    }\n  }\n\n  async openSelectShape(id, index, positionIndex) {\n    const sh = await ShapesService.openSelectShape(\n      ShapesService.getShapeById(id)\n    );\n    if (sh) {\n      if (this.project.projectAreaQuality[index].courses.length > 0) {\n        const alert = await alertController.create({\n          header: \"Change Shape\",\n          message: TranslationService.getTransl(\n            \"recalculate-message\",\n            \"This will re-calculate all exisiting courses! Are you sure?\"\n          ),\n          buttons: [\n            {\n              text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n              handler: async () => {},\n            },\n            {\n              text: TranslationService.getTransl(\"ok\", \"OK\"),\n              handler: async () => {\n                this.replaceShape(sh.id, index, positionIndex);\n              },\n            },\n          ],\n        });\n        alert.present();\n      } else {\n        await this.setShape(sh.id, index, positionIndex);\n        this.updateUndoHistory();\n        this.updateSlider();\n      }\n    }\n  }\n\n  async setShape(id, areaIndex, positionIndex) {\n    const shape = await ShapesService.getShape(id);\n    shape[\"shapeId\"] = id;\n    this.project.projectAreaQuality[areaIndex].shapes[positionIndex].shapeId =\n      id;\n    const isSpecial = some(this.listOfSpecialShapes, (substring) =>\n      id.includes(substring)\n    );\n    let specialShapeVolume = null;\n    if (isSpecial) {\n      specialShapeVolume = shape.volume;\n    }\n    this.project.projectAreaQuality[areaIndex].shapes[\n      positionIndex\n    ].specialShapeVolume = specialShapeVolume;\n    this.areaShapes[areaIndex].shapes[positionIndex] = shape;\n  }\n\n  async replaceShape(id, areaIndex, positionIndex) {\n    //recalculate all courses\n    if (id) {\n      await this.setShape(id, areaIndex, positionIndex);\n      //recalculate when the shape is new\n      ProjectsService.recalculateExistingCourses(\n        this.project,\n        this.areaShapes,\n        areaIndex\n      );\n    }\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  selectCustomer(ev) {\n    this.project.customerId = ev.detail.value;\n    this.validateProject();\n  }\n\n  /* \n  *\n  PROJECTS AREA COURSES \n  *\n  */\n\n  handleCourseRowClick(rowIndex: number, event: MouseEvent) {\n    if (event.shiftKey && this.lastSelectedRowIndex !== null) {\n      // Previene l'azione predefinita del browser, che sarebbe la selezione del testo\n      event.preventDefault();\n      this.selectedRows = [];\n      const start = Math.min(this.lastSelectedRowIndex, rowIndex);\n      const end = Math.max(this.lastSelectedRowIndex, rowIndex);\n      for (let i = start; i <= end; i++) {\n        this.selectedRows.push(i);\n      }\n    } else {\n      this.selectedRows = [rowIndex];\n    }\n    this.lastSelectedRowIndex = rowIndex;\n    this.selectedRows = orderBy([...this.selectedRows], null, \"desc\"); // order in descending for update delete operations\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  addAllocationArea() {\n    this.project.projectAreaQuality.push(new ProjectAreaQuality());\n    this.areaShapes.push({\n      areaIndex: this.project.projectAreaQuality.length - 1,\n      shapes: [],\n    });\n    this.allocationAreaSegment = this.project.projectAreaQuality.length - 1;\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  selectApplicationUnit(ev) {\n    this.project.applicationId = ev.detail.value;\n    this.updateUndoHistory();\n    this.validateProject();\n  }\n\n  allocationAreaSegmentChanged(ev) {\n    if (ev.detail.value !== \"add\") {\n      this.allocationAreaSegment = ev.detail.value;\n    }\n    this.lastSelectedRowIndex = null;\n    this.selectedRows = [];\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  async deleteAllocationArea(index) {\n    const alert = await alertController.create({\n      header: \"Delete Area\",\n      message: \"Are you sure you want to delete this area?\",\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n          role: \"cancel\",\n          handler: async () => {},\n        },\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n          handler: async () => {\n            //remove positions\n            for (\n              let posIndex = 0;\n              posIndex < this.project.projectAreaQuality[index].shapes.length;\n              posIndex++\n            ) {\n              this.deleteAllocationAreaPosition(index, posIndex);\n            }\n            //delete area\n            this.project.projectAreaQuality.splice(index, 1);\n            this.areaShapes.splice(index, 1);\n            this.allocationAreaSegment =\n              this.project.projectAreaQuality.length > 0 ? 0 : \"add\";\n            this.updateUndoHistory();\n          },\n        },\n      ],\n    });\n    alert.present();\n  }\n\n  async addAllocationAreaPosition(index) {\n    const areaShape = new ProjectAreaQualityShape();\n    areaShape.position = this.lastPosition;\n    this.project.projectAreaQuality[index].shapes.push(areaShape);\n    const shape = new Shape();\n    this.areaShapes[index].shapes.push(shape);\n    this.resetPositions();\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  deleteAllocationAreaPosition(index, positionIndex) {\n    //const areaShape =\n    //this.project.projectAreaQuality[index].shapes[positionIndex];\n    //this.removePosition(areaShape.position);\n    this.project.projectAreaQuality[index].shapes.splice(positionIndex, 1);\n    this.resetPositions();\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  selectAllocationArea(index, ev) {\n    this.project.projectAreaQuality[index].bricksAllocationAreaId =\n      ev.detail.value;\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  handleAllocationAreaChange(index, ev) {\n    this.project.projectAreaQuality[index][ev.detail.name] = ev.detail.value;\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  handleSpecialShapeVolume(index, positionIndex, ev) {\n    const value = toNumber(ev.detail.value);\n    this.project.projectAreaQuality[index].shapes[\n      positionIndex\n    ].specialShapeVolume = value;\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  async handleAllocationAreaPositionChange(index, positionIndex, ev) {\n    const value = toNumber(ev.detail.value);\n    const oldShapeValue =\n      this.project.projectAreaQuality[index].shapes[positionIndex];\n    const apply = await this.checkPosition(index, positionIndex, value);\n    switch (apply) {\n      case \"same\":\n        //do nothing\n        break;\n      case \"keep\":\n        this.project.projectAreaQuality[index].shapes[positionIndex] =\n          oldShapeValue;\n        //reset value of app-form-item\n        ev.target[\"forceResetValue\"](oldShapeValue.position);\n        break;\n      case \"new\":\n        //add new\n        this.project.projectAreaQuality[index].shapes[positionIndex].position =\n          value;\n        break;\n      case \"replace\":\n        //replace with position with the same shape\n        this.project.projectAreaQuality[index].shapes[positionIndex].position =\n          value;\n        this.replaceShape(null, index, positionIndex);\n        break;\n      default:\n        //replace with new shape\n        this.project.projectAreaQuality[index].shapes[positionIndex].position =\n          value;\n        this.replaceShape(apply.shapeId, index, positionIndex);\n        break;\n    }\n    this.updateUndoHistory();\n    this.resetPositions();\n    this.updateSlider();\n  }\n\n  //check position\n  checkPosition(areaIndex, positionIndex, newPos): Promise<any> {\n    return new Promise(async (resolve) => {\n      //find shape with same position\n      if (\n        this.project.projectAreaQuality[areaIndex].shapes[positionIndex]\n          .position != newPos\n      ) {\n        //check all positions\n        let otherShape: Shape;\n        for (\n          let areaIndex = 0;\n          areaIndex < this.project.projectAreaQuality.length;\n          areaIndex++\n        ) {\n          const area = this.project.projectAreaQuality[areaIndex];\n          const sameShapeIndex = area.shapes.findIndex(\n            (x) => x.position == newPos\n          );\n          if (sameShapeIndex != -1) {\n            otherShape = this.areaShapes[areaIndex].shapes[sameShapeIndex];\n            break;\n          }\n        }\n        //check if shape is the same\n        let sameShape = false;\n        if (\n          otherShape &&\n          otherShape[\"shapeId\"] ==\n            this.areaShapes[areaIndex].shapes[positionIndex][\"shapeId\"]\n        ) {\n          sameShape = true;\n        }\n        if (sameShape) {\n          //existing position other shape\n          const alert = await alertController.create({\n            header: \"Existing position\",\n            message:\n              \"This position is already present with the same shape.\\n Do you want to replace the position?\",\n            buttons: [\n              {\n                text: TranslationService.getTransl(\"ok\", \"OK\"),\n                handler: async () => {\n                  resolve(\"replace\");\n                },\n              },\n              {\n                text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n                handler: async () => {\n                  resolve(\"keep\");\n                },\n              },\n            ],\n          });\n          alert.present();\n        } else if (otherShape) {\n          //existing position other shape\n          const alert = await alertController.create({\n            header: \"Existing position\",\n            message:\n              \"This position is already present with following shape: \" +\n              otherShape.shapeName +\n              \"\\n Do you want to use/replace with the same shape and recalculate all?\",\n            buttons: [\n              {\n                text: TranslationService.getTransl(\"ok\", \"OK\"),\n                handler: async () => {\n                  resolve(sameShape);\n                },\n              },\n              {\n                text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n                handler: async () => {\n                  resolve(\"keep\");\n                },\n              },\n            ],\n          });\n          alert.present();\n        } else {\n          resolve(\"new\");\n        }\n      } else {\n        resolve(\"same\");\n      }\n    });\n  }\n\n  resetPositions() {\n    this.positions = [];\n    this.project.projectAreaQuality.forEach((area) => {\n      area.shapes.forEach((position) => {\n        const pos = position.position;\n        if (!this.positions.includes(pos)) {\n          this.positions.push(pos);\n        }\n      });\n    });\n    this.project.projectMass.forEach((mass) => {\n      const pos = mass.position;\n      if (!this.positions.includes(pos)) {\n        this.positions.push(pos);\n      }\n    });\n    // Sort the array\n    this.positions = orderBy(this.positions, null, \"asc\");\n    //update last Position\n\n    // Initialize variables to track the empty positions and maximum number\n    let firstEmptyPosition = null;\n    // Iterate through the sorted array to find gaps\n    for (let i = 1; i < this.positions.length; i++) {\n      const current = this.positions[i];\n      const previous = this.positions[i - 1];\n      // Check if there's a gap between previous and current\n      if (current - previous > 1) {\n        const gapStart = previous + 1;\n        // Set the first empty position if not already set\n        if (firstEmptyPosition === null) {\n          firstEmptyPosition = gapStart;\n          break;\n        }\n      }\n    }\n    this.lastPosition = firstEmptyPosition\n      ? firstEmptyPosition\n      : max(this.positions) + 1;\n  }\n\n  addAreaCourses(areaIndex) {\n    const course = new ProjectCourse();\n    course.courseNumber = this.getNextCourseNumber(areaIndex);\n    const lastCourse =\n      this.project.projectAreaQuality[areaIndex].courses[\n        this.project.projectAreaQuality[areaIndex].courses.length - 1\n      ];\n    if (lastCourse) course.innerRadius = lastCourse.innerRadius;\n    this.project.projectAreaQuality[areaIndex].courses.push(course);\n    //recalculate new added course\n    ProjectsService.recalculateExistingCourses(\n      this.project,\n      this.areaShapes,\n      areaIndex,\n      this.project.projectAreaQuality[areaIndex].courses.length - 1\n    );\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  getNextCourseNumber(index) {\n    const max = maxBy(\n      this.project.projectAreaQuality[index].courses,\n      \"courseNumber\"\n    );\n    return max ? max.courseNumber + 1 : 1;\n  }\n\n  async autoFillCourses(index) {\n    const popover = await popoverController.create({\n      component: \"popover-project-autofill\",\n      componentProps: {\n        autoFillCourses: this.project.projectAreaQuality[index].autoFillCourses\n          ? this.project.projectAreaQuality[index].autoFillCourses\n          : new AutoFillCourses(),\n        shapes: this.project.projectAreaQuality[index].shapes,\n        bottom:\n          this.project.projectAreaQuality[index].bricksAllocationAreaId ===\n          \"bottom\",\n      },\n      event: null,\n      translucent: true,\n    });\n    popover.onDidDismiss().then(async (ev) => {\n      if (ev && ev.data) {\n        if (this.project.projectAreaQuality[index].courses.length > 0) {\n          this.checkAutofill(index, ev.data);\n        } else {\n          ProjectsService.calculateAutofill(\n            this.project,\n            this.areaShapes,\n            index,\n            ev.data\n          );\n          this.updateUndoHistory();\n          this.updateSlider();\n        }\n      }\n    });\n    popover.present();\n  }\n\n  async checkAutofill(index, data) {\n    const alert = await alertController.create({\n      header: \"Auto Fill\",\n      message: TranslationService.getTransl(\n        \"auto-fill-message\",\n        \"This will remove all exisiting courses. Are you sure?\"\n      ),\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n          handler: async () => {},\n        },\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n          handler: async () => {\n            ProjectsService.calculateAutofill(\n              this.project,\n              this.areaShapes,\n              index,\n              data\n            );\n            this.updateSlider();\n          },\n        },\n      ],\n    });\n    alert.present();\n  }\n\n  disableAddPositionButton(index) {\n    const shapes = this.areaShapes[index].shapes;\n    let disable = false;\n    shapes.forEach((shape) => {\n      if (!shape.shapeName || shape.shapeTypeId == \"su-brick\") disable = true;\n    });\n    return disable;\n  }\n\n  disableAddCourses(area: ProjectAreaQuality) {\n    let disable = false;\n    if (area.shapes.length == 0) {\n      disable = true;\n    } else {\n      area.shapes.forEach((shape) => {\n        disable = disable || shape.shapeId == null;\n      });\n    }\n    return disable;\n  }\n\n  preventShiftSelect() {\n    // Aggiungi un listener per l'evento 'mousedown' sul documento\n    document.addEventListener(\"mousedown\", function (e) {\n      // Controlla se il tasto Shift è premuto durante il click\n      if (e.shiftKey) {\n        // Previene l'azione predefinita del browser, che potrebbe includere la selezione del testo\n        e.preventDefault();\n      }\n    });\n  }\n\n  duplicateAreaCourse(index, courseIndex) {\n    if (!this.selectedRows || this.selectedRows.length == 0) {\n      this.selectedRows = [courseIndex];\n    }\n    const positions = [];\n    this.selectedRows.forEach((courseIndex) => {\n      const item = cloneDeep(\n        this.project.projectAreaQuality[index].courses[courseIndex]\n      );\n      positions.push(item.courseNumber);\n      item.courseNumber = this.getNextCourseNumber(index);\n      this.project.projectAreaQuality[index].courses.push(item);\n    });\n\n    let indexes = \"\";\n    orderBy(positions, null, \"asc\").forEach((x) => {\n      if (x >= 0) indexes = indexes + x + \", \";\n    });\n    indexes = indexes.slice(0, -2);\n    SystemService.presentAlert(\n      \"Duplicate Course(s)\",\n      \"Positions(s) #\" + indexes + \" duplicated\"\n    );\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  deleteAreaCourse(index, courseIndex) {\n    if (!this.selectedRows || this.selectedRows.length == 0) {\n      this.selectedRows = [courseIndex];\n    }\n    const positions = [];\n    this.selectedRows.forEach((courseIndex) => {\n      //delete course\n      positions.push(\n        this.project.projectAreaQuality[index].courses[courseIndex].courseNumber\n      );\n      this.project.projectAreaQuality[index].courses.splice(courseIndex, 1);\n    });\n    let indexes = \"\";\n    orderBy(positions, null, \"asc\").forEach((x) => {\n      if (x >= 0) indexes = indexes + x + \", \";\n    });\n    indexes = indexes.slice(0, -2);\n    SystemService.presentAlert(\n      \"Delete Course(s)\",\n      \"Positions(s) #\" + indexes + \" deleted\"\n    );\n    this.selectedRows = [];\n    this.lastSelectedRowIndex = null;\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  reorderCourses(index) {\n    this.project.projectAreaQuality[index].courses = orderBy(\n      this.project.projectAreaQuality[index].courses,\n      \"courseNumber\",\n      \"asc\"\n    );\n    this.updateSlider();\n  }\n\n  async handleAreaCourse(\n    course: ProjectCourse,\n    ev,\n    areaIndex?: number,\n    courseIndex?: number\n  ) {\n    const n = ev.detail.name;\n    const v = ev.detail.value;\n    //calculate quantities\n    if (n == \"startAngle\" || n == \"endAngle\" || n == \"innerRadius\") {\n      course[n] = v;\n      ProjectsService.recalculateExistingCourses(\n        this.project,\n        this.areaShapes,\n        areaIndex,\n        courseIndex,\n        courseIndex\n      );\n    } else if (n == \"courseNumber\") {\n      //check duplicate\n      if (\n        some(this.project.projectAreaQuality[areaIndex].courses, [\n          \"courseNumber\",\n          v,\n        ])\n      ) {\n        const prev = course[n];\n        const alert = await alertController.create({\n          header: \"Existing course\",\n          message: \"This course is already exisiting!\",\n          buttons: [\n            {\n              text: TranslationService.getTransl(\"ok\", \"OK\"),\n              handler: async () => {\n                ev.target[\"forceResetValue\"](prev);\n              },\n            },\n          ],\n        });\n        alert.present();\n      } else {\n        course[n] = v;\n      }\n    } else {\n      course[n] = v;\n    }\n    this.updateUndoHistory();\n    this.updateView = !this.updateView;\n  }\n\n  handleAreaCourseQuantity(course, shapeId, shapeIndex, ev) {\n    course.quantityShapes[shapeIndex] = {\n      shapeId: shapeId,\n      quantity: ev.detail.value,\n    };\n    this.updateUndoHistory();\n    this.updateView = !this.updateView;\n  }\n\n  updateUndoHistory() {\n    this.undoHistory.push(cloneDeep(this.project));\n    this.currentUndoStep = this.undoHistory.length - 1;\n  }\n\n  undo() {\n    //first undo is the original project\n    if (this.currentUndoStep > 0) {\n      this.undoHistory = this.undoHistory.slice(0, this.currentUndoStep);\n      this.currentUndoStep -= 1;\n    }\n    this.project = this.undoHistory[this.currentUndoStep];\n    this.updateSlider();\n  }\n\n  /* \n  *\n  PROJECT MASSES \n  *\n  */\n\n  async addProjectMasses() {\n    const mass = new ProjectMass();\n    mass.position = this.lastPosition; //await this.updatePostion();\n    this.project.projectMass.push(mass);\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  async handleMassPositionBlur(index, ev) {\n    //remove previous position\n    //this.removePosition(this.project.projectMass[index].position);\n    //let v = await this.updatePostion(ev.detail.value);\n    this.project.projectMass[index].position = toNumber(ev.detail.value);\n    this.resetPositions();\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  handleMassChange(index, ev) {\n    this.project.projectMass[index][ev.detail.name] = ev.detail.value;\n    if (ev.detail.name == \"quantity\") {\n      if (this.project.projectMass[index].quantity > 0) {\n        if (this.project.projectMass[index].weightPerUnitKg > 0) {\n          this.project.projectMass[index].totalWeightMT = roundDecimals(\n            (this.project.projectMass[index].quantity *\n              this.project.projectMass[index].weightPerUnitKg) /\n              1000,\n            1\n          );\n        }\n      } else {\n        this.project.projectMass[index].totalWeightMT = 0;\n        this.project.projectMass[index].quantity = 0;\n      }\n    } else if (ev.detail.name == \"weightPerUnitKg\") {\n      if (this.project.projectMass[index].weightPerUnitKg > 0) {\n        if (this.project.projectMass[index].totalWeightMT > 0) {\n          this.project.projectMass[index].quantity = roundDecimals(\n            (this.project.projectMass[index].totalWeightMT /\n              this.project.projectMass[index].weightPerUnitKg) *\n              1000,\n            1\n          );\n        }\n      } else {\n        this.project.projectMass[index].totalWeightMT = 0;\n        this.project.projectMass[index].quantity = 0;\n      }\n    } else if (ev.detail.name == \"totalWeightMT\") {\n      if (this.project.projectMass[index].totalWeightMT > 0) {\n        if (this.project.projectMass[index].weightPerUnitKg > 0) {\n          this.project.projectMass[index].quantity = roundDecimals(\n            (this.project.projectMass[index].totalWeightMT /\n              this.project.projectMass[index].weightPerUnitKg) *\n              1000,\n            1\n          );\n        }\n      } else {\n        this.project.projectMass[index].quantity = 0;\n        this.project.projectMass[index].weightPerUnitKg = 0;\n      }\n    }\n    this.previousMassItems = ev.detail.name;\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  selectMassApplicationArea(index, ev) {\n    this.project.projectMass[index].bricksAllocationAreaId = ev.detail.value;\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  selectMassQtyUnit(index, ev) {\n    this.project.projectMass[index].quantityUnit = ev.detail.value;\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  deleteProjectMass(index) {\n    //this.removePosition(this.project.projectMass[index].position);\n    this.project.projectMass.splice(index, 1);\n    this.resetPositions();\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  /* \n  *\n  COMMON \n  *\n  */\n\n  updateSlider() {\n    this.updateView = !this.updateView;\n    //wait for view to update and then reset slider height\n    setTimeout(() => {\n      this.slider ? this.slider.update() : undefined;\n    }, 100);\n  }\n\n  async deleteProject() {\n    try {\n      await ProjectsService.deleteProject(this.projectId);\n      modalController.dismiss();\n    } catch (error) {\n      if (error) SystemService.presentAlertError(error);\n    }\n  }\n\n  async save(dismiss = true) {\n    const doc = await ProjectsService.updateProject(\n      this.projectId,\n      this.project,\n      this.userProfile.uid\n    );\n    if (this.projectId) {\n      return dismiss ? modalController.dismiss(this.project) : true;\n    } else {\n      this.projectId = doc.id;\n      return true;\n    }\n  }\n\n  async cancel() {\n    return modalController.dismiss();\n  }\n\n  render() {\n    return (\n      <Host>\n        <app-header-segment-toolbar\n          color={Environment.getAppColor()}\n          swiper={this.slider}\n          titles={this.titles}\n          segment={1}\n        ></app-header-segment-toolbar>\n        <ion-content\n          class=\"slides\"\n          onIonScroll={(ev) => (this.scrollTop = ev.detail.scrollTop)}\n        >\n          <swiper-container class=\"slider-edit-project swiper\">\n            <swiper-wrapper class=\"swiper-wrapper\">\n              {/** SUMMARY */}\n              <swiper-slide class=\"swiper-slide\">\n                <app-page-project-summary\n                  project={this.project}\n                  areaShapes={this.areaShapes}\n                  updateSummary={this.updateView}\n                ></app-page-project-summary>\n              </swiper-slide>\n              {/** INFORMATION */}\n              <swiper-slide class=\"swiper-slide\">\n                <ion-list class=\"ion-no-padding project-grid\">\n                  <ion-item\n                    button\n                    lines=\"inset\"\n                    onClick={() => this.openSelectCustomer()}\n                  >\n                    <ion-label>\n                      <p class=\"small\">\n                        <my-transl tag=\"customer\" text=\"Customer\"></my-transl>*\n                      </p>\n                      <h2>\n                        {this.selectedCustomer\n                          ? this.selectedCustomer.fullName\n                          : null}\n                      </h2>\n                    </ion-label>\n                  </ion-item>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"project-name\"\n                    label-text=\"Project Name\"\n                    value={this.project.projectLocalId}\n                    name=\"projectLocalId\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"technical-docs-caption\"\n                    label-text=\"Technical Docs Caption\"\n                    value={this.project.docsCaption}\n                    name=\"docsCaption\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"project-description\"\n                    label-text=\"Project Description\"\n                    value={this.project.projectDescription}\n                    name=\"projectDescription\"\n                    input-type=\"text\"\n                    textRows={2}\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"drawing-no\"\n                    label-text=\"Drawing No.\"\n                    value={this.project.drawing}\n                    name=\"drawing\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                  ></app-form-item>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"sets-no\"\n                    label-text=\"No. of sets\"\n                    value={this.project.setsAmount}\n                    name=\"setsAmount\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                  ></app-form-item>\n                  <ion-item-divider>\n                    <my-transl\n                      tag=\"project-dates\"\n                      text=\"Project Dates\"\n                    ></my-transl>\n                  </ion-item-divider>\n                  <ion-grid>\n                    <ion-row>\n                      <ion-col>\n                        <app-form-item\n                          lines=\"inset\"\n                          label-tag=\"drawing-date\"\n                          label-text=\"Drawing Date\"\n                          value={this.project.drawingDate}\n                          name=\"drawingDate\"\n                          input-type=\"date\"\n                          date-presentation=\"date\"\n                          prefer-wheel={false}\n                          onFormItemChanged={(ev) => this.handleChange(ev)}\n                        ></app-form-item>\n                      </ion-col>\n                      <ion-col>\n                        <app-form-item\n                          lines=\"inset\"\n                          label-tag=\"project-finished-date\"\n                          label-text=\"Project Finished Date\"\n                          value={this.project.finishedDate}\n                          name=\"finishedDate\"\n                          input-type=\"date\"\n                          date-presentation=\"date\"\n                          prefer-wheel={false}\n                          onFormItemChanged={(ev) => this.handleChange(ev)}\n                        ></app-form-item>\n                      </ion-col>\n                    </ion-row>\n                  </ion-grid>\n                  <ion-item-divider>\n                    <my-transl tag=\"other-data\" text=\"Other Data\"></my-transl>\n                  </ion-item-divider>\n                  <ion-grid>\n                    <ion-row>\n                      <ion-col>\n                        <app-form-item\n                          label-tag=\"capacity\"\n                          label-text=\"Capacity\"\n                          appendText=\" (MT)\"\n                          value={this.project.steelAmount}\n                          name=\"steelAmount\"\n                          input-type=\"number\"\n                          onFormItemChanged={(ev) => this.handleChange(ev)}\n                        ></app-form-item>\n                      </ion-col>\n                      <ion-col>\n                        <app-select-search\n                          label={{\n                            tag: \"application-unit\",\n                            text: \"Application Unit\",\n                          }}\n                          value={\n                            this.project && this.project.applicationId\n                              ? this.project.applicationId\n                              : null\n                          }\n                          lines=\"inset\"\n                          selectFn={(ev) => this.selectApplicationUnit(ev)}\n                          selectOptions={ProjectsService.getApplicationUnits()}\n                          selectValueId=\"applicationId\"\n                          selectValueText={[\"applicationName\", \"en\"]}\n                        ></app-select-search>\n                      </ion-col>\n                    </ion-row>\n                  </ion-grid>\n                  <app-form-item\n                    label-tag=\"steel-amount\"\n                    label-text=\"Steel Amount\"\n                    appendText=\" (MT)\"\n                    value={this.project.steelAmount}\n                    name=\"steelAmount\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                  ></app-form-item>\n                  <app-form-item\n                    label-tag=\"steel-density\"\n                    label-text=\"Steel Density\"\n                    appendText=\" (g/cm3)\"\n                    value={this.project.liquidMetalDensity}\n                    name=\"liquidMetalDensity\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                  ></app-form-item>\n                  <app-form-item\n                    label-tag=\"guaranteed-lifetime\"\n                    label-text=\"Guaranteed Lifetime\"\n                    appendText=\" (heats)\"\n                    value={this.project.guaranteedLife}\n                    name=\"guaranteedLife\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                  ></app-form-item>\n                </ion-list>\n                {this.projectId ? (\n                  <ion-footer class=\"ion-no-border\">\n                    <ion-toolbar>\n                      <ion-button\n                        expand=\"block\"\n                        fill=\"outline\"\n                        color=\"danger\"\n                        onClick={() => this.deleteProject()}\n                      >\n                        <ion-icon slot=\"start\" name=\"trash\"></ion-icon>\n                        <my-transl\n                          tag=\"delete\"\n                          text=\"Delete\"\n                          isLabel\n                        ></my-transl>\n                      </ion-button>\n                    </ion-toolbar>\n                  </ion-footer>\n                ) : undefined}\n              </swiper-slide>\n              {/** SHAPED */}\n              <swiper-slide class=\"swiper-slide\">\n                <div>\n                  <ion-toolbar>\n                    <ion-grid class=\"ion-no-padding\">\n                      <ion-row>\n                        <ion-col size=\"1\">\n                          <ion-button\n                            id=\"click-trigger\"\n                            icon-only\n                            fill=\"clear\"\n                            size=\"small\"\n                          >\n                            <ion-icon\n                              name=\"reorder-four\"\n                              color=\"trasteel\"\n                            ></ion-icon>\n                          </ion-button>\n                          <ion-popover\n                            trigger=\"click-trigger\"\n                            trigger-action=\"click\"\n                          >\n                            <ion-content class=\"ion-padding\">\n                              <ion-list>\n                                <ion-reorder-group\n                                  disabled={false}\n                                ></ion-reorder-group>\n                              </ion-list>\n                            </ion-content>\n                          </ion-popover>\n                        </ion-col>\n                        <ion-col>\n                          <ion-segment\n                            mode=\"ios\"\n                            scrollable\n                            onIonChange={(ev) =>\n                              this.allocationAreaSegmentChanged(ev)\n                            }\n                            value={this.allocationAreaSegment}\n                          >\n                            {this.project.projectAreaQuality.map(\n                              (area, index) => (\n                                <ion-segment-button\n                                  value={index}\n                                  layout=\"icon-start\"\n                                >\n                                  <ion-label>\n                                    {area.bricksAllocationAreaId\n                                      ? ProjectsService.getBricksAllocationAreas(\n                                          area.bricksAllocationAreaId\n                                        )[0].bricksAllocationAreaName.en\n                                      : null}\n                                  </ion-label>\n                                </ion-segment-button>\n                              )\n                            )}\n                            <ion-segment-button\n                              value=\"add\"\n                              onClick={() => this.addAllocationArea()}\n                              layout=\"icon-start\"\n                            >\n                              <ion-label>\n                                {\"+ \" +\n                                  TranslationService.getTransl(\n                                    \"add-area\",\n                                    \"Add Area\"\n                                  )}\n                              </ion-label>\n                            </ion-segment-button>\n                          </ion-segment>\n                        </ion-col>\n                      </ion-row>\n                    </ion-grid>\n                  </ion-toolbar>\n                  {this.project.projectAreaQuality.map((area, index) => (\n                    <div>\n                      {this.allocationAreaSegment == index ? (\n                        <div>\n                          <ion-grid>\n                            <ion-row>\n                              <ion-col>\n                                <app-select-search\n                                  class=\"reduce-padding\"\n                                  label={{\n                                    tag: \"bricks-allocation-area\",\n                                    text: \"Bricks Allocation Area\",\n                                  }}\n                                  labelAddText=\"*\"\n                                  value={area.bricksAllocationAreaId}\n                                  lines=\"inset\"\n                                  selectFn={(ev) =>\n                                    this.selectAllocationArea(index, ev)\n                                  }\n                                  selectOptions={ProjectsService.getBricksAllocationAreas()}\n                                  selectValueId=\"bricksAllocationAreaId\"\n                                  selectValueText={[\n                                    \"bricksAllocationAreaName\",\n                                    \"en\",\n                                  ]}\n                                ></app-select-search>\n                              </ion-col>\n                              <ion-col size=\"1\">\n                                <ion-button\n                                  fill=\"clear\"\n                                  color=\"danger\"\n                                  icon-only\n                                  onClick={() =>\n                                    this.deleteAllocationArea(index)\n                                  }\n                                >\n                                  <ion-icon name=\"trash\"></ion-icon>\n                                </ion-button>\n                              </ion-col>\n                            </ion-row>\n                            <ion-row>\n                              <ion-col>\n                                <ion-item\n                                  button\n                                  lines=\"inset\"\n                                  onClick={() =>\n                                    this.openSelectDataSheet(area, index)\n                                  }\n                                  class=\"reduce-padding\"\n                                >\n                                  <ion-label>\n                                    <p class=\"small\">\n                                      <my-transl\n                                        tag=\"datasheet\"\n                                        text=\"Datasheet\"\n                                      ></my-transl>\n                                    </p>\n                                    <h2>\n                                      {area.datasheetId\n                                        ? DatasheetsService.getDatasheetsById(\n                                            area.datasheetId\n                                          ).productName\n                                        : \"\"}\n                                    </h2>\n                                  </ion-label>\n                                </ion-item>\n                              </ion-col>\n                              <ion-col size=\"4\">\n                                <app-form-item\n                                  lines=\"inset\"\n                                  label-tag=\"density\"\n                                  label-text=\"Density\"\n                                  appendText=\" (g/cm3)\"\n                                  value={area.density}\n                                  name=\"density\"\n                                  input-type=\"number\"\n                                  onFormItemChanged={(ev) =>\n                                    this.handleAllocationAreaChange(index, ev)\n                                  }\n                                ></app-form-item>\n                              </ion-col>\n                            </ion-row>\n                            <ion-row>\n                              <ion-col>\n                                <app-form-item\n                                  lines=\"inset\"\n                                  class=\"reduce-padding\"\n                                  label-tag=\"include-safety\"\n                                  label-text=\"Include Safety\"\n                                  appendText={\" %\"}\n                                  value={area.includeSafety}\n                                  name=\"includeSafety\"\n                                  input-type=\"number\"\n                                  inputStep=\"1\"\n                                  onFormItemChanged={(ev) =>\n                                    this.handleAllocationAreaChange(index, ev)\n                                  }\n                                ></app-form-item>\n                              </ion-col>\n                              <ion-col size=\"4\">\n                                <app-form-item\n                                  lines=\"inset\"\n                                  label-tag=\"only-for-repair\"\n                                  label-text=\"Only for repair\"\n                                  value={area.onlyForRepair}\n                                  name=\"onlyForRepair\"\n                                  input-type=\"boolean\"\n                                  onFormItemChanged={(ev) =>\n                                    this.handleAllocationAreaChange(index, ev)\n                                  }\n                                ></app-form-item>\n                              </ion-col>\n                            </ion-row>\n                            <ion-row>\n                              <ion-col>\n                                <app-form-item\n                                  lines=\"inset\"\n                                  class=\"reduce-padding\"\n                                  label-tag=\"comments\"\n                                  label-text=\"Comments\"\n                                  value={area.comments}\n                                  name=\"comments\"\n                                  input-type=\"string\"\n                                  onFormItemChanged={(ev) =>\n                                    this.handleAllocationAreaChange(index, ev)\n                                  }\n                                ></app-form-item>\n                              </ion-col>\n                            </ion-row>\n                            <div class=\"positions-box ion-no-padding project-grid\">\n                              {area.shapes\n                                ? area.shapes.map((shape, positionIndex) => (\n                                    <ion-row>\n                                      <ion-col size=\"3\">\n                                        <app-form-item\n                                          showItem={false}\n                                          label-tag={\n                                            positionIndex == 0\n                                              ? \"position\"\n                                              : null\n                                          }\n                                          label-text={\n                                            positionIndex == 0\n                                              ? \"Position\"\n                                              : null\n                                          }\n                                          value={shape.position}\n                                          name=\"position\"\n                                          input-type=\"number\"\n                                          inputStep=\"1\"\n                                          debounce={300}\n                                          onFormItemChanged={(ev) =>\n                                            this.handleAllocationAreaPositionChange(\n                                              index,\n                                              positionIndex,\n                                              ev\n                                            )\n                                          }\n                                          class=\"reduce-padding-top\"\n                                        ></app-form-item>\n                                      </ion-col>\n                                      <ion-col>\n                                        <ion-item\n                                          button\n                                          lines=\"none\"\n                                          onClick={() =>\n                                            this.openSelectShape(\n                                              area.shapes[positionIndex]\n                                                .shapeId,\n                                              index,\n                                              positionIndex\n                                            )\n                                          }\n                                          class=\"reduce-padding-top\"\n                                        >\n                                          <ion-label>\n                                            {positionIndex == 0 ? (\n                                              <p\n                                                style={{\n                                                  color: \"black\",\n                                                  \"font-size\": \"0.75rem\",\n                                                }}\n                                              >\n                                                <my-transl\n                                                  tag=\"shape\"\n                                                  text=\"Shape\"\n                                                ></my-transl>\n                                              </p>\n                                            ) : null}\n\n                                            <h2>\n                                              {area.shapes[positionIndex]\n                                                .shapeId\n                                                ? ShapesService.getShapeById(\n                                                    area.shapes[positionIndex]\n                                                      .shapeId\n                                                  ).shapeName\n                                                : \"\"}\n                                            </h2>\n                                          </ion-label>\n                                        </ion-item>\n                                      </ion-col>\n                                      <ion-col size=\"2\">\n                                        <app-item-detail\n                                          showItem={false}\n                                          labelTag={\n                                            positionIndex == 0 ? \"radius\" : null\n                                          }\n                                          labelText={\n                                            positionIndex == 0 ? \"Radius\" : null\n                                          }\n                                          appendText={\n                                            positionIndex == 0 ? \" (mm)\" : null\n                                          }\n                                          detailText={\n                                            this.areaShapes &&\n                                            this.areaShapes[index] &&\n                                            this.areaShapes[index].shapes[\n                                              positionIndex\n                                            ].radius > 0\n                                              ? this.areaShapes[index].shapes[\n                                                  positionIndex\n                                                ].radius +\n                                                (this.areaShapes[index].shapes[\n                                                  positionIndex\n                                                ].radius_max > 0\n                                                  ? \"-\" +\n                                                    this.areaShapes[index]\n                                                      .shapes[positionIndex]\n                                                      .radius_max\n                                                  : \"\")\n                                              : \"-\"\n                                          }\n                                        ></app-item-detail>\n                                      </ion-col>\n                                      <ion-col size=\"2\">\n                                        {\n                                          //check if special shape - add possibility to change the value\n                                          this.areaShapes &&\n                                          this.areaShapes[index] &&\n                                          this.areaShapes[index].shapes[\n                                            positionIndex\n                                          ] &&\n                                          this.areaShapes[index].shapes[\n                                            positionIndex\n                                          ][\"shapeId\"] &&\n                                          some(\n                                            this.listOfSpecialShapes,\n                                            (substring) =>\n                                              this.areaShapes[index].shapes[\n                                                positionIndex\n                                              ][\"shapeId\"].includes(substring)\n                                          ) ? (\n                                            <app-form-item\n                                              showItem={false}\n                                              labelTag={\n                                                positionIndex == 0\n                                                  ? \"volume\"\n                                                  : null\n                                              }\n                                              labelText={\n                                                positionIndex == 0\n                                                  ? \"Volume\"\n                                                  : null\n                                              }\n                                              appendText={\n                                                positionIndex == 0\n                                                  ? \" (dm3)\"\n                                                  : null\n                                              }\n                                              value={\n                                                this.project.projectAreaQuality[\n                                                  index\n                                                ].shapes[positionIndex]\n                                                  .specialShapeVolume > 0\n                                                  ? this.project\n                                                      .projectAreaQuality[index]\n                                                      .shapes[positionIndex]\n                                                      .specialShapeVolume\n                                                  : this.areaShapes[index]\n                                                      .shapes[positionIndex]\n                                                      .volume\n                                              }\n                                              input-type=\"number\"\n                                              inputStep=\"1\"\n                                              debounce={300}\n                                              onFormItemChanged={(ev) =>\n                                                this.handleSpecialShapeVolume(\n                                                  index,\n                                                  positionIndex,\n                                                  ev\n                                                )\n                                              }\n                                              class=\"reduce-padding-top\"\n                                            ></app-form-item>\n                                          ) : (\n                                            <app-item-detail\n                                              showItem={false}\n                                              labelTag={\n                                                positionIndex == 0\n                                                  ? \"weight\"\n                                                  : null\n                                              }\n                                              labelText={\n                                                positionIndex == 0\n                                                  ? \"Weight\"\n                                                  : null\n                                              }\n                                              appendText={\n                                                positionIndex == 0\n                                                  ? \" (Kg)\"\n                                                  : null\n                                              }\n                                              detailText={\n                                                this.areaShapes &&\n                                                this.areaShapes[index] &&\n                                                this.areaShapes[index].shapes[\n                                                  positionIndex\n                                                ].getWeight(area.density) > 0\n                                                  ? this.areaShapes[\n                                                      index\n                                                    ].shapes[\n                                                      positionIndex\n                                                    ].getWeight(area.density)\n                                                  : \"-\"\n                                              }\n                                            ></app-item-detail>\n                                          )\n                                        }\n                                      </ion-col>\n                                      {area.courses.length == 0 ? (\n                                        <ion-col size=\"1\">\n                                          <ion-button\n                                            fill=\"clear\"\n                                            color=\"danger\"\n                                            icon-only\n                                            onClick={() =>\n                                              this.deleteAllocationAreaPosition(\n                                                index,\n                                                positionIndex\n                                              )\n                                            }\n                                          >\n                                            <ion-icon name=\"trash\"></ion-icon>\n                                          </ion-button>\n                                        </ion-col>\n                                      ) : undefined}\n                                    </ion-row>\n                                  ))\n                                : undefined}\n                              {area.courses.length == 0 ? (\n                                <ion-row>\n                                  <ion-col>\n                                    <ion-button\n                                      expand=\"block\"\n                                      fill=\"outline\"\n                                      size=\"small\"\n                                      color=\"trasteel\"\n                                      disabled={this.disableAddPositionButton(\n                                        index\n                                      )}\n                                      onClick={() =>\n                                        this.addAllocationAreaPosition(index)\n                                      }\n                                    >\n                                      {\"+ \" +\n                                        TranslationService.getTransl(\n                                          \"add-position\",\n                                          \"Add position\"\n                                        )}\n                                    </ion-button>\n                                  </ion-col>\n                                </ion-row>\n                              ) : undefined}\n                            </div>\n                            <ion-row>\n                              <ion-col>\n                                <ion-button\n                                  expand=\"block\"\n                                  fill=\"outline\"\n                                  size=\"small\"\n                                  color=\"trasteel\"\n                                  disabled={this.disableAddCourses(area)}\n                                  onClick={() => this.autoFillCourses(index)}\n                                >\n                                  {TranslationService.getTransl(\n                                    \"auto-fill\",\n                                    \"Auto Fill\"\n                                  )}\n                                </ion-button>\n                              </ion-col>\n                              <ion-col>\n                                <ion-button\n                                  expand=\"block\"\n                                  fill=\"outline\"\n                                  size=\"small\"\n                                  color=\"trasteel\"\n                                  disabled={this.disableAddCourses(area)}\n                                  onClick={() => {\n                                    ProjectsService.recalculateExistingCourses(\n                                      this.project,\n                                      this.areaShapes,\n                                      index\n                                    );\n                                    this.updateSlider();\n                                  }}\n                                >\n                                  {TranslationService.getTransl(\n                                    \"recalculate\",\n                                    \"Re-Calculate\"\n                                  )}\n                                </ion-button>\n                              </ion-col>\n                            </ion-row>\n                          </ion-grid>\n                          <div id=\"responsive-grid\">\n                            <ion-grid>\n                              <ion-row class=\"header ion-align-items-center ion-justify-content-center ext-row\">\n                                <ion-col size=\"11\" size-lg=\"11\">\n                                  <ion-row>\n                                    <ion-col\n                                      size=\"12\"\n                                      size-lg=\"4\"\n                                      class=\"ext-col\"\n                                    >\n                                      <ion-row class=\"inner-row1\">\n                                        <ion-col\n                                          size=\"3\"\n                                          size-lg=\"3\"\n                                          class=\"inner-col\"\n                                        >\n                                          <ion-button\n                                            expand=\"full\"\n                                            fill=\"clear\"\n                                            size=\"small\"\n                                            color=\"light\"\n                                            class=\"ion-no-padding\"\n                                            onClick={() =>\n                                              this.reorderCourses(index)\n                                            }\n                                          >\n                                            <ion-label color=\"light\">\n                                              {TranslationService.getTransl(\n                                                \"course\",\n                                                \"Course\"\n                                              )}\n                                            </ion-label>\n                                            <ion-icon\n                                              color=\"light\"\n                                              slot=\"end\"\n                                              name=\"swap-vertical-outline\"\n                                            ></ion-icon>\n                                          </ion-button>\n                                        </ion-col>\n                                        <ion-col\n                                          size=\"3\"\n                                          size-lg=\"3\"\n                                          class=\"inner-col\"\n                                        >\n                                          <ion-button\n                                            expand=\"full\"\n                                            fill=\"clear\"\n                                            color=\"light\"\n                                            size=\"small\"\n                                            class=\"ion-no-padding\"\n                                          >\n                                            <ion-label color=\"light\">\n                                              {TranslationService.getTransl(\n                                                \"start\",\n                                                \"Start\"\n                                              ) + \" °\"}\n                                            </ion-label>\n                                          </ion-button>\n                                        </ion-col>\n                                        <ion-col\n                                          size=\"3\"\n                                          size-lg=\"3\"\n                                          class=\"inner-col\"\n                                        >\n                                          <ion-button\n                                            expand=\"full\"\n                                            fill=\"clear\"\n                                            color=\"light\"\n                                            size=\"small\"\n                                            class=\"ion-no-padding\"\n                                          >\n                                            <ion-label color=\"light\">\n                                              {TranslationService.getTransl(\n                                                \"end\",\n                                                \"End\"\n                                              ) + \" °\"}\n                                            </ion-label>\n                                          </ion-button>\n                                        </ion-col>\n                                        <ion-col\n                                          size=\"3\"\n                                          size-lg=\"3\"\n                                          class=\"inner-col\"\n                                        >\n                                          <ion-button\n                                            expand=\"full\"\n                                            fill=\"clear\"\n                                            size=\"small\"\n                                            class=\"ion-no-padding\"\n                                          >\n                                            <ion-label color=\"light\">\n                                              {TranslationService.getTransl(\n                                                \"radius\",\n                                                \"Radius\"\n                                              ) + \" (mm)\"}\n                                            </ion-label>\n                                          </ion-button>\n                                        </ion-col>\n                                      </ion-row>\n                                    </ion-col>\n                                    <ion-col\n                                      size=\"12\"\n                                      size-lg=\"8\"\n                                      class=\"ext-col\"\n                                    >\n                                      <ion-row class=\"inner-row2\">\n                                        <ion-col size=\"2\" class=\"inner-col\">\n                                          {\"Pos. \" +\n                                            area.shapes.map(\n                                              (shape) => shape.position\n                                            )}\n                                        </ion-col>\n                                        <ion-col size=\"2\" class=\"inner-col\">\n                                          {TranslationService.getTransl(\n                                            \"quantity\",\n                                            \"Quantity\"\n                                          )}\n                                        </ion-col>\n                                        <ion-col size=\"2\" class=\"inner-col\">\n                                          {TranslationService.getTransl(\n                                            \"sum\",\n                                            \"Sum\"\n                                          )}\n                                        </ion-col>\n                                        <ion-col size=\"2\" class=\"inner-col\">\n                                          {TranslationService.getTransl(\n                                            \"repair-sets\",\n                                            \"Repair Sets\"\n                                          )}\n                                        </ion-col>\n                                        <ion-col size=\"2\" class=\"inner-col\">\n                                          {TranslationService.getTransl(\n                                            \"weight\",\n                                            \"Weight\"\n                                          ) + \" (Kg)\"}\n                                        </ion-col>\n                                        <ion-col size=\"2\" class=\"inner-col\">\n                                          {TranslationService.getTransl(\n                                            \"row-weight\",\n                                            \"Row Weight\"\n                                          ) + \" (Kg)\"}\n                                        </ion-col>\n                                      </ion-row>\n                                    </ion-col>\n                                  </ion-row>\n                                </ion-col>\n                                <ion-col size=\"1\" size-lg=\"1\">\n                                  {TranslationService.getTransl(\n                                    \"duplicate\",\n                                    \"Duplicate\"\n                                  ) +\n                                    \"/\" +\n                                    TranslationService.getTransl(\n                                      \"delete\",\n                                      \"Delete\"\n                                    )}\n                                </ion-col>\n                              </ion-row>\n                              {/** COURSES ROWS */}\n                              {area.courses.map((course, courseIndex) => [\n                                <ion-row\n                                  class={\n                                    \"ion-align-items-center ion-justify-content-center ext-row\" +\n                                    (this.selectedRows &&\n                                    this.selectedRows.includes(courseIndex)\n                                      ? \" courseSelected\"\n                                      : \"\")\n                                  }\n                                  onClick={(ev) =>\n                                    this.handleCourseRowClick(courseIndex, ev)\n                                  }\n                                >\n                                  <ion-col size=\"11\" size-lg=\"11\">\n                                    <ion-row>\n                                      <ion-col\n                                        size=\"12\"\n                                        size-lg=\"4\"\n                                        class=\"ext-col\"\n                                      >\n                                        <ion-row class=\"inner-row1\">\n                                          <ion-col\n                                            size=\"3\"\n                                            size-lg=\"3\"\n                                            class=\"inner-col\"\n                                          >\n                                            <app-form-item\n                                              shortItem\n                                              value={course.courseNumber}\n                                              name=\"courseNumber\"\n                                              input-type=\"number\"\n                                              inputStep=\"1\"\n                                              debounce={300}\n                                              onFormItemChanged={(ev) =>\n                                                this.handleAreaCourse(\n                                                  course,\n                                                  ev,\n                                                  index\n                                                )\n                                              }\n                                              onFocus={() =>\n                                                this.courseFocus(courseIndex)\n                                              }\n                                            ></app-form-item>\n                                          </ion-col>\n                                          <ion-col\n                                            size=\"3\"\n                                            size-lg=\"3\"\n                                            class=\"inner-col\"\n                                          >\n                                            <app-form-item\n                                              shortItem\n                                              value={course.startAngle}\n                                              name=\"startAngle\"\n                                              input-type=\"number\"\n                                              inputStep=\"1\"\n                                              onFormItemChanged={(ev) =>\n                                                this.handleAreaCourse(\n                                                  course,\n                                                  ev,\n                                                  index,\n                                                  courseIndex\n                                                )\n                                              }\n                                            ></app-form-item>\n                                          </ion-col>\n                                          <ion-col\n                                            size=\"3\"\n                                            size-lg=\"3\"\n                                            class=\"inner-col\"\n                                          >\n                                            <app-form-item\n                                              shortItem\n                                              value={course.endAngle}\n                                              name=\"endAngle\"\n                                              input-type=\"number\"\n                                              inputStep=\"1\"\n                                              onFormItemChanged={(ev) =>\n                                                this.handleAreaCourse(\n                                                  course,\n                                                  ev,\n                                                  index,\n                                                  courseIndex\n                                                )\n                                              }\n                                            ></app-form-item>\n                                          </ion-col>\n                                          <ion-col\n                                            size=\"3\"\n                                            size-lg=\"3\"\n                                            class=\"inner-col\"\n                                          >\n                                            <app-form-item\n                                              shortItem\n                                              value={course.innerRadius}\n                                              name=\"innerRadius\"\n                                              input-type=\"number\"\n                                              inputStep=\"1\"\n                                              onFormItemChanged={(ev) =>\n                                                this.handleAreaCourse(\n                                                  course,\n                                                  ev,\n                                                  index,\n                                                  courseIndex\n                                                )\n                                              }\n                                            ></app-form-item>\n                                          </ion-col>\n                                        </ion-row>\n                                      </ion-col>\n                                      <ion-col\n                                        size=\"12\"\n                                        size-lg=\"8\"\n                                        class=\"ext-col\"\n                                      >\n                                        {area.shapes.map(\n                                          (shape, shapeIndex) => (\n                                            <ion-row class=\"inner-row2\">\n                                              <ion-col\n                                                size=\"2\"\n                                                class=\"inner-col\"\n                                              >\n                                                <app-item-detail\n                                                  showItem={false}\n                                                  detailText={ShapesService.getShapeName(\n                                                    shape.shapeId\n                                                  )}\n                                                ></app-item-detail>\n                                              </ion-col>\n                                              <ion-col\n                                                size=\"2\"\n                                                class=\"inner-col\"\n                                              >\n                                                <app-form-item\n                                                  shortItem\n                                                  style={\n                                                    course.quantityShapes\n                                                      .length > 0 &&\n                                                    course.quantityShapes[\n                                                      shapeIndex\n                                                    ].quantity < 0\n                                                      ? {\n                                                          \"--ion-background-color\":\n                                                            \"red\",\n                                                        }\n                                                      : null\n                                                  }\n                                                  value={\n                                                    course.quantityShapes\n                                                      .length > 0 &&\n                                                    course.quantityShapes[\n                                                      shapeIndex\n                                                    ]\n                                                      ? course.quantityShapes[\n                                                          shapeIndex\n                                                        ].quantity\n                                                      : 0\n                                                  }\n                                                  name=\"quantity\"\n                                                  input-type=\"number\"\n                                                  inputStep=\"1\"\n                                                  onFormItemChanged={(ev) =>\n                                                    this.handleAreaCourseQuantity(\n                                                      course,\n                                                      shape.shapeId,\n                                                      shapeIndex,\n                                                      ev\n                                                    )\n                                                  }\n                                                ></app-form-item>\n                                              </ion-col>\n                                              <ion-col\n                                                size=\"2\"\n                                                class={\n                                                  \"inner-col\" +\n                                                  (shapeIndex > 0\n                                                    ? \" emptyCell\"\n                                                    : \"\")\n                                                }\n                                              >\n                                                <app-item-detail\n                                                  showItem={false}\n                                                  detailText={\n                                                    shapeIndex == 0\n                                                      ? ProjectsService.countTotalQuantity(\n                                                          course\n                                                        )\n                                                      : undefined\n                                                  }\n                                                ></app-item-detail>\n                                              </ion-col>\n                                              <ion-col\n                                                size=\"2\"\n                                                class={\n                                                  \"inner-col\" +\n                                                  (shapeIndex > 0\n                                                    ? \" emptyCell\"\n                                                    : \"\")\n                                                }\n                                              >\n                                                {shapeIndex == 0 ? (\n                                                  <app-form-item\n                                                    shortItem\n                                                    value={course.repairSets}\n                                                    name=\"repairSets\"\n                                                    input-type=\"number\"\n                                                    inputStep=\"1\"\n                                                    disabled={\n                                                      area.onlyForRepair\n                                                    }\n                                                    onFormItemChanged={(ev) =>\n                                                      this.handleAreaCourse(\n                                                        course,\n                                                        ev\n                                                      )\n                                                    }\n                                                  ></app-form-item>\n                                                ) : undefined}\n                                              </ion-col>\n                                              <ion-col\n                                                size=\"2\"\n                                                class=\"inner-col\"\n                                              >\n                                                <app-item-detail\n                                                  showItem={false}\n                                                  detailText={ProjectsService.getAreaCourseWeightForShape(\n                                                    this.project,\n                                                    this.areaShapes,\n                                                    index,\n                                                    courseIndex,\n                                                    shapeIndex\n                                                  )}\n                                                ></app-item-detail>\n                                              </ion-col>\n                                              <ion-col\n                                                size=\"2\"\n                                                class={\n                                                  \"inner-col\" +\n                                                  (shapeIndex > 0\n                                                    ? \" emptyCell\"\n                                                    : \"\")\n                                                }\n                                              >\n                                                <app-item-detail\n                                                  showItem={false}\n                                                  detailText={\n                                                    shapeIndex == 0\n                                                      ? ProjectsService.getTotalWeightForCourse(\n                                                          this.project,\n                                                          this.areaShapes,\n                                                          index,\n                                                          courseIndex\n                                                        )\n                                                      : undefined\n                                                  }\n                                                ></app-item-detail>\n                                              </ion-col>\n                                            </ion-row>\n                                          )\n                                        )}\n                                      </ion-col>\n                                    </ion-row>\n                                  </ion-col>\n                                  <ion-col size=\"1\" size-lg=\"1\">\n                                    <ion-button\n                                      fill=\"clear\"\n                                      color=\"primary\"\n                                      icon-only\n                                      class=\"button-no-margin\"\n                                      onClick={() =>\n                                        this.duplicateAreaCourse(\n                                          index,\n                                          courseIndex\n                                        )\n                                      }\n                                    >\n                                      <ion-icon name=\"copy\"></ion-icon>\n                                    </ion-button>\n                                    <ion-button\n                                      fill=\"clear\"\n                                      color=\"danger\"\n                                      icon-only\n                                      class=\"button-no-margin\"\n                                      onClick={() =>\n                                        this.deleteAreaCourse(\n                                          index,\n                                          courseIndex\n                                        )\n                                      }\n                                    >\n                                      <ion-icon name=\"trash\"></ion-icon>\n                                    </ion-button>\n                                  </ion-col>\n                                </ion-row>,\n                                <ion-row class=\"separator\">\n                                  <ion-col></ion-col>\n                                </ion-row>,\n                              ])}\n                            </ion-grid>\n\n                            <ion-button\n                              expand=\"block\"\n                              fill=\"outline\"\n                              size=\"small\"\n                              color=\"trasteel\"\n                              disabled={this.disableAddCourses(area)}\n                              onClick={() => this.addAreaCourses(index)}\n                            >\n                              {\"+ \" +\n                                TranslationService.getTransl(\n                                  \"add-course\",\n                                  \"Add Course\"\n                                )}\n                            </ion-button>\n                          </div>\n                        </div>\n                      ) : undefined}\n                    </div>\n                  ))}\n                </div>\n              </swiper-slide>\n              {/** UNSHAPED */}\n              <swiper-slide class=\"swiper-slide\">\n                <div>\n                  <ion-grid>\n                    {this.project.projectMass.map((mass, index) => [\n                      <ion-row>\n                        <ion-col>\n                          <app-form-item\n                            label-tag=\"position\"\n                            label-text=\"Position\"\n                            value={mass.position}\n                            name=\"position\"\n                            input-type=\"number\"\n                            onFormItemBlur={(ev) =>\n                              this.handleMassPositionBlur(index, ev)\n                            }\n                          ></app-form-item>\n                        </ion-col>\n                        <ion-col>\n                          <app-select-search\n                            label={{\n                              tag: \"application-area\",\n                              text: \"Application Area\",\n                            }}\n                            labelAddText=\"*\"\n                            value={mass.bricksAllocationAreaId}\n                            lines=\"inset\"\n                            selectFn={(ev) =>\n                              this.selectMassApplicationArea(index, ev)\n                            }\n                            selectOptions={ProjectsService.getBricksAllocationAreas()}\n                            selectValueId=\"bricksAllocationAreaId\"\n                            selectValueText={[\"bricksAllocationAreaName\", \"en\"]}\n                          ></app-select-search>\n                        </ion-col>\n                      </ion-row>,\n                      <ion-row>\n                        <ion-col>\n                          <ion-item\n                            button\n                            lines=\"inset\"\n                            onClick={() =>\n                              this.openSelectDataSheet(mass, index, true)\n                            }\n                          >\n                            <ion-label>\n                              <p class=\"small\">\n                                <my-transl\n                                  tag=\"datasheet\"\n                                  text=\"Datasheet\"\n                                ></my-transl>\n                              </p>\n                              <h2>\n                                {mass.datasheetId\n                                  ? DatasheetsService.getDatasheetsById(\n                                      mass.datasheetId\n                                    ).productName\n                                  : \"\"}\n                              </h2>\n                            </ion-label>\n                          </ion-item>\n                        </ion-col>\n                        <ion-col>\n                          <app-form-item\n                            label-tag=\"density\"\n                            label-text=\"Density\"\n                            appendText=\" (g/cm3)\"\n                            value={mass.density}\n                            name=\"density\"\n                            input-type=\"number\"\n                            onFormItemChanged={(ev) =>\n                              this.handleMassChange(index, ev)\n                            }\n                          ></app-form-item>\n                        </ion-col>\n                      </ion-row>,\n                      <ion-row>\n                        <ion-col>\n                          <ion-label>\n                            <ion-item lines=\"none\">\n                              <ion-label>\n                                <p\n                                  style={{\n                                    \"font-size\": \"0.75rem\",\n                                    color: \"black\",\n                                    \"text-align\": \"left\",\n                                  }}\n                                >\n                                  <my-transl\n                                    tag=\"quantity\"\n                                    text=\"Quantity\"\n                                  ></my-transl>\n                                </p>\n                                <h2\n                                  style={{\n                                    \"text-align\": \"left\",\n                                  }}\n                                >\n                                  {mass.quantity}\n                                </h2>\n                              </ion-label>\n                            </ion-item>\n                          </ion-label>\n                        </ion-col>\n                        <ion-col>\n                          <ion-select\n                            color=\"trasteel\"\n                            id=\"selectMassQtyUnit\"\n                            interface=\"action-sheet\"\n                            label={TranslationService.getTransl(\"unit\", \"Unit\")}\n                            label-placement=\"floating\"\n                            onIonChange={(ev) =>\n                              this.selectMassQtyUnit(index, ev)\n                            }\n                            value={mass.quantityUnit}\n                          >\n                            {ProjectsService.getQuantityUnits().map((unit) => (\n                              <ion-select-option value={unit.quantityUnitId}>\n                                {unit.quantityUnitName.en}\n                              </ion-select-option>\n                            ))}\n                          </ion-select>\n                        </ion-col>\n                        <ion-col size=\"1\">\n                          <p\n                            style={{\n                              \"text-align\": \"center\",\n                              \"font-size\": \"1.3rem\",\n                            }}\n                          >\n                            x\n                          </p>\n                        </ion-col>\n                        <ion-col>\n                          <app-form-item\n                            label-tag=\"weight-per-unit\"\n                            label-text=\"Weight per Unit\"\n                            appendText=\" (Kg)\"\n                            value={mass.weightPerUnitKg}\n                            name=\"weightPerUnitKg\"\n                            input-type=\"number\"\n                            onFormItemChanged={(ev) =>\n                              this.handleMassChange(index, ev)\n                            }\n                          ></app-form-item>\n                        </ion-col>\n                        <ion-col size=\"1\">\n                          <p\n                            style={{\n                              \"text-align\": \"center\",\n                              \"font-size\": \"1.3rem\",\n                            }}\n                          >\n                            =\n                          </p>\n                        </ion-col>\n                        <ion-col>\n                          <app-form-item\n                            label-tag=\"total-weight\"\n                            label-text=\"Total Weight\"\n                            appendText=\" (MT)\"\n                            value={mass.totalWeightMT}\n                            name=\"totalWeightMT\"\n                            input-type=\"number\"\n                            onFormItemChanged={(ev) =>\n                              this.handleMassChange(index, ev)\n                            }\n                          ></app-form-item>\n                        </ion-col>\n                        <ion-col\n                          size=\"1\"\n                          style={{\n                            \"text-align\": \"center\",\n                          }}\n                        >\n                          <ion-button\n                            style={{\n                              \"padding-top\": \"12px\",\n                            }}\n                            fill=\"clear\"\n                            color=\"danger\"\n                            icon-only\n                            onClick={() => this.deleteProjectMass(index)}\n                          >\n                            <ion-icon name=\"trash\"></ion-icon>\n                          </ion-button>\n                        </ion-col>\n                      </ion-row>,\n                      <ion-row class=\"separator\">\n                        <ion-col></ion-col>\n                      </ion-row>,\n                    ])}\n                    <ion-row>\n                      <ion-col>\n                        <ion-button\n                          expand=\"block\"\n                          fill=\"outline\"\n                          size=\"small\"\n                          color=\"trasteel\"\n                          onClick={() => this.addProjectMasses()}\n                        >\n                          {\"+ \" +\n                            TranslationService.getTransl(\n                              \"add-mass\",\n                              \"Add Mass\"\n                            )}\n                        </ion-button>\n                      </ion-col>\n                    </ion-row>\n                  </ion-grid>\n                </div>\n              </swiper-slide>\n              {/** FILES */}\n              <swiper-slide class=\"swiper-slide\">\n                FILES - TO BE DONE\n              </swiper-slide>\n            </swiper-wrapper>\n          </swiper-container>\n        </ion-content>\n        <app-modal-footer\n          color={Environment.getAppColor()}\n          disableSave={!this.validProject}\n          onCancelEmit={() => this.cancel()}\n          onSaveEmit={() => this.save()}\n        />\n      </Host>\n    );\n  }\n}\n"],"version":3}