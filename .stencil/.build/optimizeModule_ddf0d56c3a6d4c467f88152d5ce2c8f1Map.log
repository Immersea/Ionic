{"version":3,"names":["appMapCss","AppMapStyle0","AppMap","this","networkHandler","currentMarkers","startLocation","searchFilters","geoJsonData","waitForMapCounts","updateMarkers","forEach","marker","remove","addMarkers","markersAsFeature","markers","length","addMapPointsForCollection","fitToBounds","el","Object","assign","document","createElement","lngLat","mapboxgl","LngLat","toNumber","longitude","latitude","mapBoxMarker","Marker","setLngLat","addTo","map","clickFn","getElement","addEventListener","push","mapLoaded","Promise","resolve","reject","waitForMap","resolveFunc","rejectFunc","on","setTimeout","createLine","id","pointA","pointB","geojson","type","features","geometry","coordinates","position","geopoint","addSource","data","addLayer","source","layout","paint","removeLine","getLayer","removeLayer","getSource","removeSource","points","bounds","LngLatBounds","point","extend","fitBounds","padding","top","bottom","left","right","duration","easeTo","center","zoom","resize","feature","triggerMapResize","then","mapFlyTo","actualCenterPosition","closePopup","fire","updateSearchTags","searchTags","dbFilter","filterDocuments","updateDraggableMarkerPos","draggableMarkerPosition","lon","lat","draggableMapMarker","componentWillLoad","MapService","getPosition","Environment","isUdive","isDecoplanner","UDiveFilterService","isTrasteel","TrasteelFilterService","mapDataSub$","subscribe","markerCollections","createGeoJsonData","componentDidLoad","init","loadErrorMessage","err","mapsLoaded","createToastOverlay","console","log","disconnectedCallback","toast","dismiss","undefined","unsubscribe","error","message","TranslationService","getTransl","toastController","create","color","buttons","icon","role","present","loadSDK","initMap","Network","getStatus","status","connected","addListener","navigator","onLine","mapElement","querySelector","pageId","previousUserLocation","DatabaseService","getLocalDocument","previousUserZoom","currentPosition","accessToken","MAPBOX","Map","container","attributionControl","layerId","setStyle","style","visibility","sendMapData","addControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","mapLoadingCompleted","emit","saveCurrentPosition","getBounds","emitMapBounds","setCurrentPosition","async","keys","pos","Geolocation","getCurrentPosition","coords","draggableMarker","getCenter","saveLocalDocument","getZoom","className","name","size","setDraggable","setOffset","getLngLat","dragMarkerEnd","lng","flyTo","essential","each","collectionItems","collectionKey","collection","filteredCollection","key","featureCollection","crs","properties","markerItem","markerKey","item","JSON","stringify","addCluster","removeCluster","dataName","dataColor","layer1Id","layer2Id","layer3Id","cluster","clusterMaxZoom","clusterRadius","filter","getComputedStyle","documentElement","getPropertyValue","e","queryRenderedFeatures","layers","clusterId","cluster_id","getClusterExpansionZoom","slice","Math","abs","popup","Popup","offset","setHTML","getCanvas","cursor","setData","sourceId","getStyle","layer","render","h","Host","tag","text","appMapIconCss","AppMapIconStyle0","AppMapIcon","isAvatar","markerClicked","class","onClick","url","src","chipIosCss","IonChipIosStyle0","chipMdCss","IonChipMdStyle0","Chip","constructor","hostRef","outline","disabled","mode","getIonMode","createColorClasses"],"sources":["src/components/common/app/map/app-map/app-map.scss?tag=app-map","src/components/common/app/map/app-map/app-map.tsx","src/components/common/app/map/app-map-icon/app-map-icon.scss?tag=app-map-icon","src/components/common/app/map/app-map-icon/app-map-icon.tsx","node_modules/@ionic/core/dist/collection/components/chip/chip.ios.css?tag=ion-chip&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/chip/chip.md.css?tag=ion-chip&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/chip/chip.js"],"sourcesContent":["app-map {\n  width: 100%;\n  height: 100%;\n\n  div[id=\"load-message\"] {\n    text-align: center;\n    width: 100%;\n    height: 100%;\n    top: 0px;\n    bottom: 0px;\n    left: 0px;\n    flex: 1;\n    div {\n      padding-top: 30%;\n    }\n  }\n  div[id^=\"map-container-\"] {\n    visibility: hidden;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0px;\n    bottom: 0px;\n    left: 0px;\n    flex: 1;\n    background-color: transparent;\n  }\n\n  div[id^=\"map-container-dashboard\"] {\n    border-radius: 10px;\n    -moz-border-radius: 10px;\n    -webkit-mask-border-radius: 10px;\n    -webkit-border-radius: 10px;\n  }\n  /*\n  .marker {\n    //background-image: url(\"../../../assets/images/checkmark.svg\");\n    background: radial-gradient(\n      rgba(255, 255, 255, 0.8) 0%,\n      rgba(255, 255, 255, 0) 90%\n    );\n    font-size: 30px;\n    background-size: cover;\n    width: 35px;\n    height: 35px;\n    border-radius: 50%;\n    cursor: pointer;\n  }*/\n  .mapboxgl-popup-tip {\n    border-top-color: rgba(255, 255, 255, 0.8) !important;\n    border-bottom-color: rgba(255, 255, 255, 0.8) !important;\n  }\n  .mapboxgl-popup-content {\n    background-color: rgba(255, 255, 255, 0.8);\n    padding: 0;\n  }\n}\n","import {\n  Component,\n  h,\n  Method,\n  State,\n  Prop,\n  Event,\n  EventEmitter,\n  Element,\n  Host,\n  Watch,\n} from \"@stencil/core\";\nimport {TranslationService} from \"../../../../../services/common/translations\";\nimport {toastController} from \"@ionic/core\";\nimport {MAPBOX, Environment} from \"../../../../../global/env\";\nimport mapboxgl from \"mapbox-gl\";\n//import {UDiveFilterService} from \"../../../../../services/udive/ud-db-filter\";\nimport {CollectionGroup, SearchTag} from \"../../../../../interfaces/interfaces\";\nimport {DatabaseService} from \"../../../../../services/common/database\";\nimport {Subscription} from \"rxjs\";\nimport {Marker} from \"../../../../../interfaces/interfaces\";\n\nimport {Geolocation} from \"@capacitor/geolocation\";\nimport {Network} from \"@capacitor/network\";\n//import {TrasteelFilterService} from \"../../../../../services/trasteel/ud-db-filter\";\nimport {MapService, Position} from \"../../../../../services/common/map\";\nimport {UDiveFilterService} from \"../../../../../services/udive/ud-db-filter\";\nimport {TrasteelFilterService} from \"../../../../../services/trasteel/common/trs-db-filter\";\nimport {each, toNumber} from \"lodash\";\n\n/*const shapes = {\n  BLOB:\n    \"M129.9,75C86.6,150 -86.6,150 -129.9,75C-173.2,0 -86.6,-150 0,-150C86.6,-150 173.2,0 129.9,75Z\",\n  MAP_PIN:\n    \"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\",\n  SQUARE_PIN: \"M22-48h-44v43h16l6 5 6-5h16z\",\n  SHIELD:\n    \"M18.8-31.8c.3-3.4 1.3-6.6 3.2-9.5l-7-6.7c-2.2 1.8-4.8 2.8-7.6 3-2.6.2-5.1-.2-7.5-1.4-2.4 1.1-4.9 1.6-7.5 1.4-2.7-.2-5.1-1.1-7.3-2.7l-7.1 6.7c1.7 2.9 2.7 6 2.9 9.2.1 1.5-.3 3.5-1.3 6.1-.5 1.5-.9 2.7-1.2 3.8-.2 1-.4 1.9-.5 2.5 0 2.8.8 5.3 2.5 7.5 1.3 1.6 3.5 3.4 6.5 5.4 3.3 1.6 5.8 2.6 7.6 3.1.5.2 1 .4 1.5.7l1.5.6c1.2.7 2 1.4 2.4 2.1.5-.8 1.3-1.5 2.4-2.1.7-.3 1.3-.5 1.9-.8.5-.2.9-.4 1.1-.5.4-.1.9-.3 1.5-.6.6-.2 1.3-.5 2.2-.8 1.7-.6 3-1.1 3.8-1.6 2.9-2 5.1-3.8 6.4-5.3 1.7-2.2 2.6-4.8 2.5-7.6-.1-1.3-.7-3.3-1.7-6.1-.9-2.8-1.3-4.9-1.2-6.4z\",\n  ROUTE:\n    \"M24-28.3c-.2-13.3-7.9-18.5-8.3-18.7l-1.2-.8-1.2.8c-2 1.4-4.1 2-6.1 2-3.4 0-5.8-1.9-5.9-1.9l-1.3-1.1-1.3 1.1c-.1.1-2.5 1.9-5.9 1.9-2.1 0-4.1-.7-6.1-2l-1.2-.8-1.2.8c-.8.6-8 5.9-8.2 18.7-.2 1.1 2.9 22.2 23.9 28.3 22.9-6.7 24.1-26.9 24-28.3z\",\n  SQUARE: \"M-24-48h48v48h-48z\",\n  SQUARE_ROUNDED:\n    \"M24-8c0 4.4-3.6 8-8 8h-32c-4.4 0-8-3.6-8-8v-32c0-4.4 3.6-8 8-8h32c4.4 0 8 3.6 8 8v32z\"\n};*/\n\n@Component({\n  tag: \"app-map\",\n  styleUrl: \"app-map.scss\",\n})\nexport class AppMap {\n  @Element() el: HTMLElement;\n  @Event() mapLoadingCompleted: EventEmitter;\n  @Event() dragMarkerEnd: EventEmitter;\n  @Event() emitMapBounds: EventEmitter;\n  @Prop() pageId: string;\n  @Prop({mutable: true}) markers: Marker[] = []; //used to insert markers from outside component - in case of any marker then the map is not populated\n  @Prop() markersAsFeature = false;\n  @Prop({mutable: true}) searchTags: SearchTag[] = []; //used to search markers inside the database\n\n  @Prop() center: any;\n  @Prop({mutable: true}) currentPosition: boolean = false;\n  @Prop({mutable: true}) draggableMarkerPosition: any; //set to {} to get the marker in the current user position - otherwise set to lat/lon\n\n  @State() mapsLoaded: boolean = false;\n  @State() loadErrorMessage: string = \"\";\n\n  public map: any;\n\n  private mapElement: any;\n  private networkHandler = null;\n  toast: HTMLIonToastElement;\n  currentMarkers = [];\n  draggableMapMarker: any;\n  startLocation: Position = null;\n  searchFilters = [];\n  markerCollections: CollectionGroup;\n  geoJsonData: any[] = [];\n  actualCenterPosition: any;\n  mapDataSub$: Subscription;\n  dbFilter: any;\n\n  waitForMapCounts = 0;\n\n  @Watch(\"markers\")\n  updateMarkers() {\n    //remove markers\n    this.currentMarkers.forEach((marker) => {\n      marker.remove();\n    });\n    this.addMarkers();\n  }\n\n  addMarkers() {\n    //add markers as clustered points like MapData or as normal markers\n    if (this.markersAsFeature) {\n      if (this.markers.length > 0) {\n        this.addMapPointsForCollection(\n          this.markers,\n          \"primary\",\n          \"markers-feature\"\n        );\n        this.fitToBounds(this.markers);\n      }\n    } else {\n      //add markers\n      this.currentMarkers = [];\n      if (this.markers.length > 0) {\n        this.markers.forEach((marker: Marker) => {\n          var el = Object.assign(document.createElement(\"app-map-icon\"), {\n            marker: marker,\n          });\n          let lngLat = new mapboxgl.LngLat(\n            toNumber(marker.longitude),\n            toNumber(marker.latitude)\n          );\n          const mapBoxMarker = new mapboxgl.Marker(el)\n            .setLngLat(lngLat)\n            .addTo(this.map);\n          // Add a layer for the marker icon\n\n          if (marker.clickFn)\n            mapBoxMarker.getElement().addEventListener(\"click\", () => {\n              marker.clickFn();\n            });\n          this.currentMarkers.push(mapBoxMarker);\n        });\n        this.fitToBounds(this.markers);\n      }\n    }\n  }\n\n  @Method()\n  async mapLoaded(): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      this.waitForMapCounts = 0;\n      this.waitForMap(resolve, reject);\n    });\n  }\n  waitForMap(resolveFunc, rejectFunc) {\n    if (this.map) {\n      this.map.on(\"load\", () => resolveFunc(true));\n    } else if (this.waitForMapCounts <= 20) {\n      setTimeout(() => {\n        this.waitForMapCounts += 1;\n        this.waitForMap(resolveFunc, rejectFunc);\n      }, 200);\n    } else {\n      rejectFunc(false);\n    }\n  }\n\n  @Method()\n  async createLine(id, pointA, pointB) {\n    if (pointA && pointB) {\n      const geojson = {\n        type: \"FeatureCollection\",\n        features: [\n          {\n            type: \"Feature\",\n            geometry: {\n              type: \"LineString\",\n              coordinates: [\n                [\n                  pointA.position.geopoint.longitude,\n                  pointA.position.geopoint.latitude,\n                ],\n                [\n                  pointB.position.geopoint.longitude,\n                  pointB.position.geopoint.latitude,\n                ],\n              ],\n            },\n          },\n        ],\n      };\n      this.map.addSource(id, {\n        type: \"geojson\",\n        data: geojson,\n      });\n      this.map.addLayer({\n        id: id,\n        type: \"line\",\n        source: id,\n        layout: {\n          \"line-join\": \"round\",\n          \"line-cap\": \"round\",\n        },\n        paint: {\n          \"line-color\": \"#1ac8ff\",\n          \"line-width\": 5,\n        },\n      });\n    }\n\n    return true;\n  }\n\n  @Method()\n  async removeLine(id) {\n    if (this.map.getLayer(id)) this.map.removeLayer(id);\n    if (this.map.getSource(id)) this.map.removeSource(id);\n    return true;\n  }\n\n  @Method()\n  async fitToBounds(points?) {\n    if (this.map) {\n      if (points && points.length > 0) {\n        if (points.length > 1) {\n          const bounds = new mapboxgl.LngLatBounds();\n          points.forEach((point) => {\n            if (point) {\n              let lngLat = null;\n              if (point.position) {\n                lngLat = new mapboxgl.LngLat(\n                  point.position.geopoint.longitude,\n                  point.position.geopoint.latitude\n                );\n              } else {\n                lngLat = new mapboxgl.LngLat(point.longitude, point.latitude);\n              }\n              bounds.extend(lngLat);\n            }\n          });\n          this.map.fitBounds(bounds, {\n            padding: {top: 100, bottom: 100, left: 100, right: 100},\n            duration: 500,\n          });\n        } else {\n          //set zoom level and center map\n          let lngLat = null;\n          if (points[0].position) {\n            lngLat = new mapboxgl.LngLat(\n              points[0].position.geopoint.longitude,\n              points[0].position.geopoint.latitude\n            );\n          } else {\n            lngLat = new mapboxgl.LngLat(\n              points[0].longitude,\n              points[0].latitude\n            );\n          }\n          this.map.easeTo({\n            center: lngLat,\n            zoom: 18,\n          });\n        }\n        this.map.resize();\n        return true;\n      } else if (this.geoJsonData.length > 0) {\n        const bounds = new mapboxgl.LngLatBounds();\n        this.geoJsonData.forEach((geojson) => {\n          geojson.features.forEach((feature) => {\n            bounds.extend(feature.geometry.coordinates);\n          });\n        });\n        this.map.fitBounds(bounds, {\n          padding: {top: 100, bottom: 100, left: 100, right: 100},\n          duration: 500,\n        });\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  @Method()\n  async triggerMapResize() {\n    this.mapLoaded().then(() => {\n      this.mapFlyTo(this.actualCenterPosition);\n      this.map.resize();\n    });\n  }\n\n  @Method()\n  async closePopup() {\n    this.map.fire(\"closePopup\");\n    return true;\n  }\n\n  @Method()\n  async updateSearchTags(searchTags) {\n    this.searchTags = searchTags;\n    this.dbFilter.filterDocuments(searchTags);\n    return true;\n  }\n\n  @Watch(\"draggableMarkerPosition\")\n  async updateDraggableMarkerPos() {\n    const lngLat = new mapboxgl.LngLat(\n      this.draggableMarkerPosition.lon,\n      this.draggableMarkerPosition.lat\n    );\n    this.draggableMapMarker.setLngLat(lngLat);\n    this.mapFlyTo(lngLat);\n    return true;\n  }\n\n  componentWillLoad() {\n    this.startLocation = MapService.getPosition();\n    //get updates from data collections\n    if (Environment.isUdive() || Environment.isDecoplanner()) {\n      this.dbFilter = UDiveFilterService;\n    } else if (Environment.isTrasteel()) {\n      this.dbFilter = TrasteelFilterService;\n    }\n    if (this.dbFilter) {\n      this.mapDataSub$ = this.dbFilter.mapDataSub$.subscribe((data) => {\n        this.markerCollections = data;\n        this.createGeoJsonData();\n      });\n    } else {\n      this.createGeoJsonData();\n    }\n  }\n\n  componentDidLoad() {\n    //init map\n    this.init().then(\n      () => {\n        this.loadErrorMessage = \"\";\n      },\n      (err) => {\n        //this.loadErrorMessage = err;\n        this.mapsLoaded = false;\n        //this.createGeoJsonData();\n        this.createToastOverlay(\"Error: \" + err);\n        console.log(\"Error \", err);\n      }\n    );\n  }\n\n  disconnectedCallback() {\n    this.toast ? this.toast.dismiss() : undefined;\n    this.mapDataSub$ ? this.mapDataSub$.unsubscribe() : undefined;\n  }\n\n  async createToastOverlay(error) {\n    this.toast ? this.toast.dismiss() : undefined;\n    let message = error\n      ? error\n      : TranslationService.getTransl(\n          \"current_position\",\n          \"Looking for current position\"\n        );\n    this.toast = await toastController.create({\n      message: error ? message : message + \"...\",\n      duration: error ? 2000 : 0,\n      color: error ? \"danger\" : \"dark\",\n      buttons: [\n        {\n          icon: \"close\",\n          role: \"cancel\",\n        },\n      ],\n    });\n    this.toast.present();\n  }\n\n  init(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.loadSDK().then(\n        () => {\n          this.initMap().then(\n            () => {\n              resolve(true);\n            },\n            (err) => {\n              reject(err);\n            }\n          );\n        },\n        (err) => {\n          reject(err);\n        }\n      );\n    });\n  }\n\n  loadSDK(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (!this.mapsLoaded) {\n        Network.getStatus().then(\n          (status) => {\n            if (status.connected) {\n              resolve(true);\n            } else {\n              if (this.networkHandler == null) {\n                this.networkHandler = Network.addListener(\n                  \"networkStatusChange\",\n                  (status) => {\n                    if (status.connected) {\n                      this.networkHandler.remove();\n                      this.init().then(\n                        () => {\n                          this.loadErrorMessage = \"\";\n                        },\n                        (err) => {\n                          console.log(\"Error \", err);\n                          this.createToastOverlay(\"Error: \" + err);\n                          //this.loadErrorMessage = err;\n                        }\n                      );\n                    }\n                  }\n                );\n              }\n              reject(\"Network offline\");\n            }\n          },\n          (err) => {\n            console.log(err);\n            // NOTE: navigator.onLine temporarily required until Network plugin has web implementation\n            if (navigator.onLine) {\n              resolve(true);\n            } else {\n              reject(\"Network offline\");\n            }\n          }\n        );\n      } else {\n        reject(\"SDK already loaded\");\n      }\n    });\n  }\n\n  async initMap(): Promise<any> {\n    this.mapElement = this.el.querySelector(\"#map-container-\" + this.pageId);\n    const previousUserLocation: Position =\n      await DatabaseService.getLocalDocument(\"lastUserLocation\");\n    var previousUserZoom =\n      await DatabaseService.getLocalDocument(\"lastUserZoom\");\n\n    //if draggablemarker then don't find position and center on the marker\n    if (this.draggableMarkerPosition) {\n      this.currentPosition = false;\n    } else if (this.center) {\n      this.currentPosition = false;\n    } else if (!previousUserLocation || !previousUserLocation.geopoint) {\n      //find current location if there is no previous user location\n      this.currentPosition = true;\n    } else {\n      this.startLocation = MapService.getPosition(\n        previousUserLocation.geopoint.latitude,\n        previousUserLocation.geopoint.longitude\n      );\n    }\n    previousUserZoom = previousUserZoom ? previousUserZoom : 10;\n\n    mapboxgl.accessToken = MAPBOX;\n\n    let center = this.center\n      ? new mapboxgl.LngLat(\n          this.center.position.geopoint.longitude,\n          this.center.position.geopoint.latitude\n        )\n      : new mapboxgl.LngLat(\n          this.startLocation.geopoint.longitude,\n          this.startLocation.geopoint.latitude\n        );\n    this.map = new mapboxgl.Map({\n      container: this.mapElement,\n      attributionControl: false, //need this to show a compact attribution icon (i) instead of the whole text\n      center: center,\n      zoom: this.center ? \"15\" : previousUserZoom,\n    });\n    let layerId = \"satellite-v9\";\n    this.map.setStyle(\"mapbox://styles/mapbox/\" + layerId);\n    this.map.on(\"load\", () => {\n      this.mapElement.style.visibility = \"visible\";\n      this.map.resize();\n      this.mapsLoaded = true;\n      if (this.dbFilter) {\n        this.dbFilter.sendMapData();\n      } else {\n        //run incase of no dbFilter to load markers\n        this.createGeoJsonData();\n      }\n      this.loadErrorMessage = \"\";\n      // Add geolocate control to the map.\n      this.map.addControl(\n        new mapboxgl.GeolocateControl({\n          positionOptions: {\n            enableHighAccuracy: true,\n          },\n          trackUserLocation: true,\n        }),\n        \"bottom-left\"\n      );\n      this.mapLoadingCompleted.emit(true);\n    });\n    this.map.on(\"moveend\", () => {\n      this.saveCurrentPosition();\n      var bounds = this.map.getBounds();\n      this.emitMapBounds.emit(bounds);\n    });\n\n    this.map.on(\"zoom\", () => {\n      this.saveCurrentPosition();\n    });\n\n    return this.setCurrentPosition();\n  }\n\n  async setCurrentPosition(): Promise<any> {\n    return new Promise(async (resolve, reject) => {\n      //search for user position if required by Prop or if there is a new draggable marker to be set or if there is no previous user current position\n      if (\n        this.currentPosition ||\n        (this.draggableMarkerPosition &&\n          Object.keys(this.draggableMarkerPosition).length == 0) //new site/etc. draggableMarker = {}\n      ) {\n        await this.createToastOverlay(false);\n        let pos = {\n          latitude: this.startLocation.geopoint.latitude,\n          longitude: this.startLocation.geopoint.longitude,\n        };\n        Geolocation.getCurrentPosition().then(\n          (position) => {\n            if (position && position.coords) {\n              pos = {\n                latitude: position.coords.latitude,\n                longitude: position.coords.longitude,\n              };\n            }\n            if (!this.center) {\n              let lngLat = new mapboxgl.LngLat(pos.longitude, pos.latitude);\n              this.mapFlyTo(lngLat);\n            }\n            //save position in local storage for next center\n            this.saveCurrentPosition();\n            if (this.currentPosition) {\n              //this.geoPositionMarker(pos.latitude, pos.longitude);\n            } else {\n              this.draggableMarker(pos.latitude, pos.longitude);\n            }\n            this.toast.dismiss();\n\n            resolve(true);\n          },\n          () => {\n            //fly anyway to last known position and set draggable marker\n            let lngLat = new mapboxgl.LngLat(pos.longitude, pos.latitude);\n            this.mapFlyTo(lngLat);\n            if (!this.currentPosition) {\n              this.draggableMarker(pos.latitude, pos.longitude);\n            }\n            reject(\"Could not find current position\");\n          }\n        );\n      } else if (\n        this.draggableMarkerPosition &&\n        this.draggableMarkerPosition.lat\n      ) {\n        this.draggableMarker(\n          this.draggableMarkerPosition.lat,\n          this.draggableMarkerPosition.lon\n        );\n        resolve(true);\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  saveCurrentPosition() {\n    //save position in local storage for next center\n    if (this.pageId == \"map\" || this.pageId == \"dashboard\") {\n      const center = this.map.getCenter();\n      DatabaseService.saveLocalDocument(\n        \"lastUserLocation\",\n        MapService.getPosition(center.lat, center.lon)\n      );\n      DatabaseService.saveLocalDocument(\"lastUserZoom\", this.map.getZoom());\n    }\n  }\n\n  /*async geoPositionMarker(lat, lon) {\n    var size = 100;\n    var map = this.map;\n    // implementation of CustomLayerInterface to draw a pulsing dot icon on the map\n    // see https://docs.mapbox.com/mapbox-gl-js/api/#customlayerinterface for more info\n    var pulsingDot = {\n      width: size,\n      height: size,\n      data: new Uint8Array(size * size * 4),\n\n      // get rendering context for the map canvas when layer is added to the map\n      onAdd: function() {\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = this.width;\n        canvas.height = this.height;\n        this.context = canvas.getContext(\"2d\");\n      },\n\n      // called once before every frame where the icon will be used\n      render: function() {\n        var duration = 1000;\n        var t = (performance.now() % duration) / duration;\n\n        var radius = (size / 2) * 0.3;\n        var outerRadius = (size / 3) * 0.7 * t + radius;\n        var context = this.context;\n\n        // draw outer circle\n        context.clearRect(0, 0, this.width, this.height);\n        context.beginPath();\n        context.arc(\n          this.width / 2,\n          this.height / 2,\n          outerRadius,\n          0,\n          Math.PI * 2\n        );\n        context.fillStyle = \"rgba(137, 200, 200,\" + (1 - t) + \")\";\n        context.fill();\n\n        // draw inner circle\n        context.beginPath();\n        context.arc(this.width / 2, this.height / 2, radius, 0, Math.PI * 2);\n        context.fillStyle = \"rgba(137, 196, 244, 1)\";\n        context.strokeStyle = \"white\";\n        context.lineWidth = 2 + 4 * (1 - t);\n        context.fill();\n        context.stroke();\n\n        // update this image's data with data from the canvas\n        this.data = context.getImageData(0, 0, this.width, this.height).data;\n\n        // continuously repaint the map, resulting in the smooth animation of the dot\n        map.triggerRepaint();\n\n        // return `true` to let the map know that the image was updated\n        return true;\n      }\n    };\n\n    this.map.addImage(\"pulsing-dot\", pulsingDot, { pixelRatio: 2 });\n\n    this.map.addSource(\"points\", {\n      type: \"geojson\",\n      data: {\n        type: \"FeatureCollection\",\n        features: [\n          {\n            type: \"Feature\",\n            geometry: {\n              type: \"Point\",\n              coordinates: [lon, lat]\n            }\n          }\n        ]\n      }\n    });\n    this.map.addLayer({\n      id: \"points\",\n      type: \"symbol\",\n      source: \"points\",\n      layout: {\n        \"icon-image\": \"pulsing-dot\"\n      }\n    });\n  }*/\n\n  async draggableMarker(lat, lon) {\n    // create a HTML element for each feature\n    var el = document.createElement(\"ion-icon\");\n    el.className = \"marker\";\n    el.name = \"pin\";\n    el.color = \"danger\";\n    el.size = \"large\";\n    let lngLat = new mapboxgl.LngLat(toNumber(lon), toNumber(lat));\n    this.draggableMapMarker = new mapboxgl.Marker(el)\n      .setLngLat(lngLat)\n      .addTo(this.map);\n    this.draggableMapMarker.setDraggable(true);\n    this.draggableMapMarker.setOffset([0, -12]);\n    this.draggableMapMarker.on(\"dragend\", () => {\n      var lngLat = this.draggableMapMarker.getLngLat();\n      this.mapFlyTo(lngLat);\n    });\n    this.mapFlyTo(lngLat);\n  }\n\n  mapFlyTo(lngLat) {\n    if (lngLat && lngLat.lat) {\n      this.actualCenterPosition = lngLat;\n      this.dragMarkerEnd.emit({\n        lat: lngLat.lat,\n        lon: lngLat.lng,\n      });\n      this.map.flyTo({\n        center: lngLat,\n        essential: true,\n      });\n    }\n  }\n\n  async createGeoJsonData() {\n    if (this.mapsLoaded) {\n      if (!this.markers || this.markers.length == 0) {\n        //this.dbFilter.filterDocuments(this.searchTags);\n        //this.markerCollections = this.dbFilter.mapData;\n        this.geoJsonData = [];\n        each(this.markerCollections, async (collectionItems, collectionKey) => {\n          const collection = collectionItems.filteredCollection;\n          this.addMapPointsForCollection(\n            collection,\n            collectionItems.icon ? collectionItems.icon.color : \"primary\",\n            collectionKey\n          );\n        });\n      } else {\n        this.addMarkers();\n      }\n    }\n  }\n\n  addMapPointsForCollection(collection, color, key) {\n    const featureCollection = {\n      type: \"FeatureCollection\",\n      crs: {\n        type: \"name\",\n        properties: {\n          name: key,\n          color: color,\n        },\n      },\n      features: [],\n    };\n    each(collection, async (markerItem, markerKey) => {\n      if (markerItem && markerItem.position) {\n        featureCollection.features.push({\n          type: \"Feature\",\n          properties: {\n            id: markerKey,\n            item: JSON.stringify(markerItem),\n            collection: key,\n          },\n          geometry: {\n            type: \"Point\",\n            coordinates: [\n              markerItem.position.geopoint.longitude,\n              markerItem.position.geopoint.latitude,\n            ],\n          },\n        });\n      }\n    });\n\n    if (featureCollection.features.length > 0) {\n      this.geoJsonData.push(featureCollection);\n      this.addCluster(featureCollection);\n    } else {\n      //remove old collection\n      this.removeCluster(featureCollection);\n    }\n  }\n\n  async addCluster(geoJsonData) {\n    if (this.map) {\n      const dataName = geoJsonData.crs.properties.name;\n      const dataColor = geoJsonData.crs.properties.color;\n\n      //set first layers\n      const layer1Id = \"clusters-\" + dataName;\n      const layer2Id = \"cluster-count-\" + dataName;\n      const layer3Id = \"unclustered-point-\" + dataName;\n      const source = this.map.getSource(dataName);\n      if (!source) {\n        // Add a new source from our GeoJSON data and\n        // set the 'cluster' option to true. GL-JS will\n        // add the point_count property to your source data.\n        this.map.addSource(dataName, {\n          type: \"geojson\",\n          // Point to GeoJSON data.\n          data: geoJsonData,\n          cluster: true,\n          clusterMaxZoom: 14, // Max zoom to cluster points on\n          clusterRadius: 50, // Radius of each cluster when clustering points (defaults to 50)\n        });\n        this.map.addLayer({\n          id: layer1Id,\n          type: \"circle\",\n          source: dataName,\n          filter: [\"has\", \"point_count\"],\n          paint: {\n            // Use step expressions (https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-step)\n            // with three steps to implement three types of circles:\n            //   * 20px circles when point count is less than 100\n            //   * 30px circles when point count is between 100 and 300\n            //   * 40px circles when point count is greater than or equal to 300\n            \"circle-color\": getComputedStyle(\n              document.documentElement\n            ).getPropertyValue(\"--ion-color-\" + dataColor),\n            \"circle-radius\": [\n              \"step\",\n              [\"get\", \"point_count\"],\n              20,\n              100,\n              30,\n              300,\n              40,\n            ],\n          },\n        });\n\n        this.map.addLayer({\n          id: layer2Id,\n          type: \"symbol\",\n          source: dataName,\n          filter: [\"has\", \"point_count\"],\n          layout: {\n            \"text-field\": \"{point_count_abbreviated}\",\n            \"text-font\": [\"DIN Offc Pro Medium\", \"Arial Unicode MS Bold\"],\n            \"text-size\": 12,\n          },\n        });\n\n        this.map.addLayer({\n          id: layer3Id,\n          type: \"circle\",\n          source: dataName,\n          filter: [\"!\", [\"has\", \"point_count\"]],\n          paint: {\n            \"circle-color\": getComputedStyle(\n              document.documentElement\n            ).getPropertyValue(\"--ion-color-\" + dataColor),\n            \"circle-radius\": 8,\n            \"circle-stroke-width\": 1,\n            \"circle-stroke-color\": \"#fff\",\n          },\n        });\n\n        // inspect a cluster on click\n        this.map.on(\"click\", layer1Id, (e) => {\n          var features = this.map.queryRenderedFeatures(e.point, {\n            layers: [layer1Id],\n          });\n          var clusterId = features[0].properties.cluster_id;\n          this.map\n            .getSource(dataName)\n            .getClusterExpansionZoom(clusterId, (err, zoom) => {\n              if (err) return;\n\n              this.map.easeTo({\n                center: features[0].geometry.coordinates,\n                zoom: zoom,\n              });\n            });\n        });\n\n        // When a click event occurs on a feature in\n        // the unclustered-point layer, open a popup at\n        // the location of the feature, with\n        // description HTML from its properties.\n        this.map.on(\"click\", layer3Id, (e) => {\n          const coordinates = e.features[0].geometry.coordinates.slice();\n          // Ensure that if the map is zoomed out such that\n          // multiple copies of the feature are visible, the\n          // popup appears over the copy being pointed to.\n          while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n          }\n\n          // create the popup\n          const properties = JSON.stringify(e.features[0].properties);\n          const popup = new mapboxgl.Popup({offset: 15})\n            .setLngLat(coordinates)\n            .setHTML(\"<app-map-popup properties='\" + properties + \"' />\")\n            .addTo(this.map);\n          // Add a custom event listener to the map\n          this.map.on(\"closePopup\", () => {\n            popup.remove();\n          });\n        });\n\n        this.map.on(\"mouseenter\", layer1Id, () => {\n          this.map.getCanvas().style.cursor = \"pointer\";\n        });\n        this.map.on(\"mouseleave\", layer1Id, () => {\n          this.map.getCanvas().style.cursor = \"\";\n        });\n        this.map.on(\"mouseenter\", layer3Id, () => {\n          this.map.getCanvas().style.cursor = \"pointer\";\n        });\n        this.map.on(\"mouseleave\", layer3Id, () => {\n          this.map.getCanvas().style.cursor = \"\";\n        });\n      } else {\n        //update source data\n        source.setData(geoJsonData);\n      }\n    }\n  }\n\n  removeCluster(geoJsonData) {\n    if (this.map) {\n      const sourceId = geoJsonData.crs.properties.name;\n      // Find all layers that use the source\n      this.map.getStyle().layers.forEach((layer) => {\n        if (layer.source === sourceId) {\n          this.map.removeLayer(layer.id);\n        }\n      });\n\n      // Once all layers are removed, remove the source\n      if (this.map.getSource(sourceId)) {\n        this.map.removeSource(sourceId);\n      }\n    }\n  }\n\n  /*@Method()\n  async addMarker(marker: Marker) {\n    var mapMarker = null;\n    if (USE_GOOGLE) {\n      let latLng = new google.maps.LatLng(marker.lat, marker.lon);\n      mapMarker = new google.maps.Marker({\n        map: this.map,\n        position: latLng,\n        animation: google.maps.Animation.DROP,\n        icon: {\n          path: shapes.ROUTE,\n          fillColor: marker.icon.color,\n          fillOpacity: 0.8,\n          strokeColor: \"\",\n          strokeWeight: 0,\n          labelOrigin: new google.maps.Point(0, -26)\n        },\n        label: {\n          fontFamily: \"'map-icons'\",\n          text: marker.icon.name, //icon code\n          fontSize: \"30px\",\n          fontWeight: \"900\", //careful! some icons in FA5 only exist for specific font weights\n          color: \"blue\" //color of the text inside marker\n        }\n      });\n    } else {\n      let latLng = new mapboxgl.LngLat(\n        toNumber(marker.lon),\n        toNumber(marker.lat)\n      );\n      // create a HTML element for each feature\n      var el = document.createElement(\"ion-icon\");\n      if (marker.icon.type == \"mapicon\") {\n        el.className = \"marker map-icon \" + marker.icon.name;\n      } else {\n        el.className = \"marker\";\n        el.name = marker.icon.name;\n      }\n      el.color = marker.icon.color;\n      // make a marker for each feature and add to the map\n      // create the popup\n      var popup = new mapboxgl.Popup({ offset: 15 }).setHTML(\n        \"<app-map-popup name='\" +\n          marker.name +\n          \"' collection='\" +\n          marker.collection +\n          \"' item='\" +\n          marker.id +\n          \"' />\"\n      );\n      mapMarker = new mapboxgl.Marker(el)\n        .setLngLat(latLng)\n        .setPopup(popup)\n        .addTo(this.map);\n    }\n    return mapMarker;\n  }\n\n  @Method()\n  async getCenter() {\n    return this.map.getCenter();\n  }*/\n\n  render() {\n    return (\n      <Host>\n        <div id={\"map-container-\" + this.pageId}></div>\n        {!this.mapsLoaded ? (\n          <div id=\"load-message\">\n            {this.loadErrorMessage != \"\" ? (\n              <div>\n                <ion-icon name=\"warning\" color=\"dark\"></ion-icon>\n                <ion-text color=\"dark\">\n                  <h3>{this.loadErrorMessage}</h3>\n                </ion-text>\n              </div>\n            ) : (\n              <div>\n                <ion-spinner name=\"bubbles\" color=\"dark\"></ion-spinner>\n                <ion-text color=\"dark\">\n                  <h3>\n                    <my-transl tag=\"loading_map\" text=\"Loading map\"></my-transl>\n                    ...\n                  </h3>\n                </ion-text>\n              </div>\n            )}\n          </div>\n        ) : undefined}\n      </Host>\n    );\n  }\n}\n","app-map-icon {\n  text-align: center;\n  .bkg {\n    border-radius: 10px;\n    background-color: rgba(#fff, 0.3);\n    padding: 5px;\n    p {\n      padding: 0;\n      margin: 0;\n    }\n  }\n}\n","import { Component, h, Prop } from \"@stencil/core\";\nimport { Marker } from \"../../../../../interfaces/interfaces\";\nimport { MapService } from \"../../../../../services/common/map\";\n\n@Component({\n  tag: \"app-map-icon\",\n  styleUrl: \"app-map-icon.scss\",\n})\nexport class AppMapIcon {\n  @Prop() marker: Marker;\n\n  isAvatar = false;\n  componentWillLoad() {\n    this.isAvatar = this.marker.icon.type === \"avatar\";\n  }\n\n  markerClicked(marker) {\n    MapService.markerClicked(marker);\n  }\n\n  render() {\n    return (\n      <div class={!this.isAvatar && this.marker.name ? \"bkg\" : undefined}>\n        {this.isAvatar ? (\n          <ion-chip\n            color={this.marker.icon.color}\n            onClick={() => this.markerClicked(this.marker)}\n          >\n            {this.marker.icon.url ? (\n              <ion-avatar>\n                <img src={this.marker.icon.url} />\n              </ion-avatar>\n            ) : undefined}\n\n            <ion-label>{this.marker.name}</ion-label>\n          </ion-chip>\n        ) : (\n          [\n            <ion-icon\n              color={this.marker.icon.color}\n              size={this.marker.icon.size}\n              class={\n                this.marker.icon.type == \"mapicon\"\n                  ? \"marker map-icon \" + this.marker.icon.name\n                  : this.marker.icon.type == \"udiveicon\"\n                  ? \"marker udive-icon \" + this.marker.icon.name\n                  : \"marker\"\n              }\n              name={\n                this.marker.icon.type == \"ionicon\"\n                  ? this.marker.icon.name\n                  : undefined\n              }\n            ></ion-icon>,\n            this.marker.name ? (\n              <p>\n                <strong>\n                  <ion-text\n                    style={{\n                      color: \"var(--\" + this.marker.icon.color + \"-contrast)\",\n                    }}\n                  >\n                    {this.marker.name}\n                  </ion-text>\n                </strong>\n              </p>\n            ) : undefined,\n          ]\n        )}\n      </div>\n    );\n  }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the chip\n   * @prop --color: Color of the chip\n   */\n  --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);\n  --color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.87);\n  border-radius: 16px;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  -webkit-margin-start: 4px;\n  margin-inline-start: 4px;\n  -webkit-margin-end: 4px;\n  margin-inline-end: 4px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  -webkit-padding-start: 12px;\n  padding-inline-start: 12px;\n  -webkit-padding-end: 12px;\n  padding-inline-end: 12px;\n  padding-top: 6px;\n  padding-bottom: 6px;\n  display: inline-flex;\n  position: relative;\n  align-items: center;\n  min-height: 32px;\n  background: var(--background);\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  cursor: pointer;\n  overflow: hidden;\n  vertical-align: middle;\n  box-sizing: border-box;\n}\n\n:host(.chip-disabled) {\n  cursor: default;\n  opacity: 0.4;\n  pointer-events: none;\n}\n\n:host(.ion-color) {\n  background: rgba(var(--ion-color-base-rgb), 0.08);\n  color: var(--ion-color-shade);\n}\n\n:host(.ion-color:focus) {\n  background: rgba(var(--ion-color-base-rgb), 0.12);\n}\n\n:host(.ion-color.ion-activated) {\n  background: rgba(var(--ion-color-base-rgb), 0.16);\n}\n\n:host(.chip-outline) {\n  border-width: 1px;\n  border-style: solid;\n}\n\n:host(.chip-outline) {\n  border-color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.32);\n  background: transparent;\n}\n\n:host(.chip-outline.ion-color) {\n  border-color: rgba(var(--ion-color-base-rgb), 0.32);\n}\n\n:host(.chip-outline:not(.ion-color):focus) {\n  background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.04);\n}\n\n:host(.chip-outline.ion-activated:not(.ion-color)) {\n  background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.08);\n}\n\n::slotted(ion-icon) {\n  font-size: 1.4285714286em;\n}\n\n:host(:not(.ion-color)) ::slotted(ion-icon) {\n  color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.54);\n}\n\n::slotted(ion-icon:first-child) {\n  -webkit-margin-start: -4px;\n  margin-inline-start: -4px;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: -4px;\n  margin-bottom: -4px;\n}\n\n::slotted(ion-icon:last-child) {\n  -webkit-margin-start: 8px;\n  margin-inline-start: 8px;\n  -webkit-margin-end: -4px;\n  margin-inline-end: -4px;\n  margin-top: -4px;\n  margin-bottom: -4px;\n}\n\n::slotted(ion-avatar) {\n  flex-shrink: 0;\n  width: 1.7142857143em;\n  height: 1.7142857143em;\n}\n\n::slotted(ion-avatar:first-child) {\n  -webkit-margin-start: -8px;\n  margin-inline-start: -8px;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: -4px;\n  margin-bottom: -4px;\n}\n\n::slotted(ion-avatar:last-child) {\n  -webkit-margin-start: 8px;\n  margin-inline-start: 8px;\n  -webkit-margin-end: -8px;\n  margin-inline-end: -8px;\n  margin-top: -4px;\n  margin-bottom: -4px;\n}\n\n:host(:focus) {\n  outline: none;\n}\n\n:host(:focus) {\n  --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.16);\n}\n\n:host(.ion-activated) {\n  --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n}\n\n@media (any-hover: hover) {\n  :host(:hover) {\n    --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.16);\n  }\n  :host(.ion-color:hover) {\n    background: rgba(var(--ion-color-base-rgb), 0.12);\n  }\n  :host(.chip-outline:not(.ion-color):hover) {\n    background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.04);\n  }\n}\n:host {\n  /**\n   * Main content should be prioritized on iOS,\n   * so we set max font size for chips.\n   * We add a min font size to keep the text legible.\n   */\n  font-size: clamp(13px, 0.875rem, 22px);\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the chip\n   * @prop --color: Color of the chip\n   */\n  --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);\n  --color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.87);\n  border-radius: 16px;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  -webkit-margin-start: 4px;\n  margin-inline-start: 4px;\n  -webkit-margin-end: 4px;\n  margin-inline-end: 4px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  -webkit-padding-start: 12px;\n  padding-inline-start: 12px;\n  -webkit-padding-end: 12px;\n  padding-inline-end: 12px;\n  padding-top: 6px;\n  padding-bottom: 6px;\n  display: inline-flex;\n  position: relative;\n  align-items: center;\n  min-height: 32px;\n  background: var(--background);\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  cursor: pointer;\n  overflow: hidden;\n  vertical-align: middle;\n  box-sizing: border-box;\n}\n\n:host(.chip-disabled) {\n  cursor: default;\n  opacity: 0.4;\n  pointer-events: none;\n}\n\n:host(.ion-color) {\n  background: rgba(var(--ion-color-base-rgb), 0.08);\n  color: var(--ion-color-shade);\n}\n\n:host(.ion-color:focus) {\n  background: rgba(var(--ion-color-base-rgb), 0.12);\n}\n\n:host(.ion-color.ion-activated) {\n  background: rgba(var(--ion-color-base-rgb), 0.16);\n}\n\n:host(.chip-outline) {\n  border-width: 1px;\n  border-style: solid;\n}\n\n:host(.chip-outline) {\n  border-color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.32);\n  background: transparent;\n}\n\n:host(.chip-outline.ion-color) {\n  border-color: rgba(var(--ion-color-base-rgb), 0.32);\n}\n\n:host(.chip-outline:not(.ion-color):focus) {\n  background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.04);\n}\n\n:host(.chip-outline.ion-activated:not(.ion-color)) {\n  background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.08);\n}\n\n::slotted(ion-icon) {\n  font-size: 1.4285714286em;\n}\n\n:host(:not(.ion-color)) ::slotted(ion-icon) {\n  color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.54);\n}\n\n::slotted(ion-icon:first-child) {\n  -webkit-margin-start: -4px;\n  margin-inline-start: -4px;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: -4px;\n  margin-bottom: -4px;\n}\n\n::slotted(ion-icon:last-child) {\n  -webkit-margin-start: 8px;\n  margin-inline-start: 8px;\n  -webkit-margin-end: -4px;\n  margin-inline-end: -4px;\n  margin-top: -4px;\n  margin-bottom: -4px;\n}\n\n::slotted(ion-avatar) {\n  flex-shrink: 0;\n  width: 1.7142857143em;\n  height: 1.7142857143em;\n}\n\n::slotted(ion-avatar:first-child) {\n  -webkit-margin-start: -8px;\n  margin-inline-start: -8px;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: -4px;\n  margin-bottom: -4px;\n}\n\n::slotted(ion-avatar:last-child) {\n  -webkit-margin-start: 8px;\n  margin-inline-start: 8px;\n  -webkit-margin-end: -8px;\n  margin-inline-end: -8px;\n  margin-top: -4px;\n  margin-bottom: -4px;\n}\n\n:host(:focus) {\n  outline: none;\n}\n\n:host(:focus) {\n  --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.16);\n}\n\n:host(.ion-activated) {\n  --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n}\n\n@media (any-hover: hover) {\n  :host(:hover) {\n    --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.16);\n  }\n  :host(.ion-color:hover) {\n    background: rgba(var(--ion-color-base-rgb), 0.12);\n  }\n  :host(.chip-outline:not(.ion-color):hover) {\n    background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.04);\n  }\n}\n:host {\n  font-size: 0.875rem;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { createColorClasses } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class Chip {\n    constructor() {\n        this.color = undefined;\n        this.outline = false;\n        this.disabled = false;\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: '7dd923c1b28d1eb1efa348f66f49cec067645af9', \"aria-disabled\": this.disabled ? 'true' : null, class: createColorClasses(this.color, {\n                [mode]: true,\n                'chip-outline': this.outline,\n                'chip-disabled': this.disabled,\n                'ion-activatable': true,\n            }) }, h(\"slot\", { key: '7ede838bf109dc27a898ee2dcdeabc3f439c8e6f' }), mode === 'md' && h(\"ion-ripple-effect\", { key: '5acb073029544e73fcc0db4cc4e661ec1df4d231' })));\n    }\n    static get is() { return \"ion-chip\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"chip.ios.scss\"],\n            \"md\": [\"chip.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"chip.ios.css\"],\n            \"md\": [\"chip.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"outline\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Display an outline style button.\"\n                },\n                \"attribute\": \"outline\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the chip.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n}\n"],"mappings":"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","ignoreList":[]}