import{r as t,e as i,h as o,H as e,f as r}from"./p-cbe60c68.js";import{a$ as n,h as s,i as a,T as l,aN as c,m as h,b0 as d}from"./p-f3984daf.js";import"./p-c7ee7cfe.js";import{t as p}from"./p-5d4a8e1f.js";import{E as g,M as m}from"./p-a9f4af61.js";import{M as b}from"./p-2578d979.js";import{l as u}from"./p-1af05547.js";import{c as f}from"./p-100c2286.js";import{g as x}from"./p-ae1763fb.js";import"./p-7ee16e8d.js";import"./p-e9c4f463.js";import"./p-694b8ade.js";import"./p-3647f076.js";import"./p-9c77ce6f.js";import"./p-c5936999.js";import"./p-6879854f.js";const k="app-map{width:100%;height:100%;}app-map div[id=load-message]{text-align:center;width:100%;height:100%;top:0px;bottom:0px;left:0px;flex:1}app-map div[id=load-message] div{padding-top:30%}app-map div[id^=map-container-]{visibility:hidden;width:100%;height:100%;position:absolute;top:0px;bottom:0px;left:0px;flex:1;background-color:transparent}app-map div[id^=map-container-dashboard]{border-radius:10px;-moz-border-radius:10px;-webkit-mask-border-radius:10px;-webkit-border-radius:10px}app-map .mapboxgl-popup-tip{border-top-color:rgba(255, 255, 255, 0.8) !important;border-bottom-color:rgba(255, 255, 255, 0.8) !important}app-map .mapboxgl-popup-content{background-color:rgba(255, 255, 255, 0.8);padding:0}";const v=k;const w=class{constructor(o){t(this,o);this.mapLoadingCompleted=i(this,"mapLoadingCompleted",7);this.dragMarkerEnd=i(this,"dragMarkerEnd",7);this.emitMapBounds=i(this,"emitMapBounds",7);this.networkHandler=null;this.currentMarkers=[];this.startLocation=null;this.searchFilters=[];this.geoJsonData=[];this.waitForMapCounts=0;this.pageId=undefined;this.markers=[];this.markersAsFeature=false;this.searchTags=[];this.center=undefined;this.currentPosition=false;this.draggableMarkerPosition=undefined;this.mapsLoaded=false;this.loadErrorMessage=""}updateMarkers(){this.currentMarkers.forEach((t=>{t.remove()}));this.addMarkers()}addMarkers(){if(this.markersAsFeature){if(this.markers.length>0){this.addMapPointsForCollection(this.markers,"primary","markers-feature");this.fitToBounds(this.markers)}}else{this.currentMarkers=[];if(this.markers.length>0){this.markers.forEach((t=>{var i=Object.assign(document.createElement("app-map-icon"),{marker:t});let o=new n.LngLat(u.exports.toNumber(t.longitude),u.exports.toNumber(t.latitude));const e=new n.Marker(i).setLngLat(o).addTo(this.map);if(t.clickFn)e.getElement().addEventListener("click",(()=>{t.clickFn()}));this.currentMarkers.push(e)}));this.fitToBounds(this.markers)}}}async mapLoaded(){return new Promise(((t,i)=>{this.waitForMapCounts=0;this.waitForMap(t,i)}))}waitForMap(t,i){if(this.map){this.map.on("load",(()=>t(true)))}else if(this.waitForMapCounts<=20){setTimeout((()=>{this.waitForMapCounts+=1;this.waitForMap(t,i)}),200)}else{i(false)}}async createLine(t,i,o){if(i&&o){const e={type:"FeatureCollection",features:[{type:"Feature",geometry:{type:"LineString",coordinates:[[i.position.geopoint.longitude,i.position.geopoint.latitude],[o.position.geopoint.longitude,o.position.geopoint.latitude]]}}]};this.map.addSource(t,{type:"geojson",data:e});this.map.addLayer({id:t,type:"line",source:t,layout:{"line-join":"round","line-cap":"round"},paint:{"line-color":"#1ac8ff","line-width":5}})}return true}async removeLine(t){if(this.map.getLayer(t))this.map.removeLayer(t);if(this.map.getSource(t))this.map.removeSource(t);return true}async fitToBounds(t){if(this.map){if(t&&t.length>0){if(t.length>1){const i=new n.LngLatBounds;t.forEach((t=>{if(t){let o=null;if(t.position){o=new n.LngLat(t.position.geopoint.longitude,t.position.geopoint.latitude)}else{o=new n.LngLat(t.longitude,t.latitude)}i.extend(o)}}));this.map.fitBounds(i,{padding:{top:100,bottom:100,left:100,right:100},duration:500})}else{let i=null;if(t[0].position){i=new n.LngLat(t[0].position.geopoint.longitude,t[0].position.geopoint.latitude)}else{i=new n.LngLat(t[0].longitude,t[0].latitude)}this.map.easeTo({center:i,zoom:18})}this.map.resize();return true}else if(this.geoJsonData.length>0){const t=new n.LngLatBounds;this.geoJsonData.forEach((i=>{i.features.forEach((i=>{t.extend(i.geometry.coordinates)}))}));this.map.fitBounds(t,{padding:{top:100,bottom:100,left:100,right:100},duration:500});return true}else{return false}}}async triggerMapResize(){this.mapLoaded().then((()=>{this.mapFlyTo(this.actualCenterPosition);this.map.resize()}))}async closePopup(){this.map.fire("closePopup");return true}async updateSearchTags(t){this.searchTags=t;this.dbFilter.filterDocuments(t);return true}async updateDraggableMarkerPos(){const t=new n.LngLat(this.draggableMarkerPosition.lon,this.draggableMarkerPosition.lat);this.draggableMapMarker.setLngLat(t);this.mapFlyTo(t);return true}componentWillLoad(){this.startLocation=b.getPosition();if(g.isUdive()||g.isDecoplanner()){this.dbFilter=s}else if(g.isTrasteel()){this.dbFilter=a}if(this.dbFilter){this.mapDataSub$=this.dbFilter.mapDataSub$.subscribe((t=>{this.markerCollections=t;this.createGeoJsonData()}))}else{this.createGeoJsonData()}}componentDidLoad(){this.init().then((()=>{this.loadErrorMessage=""}),(t=>{this.mapsLoaded=false;this.createToastOverlay("Error: "+t);console.log("Error ",t)}))}disconnectedCallback(){this.toast?this.toast.dismiss():undefined;this.mapDataSub$?this.mapDataSub$.unsubscribe():undefined}async createToastOverlay(t){this.toast?this.toast.dismiss():undefined;let i=t?t:l.getTransl("current_position","Looking for current position");this.toast=await p.create({message:t?i:i+"...",duration:t?2e3:0,color:t?"danger":"dark",buttons:[{icon:"close",role:"cancel"}]});this.toast.present()}init(){return new Promise(((t,i)=>{this.loadSDK().then((()=>{this.initMap().then((()=>{t(true)}),(t=>{i(t)}))}),(t=>{i(t)}))}))}loadSDK(){return new Promise(((t,i)=>{if(!this.mapsLoaded){c.getStatus().then((o=>{if(o.connected){t(true)}else{if(this.networkHandler==null){this.networkHandler=c.addListener("networkStatusChange",(t=>{if(t.connected){this.networkHandler.remove();this.init().then((()=>{this.loadErrorMessage=""}),(t=>{console.log("Error ",t);this.createToastOverlay("Error: "+t)}))}}))}i("Network offline")}}),(o=>{console.log(o);if(navigator.onLine){t(true)}else{i("Network offline")}}))}else{i("SDK already loaded")}}))}async initMap(){this.mapElement=this.el.querySelector("#map-container-"+this.pageId);const t=await h.getLocalDocument("lastUserLocation");var i=await h.getLocalDocument("lastUserZoom");if(this.draggableMarkerPosition){this.currentPosition=false}else if(this.center){this.currentPosition=false}else if(!t||!t.geopoint){this.currentPosition=true}else{this.startLocation=b.getPosition(t.geopoint.latitude,t.geopoint.longitude)}i=i?i:10;n.accessToken=m;let o=this.center?new n.LngLat(this.center.position.geopoint.longitude,this.center.position.geopoint.latitude):new n.LngLat(this.startLocation.geopoint.longitude,this.startLocation.geopoint.latitude);this.map=new n.Map({container:this.mapElement,attributionControl:false,center:o,zoom:this.center?"15":i});let e="satellite-v9";this.map.setStyle("mapbox://styles/mapbox/"+e);this.map.on("load",(()=>{this.mapElement.style.visibility="visible";this.map.resize();this.mapsLoaded=true;if(this.dbFilter){this.dbFilter.sendMapData()}else{this.createGeoJsonData()}this.loadErrorMessage="";this.map.addControl(new n.GeolocateControl({positionOptions:{enableHighAccuracy:true},trackUserLocation:true}),"bottom-left");this.mapLoadingCompleted.emit(true)}));this.map.on("moveend",(()=>{this.saveCurrentPosition();var t=this.map.getBounds();this.emitMapBounds.emit(t)}));this.map.on("zoom",(()=>{this.saveCurrentPosition()}));return this.setCurrentPosition()}async setCurrentPosition(){return new Promise((async(t,i)=>{if(this.currentPosition||this.draggableMarkerPosition&&Object.keys(this.draggableMarkerPosition).length==0){await this.createToastOverlay(false);let o={latitude:this.startLocation.geopoint.latitude,longitude:this.startLocation.geopoint.longitude};d.getCurrentPosition().then((i=>{if(i&&i.coords){o={latitude:i.coords.latitude,longitude:i.coords.longitude}}if(!this.center){let t=new n.LngLat(o.longitude,o.latitude);this.mapFlyTo(t)}this.saveCurrentPosition();if(this.currentPosition);else{this.draggableMarker(o.latitude,o.longitude)}this.toast.dismiss();t(true)}),(()=>{let t=new n.LngLat(o.longitude,o.latitude);this.mapFlyTo(t);if(!this.currentPosition){this.draggableMarker(o.latitude,o.longitude)}i("Could not find current position")}))}else if(this.draggableMarkerPosition&&this.draggableMarkerPosition.lat){this.draggableMarker(this.draggableMarkerPosition.lat,this.draggableMarkerPosition.lon);t(true)}else{t(true)}}))}saveCurrentPosition(){if(this.pageId=="map"||this.pageId=="dashboard"){const t=this.map.getCenter();h.saveLocalDocument("lastUserLocation",b.getPosition(t.lat,t.lon));h.saveLocalDocument("lastUserZoom",this.map.getZoom())}}async draggableMarker(t,i){var o=document.createElement("ion-icon");o.className="marker";o.name="pin";o.color="danger";o.size="large";let e=new n.LngLat(u.exports.toNumber(i),u.exports.toNumber(t));this.draggableMapMarker=new n.Marker(o).setLngLat(e).addTo(this.map);this.draggableMapMarker.setDraggable(true);this.draggableMapMarker.setOffset([0,-12]);this.draggableMapMarker.on("dragend",(()=>{var t=this.draggableMapMarker.getLngLat();this.mapFlyTo(t)}));this.mapFlyTo(e)}mapFlyTo(t){if(t&&t.lat){this.actualCenterPosition=t;this.dragMarkerEnd.emit({lat:t.lat,lon:t.lng});this.map.flyTo({center:t,essential:true})}}async createGeoJsonData(){if(this.mapsLoaded){if(!this.markers||this.markers.length==0){this.geoJsonData=[];u.exports.each(this.markerCollections,(async(t,i)=>{const o=t.filteredCollection;this.addMapPointsForCollection(o,t.icon?t.icon.color:"primary",i)}))}else{this.addMarkers()}}}addMapPointsForCollection(t,i,o){const e={type:"FeatureCollection",crs:{type:"name",properties:{name:o,color:i}},features:[]};u.exports.each(t,(async(t,i)=>{if(t&&t.position){e.features.push({type:"Feature",properties:{id:i,item:JSON.stringify(t),collection:o},geometry:{type:"Point",coordinates:[t.position.geopoint.longitude,t.position.geopoint.latitude]}})}}));if(e.features.length>0){this.geoJsonData.push(e);this.addCluster(e)}else{this.removeCluster(e)}}async addCluster(t){if(this.map){const i=t.crs.properties.name;const o=t.crs.properties.color;const e="clusters-"+i;const r="cluster-count-"+i;const s="unclustered-point-"+i;const a=this.map.getSource(i);if(!a){this.map.addSource(i,{type:"geojson",data:t,cluster:true,clusterMaxZoom:14,clusterRadius:50});this.map.addLayer({id:e,type:"circle",source:i,filter:["has","point_count"],paint:{"circle-color":getComputedStyle(document.documentElement).getPropertyValue("--ion-color-"+o),"circle-radius":["step",["get","point_count"],20,100,30,300,40]}});this.map.addLayer({id:r,type:"symbol",source:i,filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["DIN Offc Pro Medium","Arial Unicode MS Bold"],"text-size":12}});this.map.addLayer({id:s,type:"circle",source:i,filter:["!",["has","point_count"]],paint:{"circle-color":getComputedStyle(document.documentElement).getPropertyValue("--ion-color-"+o),"circle-radius":8,"circle-stroke-width":1,"circle-stroke-color":"#fff"}});this.map.on("click",e,(t=>{var o=this.map.queryRenderedFeatures(t.point,{layers:[e]});var r=o[0].properties.cluster_id;this.map.getSource(i).getClusterExpansionZoom(r,((t,i)=>{if(t)return;this.map.easeTo({center:o[0].geometry.coordinates,zoom:i})}))}));this.map.on("click",s,(t=>{const i=t.features[0].geometry.coordinates.slice();while(Math.abs(t.lngLat.lng-i[0])>180){i[0]+=t.lngLat.lng>i[0]?360:-360}const o=JSON.stringify(t.features[0].properties);const e=new n.Popup({offset:15}).setLngLat(i).setHTML("<app-map-popup properties='"+o+"' />").addTo(this.map);this.map.on("closePopup",(()=>{e.remove()}))}));this.map.on("mouseenter",e,(()=>{this.map.getCanvas().style.cursor="pointer"}));this.map.on("mouseleave",e,(()=>{this.map.getCanvas().style.cursor=""}));this.map.on("mouseenter",s,(()=>{this.map.getCanvas().style.cursor="pointer"}));this.map.on("mouseleave",s,(()=>{this.map.getCanvas().style.cursor=""}))}else{a.setData(t)}}}removeCluster(t){if(this.map){const i=t.crs.properties.name;this.map.getStyle().layers.forEach((t=>{if(t.source===i){this.map.removeLayer(t.id)}}));if(this.map.getSource(i)){this.map.removeSource(i)}}}render(){return o(e,{key:"e86af059e2dfa352dc6dbe554c735f58b47172fa"},o("div",{key:"6d5a18d05da8a1b75863e6ecfa41d49c808325d3",id:"map-container-"+this.pageId}),!this.mapsLoaded?o("div",{id:"load-message"},this.loadErrorMessage!=""?o("div",null,o("ion-icon",{name:"warning",color:"dark"}),o("ion-text",{color:"dark"},o("h3",null,this.loadErrorMessage))):o("div",null,o("ion-spinner",{name:"bubbles",color:"dark"}),o("ion-text",{color:"dark"},o("h3",null,o("my-transl",{tag:"loading_map",text:"Loading map"}),"...")))):undefined)}get el(){return r(this)}static get watchers(){return{markers:["updateMarkers"],draggableMarkerPosition:["updateDraggableMarkerPos"]}}};w.style=v;const y="app-map-icon{text-align:center}app-map-icon .bkg{border-radius:10px;background-color:rgba(255, 255, 255, 0.3);padding:5px}app-map-icon .bkg p{padding:0;margin:0}";const j=y;const M=class{constructor(i){t(this,i);this.isAvatar=false;this.marker=undefined}componentWillLoad(){this.isAvatar=this.marker.icon.type==="avatar"}markerClicked(t){b.markerClicked(t)}render(){return o("div",{key:"a3b5754206482f44d1a486d1532d9ff8e462f91a",class:!this.isAvatar&&this.marker.name?"bkg":undefined},this.isAvatar?o("ion-chip",{color:this.marker.icon.color,onClick:()=>this.markerClicked(this.marker)},this.marker.icon.url?o("ion-avatar",null,o("img",{src:this.marker.icon.url})):undefined,o("ion-label",null,this.marker.name)):[o("ion-icon",{color:this.marker.icon.color,size:this.marker.icon.size,class:this.marker.icon.type=="mapicon"?"marker map-icon "+this.marker.icon.name:this.marker.icon.type=="udiveicon"?"marker udive-icon "+this.marker.icon.name:"marker",name:this.marker.icon.type=="ionicon"?this.marker.icon.name:undefined}),this.marker.name?o("p",null,o("strong",null,o("ion-text",{style:{color:"var(--"+this.marker.icon.color+"-contrast)"}},this.marker.name))):undefined])}};M.style=j;const z=":host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);--color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.87);border-radius:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:4px;margin-inline-end:4px;margin-top:4px;margin-bottom:4px;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:6px;padding-bottom:6px;display:inline-flex;position:relative;align-items:center;min-height:32px;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);cursor:pointer;overflow:hidden;vertical-align:middle;box-sizing:border-box}:host(.chip-disabled){cursor:default;opacity:0.4;pointer-events:none}:host(.ion-color){background:rgba(var(--ion-color-base-rgb), 0.08);color:var(--ion-color-shade)}:host(.ion-color:focus){background:rgba(var(--ion-color-base-rgb), 0.12)}:host(.ion-color.ion-activated){background:rgba(var(--ion-color-base-rgb), 0.16)}:host(.chip-outline){border-width:1px;border-style:solid}:host(.chip-outline){border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.32);background:transparent}:host(.chip-outline.ion-color){border-color:rgba(var(--ion-color-base-rgb), 0.32)}:host(.chip-outline:not(.ion-color):focus){background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.04)}:host(.chip-outline.ion-activated:not(.ion-color)){background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.08)}::slotted(ion-icon){font-size:1.4285714286em}:host(:not(.ion-color)) ::slotted(ion-icon){color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.54)}::slotted(ion-icon:first-child){-webkit-margin-start:-4px;margin-inline-start:-4px;-webkit-margin-end:8px;margin-inline-end:8px;margin-top:-4px;margin-bottom:-4px}::slotted(ion-icon:last-child){-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:-4px;margin-inline-end:-4px;margin-top:-4px;margin-bottom:-4px}::slotted(ion-avatar){flex-shrink:0;width:1.7142857143em;height:1.7142857143em}::slotted(ion-avatar:first-child){-webkit-margin-start:-8px;margin-inline-start:-8px;-webkit-margin-end:8px;margin-inline-end:8px;margin-top:-4px;margin-bottom:-4px}::slotted(ion-avatar:last-child){-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:-8px;margin-inline-end:-8px;margin-top:-4px;margin-bottom:-4px}:host(:focus){outline:none}:host(:focus){--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.16)}:host(.ion-activated){--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2)}@media (any-hover: hover){:host(:hover){--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.16)}:host(.ion-color:hover){background:rgba(var(--ion-color-base-rgb), 0.12)}:host(.chip-outline:not(.ion-color):hover){background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.04)}}:host{font-size:clamp(13px, 0.875rem, 22px)}";const C=z;const P=":host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);--color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.87);border-radius:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:4px;margin-inline-end:4px;margin-top:4px;margin-bottom:4px;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:6px;padding-bottom:6px;display:inline-flex;position:relative;align-items:center;min-height:32px;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);cursor:pointer;overflow:hidden;vertical-align:middle;box-sizing:border-box}:host(.chip-disabled){cursor:default;opacity:0.4;pointer-events:none}:host(.ion-color){background:rgba(var(--ion-color-base-rgb), 0.08);color:var(--ion-color-shade)}:host(.ion-color:focus){background:rgba(var(--ion-color-base-rgb), 0.12)}:host(.ion-color.ion-activated){background:rgba(var(--ion-color-base-rgb), 0.16)}:host(.chip-outline){border-width:1px;border-style:solid}:host(.chip-outline){border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.32);background:transparent}:host(.chip-outline.ion-color){border-color:rgba(var(--ion-color-base-rgb), 0.32)}:host(.chip-outline:not(.ion-color):focus){background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.04)}:host(.chip-outline.ion-activated:not(.ion-color)){background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.08)}::slotted(ion-icon){font-size:1.4285714286em}:host(:not(.ion-color)) ::slotted(ion-icon){color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.54)}::slotted(ion-icon:first-child){-webkit-margin-start:-4px;margin-inline-start:-4px;-webkit-margin-end:8px;margin-inline-end:8px;margin-top:-4px;margin-bottom:-4px}::slotted(ion-icon:last-child){-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:-4px;margin-inline-end:-4px;margin-top:-4px;margin-bottom:-4px}::slotted(ion-avatar){flex-shrink:0;width:1.7142857143em;height:1.7142857143em}::slotted(ion-avatar:first-child){-webkit-margin-start:-8px;margin-inline-start:-8px;-webkit-margin-end:8px;margin-inline-end:8px;margin-top:-4px;margin-bottom:-4px}::slotted(ion-avatar:last-child){-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:-8px;margin-inline-end:-8px;margin-top:-4px;margin-bottom:-4px}:host(:focus){outline:none}:host(:focus){--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.16)}:host(.ion-activated){--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2)}@media (any-hover: hover){:host(:hover){--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.16)}:host(.ion-color:hover){background:rgba(var(--ion-color-base-rgb), 0.12)}:host(.chip-outline:not(.ion-color):hover){background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.04)}}:host{font-size:0.875rem}";const L=P;const _=class{constructor(i){t(this,i);this.color=undefined;this.outline=false;this.disabled=false}render(){const t=x(this);return o(e,{key:"7dd923c1b28d1eb1efa348f66f49cec067645af9","aria-disabled":this.disabled?"true":null,class:f(this.color,{[t]:true,"chip-outline":this.outline,"chip-disabled":this.disabled,"ion-activatable":true})},o("slot",{key:"7ede838bf109dc27a898ee2dcdeabc3f439c8e6f"}),t==="md"&&o("ion-ripple-effect",{key:"5acb073029544e73fcc0db4cc4e661ec1df4d231"}))}};_.style={ios:C,md:L};export{w as app_map,M as app_map_icon,_ as ion_chip};