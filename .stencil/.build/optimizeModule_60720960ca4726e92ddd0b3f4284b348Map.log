{"version":3,"names":["pageMapCss","PageMapStyle0","PageMap","this","searchFilters","mapLoadingCompletedHandler","mapElement","undefined","componentWillLoad","filterButtonTypes","UDiveFilterService","getMapDocs","Object","keys","userSub$","UserService","userProfile$","subscribe","userProfile","UserProfile","componentDidLoad","filterElement","el","getElementsByTagName","customElements","whenDefined","querySelector","filter","disconnectedCallback","unsubscribe","addItem","button","alertMessage","DIVESITESCOLLECTION","tag","text","DIVECENTERSSCOLLECTION","DIVECOMMUNITIESCOLLECTION","DIVESCHOOLSSCOLLECTION","SERVICECENTERSCOLLECTION","alert","alertController","create","header","TranslationService","getTransl","message","buttons","role","handler","DiveSitesService","presentDiveSiteUpdate","DivingCentersService","presentDivingCenterUpdate","DiveCommunitiesService","presentDiveCommunityUpdate","DivingSchoolsService","presentDivingSchoolUpdate","ServiceCentersService","presentServiceCenterUpdate","present","ev","searchTags","detail","updateSearchTags","fitToBounds","render","h","key","onSearchFilterEmit","fullscreen","pageId","uid","vertical","horizontal","slot","class","name","side","map","USERPUBLICPROFILECOLLECTION","style","icon","color","onClick","type"],"sources":["src/components/udive/pages/common/page-map/page-map.scss?tag=page-map","src/components/udive/pages/common/page-map/page-map.tsx"],"sourcesContent":["page-map {\n  ion-icon {\n    color: rgba(255, 255, 255, 0.9);\n  }\n}\n","import {Component, h, Listen, Element, State} from \"@stencil/core\";\nimport {UDiveFilterService} from \"../../../../../services/udive/ud-db-filter\";\nimport {CollectionGroup, SearchTag} from \"../../../../../interfaces/interfaces\";\nimport {Marker} from \"../../../../../interfaces/interfaces\";\nimport {\n  UserService,\n  USERPUBLICPROFILECOLLECTION,\n} from \"../../../../../services/common/user\";\nimport {Subscription} from \"rxjs\";\nimport {\n  DiveSitesService,\n  DIVESITESCOLLECTION,\n} from \"../../../../../services/udive/diveSites\";\nimport {\n  DivingCentersService,\n  DIVECENTERSSCOLLECTION,\n} from \"../../../../../services/udive/divingCenters\";\nimport {UserProfile} from \"../../../../../interfaces/common/user/user-profile\";\nimport {alertController} from \"@ionic/core\";\nimport {TranslationService} from \"../../../../../services/common/translations\";\nimport {\n  DIVESCHOOLSSCOLLECTION,\n  DivingSchoolsService,\n} from \"../../../../../services/udive/divingSchools\";\nimport {\n  ServiceCentersService,\n  SERVICECENTERSCOLLECTION,\n} from \"../../../../../services/udive/serviceCenters\";\nimport {\n  DIVECOMMUNITIESCOLLECTION,\n  DiveCommunitiesService,\n} from \"../../../../../services/udive/diveCommunities\";\n\n@Component({\n  tag: \"page-map\",\n  styleUrl: \"page-map.scss\",\n})\nexport class PageMap {\n  @Element() el: HTMLElement;\n\n  filterElement: HTMLAppSearchFilterElement;\n  searchFilters = [];\n  @State() searchTags: SearchTag[];\n  markerCollections: CollectionGroup;\n  @State() markers: Marker[] = [];\n  filterButtonTypes: any;\n  mapElement: HTMLAppMapElement;\n  @State() userProfile: UserProfile;\n  userSub$: Subscription;\n\n  @Listen(\"mapLoadingCompleted\")\n  mapLoadingCompletedHandler() {\n    //necessary to recenter map in the correct position\n    this.mapElement ? this.mapElement[\"triggerMapResize\"]() : undefined;\n  }\n\n  componentWillLoad() {\n    this.filterButtonTypes = UDiveFilterService.getMapDocs();\n    this.searchFilters = Object.keys(this.filterButtonTypes);\n    this.userSub$ = UserService.userProfile$.subscribe(\n      (userProfile: UserProfile) => {\n        this.userProfile = new UserProfile(userProfile);\n      }\n    );\n  }\n\n  async componentDidLoad() {\n    this.filterElement = this.el.getElementsByTagName(\"app-search-filter\")[0];\n    await customElements.whenDefined(\"app-map\");\n    this.mapElement = this.el.querySelector(\"app-map\") as any;\n    this.filter();\n  }\n\n  disconnectedCallback() {\n    this.userSub$.unsubscribe();\n  }\n\n  async addItem(button) {\n    let alertMessage = null;\n    switch (button) {\n      case DIVESITESCOLLECTION:\n        alertMessage = {\n          tag: \"dive-site\",\n          text: \"Dive Site\",\n        };\n        break;\n      case DIVECENTERSSCOLLECTION:\n        alertMessage = {\n          tag: \"diving-center\",\n          text: \"Diving Center\",\n        };\n        break;\n\n      case DIVECOMMUNITIESCOLLECTION:\n        alertMessage = {\n          tag: \"dive-community\",\n          text: \"Dive Community\",\n        };\n        break;\n      case DIVESCHOOLSSCOLLECTION:\n        alertMessage = {\n          tag: \"diving-school\",\n          text: \"Diving School\",\n        };\n        break;\n      case SERVICECENTERSCOLLECTION:\n        alertMessage = {\n          tag: \"service-center\",\n          text: \"Service Center\",\n        };\n        break;\n    }\n    const alert = await alertController.create({\n      header: TranslationService.getTransl(alertMessage.tag, alertMessage.text),\n      message:\n        TranslationService.getTransl(\n          \"add-item-message\",\n          \"This will add a new item of type:\"\n        ) +\n        \" \" +\n        TranslationService.getTransl(alertMessage.tag, alertMessage.text) +\n        \". \" +\n        TranslationService.getTransl(\"are-you-sure\", \"Are you sure?\"),\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n          role: \"cancel\",\n          handler: () => {},\n        },\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n          handler: () => {\n            switch (button) {\n              case DIVESITESCOLLECTION:\n                DiveSitesService.presentDiveSiteUpdate();\n                break;\n              case DIVECENTERSSCOLLECTION:\n                DivingCentersService.presentDivingCenterUpdate();\n                break;\n\n              case DIVECOMMUNITIESCOLLECTION:\n                DiveCommunitiesService.presentDiveCommunityUpdate();\n                break;\n              case DIVESCHOOLSSCOLLECTION:\n                DivingSchoolsService.presentDivingSchoolUpdate();\n                break;\n              case SERVICECENTERSCOLLECTION:\n                ServiceCentersService.presentServiceCenterUpdate();\n                break;\n            }\n          },\n        },\n      ],\n    });\n    alert.present();\n  }\n\n  filter(ev?) {\n    this.searchTags = ev ? ev.detail : [];\n    this.mapElement.updateSearchTags(this.searchTags);\n    this.mapElement.fitToBounds();\n  }\n\n  render() {\n    return [\n      <ion-header>\n        <app-search-filter onSearchFilterEmit={(ev) => this.filter(ev)} />\n      </ion-header>,\n      <ion-content fullscreen>\n        <app-map pageId=\"map\" searchTags={this.searchTags} />\n        {this.userProfile && this.userProfile.uid ? (\n          <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n            <ion-fab-button class=\"fab-icon\">\n              <ion-icon name=\"add-circle\"></ion-icon>\n            </ion-fab-button>\n            <ion-fab-list side=\"start\">\n              {this.searchFilters.map((button) =>\n                button != USERPUBLICPROFILECOLLECTION ? (\n                  <ion-fab-button\n                    style={{\n                      \"--background\": this.filterButtonTypes[button].icon.color,\n                    }}\n                    onClick={() => this.addItem(button)}\n                  >\n                    {this.filterButtonTypes[button].icon.type == \"ionicon\" ? (\n                      <ion-icon\n                        name={this.filterButtonTypes[button].icon.name}\n                      ></ion-icon>\n                    ) : (\n                      <ion-icon\n                        class={\n                          \"map-icon \" + this.filterButtonTypes[button].icon.name\n                        }\n                      ></ion-icon>\n                    )}\n                  </ion-fab-button>\n                ) : undefined\n              )}\n            </ion-fab-list>\n          </ion-fab>\n        ) : undefined}\n      </ion-content>,\n    ];\n  }\n}\n"],"mappings":"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","ignoreList":[]}