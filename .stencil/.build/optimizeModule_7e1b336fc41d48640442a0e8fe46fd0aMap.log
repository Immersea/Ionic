{"version":3,"names":["appDivingCenterCardCss","AppDivingCenterCardStyle0","AppDivingCenterCard","componentWillLoad","this","divingCenter","DivingCentersService","divingCentersList","find","item","id","divingCenterId","render","h","key","onClick","presentDivingCenterDetails","class","lines","displayName","startlocation","tag","text","distance","latitude","longitude","position","geopoint","undefined"],"sources":["src/components/udive/app/dive-sites/app-diving-center-card/app-diving-center-card.scss?tag=app-diving-center-card","src/components/udive/app/dive-sites/app-diving-center-card/app-diving-center-card.tsx"],"sourcesContent":["app-diving-center-card {\n  /* Component styles go here */\n  width: 100%;\n  height: 100%;\n}\n","import { Component, h, Prop, State } from \"@stencil/core\";\nimport { distance } from \"../../../../../helpers/utils\";\nimport { MapDataDivingCenter } from \"../../../../../interfaces/udive/diving-center/divingCenter\";\nimport { DivingCentersService } from \"../../../../../services/udive/divingCenters\";\n\n@Component({\n  tag: \"app-diving-center-card\",\n  styleUrl: \"app-diving-center-card.scss\",\n})\nexport class AppDivingCenterCard {\n  @Prop() divingCenterId: string;\n  @Prop() startlocation: any;\n  @State() divingCenter: MapDataDivingCenter;\n\n  componentWillLoad() {\n    this.divingCenter = DivingCentersService.divingCentersList.find(\n      (item) => item.id == this.divingCenterId\n    );\n  }\n\n  render() {\n    return (\n      <ion-card\n        onClick={() =>\n          DivingCentersService.presentDivingCenterDetails(this.divingCenterId)\n        }\n      >\n        <app-item-cover item={this.divingCenter} />\n        <ion-card-header>\n          <ion-item class='ion-no-padding' lines='none'>\n            <ion-card-title>{this.divingCenter.displayName}</ion-card-title>\n          </ion-item>\n          <ion-card-content>\n            {this.startlocation\n              ? [\n                  <my-transl tag='distance' text='Distance'></my-transl>,\n                  \": \" +\n                    distance(\n                      this.startlocation.latitude,\n                      this.startlocation.longitude,\n                      this.divingCenter.position.geopoint.latitude,\n                      this.divingCenter.position.geopoint.longitude\n                    ),\n                ]\n              : undefined}\n          </ion-card-content>\n        </ion-card-header>\n      </ion-card>\n    );\n  }\n}\n"],"mappings":"uUAAA,MAAMA,EAAyB,iDAC/B,MAAAC,EAAeD,E,MCQFE,EAAmB,M,gHAK9B,iBAAAC,GACEC,KAAKC,aAAeC,EAAqBC,kBAAkBC,MACxDC,GAASA,EAAKC,IAAMN,KAAKO,gB,CAI9B,MAAAC,GACE,OACEC,EAAA,YAAAC,IAAA,2CACEC,QAAS,IACPT,EAAqBU,2BAA2BZ,KAAKO,iBAGvDE,EAAA,kBAAAC,IAAA,2CAAgBL,KAAML,KAAKC,eAC3BQ,EAAA,mBAAAC,IAAA,4CACED,EAAA,YAAAC,IAAA,2CAAUG,MAAM,iBAAiBC,MAAM,QACrCL,EAAA,kBAAAC,IAAA,4CAAiBV,KAAKC,aAAac,cAErCN,EAAA,oBAAAC,IAAA,4CACGV,KAAKgB,cACF,CACEP,EAAA,aAAWQ,IAAI,WAAWC,KAAK,aAC/B,KACEC,EACEnB,KAAKgB,cAAcI,SACnBpB,KAAKgB,cAAcK,UACnBrB,KAAKC,aAAaqB,SAASC,SAASH,SACpCpB,KAAKC,aAAaqB,SAASC,SAASF,YAG1CG,Y","ignoreList":[]}