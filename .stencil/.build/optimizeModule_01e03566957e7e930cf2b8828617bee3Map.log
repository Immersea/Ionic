{"version":3,"names":["modalDiveTemplateCss","ModalDiveTemplateStyle0","ModalDiveTemplate","this","updateView","componentWillLoad","divePlan","DivePlan","newPlanModel","divePlanModel","selectedConfiguration","setConfiguration","dive","addDive","resetDiveWithConfiguration","configuration","setWithDivePlanModel","index","dives","length","stdGases","stdDecoGases","gases","DiveStandardsService","getStdGases","forEach","list","push","filter","deco","orderBy","diveDataToShare","dive_less_time","dive_more_time","dive_less_depth","dive_more_depth","stdConfigurations","user","userRoles","showDiveSite","showPositionTab","updateParams","params","parameters","detail","save","el","closest","dismiss","getDivePlanModel","close","render","h","key","tag","text","stdName","color","Environment","isDecoplanner","modal","onUpdateParamsEvent","onCancelEmit","onSaveEmit"],"sources":["src/components/udive/modals/dive-site/modal-dive-template/modal-dive-template.scss?tag=modal-dive-template","src/components/udive/modals/dive-site/modal-dive-template/modal-dive-template.tsx"],"sourcesContent":["modal-dive-template {\n    /* Component styles go here */\n}\n","import {Component, h, Prop, Element} from \"@stencil/core\";\nimport {DiveConfiguration} from \"../../../../../interfaces/udive/planner/dive-configuration\";\nimport {UserRoles} from \"../../../../../interfaces/common/user/user-roles\";\nimport {DivePlanModel} from \"../../../../../interfaces/udive/planner/dive-plan\";\nimport {DivePlan} from \"../../../../../services/udive/planner/dive-plan\";\nimport {GasModel} from \"../../../../../interfaces/udive/planner/gas-model\";\nimport {DiveStandardsService} from \"../../../../../services/udive/planner/dive-standards\";\nimport {filter, orderBy} from \"lodash\";\nimport {Environment} from \"../../../../../global/env\";\n\n@Component({\n  tag: \"modal-dive-template\",\n  styleUrl: \"modal-dive-template.scss\",\n})\nexport class ModalDiveTemplate {\n  @Element() el: HTMLElement;\n  @Prop() stdConfigurations: Array<DiveConfiguration> = [];\n  @Prop() index: number = 0;\n  @Prop() userRoles: UserRoles;\n  @Prop() selectedConfiguration: DiveConfiguration;\n  @Prop() showPositionTab: boolean = false;\n  @Prop() divePlanModel: DivePlanModel;\n  @Prop() addDive?: boolean = false;\n  divePlan: DivePlan;\n  diveDataToShare: any;\n  updateView = true;\n\n  stdGases: Array<GasModel>;\n  stdDecoGases: Array<GasModel>;\n\n  componentWillLoad() {\n    //convert into DivePlan provider and start calculations for the dive\n    this.divePlan = new DivePlan();\n    //this.divePlan.setProviders(this.translate)\n    let newPlanModel = this.divePlanModel;\n    if (!newPlanModel) {\n      //insert new dive plan\n      let selectedConfiguration = this.selectedConfiguration;\n      //add new dive with selected config\n      this.divePlan.setConfiguration(selectedConfiguration);\n      let dive = this.divePlan.addDive();\n      this.divePlan.resetDiveWithConfiguration(dive, selectedConfiguration);\n    } else {\n      this.divePlan.setConfiguration(newPlanModel.configuration);\n      this.divePlan.setWithDivePlanModel(newPlanModel);\n      if (this.addDive) {\n        //insert new dive plan\n        let dive = this.divePlan.addDive();\n        this.divePlan.resetDiveWithConfiguration(\n          dive,\n          newPlanModel.configuration\n        );\n        this.index = this.divePlan.dives.length - 1;\n      }\n    }\n    this.stdGases = [];\n    this.stdDecoGases = [];\n    let gases = [];\n    DiveStandardsService.getStdGases().forEach((list) => {\n      gases.push(list);\n    });\n    this.stdGases = filter(gases, {deco: false});\n    this.stdGases = orderBy(this.stdGases, \"fromDepth\", \"asc\");\n    this.stdDecoGases = filter(gases, {deco: true});\n    this.stdDecoGases = orderBy(this.stdDecoGases, \"fromDepth\", \"desc\");\n\n    this.diveDataToShare = {\n      divePlan: this.divePlan,\n      dive_less_time: null,\n      dive_more_time: null,\n      dive_less_depth: null,\n      dive_more_depth: null,\n      index: this.index,\n      stdGases: this.stdGases,\n      stdDecoGases: this.stdDecoGases,\n      stdConfigurations: this.stdConfigurations,\n      user: this.userRoles,\n      showDiveSite: this.showPositionTab,\n      showPositionTab: this.showPositionTab,\n    };\n  }\n\n  updateParams(params) {\n    this.divePlan.configuration.parameters = params.detail;\n    this.updateView = !this.updateView;\n  }\n\n  save() {\n    this.el.closest(\"ion-modal\").dismiss(this.divePlan.getDivePlanModel());\n  }\n\n  close() {\n    this.el.closest(\"ion-modal\").dismiss();\n  }\n  render() {\n    return [\n      <app-navbar\n        tag=\"deco-planner\"\n        text=\"Deco Planner\"\n        extra-title={this.divePlan.configuration.stdName}\n        color={Environment.isDecoplanner() ? \"gue-blue\" : \"planner\"}\n        modal={true}\n      ></app-navbar>,\n      <ion-content>\n        <app-decoplanner-plan\n          diveDataToShare={this.diveDataToShare}\n          onUpdateParamsEvent={(params) => this.updateParams(params)}\n        />\n      </ion-content>,\n      <app-modal-footer\n        onCancelEmit={() => this.close()}\n        onSaveEmit={() => this.save()}\n      />,\n    ];\n  }\n}\n"],"mappings":"kWAAA,MAAMA,EAAuB,wBAC7B,MAAAC,EAAeD,E,MCaFE,EAAiB,M,yBAW5BC,KAAAC,WAAa,K,uBATyC,G,WAC9B,E,mFAGW,M,0CAEP,K,CAQ5B,iBAAAC,GAEEF,KAAKG,SAAW,IAAIC,EAEpB,IAAIC,EAAeL,KAAKM,cACxB,IAAKD,EAAc,CAEjB,IAAIE,EAAwBP,KAAKO,sBAEjCP,KAAKG,SAASK,iBAAiBD,GAC/B,IAAIE,EAAOT,KAAKG,SAASO,UACzBV,KAAKG,SAASQ,2BAA2BF,EAAMF,E,KAC1C,CACLP,KAAKG,SAASK,iBAAiBH,EAAaO,eAC5CZ,KAAKG,SAASU,qBAAqBR,GACnC,GAAIL,KAAKU,QAAS,CAEhB,IAAID,EAAOT,KAAKG,SAASO,UACzBV,KAAKG,SAASQ,2BACZF,EACAJ,EAAaO,eAEfZ,KAAKc,MAAQd,KAAKG,SAASY,MAAMC,OAAS,C,EAG9ChB,KAAKiB,SAAW,GAChBjB,KAAKkB,aAAe,GACpB,IAAIC,EAAQ,GACZC,EAAqBC,cAAcC,SAASC,IAC1CJ,EAAMK,KAAKD,EAAK,IAElBvB,KAAKiB,SAAWQ,iBAAON,EAAO,CAACO,KAAM,QACrC1B,KAAKiB,SAAWU,kBAAQ3B,KAAKiB,SAAU,YAAa,OACpDjB,KAAKkB,aAAeO,iBAAON,EAAO,CAACO,KAAM,OACzC1B,KAAKkB,aAAeS,kBAAQ3B,KAAKkB,aAAc,YAAa,QAE5DlB,KAAK4B,gBAAkB,CACrBzB,SAAUH,KAAKG,SACf0B,eAAgB,KAChBC,eAAgB,KAChBC,gBAAiB,KACjBC,gBAAiB,KACjBlB,MAAOd,KAAKc,MACZG,SAAUjB,KAAKiB,SACfC,aAAclB,KAAKkB,aACnBe,kBAAmBjC,KAAKiC,kBACxBC,KAAMlC,KAAKmC,UACXC,aAAcpC,KAAKqC,gBACnBA,gBAAiBrC,KAAKqC,gB,CAI1B,YAAAC,CAAaC,GACXvC,KAAKG,SAASS,cAAc4B,WAAaD,EAAOE,OAChDzC,KAAKC,YAAcD,KAAKC,U,CAG1B,IAAAyC,GACE1C,KAAK2C,GAAGC,QAAQ,aAAaC,QAAQ7C,KAAKG,SAAS2C,mB,CAGrD,KAAAC,GACE/C,KAAK2C,GAAGC,QAAQ,aAAaC,S,CAE/B,MAAAG,GACE,MAAO,CACLC,EAAA,cAAAC,IAAA,2CACEC,IAAI,eACJC,KAAK,eAAc,cACNpD,KAAKG,SAASS,cAAcyC,QACzCC,MAAOC,EAAYC,gBAAkB,WAAa,UAClDC,MAAO,OAETR,EAAA,eAAAC,IAAA,4CACED,EAAA,wBAAAC,IAAA,2CACEtB,gBAAiB5B,KAAK4B,gBACtB8B,oBAAsBnB,GAAWvC,KAAKsC,aAAaC,MAGvDU,EAAA,oBAAAC,IAAA,2CACES,aAAc,IAAM3D,KAAK+C,QACzBa,WAAY,IAAM5D,KAAK0C,S","ignoreList":[]}