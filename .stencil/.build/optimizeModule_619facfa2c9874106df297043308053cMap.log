{"version":3,"names":["pageLoginCss","PageLoginStyle0","PageLogin","this","newUserRegistration","name","valid","value","componentWillLoad","SystemService","getNetworkStatus","then","networkObservable","subscribe","status","network","trasteelLogin","Environment","isTrasteel","sendLink","AuthService","sendEmailLink","email","trim","showAlert","error","googleLogin","google","appleLogin","alert","alertController","create","header","TranslationService","getTransl","message","buttons","text","handler","async","apple","present","loginWithEmail","signInWithEmailPsw","emailpsw","psw","DatabaseService","getLocalDocument","dismissLoading","forgotPsw","presentLoading","passwordReset","showPswResetAlert","catch","message_error","message_ok","log","code","checkEmail","RouterService","push","pswreset","pswreseterror","show_message","inputHandler","event","detail","checkRetypePassword","retypepsw","emailRegex","toLower","includes","test","checkingEmail","methods","fetchSignInMethodsForEmail","disablePswFields","disableEmailLinkFields","disableGoogle","disableFacebook","disableApple","length","passwordCheck","render","h","key","color","getAppColor","tag","scrollEvents","onIonScroll","ev","scrollTop","isUdive","isDecoplanner","scrollTopValue","heightPx","link","undefined","slot","lines","onFormItemChanged","disabled","debounce","validator","class","expand","onClick","isAndroid"],"sources":["src/components/common/pages/user/page-login/page-login.scss?tag=page-login","src/components/common/pages/user/page-login/page-login.tsx"],"sourcesContent":["page-login {\n  /* Component styles go here */\n  .apple {\n    --background: black;\n  }\n  .facebook {\n    --background: var(--facebook-color);\n  }\n  .google {\n    --background: var(--google-color);\n  }\n\n  .validation-error {\n    padding-left: 18px;\n    font-size: 0.7rem;\n    color: red;\n  }\n\n  .small {\n    font-size: 0.8rem;\n    color: var(--ion-color-tint);\n  }\n\n  .centered {\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n  }\n}\n","import { Component, h, State } from \"@stencil/core\";\nimport { AuthService } from \"../../../../../services/common/auth\";\nimport { TranslationService } from \"../../../../../services/common/translations\";\nimport { alertController } from \"@ionic/core\";\nimport { InputValidator } from \"../../../../../interfaces/interfaces\";\nimport { RouterService } from \"../../../../../services/common/router\";\nimport { DatabaseService } from \"../../../../../services/common/database\";\nimport { Environment } from \"../../../../../global/env\";\nimport { SystemService } from \"../../../../../services/common/system\";\nimport { toLower } from \"lodash\";\n\n@Component({\n  tag: \"page-login\",\n  styleUrl: \"page-login.scss\",\n})\nexport class PageLogin {\n  @State() email: InputValidator = {\n    name: \"email\",\n    valid: false,\n    value: \"\",\n  };\n  @State() emailpsw: InputValidator = {\n    name: \"emailpsw\",\n    valid: false,\n    value: \"\",\n  };\n  @State() psw: InputValidator = {\n    name: \"psw\",\n    valid: false,\n    value: \"\",\n  };\n  @State() retypepsw: InputValidator = {\n    name: \"retypepsw\",\n    valid: true,\n    value: \"\",\n  };\n\n  @State() passwordCheck = true;\n\n  @State() trasteelLogin = false;\n  @State() disablePswFields = false;\n  @State() disableEmailLinkFields = false;\n  @State() disableGoogle = false;\n  @State() disableFacebook = true;\n  @State() disableApple = false;\n\n  @State() network = false;\n  @State() scrollTop = 0;\n\n  newUserRegistration = false;\n\n  checkEmailTimer;\n  @State() checkingEmail = false;\n\n  componentWillLoad() {\n    SystemService.getNetworkStatus().then((networkObservable) => {\n      networkObservable.subscribe((status) => {\n        this.network = status;\n      });\n    });\n    this.trasteelLogin = Environment.isTrasteel();\n  }\n\n  async sendLink() {\n    try {\n      await AuthService.sendEmailLink(this.email.value.trim());\n      this.email.value = \"\";\n      this.showAlert(false);\n    } catch (error) {\n      this.showAlert(error);\n    }\n  }\n\n  async googleLogin() {\n    try {\n      await AuthService.google();\n    } catch (error) {\n      this.showAlert(error);\n    }\n  }\n\n  /*async facebookLogin() {\n    try {\n      await AuthService.facebook();\n    } catch (error) {\n      this.showAlert(error);\n    }\n  }*/\n\n  async appleLogin() {\n    const alert = await alertController.create({\n      header: TranslationService.getTransl(\"login\", \"Login\"),\n      message: TranslationService.getTransl(\n        \"apple-login-message\",\n        \"In order to login with the same Apple account also with other devices, it is necessary to share your original email address.\"\n      ),\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n          handler: async () => {\n            try {\n              await AuthService.apple();\n            } catch (error) {\n              this.showAlert(error);\n            }\n          },\n        },\n        {\n          text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n        },\n      ],\n    });\n    alert.present();\n  }\n\n  async loginWithEmail() {\n    try {\n      await AuthService.signInWithEmailPsw(\n        this.email.valid ? this.email.value.trim() : this.emailpsw.value.trim(),\n        this.psw.value\n      );\n      //check if signedin with link\n      const email = await DatabaseService.getLocalDocument(\"emailForSignIn\");\n      if (email) {\n        this.emailpsw.value = \"\";\n        this.psw.value = \"\";\n        this.showAlert(false);\n      } else {\n        AuthService.dismissLoading();\n      }\n    } catch (error) {\n      this.showAlert(error);\n    }\n  }\n\n  forgotPsw() {\n    //RouterService.push(\"/forgotpsw\", \"forward\");\n    SystemService.presentLoading(\"please-wait\");\n    const email = this.email.value ? this.email.value : this.emailpsw.value;\n    AuthService.passwordReset(email)\n      .then(() => {\n        SystemService.dismissLoading();\n        this.showPswResetAlert(\"pswreset\");\n      })\n      .catch(() => {\n        SystemService.dismissLoading();\n        this.showPswResetAlert(\"pswreseterror\");\n      });\n  }\n\n  async showAlert(error) {\n    let header = TranslationService.getTransl(\"login\", \"Login\");\n    let message_error = TranslationService.getTransl(\n      \"login-error\",\n      \"There was an error in the login process. Please try again later.\"\n    );\n    let message_ok = TranslationService.getTransl(\n      \"registration-success-email\",\n      \"The registration/login has been completed! You will now receive a link in your email to complete the login process. If you don't receive the email within 1 minute please check in your spam folder.\"\n    );\n    if (error) {\n      Environment.log(\"registration/login error\", [error]);\n      switch (error.code) {\n        case \"auth/popup-blocked\":\n          message_error = TranslationService.getTransl(\n            \"popup-error\",\n            \"You should allow popup windows in the browser's preferences in order to complete the login process.\"\n          );\n          break;\n        case \"auth/account-exists-with-different-credential\":\n          if (error.email) {\n            this.emailpsw.value = error.email;\n            this.checkEmail();\n          }\n          message_error = TranslationService.getTransl(\n            \"popup-error-existing-account\",\n            \"You have already logged in with this email using another Sign-In method. Insert your email in the 'Email' field to check your exisiting method.\"\n          );\n          break;\n        case \"auth/missing-or-invalid-nonce\":\n          if (error.email) {\n            this.emailpsw.value = error.email;\n            this.checkEmail();\n          }\n          message_error = TranslationService.getTransl(\n            \"popup-error-duplicate-credential\",\n            \"Duplicate credential received. Please try again with a new credential.\"\n          );\n          break;\n        default:\n          message_error += error.message ? \" (\" + error.message + \")\" : \"\";\n      }\n    }\n\n    const alert = await alertController.create({\n      header: header,\n      message: error ? message_error : message_ok,\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n          handler: async () => {\n            RouterService.push(\"/\", \"root\");\n          },\n        },\n      ],\n    });\n    AuthService.dismissLoading();\n    alert.present();\n  }\n\n  async showPswResetAlert(message) {\n    let header = TranslationService.getTransl(\"login\", \"Login\");\n    let pswreset = TranslationService.getTransl(\n      \"pswreset\",\n      \"You will receive shortly an email to reset your password. Please follow the instructions and then come back to the login page.\"\n    );\n    let pswreseterror = TranslationService.getTransl(\n      \"pswreseterror\",\n      \"There was an error in the reset process. Please try again later.\"\n    );\n    let show_message = \"\";\n    switch (message) {\n      case \"pswreset\":\n        show_message = pswreset;\n        break;\n      case \"pswreseterror\":\n        show_message = pswreseterror;\n        break;\n    }\n\n    const alert = await alertController.create({\n      header: header,\n      message: show_message,\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n        },\n      ],\n    });\n    AuthService.dismissLoading();\n    alert.present();\n  }\n\n  inputHandler(event) {\n    this[event.detail.name] = event.detail;\n    if (event.detail.name == \"retypepsw\") {\n      this.checkRetypePassword();\n    } else if (\n      event.detail.name == \"emailpsw\" ||\n      event.detail.name == \"email\"\n    ) {\n      this.psw.value = \"\";\n      this.psw.valid = true;\n      this.retypepsw.valid = true;\n      this.retypepsw.value = \"\";\n      // Function to validate email using regex\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      //check email address\n      const email = toLower(event.detail.value);\n      this.email.value = toLower(email);\n      this.emailpsw.value = this.email.value;\n      if (Environment.isTrasteel() && event.detail.name == \"email\") {\n        if (\n          (!this.email.value.includes(\"@trasteel.com\") &&\n            !this.email.value.includes(\"@trasteelnetwork.com\") &&\n            !this.email.value.includes(\"@o-range.tech\") &&\n            !this.email.value.includes(\"@ipermediastudio.it\")) ||\n          !emailRegex.test(this.email.value)\n        ) {\n          this.email.valid = false;\n          this.emailpsw.valid = false;\n        } else {\n          this.email.valid = true;\n          this.emailpsw.valid = true;\n        }\n      } else {\n        //check email field\n        if (emailRegex.test(this.email.value)) {\n          this.email.valid = true;\n          this.emailpsw.valid = true;\n        } else {\n          this.email.valid = false;\n          this.emailpsw.valid = false;\n        }\n      }\n      this.checkEmail();\n    }\n  }\n\n  async checkEmail() {\n    if (!this.checkingEmail) {\n      this.checkingEmail = true;\n      if (this.emailpsw.valid) {\n        await SystemService.presentLoading(\"searching\");\n        const methods = await AuthService.fetchSignInMethodsForEmail(\n          this.emailpsw.value\n        );\n        this.disablePswFields = false;\n        this.disableEmailLinkFields = false;\n        this.disableGoogle = false;\n        this.disableFacebook = true; //false;\n        this.disableApple = false;\n        if (methods.length == 0) {\n          //new user\n          this.newUserRegistration = true;\n          //this.retypepsw.valid = false;\n        } else {\n          this.newUserRegistration = false;\n          //this.retypepsw.valid = true;\n          //enable password fields for emailLink and Password methods\n          this.disablePswFields = !methods.includes(\"password\");\n          this.disableEmailLinkFields = !methods.includes(\"emailLink\");\n          this.disableFacebook = true; //!methods.includes(\"facebook.com\");\n          this.disableApple = !methods.includes(\"apple.com\");\n          this.disableGoogle = !methods.includes(\"google.com\");\n          /*if (methods.includes(\"facebook.com\")) {\n            //remove facebook login and allow google or psw\n            this.disablePswFields = true;\n            this.disableGoogle = false;\n          }\n          if (methods.includes(\"apple.com\") && isPlatform(\"android\")) {\n            //alert user for Apple\n            const alert = await alertController.create({\n              header: TranslationService.getTransl(\"login\", \"Login\"),\n              message: TranslationService.getTransl(\n                \"apple-login-error\",\n                \"You previously logged-in using Apple Login. This service is not available on Android devices.\"\n              ),\n              buttons: [\n                {\n                  text: TranslationService.getTransl(\"ok\", \"OK\"),\n                },\n              ],\n            });\n            alert.present();\n          }*/\n        }\n        await SystemService.dismissLoading();\n      } else {\n        this.newUserRegistration = false;\n        //this.retypepsw.valid = true;\n        this.disablePswFields = false;\n        this.disableGoogle = false;\n        this.disableFacebook = true;\n        this.disableApple = false;\n      }\n      if (this.newUserRegistration) this.checkRetypePassword();\n      this.checkingEmail = false;\n    }\n  }\n\n  checkRetypePassword() {\n    this.passwordCheck = this.psw.value == this.retypepsw.value;\n  }\n\n  render() {\n    return [\n      <app-navbar color={Environment.getAppColor()} tag='login' text='Login' />,\n      <ion-content\n        scrollEvents\n        onIonScroll={(ev) => (this.scrollTop = ev.detail.scrollTop)}\n      >\n        {Environment.isUdive() || Environment.isDecoplanner() ? (\n          <app-banner\n            scrollTopValue={this.scrollTop}\n            heightPx={250}\n            link='./assets/images/friendship2SM.jpg'\n          ></app-banner>\n        ) : undefined}\n        <ion-grid>\n          {!this.network ? (\n            <ion-row>\n              <ion-col>\n                <ion-item color='danger'>\n                  <ion-icon name='warning' slot='start'></ion-icon>\n                  <ion-label>\n                    <my-transl tag='no-network' text='Network not available!' />\n                  </ion-label>\n                </ion-item>\n              </ion-col>\n            </ion-row>\n          ) : undefined}\n          <ion-row>\n            <ion-col>\n              {this.trasteelLogin ? (\n                [\n                  <app-form-item\n                    label-tag='email'\n                    label-text='Email'\n                    name='email'\n                    lines='full'\n                    input-type='email'\n                    onFormItemChanged={(ev) => this.inputHandler(ev)}\n                    disabled={!this.network}\n                    debounce={500}\n                    validator={[\"required\", \"email\"]}\n                  ></app-form-item>,\n                  <ion-text class='ion-padding-start small'>\n                    Only emails @trasteel.com or @trasteelnetwork.com are\n                    accepted.\n                  </ion-text>,\n                  !this.disableEmailLinkFields\n                    ? [\n                        <ion-button\n                          margin-top\n                          expand='block'\n                          disabled={!this.email.valid || !this.network}\n                          onClick={() => this.sendLink()}\n                        >\n                          <my-transl\n                            tag='login-email'\n                            text={\n                              (this.newUserRegistration\n                                ? \"Register\"\n                                : \"Login\") + \" with Email Link\"\n                            }\n                          ></my-transl>\n                        </ion-button>,\n                        !this.disablePswFields\n                          ? [\n                              <ion-item-divider></ion-item-divider>,\n                              <ion-item-divider>\n                                <ion-label>\n                                  <p class='centered'>- or type password -</p>\n                                </ion-label>\n                              </ion-item-divider>,\n                            ]\n                          : undefined,\n                      ]\n                    : undefined,\n                ]\n              ) : (\n                <app-form-item\n                  label-tag='email'\n                  label-text='Email'\n                  name='emailpsw'\n                  lines='full'\n                  input-type='email'\n                  onFormItemChanged={(ev) => this.inputHandler(ev)}\n                  disabled={!this.network}\n                  debounce={500}\n                  validator={[\"required\", \"email\"]}\n                ></app-form-item>\n              )}\n              {!this.disablePswFields\n                ? [\n                    <app-form-item\n                      label-tag='password'\n                      label-text='Password'\n                      name='psw'\n                      lines='full'\n                      input-type='password'\n                      onFormItemChanged={(ev) => this.inputHandler(ev)}\n                      disabled={!this.network}\n                      validator={[\"required\"]}\n                    ></app-form-item>,\n                    this.newUserRegistration ? (\n                      <app-form-item\n                        label-tag='retype-password'\n                        label-text='Re-type Password'\n                        name='retypepsw'\n                        lines='full'\n                        input-type='password'\n                        onFormItemChanged={(ev) => this.inputHandler(ev)}\n                        disabled={!this.network}\n                        validator={[\"required\"]}\n                      ></app-form-item>\n                    ) : undefined,\n                    !this.passwordCheck ? (\n                      <my-transl\n                        class='validation-error'\n                        tag='password-error'\n                        text='Passwords are not the same'\n                      ></my-transl>\n                    ) : undefined,\n                    <ion-button\n                      margin-top\n                      expand='block'\n                      disabled={\n                        !this.emailpsw.valid ||\n                        !this.psw.valid ||\n                        !this.retypepsw.valid ||\n                        !this.network ||\n                        !this.passwordCheck\n                      }\n                      onClick={() => this.loginWithEmail()}\n                    >\n                      {!this.emailpsw.valid && !this.newUserRegistration\n                        ? TranslationService.getTransl(\n                            \"login-emailpsw\",\n                            \"Login/Register with Email and Password\"\n                          )\n                        : this.newUserRegistration\n                          ? TranslationService.getTransl(\n                              \"register-emailpsw\",\n                              \"Register with Email and Password\"\n                            )\n                          : TranslationService.getTransl(\n                              \"login-only-emailpsw\",\n                              \"Login with Email and Password\"\n                            )}\n                    </ion-button>,\n                  ]\n                : undefined}\n            </ion-col>\n          </ion-row>\n          {!this.disablePswFields &&\n          !this.newUserRegistration &&\n          this.emailpsw.valid ? (\n            <ion-row>\n              <ion-col class='ion-text-right'>\n                <a onClick={() => this.forgotPsw()}>\n                  <my-transl\n                    tag='forgot-psw'\n                    text='Forgot password'\n                  ></my-transl>\n                </a>\n              </ion-col>\n            </ion-row>\n          ) : undefined}\n          {!this.trasteelLogin\n            ? [\n                <ion-row>\n                  <ion-col class='ion-text-center'>\n                    {!this.disablePswFields &&\n                    !this.disableGoogle &&\n                    !this.disableFacebook &&\n                    !this.disableApple ? (\n                      <p>- or -</p>\n                    ) : undefined}\n                  </ion-col>\n                </ion-row>,\n\n                !this.disableGoogle ? (\n                  <ion-row>\n                    <ion-col>\n                      <ion-button\n                        expand='block'\n                        onClick={() => this.googleLogin()}\n                        disabled={!this.network}\n                        class='google'\n                      >\n                        <ion-icon name='logo-google' slot='start'></ion-icon>\n                        {(this.newUserRegistration ? \"Register\" : \"Login\") +\n                          \" with Google\"}\n                      </ion-button>\n                    </ion-col>\n                  </ion-row>\n                ) : undefined,\n                !this.disableApple && !SystemService.isAndroid() ? (\n                  <ion-row>\n                    <ion-col>\n                      <ion-button\n                        expand='block'\n                        onClick={() => this.appleLogin()}\n                        disabled={!this.network}\n                        class='apple'\n                      >\n                        <ion-icon name='logo-apple' slot='start'></ion-icon>\n                        {(this.newUserRegistration ? \"Register\" : \"Login\") +\n                          \" with Apple\"}\n                      </ion-button>\n                    </ion-col>\n                  </ion-row>\n                ) : undefined,\n              ]\n            : undefined}\n        </ion-grid>\n      </ion-content>,\n    ];\n  }\n}\n"],"mappings":"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","ignoreList":[]}