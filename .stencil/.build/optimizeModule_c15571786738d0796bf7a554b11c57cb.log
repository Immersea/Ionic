import{B as e,o as s,U as a,R as t,T as n}from"./p-944b5726.js";import{U as r}from"./p-d2a582b5.js";import"./p-cbe60c68.js";import"./p-c7ee7cfe.js";import{b as l}from"./p-c2915cc5.js";const c="userPlans";class i{constructor(){this.userPlans=new r;this.userPlans$=new e({});this.serviceInit=true}async init(){if(this.serviceInit){this.serviceInit=false;const e=await s.getDocumentObservable(c,a.userProfile.uid);this.userPlansSub=e.subscribe((e=>{this.userPlans=new r(e);this.userPlans$.next(this.userPlans)}))}}async presentUserPlansUpdate(e,s,a){return await t.openModal("modal-user-plans-update",{uid:e,userPlans:s,planIndex:a})}async presentUserPlanDetails(e,s){t.push("/"+c+"/details/"+e+"/"+s,"forward")}openUsersPlans(e){t.push("/"+c+"/user/"+e,"forward")}async updateUserPlan(e,a){return s.saveItem(e,a,e,c)}async deletePlan(e){return new Promise((async(a,r)=>{const i=await l.create({header:n.getTransl("delete-user-plan-header","Delete User Plan?"),message:n.getTransl("delete-user-plan-message","This plan will be deleted! Are you sure?"),buttons:[{text:n.getTransl("cancel","Cancel"),role:"cancel",handler:()=>{r()}},{text:n.getTransl("ok","OK"),handler:async()=>{s.deleteItem(c,e);t.goBack();a(null)}}]});i.present()}))}async getPlansOfUser(e){const a=await s.getDocument(c,e);return a?a:false}}const o=new i;export{o as U};