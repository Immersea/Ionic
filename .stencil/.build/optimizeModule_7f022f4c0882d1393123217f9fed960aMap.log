{"version":3,"names":["reorderIosCss","IonReorderIosStyle0","reorderMdCss","IonReorderMdStyle0","Reorder","onClick","ev","reorderGroup","this","el","closest","preventDefault","disabled","stopImmediatePropagation","render","mode","getIonMode","reorderIcon","reorderThreeOutline","reorderTwoSharp","h","Host","key","class","icon","lazy","part","reorderGroupCss","IonReorderGroupStyle0","ReorderGroup","constructor","hostRef","lastToIndex","cachedHeights","scrollElTop","scrollElBottom","scrollElInitial","containerTop","containerBottom","state","disabledChanged","gesture","enable","connectedCallback","contentEl","findClosestIonContent","scrollEl","getScrollElement","import","createGesture","gestureName","gesturePriority","threshold","direction","passive","canStart","detail","onStart","onMove","onEnd","disconnectedCallback","destroy","undefined","complete","listOrReorder","Promise","resolve","completeReorder","selectedItemEl","target","event","reorderEl","item","findReorderItem","data","heights","length","children","sum","i","child","offsetHeight","push","$ionIndex","box","getBoundingClientRect","top","bottom","scrollBox","scrollTop","AUTO_SCROLL_MARGIN","indexForItem","selectedItemHeight","classList","add","ITEM_REORDER_SELECTED","hapticSelectionStart","selectedItem","scroll","autoscroll","currentY","Math","max","min","deltaY","startY","normalizedY","toIndex","itemIndexForTop","fromIndex","hapticSelectionChanged","reorderMove","style","transform","ionItemReorder","emit","from","to","bind","hapticSelectionEnd","len","raf","ref","insertBefore","Array","isArray","reorderArray","transition","remove","itemHeight","value","posY","amount","SCROLL_JUMP","scrollBy","element","node","container","parent","parentElement","array","splice","slice"],"sources":["node_modules/@ionic/core/dist/collection/components/reorder/reorder.ios.css?tag=ion-reorder&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/reorder/reorder.md.css?tag=ion-reorder&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/reorder/reorder.js","node_modules/@ionic/core/dist/collection/components/reorder-group/reorder-group.css?tag=ion-reorder-group","node_modules/@ionic/core/dist/collection/components/reorder-group/reorder-group.js"],"sourcesContent":[":host([slot]) {\n  display: none;\n  line-height: 0;\n  z-index: 100;\n}\n\n.reorder-icon {\n  display: block;\n}\n\n/**\n * This ensures that custom reorder\n * icons resize with Dynamic Type.\n */\n::slotted(ion-icon) {\n  font-size: dynamic-font(16px);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.reorder-icon {\n  font-size: 2.125rem;\n  opacity: 0.4;\n}",":host([slot]) {\n  display: none;\n  line-height: 0;\n  z-index: 100;\n}\n\n.reorder-icon {\n  display: block;\n}\n\n/**\n * This ensures that custom reorder\n * icons resize with Dynamic Type.\n */\n::slotted(ion-icon) {\n  font-size: dynamic-font(16px);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.reorder-icon {\n  font-size: 1.9375rem;\n  opacity: 0.3;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { reorderThreeOutline, reorderTwoSharp } from \"ionicons/icons\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @part icon - The icon of the reorder handle (uses ion-icon).\n */\nexport class Reorder {\n    onClick(ev) {\n        const reorderGroup = this.el.closest('ion-reorder-group');\n        ev.preventDefault();\n        // Only stop event propagation if the reorder is inside of an enabled\n        // reorder group. This allows interaction with clickable children components.\n        if (!reorderGroup || !reorderGroup.disabled) {\n            ev.stopImmediatePropagation();\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        const reorderIcon = mode === 'ios' ? reorderThreeOutline : reorderTwoSharp;\n        return (h(Host, { key: '663d74e231e3af56b6298ee2539fdac9c8465839', class: mode }, h(\"slot\", { key: 'c7c384ab8c9ca8abdc89cd984a39dfde70e342ca' }, h(\"ion-icon\", { key: 'c8b6052db03d4b9e33a90e600c20861c73ee73ce', icon: reorderIcon, lazy: false, class: \"reorder-icon\", part: \"icon\", \"aria-hidden\": \"true\" }))));\n    }\n    static get is() { return \"ion-reorder\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"reorder.ios.scss\"],\n            \"md\": [\"reorder.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"reorder.ios.css\"],\n            \"md\": [\"reorder.md.css\"]\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get listeners() {\n        return [{\n                \"name\": \"click\",\n                \"method\": \"onClick\",\n                \"target\": undefined,\n                \"capture\": true,\n                \"passive\": false\n            }];\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.reorder-list-active > * {\n  display: block;\n  transition: transform 300ms;\n  will-change: transform;\n}\n\n.reorder-enabled {\n  user-select: none;\n}\n\n.reorder-enabled ion-reorder {\n  display: block;\n  cursor: grab;\n  pointer-events: all;\n  touch-action: none;\n}\n\n.reorder-selected,\n.reorder-selected ion-reorder {\n  cursor: grabbing;\n}\n\n.reorder-selected {\n  position: relative;\n  /* stylelint-disable-next-line declaration-no-important */\n  transition: none !important;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);\n  opacity: 0.8;\n  z-index: 100;\n}\n\n.reorder-visible ion-reorder .reorder-icon {\n  transform: translate3d(0,  0,  0);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { findClosestIonContent, getScrollElement } from \"../../utils/content/index\";\nimport { raf } from \"../../utils/helpers\";\nimport { hapticSelectionChanged, hapticSelectionEnd, hapticSelectionStart } from \"../../utils/native/haptic\";\nimport { getIonMode } from \"../../global/ionic-global\";\nexport class ReorderGroup {\n    constructor() {\n        this.lastToIndex = -1;\n        this.cachedHeights = [];\n        this.scrollElTop = 0;\n        this.scrollElBottom = 0;\n        this.scrollElInitial = 0;\n        this.containerTop = 0;\n        this.containerBottom = 0;\n        this.state = 0 /* ReorderGroupState.Idle */;\n        this.disabled = true;\n    }\n    disabledChanged() {\n        if (this.gesture) {\n            this.gesture.enable(!this.disabled);\n        }\n    }\n    async connectedCallback() {\n        const contentEl = findClosestIonContent(this.el);\n        if (contentEl) {\n            this.scrollEl = await getScrollElement(contentEl);\n        }\n        this.gesture = (await import('../../utils/gesture')).createGesture({\n            el: this.el,\n            gestureName: 'reorder',\n            gesturePriority: 110,\n            threshold: 0,\n            direction: 'y',\n            passive: false,\n            canStart: (detail) => this.canStart(detail),\n            onStart: (ev) => this.onStart(ev),\n            onMove: (ev) => this.onMove(ev),\n            onEnd: () => this.onEnd(),\n        });\n        this.disabledChanged();\n    }\n    disconnectedCallback() {\n        this.onEnd();\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    /**\n     * Completes the reorder operation. Must be called by the `ionItemReorder` event.\n     *\n     * If a list of items is passed, the list will be reordered and returned in the\n     * proper order.\n     *\n     * If no parameters are passed or if `true` is passed in, the reorder will complete\n     * and the item will remain in the position it was dragged to. If `false` is passed,\n     * the reorder will complete and the item will bounce back to its original position.\n     *\n     * @param listOrReorder A list of items to be sorted and returned in the new order or a\n     * boolean of whether or not the reorder should reposition the item.\n     */\n    complete(listOrReorder) {\n        return Promise.resolve(this.completeReorder(listOrReorder));\n    }\n    canStart(ev) {\n        if (this.selectedItemEl || this.state !== 0 /* ReorderGroupState.Idle */) {\n            return false;\n        }\n        const target = ev.event.target;\n        const reorderEl = target.closest('ion-reorder');\n        if (!reorderEl) {\n            return false;\n        }\n        const item = findReorderItem(reorderEl, this.el);\n        if (!item) {\n            return false;\n        }\n        ev.data = item;\n        return true;\n    }\n    onStart(ev) {\n        ev.event.preventDefault();\n        const item = (this.selectedItemEl = ev.data);\n        const heights = this.cachedHeights;\n        heights.length = 0;\n        const el = this.el;\n        const children = el.children;\n        if (!children || children.length === 0) {\n            return;\n        }\n        let sum = 0;\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            sum += child.offsetHeight;\n            heights.push(sum);\n            child.$ionIndex = i;\n        }\n        const box = el.getBoundingClientRect();\n        this.containerTop = box.top;\n        this.containerBottom = box.bottom;\n        if (this.scrollEl) {\n            const scrollBox = this.scrollEl.getBoundingClientRect();\n            this.scrollElInitial = this.scrollEl.scrollTop;\n            this.scrollElTop = scrollBox.top + AUTO_SCROLL_MARGIN;\n            this.scrollElBottom = scrollBox.bottom - AUTO_SCROLL_MARGIN;\n        }\n        else {\n            this.scrollElInitial = 0;\n            this.scrollElTop = 0;\n            this.scrollElBottom = 0;\n        }\n        this.lastToIndex = indexForItem(item);\n        this.selectedItemHeight = item.offsetHeight;\n        this.state = 1 /* ReorderGroupState.Active */;\n        item.classList.add(ITEM_REORDER_SELECTED);\n        hapticSelectionStart();\n    }\n    onMove(ev) {\n        const selectedItem = this.selectedItemEl;\n        if (!selectedItem) {\n            return;\n        }\n        // Scroll if we reach the scroll margins\n        const scroll = this.autoscroll(ev.currentY);\n        // // Get coordinate\n        const top = this.containerTop - scroll;\n        const bottom = this.containerBottom - scroll;\n        const currentY = Math.max(top, Math.min(ev.currentY, bottom));\n        const deltaY = scroll + currentY - ev.startY;\n        const normalizedY = currentY - top;\n        const toIndex = this.itemIndexForTop(normalizedY);\n        if (toIndex !== this.lastToIndex) {\n            const fromIndex = indexForItem(selectedItem);\n            this.lastToIndex = toIndex;\n            hapticSelectionChanged();\n            this.reorderMove(fromIndex, toIndex);\n        }\n        // Update selected item position\n        selectedItem.style.transform = `translateY(${deltaY}px)`;\n    }\n    onEnd() {\n        const selectedItemEl = this.selectedItemEl;\n        this.state = 2 /* ReorderGroupState.Complete */;\n        if (!selectedItemEl) {\n            this.state = 0 /* ReorderGroupState.Idle */;\n            return;\n        }\n        const toIndex = this.lastToIndex;\n        const fromIndex = indexForItem(selectedItemEl);\n        if (toIndex === fromIndex) {\n            this.completeReorder();\n        }\n        else {\n            this.ionItemReorder.emit({\n                from: fromIndex,\n                to: toIndex,\n                complete: this.completeReorder.bind(this),\n            });\n        }\n        hapticSelectionEnd();\n    }\n    completeReorder(listOrReorder) {\n        const selectedItemEl = this.selectedItemEl;\n        if (selectedItemEl && this.state === 2 /* ReorderGroupState.Complete */) {\n            const children = this.el.children;\n            const len = children.length;\n            const toIndex = this.lastToIndex;\n            const fromIndex = indexForItem(selectedItemEl);\n            /**\n             * insertBefore and setting the transform\n             * needs to happen in the same frame otherwise\n             * there will be a duplicate transition. This primarily\n             * impacts Firefox where insertBefore and transform operations\n             * are happening in two separate frames.\n             */\n            raf(() => {\n                if (toIndex !== fromIndex && (listOrReorder === undefined || listOrReorder === true)) {\n                    const ref = fromIndex < toIndex ? children[toIndex + 1] : children[toIndex];\n                    this.el.insertBefore(selectedItemEl, ref);\n                }\n                for (let i = 0; i < len; i++) {\n                    children[i].style['transform'] = '';\n                }\n            });\n            if (Array.isArray(listOrReorder)) {\n                listOrReorder = reorderArray(listOrReorder, fromIndex, toIndex);\n            }\n            selectedItemEl.style.transition = '';\n            selectedItemEl.classList.remove(ITEM_REORDER_SELECTED);\n            this.selectedItemEl = undefined;\n            this.state = 0 /* ReorderGroupState.Idle */;\n        }\n        return listOrReorder;\n    }\n    itemIndexForTop(deltaY) {\n        const heights = this.cachedHeights;\n        for (let i = 0; i < heights.length; i++) {\n            if (heights[i] > deltaY) {\n                return i;\n            }\n        }\n        return heights.length - 1;\n    }\n    /********* DOM WRITE ********* */\n    reorderMove(fromIndex, toIndex) {\n        const itemHeight = this.selectedItemHeight;\n        const children = this.el.children;\n        for (let i = 0; i < children.length; i++) {\n            const style = children[i].style;\n            let value = '';\n            if (i > fromIndex && i <= toIndex) {\n                value = `translateY(${-itemHeight}px)`;\n            }\n            else if (i < fromIndex && i >= toIndex) {\n                value = `translateY(${itemHeight}px)`;\n            }\n            style['transform'] = value;\n        }\n    }\n    autoscroll(posY) {\n        if (!this.scrollEl) {\n            return 0;\n        }\n        let amount = 0;\n        if (posY < this.scrollElTop) {\n            amount = -SCROLL_JUMP;\n        }\n        else if (posY > this.scrollElBottom) {\n            amount = SCROLL_JUMP;\n        }\n        if (amount !== 0) {\n            this.scrollEl.scrollBy(0, amount);\n        }\n        return this.scrollEl.scrollTop - this.scrollElInitial;\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: '491f3e5843cf728ff4589e58bd86b8ce6709b293', class: {\n                [mode]: true,\n                'reorder-enabled': !this.disabled,\n                'reorder-list-active': this.state !== 0 /* ReorderGroupState.Idle */,\n            } }));\n    }\n    static get is() { return \"ion-reorder-group\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"reorder-group.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"reorder-group.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the reorder will be hidden.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"state\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionItemReorder\",\n                \"name\": \"ionItemReorder\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Event that needs to be listened to in order to complete the reorder action.\\nOnce the event has been emitted, the `complete()` method then needs\\nto be called in order to finalize the reorder action.\"\n                },\n                \"complexType\": {\n                    \"original\": \"ItemReorderEventDetail\",\n                    \"resolved\": \"ItemReorderEventDetail\",\n                    \"references\": {\n                        \"ItemReorderEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"./reorder-group-interface\",\n                            \"id\": \"src/components/reorder-group/reorder-group-interface.ts::ItemReorderEventDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"complete\": {\n                \"complexType\": {\n                    \"signature\": \"(listOrReorder?: boolean | any[]) => Promise<any>\",\n                    \"parameters\": [{\n                            \"name\": \"listOrReorder\",\n                            \"type\": \"boolean | any[] | undefined\",\n                            \"docs\": \"A list of items to be sorted and returned in the new order or a\\nboolean of whether or not the reorder should reposition the item.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<any>\"\n                },\n                \"docs\": {\n                    \"text\": \"Completes the reorder operation. Must be called by the `ionItemReorder` event.\\n\\nIf a list of items is passed, the list will be reordered and returned in the\\nproper order.\\n\\nIf no parameters are passed or if `true` is passed in, the reorder will complete\\nand the item will remain in the position it was dragged to. If `false` is passed,\\nthe reorder will complete and the item will bounce back to its original position.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"listOrReorder A list of items to be sorted and returned in the new order or a\\nboolean of whether or not the reorder should reposition the item.\"\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"disabled\",\n                \"methodName\": \"disabledChanged\"\n            }];\n    }\n}\nconst indexForItem = (element) => {\n    return element['$ionIndex'];\n};\nconst findReorderItem = (node, container) => {\n    let parent;\n    while (node) {\n        parent = node.parentElement;\n        if (parent === container) {\n            return node;\n        }\n        node = parent;\n    }\n    return undefined;\n};\nconst AUTO_SCROLL_MARGIN = 60;\nconst SCROLL_JUMP = 10;\nconst ITEM_REORDER_SELECTED = 'reorder-selected';\nconst reorderArray = (array, from, to) => {\n    const element = array[from];\n    array.splice(from, 1);\n    array.splice(to, 0, element);\n    return array.slice();\n};\n"],"mappings":"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","ignoreList":[]}