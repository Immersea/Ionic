{"version":3,"names":["modalDatasheetPropertynameCss","ModalDatasheetPropertynameStyle0","ModalDatasheetPropertyName","componentWillLoad","this","loadDatasheetPropertyNames","DatasheetsService","downloadDatasheetSettings","datasheetPropertyNames","cloneDeep","getDatasheetPropertyNames","length","datasheetPropertyName","addDatasheetPropertyName","validateDatasheet","selectType","ev","id","detail","value","find","x","nameId","selectPropertyType","nameType","handleChange","n","name","v","replace","trim","toLowerCase","validDatasheetPropertyName","isString","nameName","isNumber","position","decimals","updateView","DatasheetPropertyName","push","index","duplicateDatasheetPropertyName","deleteDatasheetPropertyName","splice","error","SystemService","presentAlertError","save","dismiss","uploadDatasheetSettings","modalController","cancel","checkComments","map","property","startSplit","split","afterStart","endSplit","render","h","Host","key","color","label","tag","text","lines","selectFn","selectOptions","selectValueId","selectValueText","disabled","size","class","fill","onClick","slot","interface","TranslationService","getTransl","onIonChange","datasheetPropertyTypes","datasheetPropertyType","typeId","typeName","onFormItemChanged","labelPosition","validator","options","type","list","inputStep","nameDescLeft","multiLanguage","nameDescRight","comments","dimension","Environment","getAppColor","disableSave","onCancelEmit","onSaveEmit"],"sources":["src/components/trasteel/modals/modal-datasheet-propertyname/modal-datasheet-propertyname.scss?tag=modal-datasheet-propertyname","src/components/trasteel/modals/modal-datasheet-propertyname/modal-datasheet-propertyname.tsx"],"sourcesContent":["modal-datasheet-propertyname {\n  ion-list {\n    width: 100%;\n  }\n}\n","import {Component, h, Host, State, Element} from \"@stencil/core\";\nimport {modalController} from \"@ionic/core\";\nimport {cloneDeep, isNumber, isString, split} from \"lodash\";\nimport {TranslationService} from \"../../../../services/common/translations\";\nimport {Environment} from \"../../../../global/env\";\nimport {SystemService} from \"../../../../services/common/system\";\nimport {DatasheetPropertyName} from \"../../../../interfaces/trasteel/refractories/datasheets\";\nimport {DatasheetsService} from \"../../../../services/trasteel/refractories/datasheets\";\n\n@Component({\n  tag: \"modal-datasheet-propertyname\",\n  styleUrl: \"modal-datasheet-propertyname.scss\",\n})\nexport class ModalDatasheetPropertyName {\n  @Element() el: HTMLElement;\n  @State() index: number = 0;\n  @State() datasheetPropertyNames: DatasheetPropertyName[];\n  @State() datasheetPropertyName: DatasheetPropertyName;\n  @State() updateView = true;\n  @State() validDatasheetPropertyName = false;\n\n  async componentWillLoad() {\n    await this.loadDatasheetPropertyNames();\n  }\n\n  async loadDatasheetPropertyNames() {\n    await DatasheetsService.downloadDatasheetSettings();\n    this.datasheetPropertyNames = cloneDeep(\n      DatasheetsService.getDatasheetPropertyNames()\n    );\n    if (this.datasheetPropertyNames && this.datasheetPropertyNames.length > 0) {\n      this.datasheetPropertyName = this.datasheetPropertyNames[0];\n    } else {\n      //create new and add to list\n      this.addDatasheetPropertyName();\n    }\n    this.validateDatasheet();\n  }\n\n  selectType(ev) {\n    //find property by id\n    const id = ev.detail.value;\n    this.datasheetPropertyName = this.datasheetPropertyNames.find(\n      (x) => x.nameId == id\n    );\n    this.validateDatasheet();\n  }\n\n  selectPropertyType(ev) {\n    this.datasheetPropertyName.nameType = ev.detail.value;\n    this.validateDatasheet();\n  }\n\n  handleChange(ev) {\n    const n = ev.detail.name;\n    let v = ev.detail.value;\n    if (n == \"nameId\") {\n      //remove spaces and lowercase\n      v = v.replace(/\\s+/g, \"-\").trim().toLowerCase();\n    }\n    this.datasheetPropertyName[n] = v;\n    this.validateDatasheet();\n  }\n\n  validateDatasheet() {\n    this.validDatasheetPropertyName =\n      isString(this.datasheetPropertyName.nameId) &&\n      isString(this.datasheetPropertyName.nameName) &&\n      //isString(this.datasheetPropertyName.nameType) &&\n      isNumber(this.datasheetPropertyName.position) &&\n      isNumber(this.datasheetPropertyName.decimals);\n    this.updateView = !this.updateView;\n  }\n\n  addDatasheetPropertyName() {\n    this.datasheetPropertyName = new DatasheetPropertyName();\n    this.datasheetPropertyNames.push(this.datasheetPropertyName);\n    this.index = this.datasheetPropertyNames.length - 1;\n  }\n\n  duplicateDatasheetPropertyName() {\n    this.datasheetPropertyName = cloneDeep(this.datasheetPropertyName);\n    this.datasheetPropertyName.nameId =\n      this.datasheetPropertyName.nameId + \"_rev.\";\n    this.datasheetPropertyNames.push(this.datasheetPropertyName);\n    this.index = this.datasheetPropertyNames.length - 1;\n  }\n\n  async deleteDatasheetPropertyName() {\n    try {\n      this.datasheetPropertyNames.splice(this.index, 1);\n      this.index = 0;\n      this.datasheetPropertyName = this.datasheetPropertyNames[0];\n      this.validateDatasheet();\n    } catch (error) {\n      if (error) SystemService.presentAlertError(error);\n    }\n  }\n\n  async save(dismiss = true) {\n    await DatasheetsService.uploadDatasheetSettings(\n      \"propertyName\",\n      this.datasheetPropertyNames\n    );\n    return dismiss ? modalController.dismiss() : true;\n  }\n\n  async cancel() {\n    return modalController.dismiss();\n  }\n\n  checkComments() {\n    this.datasheetPropertyNames.map((property) => {\n      // Split the input string by the startString\n      const startSplit = split(property.nameName, \"(\");\n      // If the startString is not found, return null\n      if (startSplit.length < 2) {\n        return null;\n      }\n      // Take the part after the startString\n      const afterStart = startSplit[1];\n      // Split the remaining string by the endString\n      const endSplit = split(afterStart, \"Â°C\");\n      // If the endString is not found, return null\n      if (endSplit.length < 2) {\n        return null;\n      }\n      // The desired substring is the first part before the endString\n      if (endSplit[0]) {\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Host>\n        <ion-content>\n          <ion-grid>\n            <ion-row>\n              <ion-col>\n                <app-select-search\n                  color=\"trasteel\"\n                  label={{\n                    tag: \"datasheet_propertyName\",\n                    text: \"Datasheet Property Name\",\n                  }}\n                  value={\n                    this.index\n                      ? this.datasheetPropertyNames[this.index].nameId\n                      : this.datasheetPropertyNames[0].nameId\n                  }\n                  lines=\"none\"\n                  selectFn={(ev) => this.selectType(ev)}\n                  selectOptions={this.datasheetPropertyNames}\n                  selectValueId=\"nameId\"\n                  selectValueText={[\"nameName\"]}\n                  disabled={!this.validDatasheetPropertyName}\n                ></app-select-search>\n              </ion-col>\n              <ion-col size=\"1\" class=\"ion-text-center\">\n                <ion-button\n                  fill=\"clear\"\n                  disabled={!this.validDatasheetPropertyName}\n                  onClick={() => this.addDatasheetPropertyName()}\n                >\n                  <ion-icon name=\"add\" slot=\"start\" />\n                </ion-button>\n              </ion-col>\n              <ion-col size=\"1\" class=\"ion-text-center\">\n                <ion-button\n                  fill=\"clear\"\n                  disabled={!this.validDatasheetPropertyName}\n                  onClick={() => this.duplicateDatasheetPropertyName()}\n                >\n                  <ion-icon slot=\"start\" name=\"duplicate\"></ion-icon>\n                </ion-button>\n              </ion-col>\n              <ion-col size=\"1\" class=\"ion-text-center\">\n                <ion-button\n                  fill=\"clear\"\n                  color=\"danger\"\n                  disabled={this.datasheetPropertyNames.length == 0}\n                  onClick={() => this.deleteDatasheetPropertyName()}\n                >\n                  <ion-icon slot=\"start\" name=\"trash\"></ion-icon>\n                </ion-button>\n              </ion-col>\n            </ion-row>\n          </ion-grid>\n          <ion-item lines=\"none\">\n            <ion-select\n              color=\"trasteel\"\n              id=\"selectType\"\n              interface=\"action-sheet\"\n              label={TranslationService.getTransl(\n                \"datasheet_propertyType\",\n                \"Datasheet Property Type\"\n              )}\n              label-placement=\"floating\"\n              onIonChange={(ev) => this.selectPropertyType(ev)}\n            >\n              {DatasheetsService.datasheetPropertyTypes.map(\n                (datasheetPropertyType) => (\n                  <ion-select-option value={datasheetPropertyType.typeId}>\n                    {datasheetPropertyType.typeName}\n                  </ion-select-option>\n                )\n              )}\n            </ion-select>\n          </ion-item>\n          <app-form-item\n            label-text=\"Position\"\n            value={this.datasheetPropertyName.position}\n            name=\"position\"\n            input-type=\"number\"\n            onFormItemChanged={(ev) => this.handleChange(ev)}\n            labelPosition=\"fixed\"\n            validator={[\"required\"]}\n          ></app-form-item>\n          <app-form-item\n            label-text=\"ID\"\n            value={this.datasheetPropertyName.nameId}\n            name=\"nameId\"\n            input-type=\"string\"\n            onFormItemChanged={(ev) => this.handleChange(ev)}\n            labelPosition=\"fixed\"\n            validator={[\n              \"required\",\n              {\n                name: \"uniqueid\",\n                options: {\n                  type: \"list\",\n                  index: \"nameId\",\n                  list: DatasheetsService.getDatasheetPropertyNames(),\n                },\n              },\n            ]}\n          ></app-form-item>\n          <app-form-item\n            label-text=\"Name\"\n            value={this.datasheetPropertyName.nameName}\n            name=\"nameName\"\n            input-type=\"string\"\n            onFormItemChanged={(ev) => this.handleChange(ev)}\n            labelPosition=\"fixed\"\n            validator={[\"required\"]}\n          ></app-form-item>\n          <app-form-item\n            label-text=\"Decimals\"\n            value={this.datasheetPropertyName.decimals}\n            name=\"decimals\"\n            input-type=\"number\"\n            inputStep=\"1\"\n            onFormItemChanged={(ev) => this.handleChange(ev)}\n            labelPosition=\"fixed\"\n            validator={[\"required\"]}\n          ></app-form-item>\n          <app-form-item\n            label-text=\"Description Left\"\n            value={this.datasheetPropertyName.nameDescLeft}\n            name=\"nameDescLeft\"\n            input-type=\"text\"\n            multiLanguage={true}\n            text-rows=\"1\"\n            onFormItemChanged={(ev) => this.handleChange(ev)}\n            labelPosition=\"floating\"\n          ></app-form-item>\n          <app-form-item\n            label-text=\"Description Right\"\n            value={this.datasheetPropertyName.nameDescRight}\n            name=\"nameDescRight\"\n            input-type=\"text\"\n            multiLanguage={true}\n            text-rows=\"1\"\n            onFormItemChanged={(ev) => this.handleChange(ev)}\n            labelPosition=\"floating\"\n          ></app-form-item>\n          <app-form-item\n            label-text=\"Comments\"\n            value={this.datasheetPropertyName.comments}\n            name=\"comments\"\n            input-type=\"text\"\n            multiLanguage={true}\n            text-rows=\"1\"\n            onFormItemChanged={(ev) => this.handleChange(ev)}\n            labelPosition=\"floating\"\n          ></app-form-item>\n          <app-form-item\n            label-text=\"Dimension\"\n            value={this.datasheetPropertyName.dimension}\n            name=\"dimension\"\n            input-type=\"text\"\n            multiLanguage={true}\n            text-rows=\"1\"\n            onFormItemChanged={(ev) => this.handleChange(ev)}\n            labelPosition=\"floating\"\n          ></app-form-item>\n        </ion-content>\n        <app-modal-footer\n          color={Environment.getAppColor()}\n          disableSave={!this.validDatasheetPropertyName}\n          onCancelEmit={() => this.cancel()}\n          onSaveEmit={() => this.save()}\n        />\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}