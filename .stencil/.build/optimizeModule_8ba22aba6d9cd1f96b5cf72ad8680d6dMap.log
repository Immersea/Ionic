{"version":3,"names":["FirebaseAuthenticationWeb","WebPlugin","constructor","super","this","lastConfirmationResult","Map","auth","getAuth","onAuthStateChanged","user","handleAuthStateChange","applyActionCode","options","oobCode","createUserWithEmailAndPassword","userCredential","email","password","createSignInResult","confirmPasswordReset","newPassword","confirmVerificationCode","verificationCode","verificationId","confirmationResult","get","Error","ERROR_CONFIRMATION_RESULT_MISSING","confirm","deleteUser","currentUser","ERROR_NO_USER_SIGNED_IN","fetchSignInMethodsForEmail","signInMethods","getPendingAuthResult","throwNotAvailableError","getCurrentUser","userResult","createUserResult","result","getIdToken","idToken","forceRefresh","token","getRedirectResult","authCredential","OAuthProvider","credentialFromResult","getTenantId","tenantId","isSignInWithEmailLink","emailLink","linkWithApple","provider","ProviderId","APPLE","applySignInOptions","linkCurrentUserWithPopupOrRedirect","mode","linkWithEmailAndPassword","EmailAuthProvider","credential","linkCurrentUserWithCredential","linkWithEmailLink","credentialWithLink","linkWithFacebook","FacebookAuthProvider","linkWithGameCenter","linkWithGithub","GithubAuthProvider","linkWithGoogle","GoogleAuthProvider","linkWithMicrosoft","MICROSOFT","linkWithOpenIdConnect","providerId","linkWithPhoneNumber","phoneNumber","ERROR_PHONE_NUMBER_MISSING","recaptchaVerifier","RecaptchaVerifier","ERROR_RECAPTCHA_VERIFIER_MISSING","set","event","notifyListeners","PHONE_CODE_SENT_EVENT","error","message","getErrorMessage","PHONE_VERIFICATION_FAILED_EVENT","linkWithPlayGames","linkWithTwitter","TwitterAuthProvider","linkWithYahoo","YAHOO","reload","revokeAccessToken","sendEmailVerification","actionCodeSettings","sendPasswordResetEmail","sendSignInLinkToEmail","setLanguageCode","languageCode","setPersistence","persistence","Persistence","BrowserLocal","browserLocalPersistence","BrowserSession","browserSessionPersistence","IndexedDbLocal","indexedDBLocalPersistence","InMemory","inMemoryPersistence","setTenantId","signInAnonymously","signInWithApple","signInWithPopupOrRedirect","signInWithCustomToken","signInWithEmailAndPassword","signInWithEmailLink","signInWithFacebook","signInWithGithub","signInWithGoogle","signInWithMicrosoft","signInWithOpenIdConnect","signInWithPhoneNumber","signInWithPlayGames","signInWithGameCenter","signInWithTwitter","signInWithYahoo","signOut","unlink","updateEmail","newEmail","updatePassword","updateProfile","displayName","photoURL","photoUrl","useAppLanguage","useDeviceLanguage","useEmulator","port","scheme","host","includes","connectAuthEmulator","change","AUTH_STATE_CHANGE_EVENT","customParameters","map","parameter","key","value","setCustomParameters","scopes","scope","addScope","signInWithRedirect","signInWithPopup","linkWithRedirect","linkWithPopup","linkWithCredential","credentialResult","createCredentialResult","additionalUserInfoResult","createAdditionalUserInfoResult","additionalUserInfo","OAuthCredential","accessToken","secret","emailVerified","isAnonymous","metadata","createUserMetadataResult","providerData","createUserProviderDataResult","uid","creationTime","Date","parse","lastSignInTime","data","getAdditionalUserInfo","isNewUser","profile","username","undefined","Object","JSON","stringify"],"sources":["node_modules/@capacitor-firebase/authentication/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport { EmailAuthProvider, FacebookAuthProvider, GithubAuthProvider, GoogleAuthProvider, OAuthCredential, OAuthProvider, RecaptchaVerifier, TwitterAuthProvider, applyActionCode, browserLocalPersistence, browserSessionPersistence, confirmPasswordReset, connectAuthEmulator, createUserWithEmailAndPassword, deleteUser, fetchSignInMethodsForEmail, getAdditionalUserInfo, getAuth, getRedirectResult, inMemoryPersistence, indexedDBLocalPersistence, isSignInWithEmailLink, linkWithCredential, linkWithPhoneNumber, linkWithPopup, linkWithRedirect, reload, revokeAccessToken, sendEmailVerification, sendPasswordResetEmail, sendSignInLinkToEmail, setPersistence, signInAnonymously, signInWithCustomToken, signInWithEmailAndPassword, signInWithEmailLink, signInWithPhoneNumber, signInWithPopup, signInWithRedirect, unlink, updateEmail, updatePassword, updateProfile, } from 'firebase/auth';\nimport { Persistence, ProviderId } from './definitions';\nexport class FirebaseAuthenticationWeb extends WebPlugin {\n    constructor() {\n        super();\n        this.lastConfirmationResult = new Map();\n        const auth = getAuth();\n        auth.onAuthStateChanged(user => this.handleAuthStateChange(user));\n    }\n    async applyActionCode(options) {\n        const auth = getAuth();\n        return applyActionCode(auth, options.oobCode);\n    }\n    async createUserWithEmailAndPassword(options) {\n        const auth = getAuth();\n        const userCredential = await createUserWithEmailAndPassword(auth, options.email, options.password);\n        return this.createSignInResult(userCredential, null);\n    }\n    async confirmPasswordReset(options) {\n        const auth = getAuth();\n        return confirmPasswordReset(auth, options.oobCode, options.newPassword);\n    }\n    async confirmVerificationCode(options) {\n        const { verificationCode, verificationId } = options;\n        const confirmationResult = this.lastConfirmationResult.get(verificationId);\n        if (!confirmationResult) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_CONFIRMATION_RESULT_MISSING);\n        }\n        const userCredential = await confirmationResult.confirm(verificationCode);\n        return this.createSignInResult(userCredential, null);\n    }\n    async deleteUser() {\n        const auth = getAuth();\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n        }\n        return deleteUser(currentUser);\n    }\n    async fetchSignInMethodsForEmail(options) {\n        const auth = getAuth();\n        const signInMethods = await fetchSignInMethodsForEmail(auth, options.email);\n        return {\n            signInMethods,\n        };\n    }\n    async getPendingAuthResult() {\n        this.throwNotAvailableError();\n    }\n    async getCurrentUser() {\n        const auth = getAuth();\n        const userResult = this.createUserResult(auth.currentUser);\n        const result = {\n            user: userResult,\n        };\n        return result;\n    }\n    async getIdToken(options) {\n        const auth = getAuth();\n        if (!auth.currentUser) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n        }\n        const idToken = await auth.currentUser.getIdToken(options === null || options === void 0 ? void 0 : options.forceRefresh);\n        const result = {\n            token: idToken || '',\n        };\n        return result;\n    }\n    async getRedirectResult() {\n        const auth = getAuth();\n        const userCredential = await getRedirectResult(auth);\n        const authCredential = userCredential\n            ? OAuthProvider.credentialFromResult(userCredential)\n            : null;\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async getTenantId() {\n        const auth = getAuth();\n        return {\n            tenantId: auth.tenantId,\n        };\n    }\n    async isSignInWithEmailLink(options) {\n        const auth = getAuth();\n        return {\n            isSignInWithEmailLink: isSignInWithEmailLink(auth, options.emailLink),\n        };\n    }\n    async linkWithApple(options) {\n        const provider = new OAuthProvider(ProviderId.APPLE);\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.linkCurrentUserWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = OAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async linkWithEmailAndPassword(options) {\n        const authCredential = EmailAuthProvider.credential(options.email, options.password);\n        const userCredential = await this.linkCurrentUserWithCredential(authCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async linkWithEmailLink(options) {\n        const authCredential = EmailAuthProvider.credentialWithLink(options.email, options.emailLink);\n        const userCredential = await this.linkCurrentUserWithCredential(authCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async linkWithFacebook(options) {\n        const provider = new FacebookAuthProvider();\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.linkCurrentUserWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = FacebookAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async linkWithGameCenter() {\n        this.throwNotAvailableError();\n    }\n    async linkWithGithub(options) {\n        const provider = new GithubAuthProvider();\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.linkCurrentUserWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = GithubAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async linkWithGoogle(options) {\n        const provider = new GoogleAuthProvider();\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.linkCurrentUserWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = GoogleAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async linkWithMicrosoft(options) {\n        const provider = new OAuthProvider(ProviderId.MICROSOFT);\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.linkCurrentUserWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = OAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async linkWithOpenIdConnect(options) {\n        const provider = new OAuthProvider(options.providerId);\n        this.applySignInOptions(options, provider);\n        const userCredential = await this.linkCurrentUserWithPopupOrRedirect(provider, options.mode);\n        const authCredential = OAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async linkWithPhoneNumber(options) {\n        const auth = getAuth();\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n        }\n        if (!options.phoneNumber) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_PHONE_NUMBER_MISSING);\n        }\n        if (!options.recaptchaVerifier ||\n            !(options.recaptchaVerifier instanceof RecaptchaVerifier)) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_RECAPTCHA_VERIFIER_MISSING);\n        }\n        try {\n            const confirmationResult = await linkWithPhoneNumber(currentUser, options.phoneNumber, options.recaptchaVerifier);\n            const { verificationId } = confirmationResult;\n            this.lastConfirmationResult.set(verificationId, confirmationResult);\n            const event = {\n                verificationId,\n            };\n            this.notifyListeners(FirebaseAuthenticationWeb.PHONE_CODE_SENT_EVENT, event);\n        }\n        catch (error) {\n            const event = {\n                message: this.getErrorMessage(error),\n            };\n            this.notifyListeners(FirebaseAuthenticationWeb.PHONE_VERIFICATION_FAILED_EVENT, event);\n        }\n    }\n    async linkWithPlayGames() {\n        this.throwNotAvailableError();\n    }\n    async linkWithTwitter(options) {\n        const provider = new TwitterAuthProvider();\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.linkCurrentUserWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = TwitterAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async linkWithYahoo(options) {\n        const provider = new OAuthProvider(ProviderId.YAHOO);\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.linkCurrentUserWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = OAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async reload() {\n        const auth = getAuth();\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n        }\n        return reload(currentUser);\n    }\n    async revokeAccessToken(options) {\n        const auth = getAuth();\n        return revokeAccessToken(auth, options.token);\n    }\n    async sendEmailVerification(options) {\n        const auth = getAuth();\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n        }\n        return sendEmailVerification(currentUser, options === null || options === void 0 ? void 0 : options.actionCodeSettings);\n    }\n    async sendPasswordResetEmail(options) {\n        const auth = getAuth();\n        return sendPasswordResetEmail(auth, options.email, options.actionCodeSettings);\n    }\n    async sendSignInLinkToEmail(options) {\n        const auth = getAuth();\n        return sendSignInLinkToEmail(auth, options.email, options.actionCodeSettings);\n    }\n    async setLanguageCode(options) {\n        const auth = getAuth();\n        auth.languageCode = options.languageCode;\n    }\n    async setPersistence(options) {\n        const auth = getAuth();\n        switch (options.persistence) {\n            case Persistence.BrowserLocal:\n                await setPersistence(auth, browserLocalPersistence);\n                break;\n            case Persistence.BrowserSession:\n                await setPersistence(auth, browserSessionPersistence);\n                break;\n            case Persistence.IndexedDbLocal:\n                await setPersistence(auth, indexedDBLocalPersistence);\n                break;\n            case Persistence.InMemory:\n                await setPersistence(auth, inMemoryPersistence);\n                break;\n        }\n    }\n    async setTenantId(options) {\n        const auth = getAuth();\n        auth.tenantId = options.tenantId;\n    }\n    async signInAnonymously() {\n        const auth = getAuth();\n        const userCredential = await signInAnonymously(auth);\n        return this.createSignInResult(userCredential, null);\n    }\n    async signInWithApple(options) {\n        const provider = new OAuthProvider(ProviderId.APPLE);\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.signInWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = OAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async signInWithCustomToken(options) {\n        const auth = getAuth();\n        const userCredential = await signInWithCustomToken(auth, options.token);\n        return this.createSignInResult(userCredential, null);\n    }\n    async signInWithEmailAndPassword(options) {\n        const auth = getAuth();\n        const userCredential = await signInWithEmailAndPassword(auth, options.email, options.password);\n        return this.createSignInResult(userCredential, null);\n    }\n    async signInWithEmailLink(options) {\n        const auth = getAuth();\n        const userCredential = await signInWithEmailLink(auth, options.email, options.emailLink);\n        return this.createSignInResult(userCredential, null);\n    }\n    async signInWithFacebook(options) {\n        const provider = new FacebookAuthProvider();\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.signInWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = FacebookAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async signInWithGithub(options) {\n        const provider = new GithubAuthProvider();\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.signInWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = GithubAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async signInWithGoogle(options) {\n        const provider = new GoogleAuthProvider();\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.signInWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = GoogleAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async signInWithMicrosoft(options) {\n        const provider = new OAuthProvider(ProviderId.MICROSOFT);\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.signInWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = OAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async signInWithOpenIdConnect(options) {\n        const provider = new OAuthProvider(options.providerId);\n        this.applySignInOptions(options, provider);\n        const userCredential = await this.signInWithPopupOrRedirect(provider, options.mode);\n        const authCredential = OAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async signInWithPhoneNumber(options) {\n        if (!options.phoneNumber) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_PHONE_NUMBER_MISSING);\n        }\n        if (!options.recaptchaVerifier ||\n            !(options.recaptchaVerifier instanceof RecaptchaVerifier)) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_RECAPTCHA_VERIFIER_MISSING);\n        }\n        const auth = getAuth();\n        try {\n            const confirmationResult = await signInWithPhoneNumber(auth, options.phoneNumber, options.recaptchaVerifier);\n            const { verificationId } = confirmationResult;\n            this.lastConfirmationResult.set(verificationId, confirmationResult);\n            const event = {\n                verificationId,\n            };\n            this.notifyListeners(FirebaseAuthenticationWeb.PHONE_CODE_SENT_EVENT, event);\n        }\n        catch (error) {\n            const event = {\n                message: this.getErrorMessage(error),\n            };\n            this.notifyListeners(FirebaseAuthenticationWeb.PHONE_VERIFICATION_FAILED_EVENT, event);\n        }\n    }\n    async signInWithPlayGames() {\n        this.throwNotAvailableError();\n    }\n    async signInWithGameCenter() {\n        this.throwNotAvailableError();\n    }\n    async signInWithTwitter(options) {\n        const provider = new TwitterAuthProvider();\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.signInWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = TwitterAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async signInWithYahoo(options) {\n        const provider = new OAuthProvider(ProviderId.YAHOO);\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.signInWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = OAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async signOut() {\n        const auth = getAuth();\n        await auth.signOut();\n    }\n    async unlink(options) {\n        const auth = getAuth();\n        if (!auth.currentUser) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n        }\n        const user = await unlink(auth.currentUser, options.providerId);\n        const userResult = this.createUserResult(user);\n        const result = {\n            user: userResult,\n        };\n        return result;\n    }\n    async updateEmail(options) {\n        const auth = getAuth();\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n        }\n        return updateEmail(currentUser, options.newEmail);\n    }\n    async updatePassword(options) {\n        const auth = getAuth();\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n        }\n        return updatePassword(currentUser, options.newPassword);\n    }\n    async updateProfile(options) {\n        const auth = getAuth();\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n        }\n        return updateProfile(currentUser, {\n            displayName: options.displayName,\n            photoURL: options.photoUrl,\n        });\n    }\n    async useAppLanguage() {\n        const auth = getAuth();\n        auth.useDeviceLanguage();\n    }\n    async useEmulator(options) {\n        const auth = getAuth();\n        const port = options.port || 9099;\n        const scheme = options.scheme || 'http';\n        if (options.host.includes('://')) {\n            connectAuthEmulator(auth, `${options.host}:${port}`);\n        }\n        else {\n            connectAuthEmulator(auth, `${scheme}://${options.host}:${port}`);\n        }\n    }\n    handleAuthStateChange(user) {\n        const userResult = this.createUserResult(user);\n        const change = {\n            user: userResult,\n        };\n        this.notifyListeners(FirebaseAuthenticationWeb.AUTH_STATE_CHANGE_EVENT, change, true);\n    }\n    applySignInOptions(options, provider) {\n        if (options.customParameters) {\n            const customParameters = {};\n            options.customParameters.map(parameter => {\n                customParameters[parameter.key] = parameter.value;\n            });\n            provider.setCustomParameters(customParameters);\n        }\n        if (options.scopes) {\n            for (const scope of options.scopes) {\n                provider.addScope(scope);\n            }\n        }\n    }\n    signInWithPopupOrRedirect(provider, mode) {\n        const auth = getAuth();\n        if (mode === 'redirect') {\n            return signInWithRedirect(auth, provider);\n        }\n        else {\n            return signInWithPopup(auth, provider);\n        }\n    }\n    linkCurrentUserWithPopupOrRedirect(provider, mode) {\n        const auth = getAuth();\n        if (!auth.currentUser) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n        }\n        if (mode === 'redirect') {\n            return linkWithRedirect(auth.currentUser, provider);\n        }\n        else {\n            return linkWithPopup(auth.currentUser, provider);\n        }\n    }\n    linkCurrentUserWithCredential(credential) {\n        const auth = getAuth();\n        if (!auth.currentUser) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n        }\n        return linkWithCredential(auth.currentUser, credential);\n    }\n    createSignInResult(userCredential, authCredential) {\n        const userResult = this.createUserResult((userCredential === null || userCredential === void 0 ? void 0 : userCredential.user) || null);\n        const credentialResult = this.createCredentialResult(authCredential);\n        const additionalUserInfoResult = this.createAdditionalUserInfoResult(userCredential);\n        const result = {\n            user: userResult,\n            credential: credentialResult,\n            additionalUserInfo: additionalUserInfoResult,\n        };\n        return result;\n    }\n    createCredentialResult(credential) {\n        if (!credential) {\n            return null;\n        }\n        const result = {\n            providerId: credential.providerId,\n        };\n        if (credential instanceof OAuthCredential) {\n            result.accessToken = credential.accessToken;\n            result.idToken = credential.idToken;\n            result.secret = credential.secret;\n        }\n        return result;\n    }\n    createUserResult(user) {\n        if (!user) {\n            return null;\n        }\n        const result = {\n            displayName: user.displayName,\n            email: user.email,\n            emailVerified: user.emailVerified,\n            isAnonymous: user.isAnonymous,\n            metadata: this.createUserMetadataResult(user.metadata),\n            phoneNumber: user.phoneNumber,\n            photoUrl: user.photoURL,\n            providerData: this.createUserProviderDataResult(user.providerData),\n            providerId: user.providerId,\n            tenantId: user.tenantId,\n            uid: user.uid,\n        };\n        return result;\n    }\n    createUserMetadataResult(metadata) {\n        const result = {};\n        if (metadata.creationTime) {\n            result.creationTime = Date.parse(metadata.creationTime);\n        }\n        if (metadata.lastSignInTime) {\n            result.lastSignInTime = Date.parse(metadata.lastSignInTime);\n        }\n        return result;\n    }\n    createUserProviderDataResult(providerData) {\n        return providerData.map(data => ({\n            displayName: data.displayName,\n            email: data.email,\n            phoneNumber: data.phoneNumber,\n            photoUrl: data.photoURL,\n            providerId: data.providerId,\n            uid: data.uid,\n        }));\n    }\n    createAdditionalUserInfoResult(credential) {\n        if (!credential) {\n            return null;\n        }\n        const additionalUserInfo = getAdditionalUserInfo(credential);\n        if (!additionalUserInfo) {\n            return null;\n        }\n        const { isNewUser, profile, providerId, username } = additionalUserInfo;\n        const result = {\n            isNewUser,\n        };\n        if (providerId !== null) {\n            result.providerId = providerId;\n        }\n        if (profile !== null) {\n            result.profile = profile;\n        }\n        if (username !== null && username !== undefined) {\n            result.username = username;\n        }\n        return result;\n    }\n    getErrorMessage(error) {\n        if (error instanceof Object &&\n            'message' in error &&\n            typeof error['message'] === 'string') {\n            return error['message'];\n        }\n        return JSON.stringify(error);\n    }\n    throwNotAvailableError() {\n        throw new Error('Not available on web.');\n    }\n}\nFirebaseAuthenticationWeb.AUTH_STATE_CHANGE_EVENT = 'authStateChange';\nFirebaseAuthenticationWeb.PHONE_CODE_SENT_EVENT = 'phoneCodeSent';\nFirebaseAuthenticationWeb.PHONE_VERIFICATION_FAILED_EVENT = 'phoneVerificationFailed';\nFirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN = 'No user is signed in.';\nFirebaseAuthenticationWeb.ERROR_PHONE_NUMBER_MISSING = 'phoneNumber must be provided.';\nFirebaseAuthenticationWeb.ERROR_RECAPTCHA_VERIFIER_MISSING = 'recaptchaVerifier must be provided and must be an instance of RecaptchaVerifier.';\nFirebaseAuthenticationWeb.ERROR_CONFIRMATION_RESULT_MISSING = 'No confirmation result with this verification id was found.';\n//# sourceMappingURL=web.js.map"],"mappings":"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","ignoreList":[]}