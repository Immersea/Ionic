{"version":3,"names":["Advertising","constructor","data","this","id","getRandomId","order","title","subtitle","description","coverURL","link","active","ADVERTISINGDOC","AdvertisingController","advertisingObservable$","BehaviorSubject","getAdvertisingObservable","observable","DatabaseService","getDocumentObservable","SYSTEMCOLLECTION","advertisingDocSub","subscribe","doc","advertisingDoc","Object","keys","map","key","next","getAdvertisingArray","unsubscribeAdvertising","unsubscribe","undefined","getActiveAdvertising","res","getDocument","array","push","orderBy","updateAdvertising","advertising","reorderAdvertDoc","saveAdvertDoc","item","updateDocument","removeAdvertising","confirm","alertController","create","header","TranslationService","getTransl","message","buttons","text","role","handler","StorageService","deletePhotoURLs","present","followAdvertisingLink","window","open","AdvertisingService","appAdminAdvertisingCss","AppAdminAdvertisingStyle0","AppAdminAdvertising","editable","componentWillLoad","advertisingSub","adverts","advertisingArray","disconnectedCallback","editAdvertising","event","stopPropagation","popover","popoverController","component","componentProps","translucent","onDidDismiss","then","async","ev","render","h","button","onClick","color","name","slot","tag","advert","edit","onEditEmit"],"sources":["src/interfaces/common/advertising/advertising.ts","src/services/common/advertising.ts","src/components/common/app/admin/app-admin-advertising/app-admin-advertising.scss?tag=app-admin-advertising","src/components/common/app/admin/app-admin-advertising/app-admin-advertising.tsx"],"sourcesContent":["import { getRandomId } from \"../../../helpers/utils\";\n\nexport interface AdvertisingDoc {\n  [id: string]: Advertising;\n}\n\nexport class Advertising {\n  id: string;\n  order: number;\n  title: string;\n  subtitle: string;\n  description: string;\n  coverURL: string;\n  link: string;\n  active: boolean;\n\n  constructor(data?) {\n    this.id = data && data.id ? data.id : getRandomId();\n    this.order = data && data.order ? data.order : 0;\n    this.title = data && data.title ? data.title : \"\";\n    this.subtitle = data && data.subtitle ? data.subtitle : \"\";\n    this.description = data && data.description ? data.description : \"\";\n    this.coverURL = data && data.coverURL ? data.coverURL : null;\n    this.link = data && data.link ? data.link : \"\";\n    this.active = data && data.active ? true : false;\n  }\n}\n","import {\n  Advertising,\n  AdvertisingDoc,\n} from \"../../interfaces/common/advertising/advertising\";\nimport {DatabaseService} from \"./database\";\nimport {SYSTEMCOLLECTION} from \"./system\";\nimport {orderBy} from \"lodash\";\nimport {alertController} from \"@ionic/core\";\nimport {TranslationService} from \"./translations\";\nimport {BehaviorSubject, Subscription} from \"rxjs\";\nimport {StorageService} from \"./storage\";\n\nexport const ADVERTISINGDOC = \"advertising\";\n\nexport class AdvertisingController {\n  advertisingDoc: AdvertisingDoc;\n  advertisingDocSub: Subscription;\n  advertisingObservable$: BehaviorSubject<Advertising[]> = new BehaviorSubject(\n    <Advertising[]>[]\n  );\n\n  async getAdvertisingObservable() {\n    const observable = await DatabaseService.getDocumentObservable(\n      SYSTEMCOLLECTION,\n      ADVERTISINGDOC\n    );\n    this.advertisingDocSub = observable.subscribe((doc) => {\n      this.advertisingDoc = {};\n      Object.keys(doc).map((key) => {\n        this.advertisingDoc[key] = new Advertising(doc[key]);\n      });\n      this.advertisingObservable$.next(this.getAdvertisingArray());\n    });\n  }\n\n  unsubscribeAdvertising() {\n    this.advertisingDocSub ? this.advertisingDocSub.unsubscribe() : undefined;\n  }\n\n  async getActiveAdvertising(): Promise<Advertising[]> {\n    const res = await DatabaseService.getDocument(\n      SYSTEMCOLLECTION,\n      ADVERTISINGDOC\n    );\n    this.advertisingDoc = {};\n    if (res) {\n      Object.keys(res).map((key) => {\n        if (res[key].active) {\n          this.advertisingDoc[key] = res[key];\n        }\n      });\n    }\n    return this.getAdvertisingArray();\n  }\n\n  getAdvertisingArray(): Advertising[] {\n    const array = [];\n    Object.keys(this.advertisingDoc).map((key) => {\n      array.push(this.advertisingDoc[key]);\n    });\n    return orderBy(array, \"order\");\n  }\n\n  async updateAdvertising(advertising: Advertising) {\n    this.advertisingDoc[advertising.id] = advertising;\n    this.reorderAdvertDoc();\n    await this.saveAdvertDoc();\n  }\n\n  reorderAdvertDoc() {\n    //reorder items\n    let array = [];\n    Object.keys(this.advertisingDoc).map((key) => {\n      array.push(this.advertisingDoc[key]);\n    });\n    array = orderBy(array, \"order\");\n    let order = 0;\n    array.map((item) => {\n      item.order = order;\n      order++;\n      this.advertisingDoc[item.id] = item;\n    });\n  }\n\n  async saveAdvertDoc() {\n    await DatabaseService.updateDocument(\n      SYSTEMCOLLECTION,\n      ADVERTISINGDOC,\n      this.advertisingDoc\n    );\n  }\n\n  async removeAdvertising(advertising: Advertising) {\n    const confirm = await alertController.create({\n      header: TranslationService.getTransl(\n        \"delete-advertising-header\",\n        \"Delete Advertising?\"\n      ),\n      message: TranslationService.getTransl(\n        \"delete-advertising-message\",\n        \"This advertising will be deleted! Are you sure?\"\n      ),\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n          role: \"cancel\",\n          handler: () => {},\n        },\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n          handler: () => {\n            delete this.advertisingDoc[advertising.id];\n            StorageService.deletePhotoURLs(ADVERTISINGDOC, advertising.id);\n            this.reorderAdvertDoc();\n            this.saveAdvertDoc();\n          },\n        },\n      ],\n    });\n    confirm.present();\n  }\n\n  followAdvertisingLink(advertising) {\n    window.open(\"http://\" + advertising.link, \"_blank\");\n  }\n}\n\nexport const AdvertisingService = new AdvertisingController();\n","app-admin-advertising {\n    /* Component styles go here */\n}\n","import { Component, h, State } from \"@stencil/core\";\nimport { Advertising } from \"../../../../../interfaces/common/advertising/advertising\";\nimport { AdvertisingService } from \"../../../../../services/common/advertising\";\nimport { popoverController } from \"@ionic/core\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n  tag: \"app-admin-advertising\",\n  styleUrl: \"app-admin-advertising.scss\",\n})\nexport class AppAdminAdvertising {\n  advertisingSub: Subscription;\n  @State() advertisingArray: Advertising[] = [];\n  editable: boolean = true;\n\n  async componentWillLoad() {\n    this.advertisingSub = AdvertisingService.advertisingObservable$.subscribe(\n      (adverts) => {\n        this.advertisingArray = adverts;\n      }\n    );\n    AdvertisingService.getAdvertisingObservable();\n  }\n\n  async disconnectedCallback() {\n    this.advertisingSub.unsubscribe();\n    AdvertisingService.unsubscribeAdvertising();\n  }\n\n  async editAdvertising(event, advertising) {\n    event.stopPropagation();\n    const popover = await popoverController.create({\n      component: \"popover-edit-advertising\",\n      componentProps: { advertising: advertising },\n      event: null,\n      translucent: true,\n    });\n    popover.onDidDismiss().then(async (ev) => {\n      if (ev) {\n        const advertising = ev.data;\n        await AdvertisingService.updateAdvertising(advertising);\n      }\n    });\n    popover.present();\n  }\n\n  async removeAdvertising(event, advertising) {\n    event.stopPropagation();\n    await AdvertisingService.removeAdvertising(advertising);\n  }\n\n  render() {\n    return (\n      <ion-content>\n        {this.editable ? (\n          <ion-item\n            button\n            onClick={(ev) => this.editAdvertising(ev, null)}\n            color='light'\n          >\n            <ion-icon name='add-circle' slot='start' color='beach'></ion-icon>\n            <ion-label>\n              <my-transl tag='add' text='Add' />\n            </ion-label>\n          </ion-item>\n        ) : undefined}\n        {this.advertisingArray.map((advert) => (\n          <app-advertising-card\n            edit={true}\n            advertising={advert}\n            onEditEmit={(ev) => this.editAdvertising(ev, advert)}\n          />\n        ))}\n      </ion-content>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}