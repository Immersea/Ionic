import{ap as t,T as e,B as i,o as s,ax as a,R as o,x as n}from"./p-944b5726.js";import"./p-cbe60c68.js";import"./p-c7ee7cfe.js";import{b as c}from"./p-c2915cc5.js";import{l as r}from"./p-1af05547.js";class l{constructor(e){this.public=false;Object.keys(e).forEach((i=>{if(i=="position"){this.position=null;if(e.position)this.position=t.setPosition(e.position)}else{this[i]=e[i]}}))}}class h{constructor(e){this.public=false;this.id=e&&e.id?e.id:null;this.order=e&&e.order?e.order:{};this.public=e&&e.public?e.public:false;this.displayName=e&&e.displayName?e.displayName:null;this.photoURL=e&&e.photoURL?e.photoURL:null;this.coverURL=e&&e.coverURL?e.coverURL:null;this.position=null;if(e&&e.position){if(e.position)this.position=t.setPosition(e.position)}else if(this.address&&this.address.lat&&this.address.lon){this.position=t.getPosition(this.address.lat,this.address.lon)}this.sections=e&&e.sections?e.sections:[];this.region=e&&e.region?e.region:null;this.area=e&&e.area?e.area:null;this.shortDescription=e&&e.shortDescription?e.shortDescription:{en:""};this.topics=e&&e.topics?e.topics:[];this.address=e&&e.address?e.address:null;this.article=e&&e.article?e.article:{};this.media=e&&e.media?e.media:{};this.users={};if(e&&e.users){Object.keys(e.users).forEach((t=>{this.users[t]=e.users[t]}))}}setAddress(t){this.address=t}getMediaArray(){let t=[];Object.keys(this.media).map((e=>{t.push(this.media[e])}));return r.exports.sortBy(t,["type","order","title"])}}class u{constructor(){this.searchFilters=[]}async init(){await e.init();this.mapData=this.getMapDocs();this.mapDataSub$=new i(this.mapData);this.downloadMapData()}getMapDocs(){let t={immerseaLocations:{name:e.getTransl("location","Location"),icon:{type:"ionicon",name:"location",color:"immersea"},collection:undefined,collectionSub$:new i([]),createMapData:null,filteredCollection:{},fieldsToQuery:["displayName"],query:true}};return t}sendMapData(){this.mapDataSub$?this.mapDataSub$.next(this.mapData):undefined}downloadMapData(){if(this.mapData)Object.keys(this.mapData).map((t=>{s.getDocument(a,t).then((e=>{switch(t){case f:e=p.getMapData(e);break}this.refreshFilterDocuments(t,e)}))}))}filterDocuments(t=[]){this.resetDocumentsQuery(t.find((t=>t.type=="filter"))==undefined);this.searchFilters=[];if(t){t.forEach((t=>{if(t.type=="filter"){this.mapData[t.name].query=true}else{this.searchFilters.push(t.name)}}));Object.keys(this.mapData).map((async t=>{this.refreshFilterDocuments(t)}))}}refreshFilterDocuments(t,e){const i=this.mapData[t];e?i.collection=e:undefined;if(i.query){if(this.searchFilters.length>0){i.filteredCollection={};i.fieldsToQuery.forEach((t=>{r.exports.each(i.collection,((e,s)=>{this.searchFilters.forEach((a=>{if(t=="displayName"||t=="email"){if(e[t]&&e[t].toLowerCase().search(a.toLowerCase())!=-1){i.filteredCollection[s]=e}}}))}))}))}else{i.filteredCollection=i.collection}}else{i.filteredCollection={}}this.sendMapData()}getCollectionArray(t){if(this.mapData&&this.mapData[t]&&this.mapData[t].collection){if(t==f){return this.getSortedLocations()}else{let e=[];Object.keys(this.mapData[t].collection).forEach((i=>{let s=this.mapData[t].collection[i];s.id=i;e.push(s)}));e=r.exports.orderBy(e,"displayName");return e}}else{return[]}}getSortedLocations(){if(this.mapData&&this.mapData["immerseaLocations"]&&this.mapData["immerseaLocations"].collection){const t={};const e=this.mapData["immerseaLocations"].collection;Object.keys(e).forEach((i=>{const s=e[i];s.sections.map((e=>{if(!t[e])t[e]={};t[e][s.id]=s}))}));Object.keys(t).forEach((e=>{const i=t[e];const s=[];Object.keys(i).forEach((t=>{s.push(i[t])}));t[e]=r.exports.sortBy(s,"order")}));return t}}resetDocumentsQuery(t){this.mapData=r.exports.each(this.mapData,(e=>{e.query=t}))}}const m=new u;const f="immerseaLocations";class d{constructor(){this.immerseaLocationsList={};this.immerseaLocationsList$=new i({})}init(){m.mapDataSub$.subscribe((()=>{const t=m.getCollectionArray(f);if(t&&Object.keys(t).length>0){this.immerseaLocationsList=t;this.immerseaLocationsList$.next(this.immerseaLocationsList)}}))}getMapData(t){const e={};if(t&&Object.keys(t))Object.keys(t).forEach((i=>{e[i]=new l(t[i])}));return e}async presentLocationUpdate(t){await o.openModal("modal-immersea-location-update",{locationId:t})}async presentLocationDetails(t){o.push("/location/"+t,"forward")}async getLocation(t){const e=await s.getDocument(f,t);return new h(e)}async updateLocation(t,e,i){if(!t){e.users[i]=["owner"];await s.addDocument(f,e)}else{await s.updateDocument(f,t,e)}return true}async deleteLocation(t){const i=await c.create({header:e.getTransl("delete-immersea-location-header","Delete Location?"),message:e.getTransl("delete-immersea-location-message","This location will be deleted! Are you sure?"),buttons:[{text:e.getTransl("cancel","Cancel"),role:"cancel",handler:()=>{}},{text:e.getTransl("ok","OK"),handler:()=>{s.deleteDocument(f,t);o.push("/","root")}}]});i.present()}async updatePhotoURL(t,e,i){return n.updatePhotoURL(f,t,e,i)}getSections(){return[{tag:"nature",text:"Nature",icon:{type:"ionicon",name:"fish",color:"immersea-culture"}},{tag:"culture",text:"Culture",icon:{type:"mapicon",name:"map-icon-museum",color:"immersea-community"}},{tag:"sustainability",text:"Sustainability",icon:{type:"ionicon",name:"earth",color:"immersea"}},{tag:"insights",text:"Insights",icon:{type:"ionicon",name:"book",color:"immersea"}}]}getTopics(){return[{tag:"elements_history",text:"Elements of history"},{tag:"uai",text:"Underwater Archaeological Itineraries"},{tag:"museums",text:"Museums"},{tag:"archeo_parks",text:"Archaeological parks and cultural curiosities"}]}}const p=new d;export{p as I,h as a,f as b};