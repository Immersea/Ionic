{"version":3,"names":["modalImmerseaLocationUpdateCss","ModalImmerseaLocationUpdateStyle0","ModalImmerseaLocationUpdate","this","stdConfigurations","mediaToUpload","undefined","video","photo","documents","componentWillLoad","userProfileSub$","UserService","userProfile$","subscribe","userProfile","UserProfile","userSettingsSub$","userSettings$","userSettings","UserSettings","cloneDeep","userConfigurations","segmentTitles","information","TranslationService","getTransl","article","gallery","map","position","team","loadImmerseaLocation","locationId","immerseaLocation","ImmerseaLocationsService","getLocation","draggableMarkerPosition","lat","geopoint","latitude","lon","longitude","ImmerseaLocation","users","userRoles","uid","orderMedia","Object","keys","media","id","type","includes","push","mediaArray","orderBy","componentDidLoad","slider","Swiper","speed","spaceBetween","allowTouchMove","autoHeight","on","slideChange","updateAutoHeight","updateSize","setSelectOptions","customElements","whenDefined","mapElement","el","querySelector","mapContainer","setAttribute","mapHeight","then","triggerMapResize","validateLocation","disconnectedCallback","unsubscribe","selectSectionsElement","customSectionsPopoverOptions","header","interfaceOptions","placeholder","each","getSections","async","val","selectOption","document","createElement","value","tag","textContent","text","appendChild","selectTopicsElement","customTopicsPopoverOptions","getTopics","updateLocation","ev","toNumber","detail","MapService","getPosition","updateAddress","setAddress","handleChange","name","updateParam","param","sections","topics","segmentChanged","segment","update","slideTo","slideChanged","index","activeIndex","updateImageUrls","imageType","url","photoURL","coverURL","addMedia","popover","RouterService","openPopover","onDidDismiss","data","alert","alertController","create","message","buttons","present","openEditor","modal","openModal","updateView","updatePublic","public","checked","validLocation","isNumber","length","isString","region","displayName","save","files","itemId","collectionId","IMMERSEALOCATIONSCOLLECTION","urls","forEach","saveLocation","modalController","dismiss","cancel","render","h","Host","key","item","collection","onCoverUploaded","mode","color","Environment","getAppColor","scrollable","onIonChange","layout","disabled","class","slot","multiple","onFormItemChanged","validator","area","shortDescription","multiLanguage","textRows","readOnly","onEdit","button","onClick","title","pageId","onDragMarkerEnd","coordinates","onCoordinatesEmit","onAddressEmit","editable","show","disableSave","onCancelEmit","onSaveEmit"],"sources":["src/components/immersea/modal/modal-immersea-location-update/modal-immersea-location-update.scss?tag=modal-immersea-location-update","src/components/immersea/modal/modal-immersea-location-update/modal-immersea-location-update.tsx"],"sourcesContent":["modal-immersea-location-update {\n  ion-list {\n    width: 100%;\n  }\n  modal-quill-editor {\n    width: 100%;\n    height: var(--mapHeight);\n  }\n}\n","import {Component, h, Host, Prop, State, Element} from \"@stencil/core\";\nimport {TranslationService} from \"../../../../services/common/translations\";\nimport {alertController, modalController} from \"@ionic/core\";\nimport {DiveConfiguration} from \"../../../../interfaces/udive/planner/dive-configuration\";\nimport {Subscription} from \"rxjs\";\nimport {UserService} from \"../../../../services/common/user\";\nimport {UserProfile} from \"../../../../interfaces/common/user/user-profile\";\nimport {UserSettings} from \"../../../../interfaces/udive/user/user-settings\";\nimport {mapHeight} from \"../../../../helpers/utils\";\nimport {ImmerseaLocation} from \"../../../../interfaces/immersea/immerseaLocation\";\nimport {\n  IMMERSEALOCATIONSCOLLECTION,\n  ImmerseaLocationsService,\n} from \"../../../../services/immersea/immerseaLocations\";\nimport {RouterService} from \"../../../../services/common/router\";\nimport {Media} from \"../../../../interfaces/common/media/media\";\nimport Swiper from \"swiper\";\nimport {MapService} from \"../../../../services/common/map\";\nimport {cloneDeep, each, isNumber, isString, orderBy, toNumber} from \"lodash\";\nimport {Environment} from \"../../../../global/env\";\n\n@Component({\n  tag: \"modal-immersea-location-update\",\n  styleUrl: \"modal-immersea-location-update.scss\",\n})\nexport class ModalImmerseaLocationUpdate {\n  @Element() el: HTMLElement;\n  @Prop() locationId: string = undefined;\n  @State() immerseaLocation: ImmerseaLocation;\n  @State() segment = \"information\";\n  @State() updateView = true;\n  @State() validLocation = false;\n  @State() mediaArray: {\n    video: Media[];\n    photo: Media[];\n    documents: Media[];\n  } = {\n    video: [],\n    photo: [],\n    documents: [],\n  };\n\n  segmentTitles: {\n    map: string;\n    position: string;\n    information: string;\n    article: string;\n    team: string;\n    gallery: string;\n  };\n  @State() slider: Swiper;\n  draggableMarkerPosition: any;\n  stdConfigurations: DiveConfiguration[] = [];\n  userProfile: UserProfile;\n  userProfileSub$: Subscription;\n  userSettings: UserSettings;\n  userSettingsSub$: Subscription;\n  mapElement: HTMLAppMapElement;\n\n  mediaToUpload: {[id: string]: {media: Media; file: File}} = {};\n\n  async componentWillLoad() {\n    this.userProfileSub$ = UserService.userProfile$.subscribe(\n      (userProfile: UserProfile) => {\n        this.userProfile = new UserProfile(userProfile);\n      }\n    );\n    this.userSettingsSub$ = UserService.userSettings$.subscribe(\n      (userSettings: UserSettings) => {\n        this.userSettings = new UserSettings(userSettings);\n        this.stdConfigurations = cloneDeep(\n          this.userSettings.userConfigurations\n        );\n      }\n    );\n    this.segmentTitles = {\n      information: TranslationService.getTransl(\"information\", \"Information\"),\n      article: TranslationService.getTransl(\"article\", \"Article\"),\n      gallery: TranslationService.getTransl(\"gallery\", \"Gallery\"),\n      map: TranslationService.getTransl(\"map\", \"Map\"),\n      position: TranslationService.getTransl(\"position\", \"Position\"),\n      team: TranslationService.getTransl(\"team\", \"Team\"),\n    };\n    await this.loadImmerseaLocation();\n  }\n\n  async loadImmerseaLocation() {\n    if (this.locationId) {\n      this.immerseaLocation = await ImmerseaLocationsService.getLocation(\n        this.locationId\n      );\n      this.draggableMarkerPosition = {\n        lat: this.immerseaLocation.position.geopoint.latitude,\n        lon: this.immerseaLocation.position.geopoint.longitude,\n      };\n    } else {\n      this.immerseaLocation = new ImmerseaLocation();\n      this.immerseaLocation.users = {\n        [UserService.userRoles.uid]: [\"owner\"],\n      };\n      this.draggableMarkerPosition = {};\n    }\n  }\n\n  orderMedia() {\n    const documents = [];\n    const photo = [];\n    const video = [];\n    Object.keys(this.immerseaLocation.media).map((id) => {\n      const media = this.immerseaLocation.media[id];\n      if (media.type.includes(\"application\")) {\n        documents.push(media);\n      } else if (media.type.includes(\"video\")) {\n        video.push(media);\n      } else if (media.type.includes(\"image\")) {\n        photo.push(media);\n      }\n    });\n    this.mediaArray.documents = orderBy(documents, \"order\");\n    this.mediaArray.video = orderBy(video, \"order\");\n    this.mediaArray.photo = orderBy(photo, \"order\");\n  }\n\n  async componentDidLoad() {\n    this.slider = new Swiper(\".slider-dive-site\", {\n      speed: 400,\n      spaceBetween: 100,\n      allowTouchMove: false,\n      autoHeight: true,\n      on: {\n        slideChange: () => {\n          this.slider ? this.slider.updateAutoHeight() : null;\n          this.slider.updateSize();\n        },\n      },\n    });\n    this.setSelectOptions();\n    //reset map height inside slide\n    await customElements.whenDefined(\"app-map\");\n    this.mapElement = this.el.querySelector(\"#map\") as any;\n    const mapContainer = this.el.querySelector(\"#map-container\");\n    mapContainer.setAttribute(\n      \"style\",\n      \"height: \" + mapHeight(this.immerseaLocation, true) + \"px\"\n    ); //-cover photo - slider - footer\n    this.mapElement[\"mapLoaded\"]().then(() => {\n      this.mapElement.triggerMapResize();\n    });\n    this.mapElement.triggerMapResize();\n    this.validateLocation();\n  }\n\n  disconnectedCallback() {\n    this.userProfileSub$.unsubscribe();\n    this.userSettingsSub$.unsubscribe();\n  }\n\n  setSelectOptions() {\n    const selectSectionsElement: HTMLIonSelectElement =\n      this.el.querySelector(\"#sections-select\");\n    const customSectionsPopoverOptions = {\n      header: TranslationService.getTransl(\"sections\", \"Sections\"),\n    };\n    selectSectionsElement.interfaceOptions = customSectionsPopoverOptions;\n    selectSectionsElement.placeholder = TranslationService.getTransl(\n      \"select\",\n      \"Select\"\n    );\n    each(ImmerseaLocationsService.getSections(), async (val) => {\n      const selectOption = document.createElement(\"ion-select-option\");\n      selectOption.value = val.tag;\n      selectOption.textContent = await TranslationService.getTransl(\n        val.tag,\n        val.text\n      );\n      selectSectionsElement.appendChild(selectOption);\n    });\n\n    const selectTopicsElement: HTMLIonSelectElement =\n      this.el.querySelector(\"#topics-select\");\n    const customTopicsPopoverOptions = {\n      header: TranslationService.getTransl(\"topics\", \"Topics\"),\n    };\n    selectTopicsElement.interfaceOptions = customTopicsPopoverOptions;\n    selectTopicsElement.placeholder = TranslationService.getTransl(\n      \"select\",\n      \"Select\"\n    );\n    each(ImmerseaLocationsService.getTopics(), async (val) => {\n      const selectOption = document.createElement(\"ion-select-option\");\n      selectOption.value = val.tag;\n      selectOption.textContent = await TranslationService.getTransl(\n        val.tag,\n        val.text\n      );\n      selectTopicsElement.appendChild(selectOption);\n    });\n  }\n\n  updateLocation(ev) {\n    this.draggableMarkerPosition = {\n      lat: toNumber(ev.detail.lat),\n      lon: toNumber(ev.detail.lon),\n    };\n    this.immerseaLocation.position = MapService.getPosition(\n      ev.detail.lat,\n      ev.detail.lon\n    );\n    this.validateLocation();\n  }\n\n  updateAddress(ev) {\n    this.immerseaLocation.setAddress(ev.detail);\n  }\n\n  handleChange(ev) {\n    this.immerseaLocation[ev.detail.name] = ev.detail.value;\n    this.validateLocation();\n  }\n\n  updateParam(param, ev) {\n    let value = ev.detail.value;\n    switch (param) {\n      case \"sections\":\n        this.immerseaLocation.sections = value;\n        break;\n      case \"topics\":\n        this.immerseaLocation.topics = value;\n        break;\n    }\n    this.validateLocation();\n  }\n\n  segmentChanged(ev) {\n    if (ev.detail.value) {\n      this.segment = ev.detail.value;\n      this.slider.update();\n      switch (this.segment) {\n        case \"information\":\n          this.slider.slideTo(0);\n          break;\n        case \"article\":\n          this.slider.slideTo(1);\n          break;\n        case \"gallery\":\n          this.slider.slideTo(2);\n          break;\n        case \"map\":\n          this.slider.slideTo(3);\n          this.mapElement.triggerMapResize();\n          break;\n        case \"position\":\n          this.slider.slideTo(4);\n          break;\n        case \"team\":\n          this.slider.slideTo(5);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  async slideChanged() {\n    const index = this.slider.activeIndex;\n    this.slider.update();\n    switch (index) {\n      case 0:\n        this.segment = \"information\";\n        break;\n      case 1:\n        this.segment = \"article\";\n        break;\n      case 2:\n        this.segment = \"gallery\";\n        break;\n      case 3:\n        this.segment = \"map\";\n        this.mapElement.triggerMapResize();\n        break;\n      case 4:\n        this.segment = \"position\";\n        break;\n      case 5:\n        this.segment = \"team\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  updateImageUrls(ev) {\n    const imageType = ev.detail.type;\n    const url = ev.detail.url;\n    if (imageType == \"photo\") {\n      this.immerseaLocation.photoURL = url;\n    } else {\n      this.immerseaLocation.coverURL = url;\n    }\n  }\n\n  async addMedia() {\n    if (this.locationId) {\n      const popover = await RouterService.openPopover(\"popover-media-loading\");\n      popover.onDidDismiss().then((ev) => {\n        if (ev && ev.data) {\n          this.immerseaLocation.media[ev.data.media.id] = ev.data.media;\n          this.mediaToUpload[ev.data.media.id] = ev.data;\n        }\n      });\n    } else {\n      const alert = await alertController.create({\n        header: TranslationService.getTransl(\"media\", \"Media\"),\n        message: TranslationService.getTransl(\n          \"media-loader-error\",\n          \"Please save the item to upload new media.\"\n        ),\n        buttons: [\n          {\n            text: TranslationService.getTransl(\"ok\", \"OK\"),\n          },\n        ],\n      });\n      alert.present();\n    }\n  }\n\n  async openEditor() {\n    const modal = await RouterService.openModal(\"modal-quill-editor\", {\n      immerseaLocation: this.immerseaLocation,\n    });\n    modal.onDidDismiss().then(async (data: any) => {\n      if (data && data.data) {\n        this.immerseaLocation.article = data.data;\n        this.updateView = !this.updateView;\n      }\n    });\n  }\n\n  updatePublic(ev) {\n    this.immerseaLocation.public = ev.detail.checked;\n    this.validateLocation();\n  }\n\n  validateLocation() {\n    this.validLocation =\n      this.immerseaLocation &&\n      this.immerseaLocation.position &&\n      isNumber(this.immerseaLocation.position.geopoint.latitude) &&\n      isNumber(this.immerseaLocation.position.geopoint.longitude) &&\n      this.immerseaLocation.sections.length > 0 &&\n      this.immerseaLocation.topics.length > 0 &&\n      isString(this.immerseaLocation.region) &&\n      isString(this.immerseaLocation.displayName);\n  }\n\n  async save() {\n    //upload media\n    if (Object.keys(this.mediaToUpload).length > 0) {\n      const popover = await RouterService.openPopover(\n        \"popover-media-uploader\",\n        {\n          files: this.mediaToUpload,\n          itemId: this.locationId,\n          collectionId: IMMERSEALOCATIONSCOLLECTION,\n        }\n      );\n      popover.onDidDismiss().then((ev) => {\n        if (ev && ev.data) {\n          const urls = ev.data;\n          //update urls into media\n          Object.keys(urls).forEach((id) => {\n            this.immerseaLocation.media[id].url = urls[id];\n          });\n          //save location\n          return this.saveLocation();\n        }\n      });\n    } else {\n      return this.saveLocation();\n    }\n  }\n\n  async saveLocation() {\n    await ImmerseaLocationsService.updateLocation(\n      this.locationId,\n      this.immerseaLocation,\n      this.userProfile.uid\n    );\n    return modalController.dismiss();\n  }\n\n  async cancel() {\n    return modalController.dismiss();\n  }\n\n  render() {\n    return (\n      <Host>\n        <ion-header>\n          <app-upload-cover\n            item={{\n              collection: IMMERSEALOCATIONSCOLLECTION,\n              id: this.locationId,\n              photoURL: this.immerseaLocation.photoURL,\n              coverURL: this.immerseaLocation.coverURL,\n            }}\n            onCoverUploaded={(ev) => this.updateImageUrls(ev)}\n          ></app-upload-cover>\n        </ion-header>\n        <ion-header>\n          <ion-toolbar>\n            <ion-segment\n              mode=\"md\"\n              color={Environment.getAppColor()}\n              scrollable\n              onIonChange={(ev) => this.segmentChanged(ev)}\n              value={this.segment}\n            >\n              <ion-segment-button value=\"information\" layout=\"icon-start\">\n                <ion-label>{this.segmentTitles.information}</ion-label>\n              </ion-segment-button>\n              <ion-segment-button value=\"article\" layout=\"icon-start\">\n                <ion-label>{this.segmentTitles.article}</ion-label>\n              </ion-segment-button>\n              <ion-segment-button\n                value=\"gallery\"\n                layout=\"icon-start\"\n                disabled={!this.locationId}\n              >\n                <ion-label>{this.segmentTitles.gallery}</ion-label>\n              </ion-segment-button>\n              <ion-segment-button value=\"map\" layout=\"icon-start\">\n                <ion-label>{this.segmentTitles.map}</ion-label>\n              </ion-segment-button>\n              <ion-segment-button value=\"position\" layout=\"icon-start\">\n                <ion-label>{this.segmentTitles.position}</ion-label>\n              </ion-segment-button>\n              <ion-segment-button value=\"team\" layout=\"icon-start\">\n                <ion-label>{this.segmentTitles.team}</ion-label>\n              </ion-segment-button>\n            </ion-segment>\n          </ion-toolbar>\n        </ion-header>\n        <ion-content class=\"slides\">\n          <swiper-container class=\"slider-dive-site swiper\">\n            <swiper-wrapper class=\"swiper-wrapper\">\n              {/* INFORMATION */}\n              <swiper-slide class=\"swiper-slide\">\n                <ion-list class=\"ion-no-padding\">\n                  <ion-item>\n                    <ion-label>\n                      <my-transl tag=\"public\" text=\"Public\" />\n                    </ion-label>\n                    <ion-toggle\n                      slot=\"end\"\n                      onIonChange={(ev) => this.updatePublic(ev)}\n                      checked={this.immerseaLocation.public}\n                    ></ion-toggle>\n                  </ion-item>\n                  <ion-item>\n                    <ion-label>\n                      <my-transl tag=\"sections\" text=\"Sections\" />\n                      <sup>*</sup>\n                    </ion-label>\n                    <ion-select\n                      id=\"sections-select\"\n                      onIonChange={(ev) => this.updateParam(\"sections\", ev)}\n                      value={this.immerseaLocation.sections}\n                      multiple={true}\n                    ></ion-select>\n                  </ion-item>\n                  <ion-item>\n                    <ion-label>\n                      <my-transl tag=\"topics\" text=\"Topics\" />\n                      <sup>*</sup>\n                    </ion-label>\n                    <ion-select\n                      id=\"topics-select\"\n                      onIonChange={(ev) => this.updateParam(\"topics\", ev)}\n                      value={this.immerseaLocation.topics}\n                      multiple={true}\n                    ></ion-select>\n                  </ion-item>\n                  <app-form-item\n                    label-tag=\"region\"\n                    label-text=\"Region\"\n                    value={this.immerseaLocation.region}\n                    placeholder={\"Sicilia Tirrenica, Sicilia Ionica, etc...\"}\n                    name=\"region\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-tag=\"area\"\n                    label-text=\"Area\"\n                    value={this.immerseaLocation.area}\n                    placeholder={\"Capo San Vito, Palermo, etc...\"}\n                    name=\"area\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-tag=\"name\"\n                    label-text=\"Name\"\n                    value={this.immerseaLocation.displayName}\n                    name=\"displayName\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-tag=\"short-description\"\n                    label-text=\"Short Description\"\n                    value={this.immerseaLocation.shortDescription}\n                    name=\"shortDescription\"\n                    multiLanguage\n                    textRows={5}\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                </ion-list>\n              </swiper-slide>\n              {/** ARTICLE */}\n              <swiper-slide class=\"swiper-slide\">\n                <modal-quill-editor\n                  immerseaLocation={this.immerseaLocation}\n                  updateView={this.updateView}\n                  readOnly={true}\n                  onEdit={() => this.openEditor()}\n                ></modal-quill-editor>\n              </swiper-slide>\n              {/** GALLERY */}\n              <swiper-slide class=\"swiper-slide\">\n                <ion-list>\n                  <ion-item button onClick={() => this.addMedia()}>\n                    <ion-icon slot=\"start\" name=\"add\"></ion-icon>\n                    <ion-label>Aggiungi</ion-label>\n                  </ion-item>\n                  {Object.keys(this.mediaToUpload).length > 0\n                    ? [\n                        <ion-list-header>File da caricare</ion-list-header>,\n                        Object.keys(this.mediaToUpload).map((id) => (\n                          <ion-item>\n                            <ion-label>\n                              {this.mediaToUpload[id].media.title}\n                            </ion-label>\n                          </ion-item>\n                        )),\n                      ]\n                    : undefined}\n                  <ion-list-header>Photo</ion-list-header>\n                  {this.mediaArray.photo.length > 0 ? (\n                    this.mediaArray.photo.map((photo) => (\n                      <ion-item>\n                        <ion-label>{photo.title}</ion-label>\n                      </ion-item>\n                    ))\n                  ) : (\n                    <ion-item>\n                      <ion-label>Nessuna foto caricata</ion-label>\n                    </ion-item>\n                  )}\n\n                  <ion-list-header>Video</ion-list-header>\n                  {this.mediaArray.video.length > 0 ? (\n                    this.mediaArray.video.map((video) => (\n                      <ion-item>\n                        <ion-label>{video.title}</ion-label>\n                      </ion-item>\n                    ))\n                  ) : (\n                    <ion-item>\n                      <ion-label>Nessun video caricato</ion-label>\n                    </ion-item>\n                  )}\n                  <ion-list-header>Documenti</ion-list-header>\n                  {this.mediaArray.documents.length > 0 ? (\n                    this.mediaArray.documents.map((document) => (\n                      <ion-item>\n                        <ion-label>{document.title}</ion-label>\n                      </ion-item>\n                    ))\n                  ) : (\n                    <ion-item>\n                      <ion-label>Nessun documento caricato</ion-label>\n                    </ion-item>\n                  )}\n                </ion-list>\n              </swiper-slide>\n              {/** MAP */}\n              <swiper-slide class=\"swiper-slide\">\n                <div id=\"map-container\">\n                  <app-map\n                    id=\"map\"\n                    pageId=\"dive-sites\"\n                    draggableMarkerPosition={this.draggableMarkerPosition}\n                    onDragMarkerEnd={(ev) => this.updateLocation(ev)}\n                  ></app-map>\n                </div>\n              </swiper-slide>\n              {/** COORDINATES */}\n              <swiper-slide class=\"swiper-slide\">\n                <app-coordinates\n                  coordinates={this.draggableMarkerPosition}\n                  onCoordinatesEmit={(ev) => this.updateLocation(ev)}\n                  onAddressEmit={(ev) => this.updateAddress(ev)}\n                ></app-coordinates>\n              </swiper-slide>\n              {/** TEAM */}\n              <swiper-slide class=\"swiper-slide\">\n                <app-users-list\n                  item={this.immerseaLocation}\n                  editable\n                  show={[\"owner\", \"editor\"]}\n                />\n              </swiper-slide>\n            </swiper-wrapper>\n          </swiper-container>\n        </ion-content>\n        <app-modal-footer\n          disableSave={!this.validLocation}\n          onCancelEmit={() => this.cancel()}\n          onSaveEmit={() => this.save()}\n        />\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}