{"version":3,"names":["pageImmerseaAdminCss","PageImmerseaAdminStyle0","PageImmerseaAdmin","componentWillLoad","this","sections","ImmerseaLocationsService","getSections","segmentChanged","detail","value","immerseaLocationsListSub","immerseaLocationsList$","subscribe","list","immerseaLocationsList","updateView","disconnectedCallback","unsubscribe","ev","segmentSelected","sectionSelected","find","tag","reorderListItems","reorder","section","itemsBackup","cloneDeep","itemMove","splice","from","to","console","log","forEach","x","order","undefined","complete","orderBy","render","h","key","color","slot","onClick","RouterService","push","name","mode","onIonChange","map","class","icon","type","TranslationService","getTransl","text","length","disabled","onIonItemReorder","location","button","presentLocationDetails","id","coverURL","src","displayName","vertical","horizontal","presentLocationUpdate"],"sources":["src/components/immersea/pages/page-immersea-admin/page-immersea-admin.scss?tag=page-immersea-admin","src/components/immersea/pages/page-immersea-admin/page-immersea-admin.tsx"],"sourcesContent":["page-immersea-admin {\n    /* Component styles go here */\n}\n","import {Component, h, State} from \"@stencil/core\";\nimport {MapDataImmerseaLocation} from \"../../../../interfaces/immersea/immerseaLocation\";\nimport {RouterService} from \"../../../../services/common/router\";\nimport {TranslationService} from \"../../../../services/common/translations\";\nimport {ImmerseaLocationsService} from \"../../../../services/immersea/immerseaLocations\";\nimport {Subscription} from \"rxjs\";\nimport {cloneDeep, find, orderBy} from \"lodash\";\n\n@Component({\n  tag: \"page-immersea-admin\",\n  styleUrl: \"page-immersea-admin.scss\",\n})\nexport class PageImmerseaAdmin {\n  @State() segmentSelected;\n  sectionSelected: any;\n  sections: any;\n  immerseaLocationsList: {[section: string]: MapDataImmerseaLocation[]};\n  immerseaLocationsListSub: Subscription;\n  @State() updateView = false;\n\n  componentWillLoad() {\n    this.sections = ImmerseaLocationsService.getSections();\n    this.segmentChanged({detail: {value: \"nature\"}});\n    this.immerseaLocationsListSub =\n      ImmerseaLocationsService.immerseaLocationsList$.subscribe((list) => {\n        this.immerseaLocationsList = list;\n        this.updateView = !this.updateView;\n      });\n  }\n\n  disconnectedCallback() {\n    this.immerseaLocationsListSub.unsubscribe();\n  }\n\n  segmentChanged(ev) {\n    this.segmentSelected = ev.detail.value;\n    this.sectionSelected = find(this.sections, {\n      tag: this.segmentSelected,\n    });\n  }\n\n  async reorderListItems(reorder) {\n    const section = this.immerseaLocationsList[this.sectionSelected.tag];\n    const itemsBackup = cloneDeep(section);\n    const itemMove = itemsBackup.splice(reorder.detail.from, 1)[0];\n    itemsBackup.splice(reorder.detail.to, 0, itemMove);\n    console.log(\"itemsBackup\", itemsBackup);\n    itemsBackup.forEach((x, order) => {\n      !x.order ? (x.order = {}) : undefined;\n      x.order[this.sectionSelected.tag] = order;\n    });\n    reorder.detail.complete();\n    this.immerseaLocationsList[this.sectionSelected.tag] = orderBy(\n      itemsBackup,\n      [this.sectionSelected.tag] + \".order\"\n    );\n    console.log(\n      \"reorderListItems\",\n      this.immerseaLocationsList[this.sectionSelected.tag]\n    );\n  }\n\n  render() {\n    return [\n      <ion-header>\n        <ion-toolbar color=\"immersea\">\n          <ion-title>Admin</ion-title>\n          <ion-buttons slot=\"start\">\n            <ion-button onClick={() => RouterService.push(\"news\", \"root\")}>\n              <ion-icon name=\"arrow-back\"></ion-icon>\n              <ion-label>BACK</ion-label>\n            </ion-button>\n          </ion-buttons>\n        </ion-toolbar>\n        <ion-toolbar color=\"immersea\">\n          <ion-segment\n            mode=\"md\"\n            onIonChange={(ev) => this.segmentChanged(ev)}\n            value=\"nature\"\n          >\n            {this.sections.map((section) => (\n              <ion-segment-button value={section.tag}>\n                <ion-icon\n                  class={\n                    section.icon.type == \"mapicon\"\n                      ? \"marker map-icon \" + section.icon.name\n                      : undefined\n                  }\n                  name={\n                    section.icon.type == \"ionicon\"\n                      ? section.icon.name\n                      : undefined\n                  }\n                ></ion-icon>\n                <ion-label>\n                  {TranslationService.getTransl(section.tag, section.text)}\n                </ion-label>\n              </ion-segment-button>\n            ))}\n          </ion-segment>\n        </ion-toolbar>\n      </ion-header>,\n      <ion-content>\n        <ion-list>\n          {!this.immerseaLocationsList[this.sectionSelected.tag] ||\n          (this.immerseaLocationsList[this.sectionSelected.tag] &&\n            this.immerseaLocationsList[this.sectionSelected.tag].length ==\n              0) ? (\n            <ion-item>\n              <ion-label>Nessuna location disponibile</ion-label>\n            </ion-item>\n          ) : (\n            <ion-reorder-group\n              disabled={false}\n              onIonItemReorder={(ev) => this.reorderListItems(ev)}\n            >\n              {this.immerseaLocationsList[this.sectionSelected.tag].map(\n                (location) => (\n                  <ion-item\n                    button\n                    detail\n                    onClick={() =>\n                      ImmerseaLocationsService.presentLocationDetails(\n                        location.id\n                      )\n                    }\n                  >\n                    {location.coverURL ? (\n                      <ion-avatar slot=\"start\">\n                        <img src={location.coverURL} />\n                      </ion-avatar>\n                    ) : (\n                      <ion-icon slot=\"start\" name=\"globe-outline\"></ion-icon>\n                    )}\n                    <ion-label>{location.displayName}</ion-label>\n                    <ion-reorder slot=\"end\"></ion-reorder>\n                  </ion-item>\n                )\n              )}\n            </ion-reorder-group>\n          )}\n        </ion-list>\n        <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n          <ion-fab-button\n            color=\"immersea\"\n            onClick={() => ImmerseaLocationsService.presentLocationUpdate()}\n          >\n            <ion-icon name=\"add\"></ion-icon>\n          </ion-fab-button>\n        </ion-fab>\n      </ion-content>,\n    ];\n  }\n}\n"],"mappings":"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","ignoreList":[]}