{"version":3,"names":["popoverLevelCss","PopoverLevelStyle0","PopoverLevel","this","hasTrimixlicence","hasReblicence","updateGas","DiveProfilePoint","componentWillLoad","UserService","checkLicence","level","levelProp","depth","setGas","gas","fO2","fHe","setValue","setpoint","time","index","setForm","updateStdGasList","componentDidLoad","scrollGas","el","querySelector","popover","closest","disconnectedCallback","form","getForm","stdGases","isStandardGas","i","n","stdGasesList","forEach","selected","O2","He","ppO2","parameters","bottomppO2","gasModel","getGas","active","userRoles","licences","checkGasLimitations","push","setTimeout","width","scrollWidth","clientWidth","pagination","scrollLeft","updateNewGas","updateWarnings","d","pO2","gasWarning","highPO2WarningatDepthWithTarget","ENDWarning","highENDWarningatDepth","updateView","setStdGasForDepth","find","fromDepth","selectStdGas","updateValue","input","round","o2","he","inputHandler","event","value","toNumber","detail","name","blurHandler","maxDepth","checkDepthLimitations","minO2","getUserLimitations","maxO2","maxHe","showpO2Info","alert","alertController","create","header","message","TranslationService","getTransl","buttons","text","present","render","h","key","style","marginBottom","class","onFormItemChanged","ev","onFormItemBlur","validator","options","min","max","forceInvalid","getpO2atDepth","undefined","getEND","DiveToolsService","depthUnit","onClick","ccr","size","shape","fill","id","map","color","disabled","GasBlenderService","getGasName","getModF","onCancelEmit","dismiss","onSaveEmit"],"sources":["src/components/udive/popovers/popover-level/popover-level.scss?tag=popover-level","src/components/udive/popovers/popover-level/popover-level.tsx"],"sourcesContent":["popover-level {\n  .scrollx {\n    display: flex;\n    flex-wrap: nowrap;\n    overflow-x: auto;\n\n    .item {\n      flex: 0 0 0 0;\n    }\n\n    ::-webkit-scrollbar {\n      display: none;\n    }\n  }\n  //validators notification\n  .notification {\n    min-height: 20px;\n    height: 20px;\n    font-size: 0.8em;\n    color: #ea6153;\n    border-width: 1px;\n    border-color: #ea6153;\n    padding-left: 10px;\n    .item-inner {\n      margin-left: 0px !important;\n      border-bottom: 0px !important;\n    }\n    .icon {\n      font-size: 1.7em;\n      padding-left: 6px !important;\n      padding-top: 4px !important;\n    }\n  }\n}\n","import {Component, h, Element, Prop, State} from \"@stencil/core\";\nimport {DiveProfilePoint} from \"../../../../interfaces/udive/planner/dive-profile-point\";\nimport {GasModel} from \"../../../../interfaces/udive/planner/gas-model\";\nimport {GasBlenderService} from \"../../../../services/udive/planner/gas-blender\";\nimport {UserService} from \"../../../../services/common/user\";\nimport {DiveToolsService} from \"../../../../services/udive/planner/dive-tools\";\nimport {alertController} from \"@ionic/core\";\nimport {TranslationService} from \"../../../../services/common/translations\";\nimport {find, round, toNumber} from \"lodash\";\n\n@Component({\n  tag: \"popover-level\",\n  styleUrl: \"popover-level.scss\",\n})\nexport class PopoverLevel {\n  @Element() el: HTMLElement;\n  scrollGas: HTMLElement;\n\n  hasTrimixlicence = true;\n  hasReblicence = true;\n  @Prop() ccr = false;\n  @Prop() parameters: any;\n  @Prop() stdGasesList: Array<GasModel>;\n  @Prop() levelProp: DiveProfilePoint;\n  @Prop() units: string = \"Metric\";\n  stdGases: Array<any>;\n  @State() gasWarning: boolean = false;\n  @State() ENDWarning: boolean = false;\n  popover: HTMLIonPopoverElement;\n  updateGas: boolean = true;\n  updateNewGas: boolean;\n\n  @State() level: DiveProfilePoint = new DiveProfilePoint();\n  @State() form: any;\n  @State() updateView = false;\n\n  async componentWillLoad() {\n    this.hasTrimixlicence = await UserService.checkLicence(\"trimix\");\n    this.hasReblicence = await UserService.checkLicence(\"reb\");\n    this.level = new DiveProfilePoint();\n    if (this.levelProp.depth) {\n      this.level.setGas(this.levelProp.gas.fO2, this.levelProp.gas.fHe);\n      this.level.setValue(\"depth\", this.levelProp.depth);\n      this.level.setValue(\"setpoint\", this.levelProp.setpoint);\n      this.level.setValue(\"time\", this.levelProp.time);\n      this.level.setValue(\"index\", this.levelProp.index);\n    }\n    //this.updateGas = this.levelProp.updateGas;\n    this.setForm();\n    this.updateStdGasList();\n  }\n\n  componentDidLoad() {\n    this.scrollGas = this.el.querySelector(\"#scrollGas\");\n    this.updateStdGasList();\n    this.popover = this.el.closest(\"ion-popover\");\n  }\n\n  disconnectedCallback() {\n    //check valid gases\n    this.setForm();\n  }\n\n  async setForm() {\n    this.form = this.level.getForm();\n    this.hasTrimixlicence = await UserService.checkLicence(\"trimix\");\n    this.hasReblicence = await UserService.checkLicence(\"reb\");\n  }\n\n  updateStdGasList() {\n    //create gas list\n    this.stdGases = [];\n    let isStandardGas = false;\n    let i = 0,\n      n = 0;\n    this.stdGasesList.forEach((gas) => {\n      i++;\n      let selected =\n        this.level.gas.O2 === gas.O2 && this.level.gas.He === gas.He\n          ? true\n          : false;\n      if (selected) {\n        isStandardGas = true;\n        n = i;\n      }\n      //update setpoint according to parameters\n      gas.ppO2 = this.parameters.bottomppO2;\n\n      //check user limitations and activate gas\n      const gasModel = gas.getGas();\n      const active = UserService.userRoles.licences.checkGasLimitations(\n        gasModel,\n        false\n      );\n      this.stdGases.push({\n        selected: selected,\n        active: active,\n        gas: gasModel,\n      });\n    });\n\n    if (isStandardGas && this.scrollGas) {\n      //scroll list to the left at the selected gas\n      setTimeout(() => {\n        //scroll list to the left at the selected gas\n        let width = this.scrollGas.scrollWidth;\n        let clientWidth = this.scrollGas.clientWidth;\n        let pagination = i / (width / clientWidth);\n        n = n - pagination;\n        n = n < 0 ? 0 : n;\n        this.scrollGas.scrollLeft = ((width * n) / i) * 1.15;\n      });\n    }\n    //update only if it's a standard gas and it's allowed to update\n    this.updateNewGas = isStandardGas && this.updateGas;\n    //check if gas had high pO2\n    this.updateWarnings(this.level.depth, this.level.gas.ppO2);\n  }\n\n  updateWarnings(d, pO2) {\n    //check if gas had high pO2\n    this.gasWarning = this.level.gas.highPO2WarningatDepthWithTarget(d, pO2);\n    this.ENDWarning = this.level.gas.highENDWarningatDepth(this.level.depth);\n    this.updateView = !this.updateView;\n  }\n\n  setStdGasForDepth() {\n    if (!this.hasTrimixlicence) {\n      return;\n    }\n    if (this.updateNewGas) {\n      let gas = find(this.stdGases, (gas) => {\n        return gas.gas.fromDepth >= this.level.depth;\n      });\n      if (gas) {\n        gas.selected = true;\n        //get setpoint from preferences\n        this.level.setValue(\"setpoint\", gas.gas.ppO2);\n        if (!this.hasTrimixlicence && gas.He > 0) {\n          gas.gas.He = 0;\n        }\n        this.level.setGas(gas.gas.O2 / 100, gas.gas.He / 100);\n      }\n    }\n    this.setForm();\n  }\n\n  selectStdGas(gas) {\n    if (!this.hasTrimixlicence && gas.He > 0) {\n      UserService.checkLicence(\"trimix\", true);\n      return;\n    }\n    this.updateNewGas = true;\n    //get setpoint from preferences\n    this.level.setValue(\"setpoint\", gas.ppO2);\n    this.level.setGas(gas.O2 / 100, gas.He / 100);\n    this.updateStdGasList();\n    this.setForm();\n  }\n\n  updateValue(input: string) {\n    this.level.setValue(input, this.form[input]);\n    if (input == \"depth\") {\n      this.setStdGasForDepth();\n      this.updateStdGasList();\n    } else if (input == \"o2\" || input == \"he\") {\n      this.level.setGas(\n        round(this.form.o2 / 100, 2),\n        round(this.form.he / 100, 2)\n      );\n      //check if standard gas\n      this.updateStdGasList();\n    }\n  }\n\n  inputHandler(event: any) {\n    let value = toNumber(event.detail.value);\n    this.form[event.detail.name] = value;\n    this.updateValue(event.detail.name);\n  }\n\n  blurHandler(event) {\n    let value = toNumber(event.detail.value);\n    if (event.detail.name === \"depth\") {\n      //check max depth\n      const maxDepth = UserService.userRoles.licences.checkDepthLimitations();\n      if (value > maxDepth) {\n        value = maxDepth;\n      }\n    } else if (event.detail.name === \"o2\") {\n      //check max O2\n      const minO2 = UserService.userRoles.licences.getUserLimitations().minO2;\n      const maxO2 = UserService.userRoles.licences.getUserLimitations().maxO2;\n      if (value > maxO2) {\n        value = maxO2;\n      } else if (value < minO2) {\n        value = minO2;\n      }\n      //check He value\n      if (this.form.he + value > 100) {\n        this.form.he = 100 - value;\n      }\n    } else if (event.detail.name === \"he\") {\n      //check max O2\n      const maxHe = UserService.userRoles.licences.getUserLimitations().maxHe;\n      if (value > maxHe) {\n        value = maxHe;\n      }\n      //check O2 value\n      if (this.form.o2 + value > 100) {\n        this.form.o2 = 100 - value;\n      }\n    } else if (event.detail.name === \"setpoint\") {\n      value = toNumber(value);\n    }\n    this.form[event.detail.name] = value;\n    this.updateValue(event.detail.name);\n    this.setForm();\n    this.updateStdGasList();\n  }\n\n  async showpO2Info() {\n    const alert = await alertController.create({\n      header: \"pO2 setpoint\",\n      message: TranslationService.getTransl(\n        \"po2-setpoint-info\",\n        \"The pO2 setpoint is used to update the setpoint of the CCR within the range of this level or deco gas.\"\n      ),\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n        },\n      ],\n    });\n    alert.present();\n  }\n\n  render() {\n    return [\n      <ion-list style={{marginBottom: \"0px\"}}>\n        <ion-grid class=\"ion-no-padding\">\n          <ion-row>\n            <ion-col>\n              <app-form-item\n                label-tag=\"depth\"\n                label-text=\"Depth\"\n                value={this.form.depth}\n                name=\"depth\"\n                input-type=\"number\"\n                onFormItemChanged={(ev) => this.inputHandler(ev)}\n                onFormItemBlur={(ev) => this.blurHandler(ev)}\n                validator={[\n                  \"required\",\n                  {\n                    name: \"minmaxvalue\",\n                    options: {\n                      min: 1,\n                      max: UserService.userRoles.licences.checkDepthLimitations(),\n                    },\n                  },\n                ]}\n              ></app-form-item>\n            </ion-col>\n            <ion-col>\n              <app-form-item\n                label-tag=\"time\"\n                label-text=\"Time\"\n                value={this.form.time}\n                name=\"time\"\n                input-type=\"number\"\n                onFormItemChanged={(ev) => this.inputHandler(ev)}\n                onFormItemBlur={(ev) => this.blurHandler(ev)}\n                validator={[\"required\"]}\n              ></app-form-item>\n            </ion-col>\n          </ion-row>\n          <ion-row>\n            <ion-col>\n              <ion-row class=\"ion-no-padding\">\n                <app-form-item\n                  label-text=\"O2\"\n                  value={this.form.o2}\n                  name=\"o2\"\n                  input-type=\"number\"\n                  onFormItemChanged={(ev) => this.inputHandler(ev)}\n                  onFormItemBlur={(ev) => this.blurHandler(ev)}\n                  forceInvalid={this.gasWarning}\n                  validator={[\n                    \"required\",\n                    {\n                      name: \"minmaxvalue\",\n                      options: {\n                        min: UserService.userRoles.licences.getUserLimitations()\n                          .minO2,\n                        max: UserService.userRoles.licences.getUserLimitations()\n                          .maxO2,\n                      },\n                    },\n                  ]}\n                ></app-form-item>\n              </ion-row>\n              {this.gasWarning ? (\n                <ion-row class=\"ion-no-padding\">\n                  <ion-col>\n                    <div class=\"notification\">\n                      <ion-icon name=\"warning\" item-start></ion-icon>\n                      High pO2 ({this.level.gas.getpO2atDepth(this.level.depth)}\n                      )!\n                    </div>\n                  </ion-col>\n                </ion-row>\n              ) : undefined}\n            </ion-col>\n            <ion-col>\n              {this.hasTrimixlicence ? (\n                [\n                  <ion-row class=\"ion-no-padding\">\n                    <app-form-item\n                      label-text=\"He\"\n                      value={this.form.he}\n                      name=\"he\"\n                      input-type=\"number\"\n                      onFormItemChanged={(ev) => this.inputHandler(ev)}\n                      onFormItemBlur={(ev) => this.blurHandler(ev)}\n                      forceInvalid={this.ENDWarning}\n                      validator={[\n                        \"required\",\n                        {\n                          name: \"minmaxvalue\",\n                          options: {\n                            min: 0,\n                            max: UserService.userRoles.licences.getUserLimitations()\n                              .maxHe,\n                          },\n                        },\n                      ]}\n                    ></app-form-item>\n                  </ion-row>,\n                  this.ENDWarning ? (\n                    <ion-row class=\"ion-no-padding\">\n                      <ion-col>\n                        <div class=\"notification\">\n                          <ion-icon name=\"warning\" item-start></ion-icon>\n                          High END ({this.level.gas.getEND(this.level.depth)}\n                          {DiveToolsService.depthUnit})!\n                        </div>\n                      </ion-col>\n                    </ion-row>\n                  ) : undefined,\n                ]\n              ) : (\n                <app-form-item\n                  label-text=\"He\"\n                  value={this.form.he}\n                  onClick={() => UserService.checkLicence(\"trimix\", true)}\n                ></app-form-item>\n              )}\n            </ion-col>\n          </ion-row>\n          {this.ccr ? (\n            <ion-row>\n              <ion-col>\n                {this.hasReblicence ? (\n                  <app-form-item\n                    label-tag=\"pO2-setpoint\"\n                    label-text=\"pO2 setPoint\"\n                    value={this.form.setpoint}\n                    name=\"setpoint\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.inputHandler(ev)}\n                    onFormItemBlur={(ev) => this.blurHandler(ev)}\n                    validator={[\n                      {\n                        name: \"minmaxvalue\",\n                        options: {min: 0.5, max: 1.6},\n                      },\n                    ]}\n                  ></app-form-item>\n                ) : (\n                  <app-form-item\n                    label-tag=\"pO2-setpoint\"\n                    label-text=\"pO2 setPoint\"\n                    value={this.form.setpoint}\n                    onClick={() => UserService.checkLicence(\"reb\", true)}\n                  ></app-form-item>\n                )}\n              </ion-col>\n              <ion-col size=\"2\" class=\"ion-no-padding\">\n                <ion-button\n                  shape=\"round\"\n                  fill=\"clear\"\n                  icon-only\n                  class=\"ion-no-padding\"\n                  onClick={() => this.showpO2Info()}\n                >\n                  <ion-icon name=\"help-circle-outline\"></ion-icon>\n                </ion-button>\n              </ion-col>\n            </ion-row>\n          ) : undefined}\n\n          <ion-row class=\"scrollx\" id=\"scrollGas\">\n            {this.stdGases.map((gas) => (\n              <ion-col class=\"item\">\n                <ion-button\n                  shape=\"round\"\n                  color={gas.selected ? \"secondary\" : \"primary\"}\n                  disabled={!gas.active}\n                  onClick={() => this.selectStdGas(gas.gas)}\n                >\n                  {GasBlenderService.getGasName(gas.gas)}\n                </ion-button>\n              </ion-col>\n            ))}\n          </ion-row>\n          <ion-row>\n            <ion-col>\n              <div class=\"notification\" style={{color: \"blue\"}}>\n                MOD:{\" \"}\n                {this.level.gas.getModF(\n                  this.level.gas.fO2,\n                  this.level.gas.ppO2\n                )}\n                {DiveToolsService.depthUnit} @ {this.level.gas.ppO2} pO2\n              </div>\n              <div class=\"notification\" style={{color: \"blue\"}}>\n                END: {this.level.gas.getEND(this.level.depth)}\n                {DiveToolsService.depthUnit} @ {this.level.depth}\n                {DiveToolsService.depthUnit}\n              </div>\n              <div class=\"notification\" style={{color: \"blue\"}}>\n                pO2: {this.level.gas.getpO2atDepth(this.level.depth)} @{\" \"}\n                {this.level.depth}\n                {DiveToolsService.depthUnit}\n              </div>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </ion-list>,\n      <app-modal-footer\n        onCancelEmit={() => this.popover.dismiss()}\n        onSaveEmit={() => this.popover.dismiss(this.form)}\n      />,\n    ];\n  }\n}\n"],"mappings":"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","ignoreList":[]}