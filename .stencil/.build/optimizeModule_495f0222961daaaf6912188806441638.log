import{W as e}from"./p-5d8b2afa.js";import"./p-cbe60c68.js";import"./p-c7ee7cfe.js";import"./p-694b8ade.js";function n(){const e=window.navigator.connection||window.navigator.mozConnection||window.navigator.webkitConnection;let n="unknown";const o=e?e.type||e.effectiveType:null;if(o&&typeof o==="string"){switch(o){case"bluetooth":case"cellular":n="cellular";break;case"none":n="none";break;case"ethernet":case"wifi":case"wimax":n="wifi";break;case"other":case"unknown":n="unknown";break;case"slow-2g":case"2g":case"3g":n="cellular";break;case"4g":n="wifi";break}}return n}class o extends e{constructor(){super();this.handleOnline=()=>{const e=n();const o={connected:true,connectionType:e};this.notifyListeners("networkStatusChange",o)};this.handleOffline=()=>{const e={connected:false,connectionType:"none"};this.notifyListeners("networkStatusChange",e)};if(typeof window!=="undefined"){window.addEventListener("online",this.handleOnline);window.addEventListener("offline",this.handleOffline)}}async getStatus(){if(!window.navigator){throw this.unavailable("Browser does not support the Network Information API")}const e=window.navigator.onLine;const o=n();const t={connected:e,connectionType:e?o:"none"};return t}}const t=new o;export{t as Network,o as NetworkWeb};