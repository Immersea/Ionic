{"version":3,"names":["pageAdminTranslationsCss","PageAdminTranslationsStyle0","PageAdminTranslations","componentWillLoad","this","languages","SystemService","getLanguages","selectedLanguage","translationsSub","onSnapshot","query","collection","firestore","TRANSLATIONSCOLLECTION","orderBy","translations","forEach","doc","trans","data","id","push","translationsBackup","cloneDeep","filterTranslations","componentDidLoad","setSliderHeight","slider","Swiper","speed","spaceBetween","allowTouchMove","autoHeight","on","slideChange","updateAutoHeight","updateSize","slideContainers","Array","from","el","getElementsByClassName","map","container","setAttribute","slideHeight","updateView","disconnectedCallback","segmentChanged","ev","detail","value","segment","slideTo","selectLanguage","target","runTranslationsScript","CallableFunctionsService","updateTranslations","presentAlert","error","console","log","translationChanged","updated","translationsChanged","index","findIndex","x","filteredTranslations","filter","input","toLowerCase","includes","close","save","promises","Object","keys","transId","translation","DatabaseService","updateDocument","Promise","all","render","h","key","color","tag","text","UserService","userRoles","isSuperAdmin","class","mode","onIonChange","layout","animated","placeholder","TranslationService","getTransl","debounce","onIonInput","label","labelPlacement","interface","language","slot","countryCode","undefined","onTranslationChanged","size","onClick","length","onCancelEmit","onSaveEmit"],"sources":["src/components/common/pages/admin/page-admin-translations/page-admin-translations.scss?tag=page-admin-translations","src/components/common/pages/admin/page-admin-translations/page-admin-translations.tsx"],"sourcesContent":["page-admin-translations {\n  app-admin-translations {\n    width: 100%;\n    height: 100%;\n  }\n}\n","import {Component, h, State, Element} from \"@stencil/core\";\nimport {UserService} from \"../../../../../services/common/user\";\nimport {SystemService} from \"../../../../../services/common/system\";\nimport {\n  TRANSLATIONSCOLLECTION,\n  TranslationService,\n} from \"../../../../../services/common/translations\";\nimport {Translation} from \"../../../../../interfaces/common/translations/translations\";\nimport {DatabaseService} from \"../../../../../services/common/database\";\nimport {slideHeight} from \"../../../../../helpers/utils\";\nimport {collection, onSnapshot, orderBy, query} from \"firebase/firestore\";\nimport {firestore} from \"../../../../../helpers/firebase\";\nimport Swiper from \"swiper\";\nimport {cloneDeep} from \"lodash\";\nimport {CallableFunctionsService} from \"../../../../../services/common/callableFunctions\";\n\n@Component({\n  tag: \"page-admin-translations\",\n  styleUrl: \"page-admin-translations.scss\",\n})\nexport class PageAdminTranslations {\n  @Element() el: HTMLElement;\n  @State() segment: string = \"translations\";\n  @State() slider: Swiper;\n  languages: any;\n  @State() translations: Translation[] = [];\n  @State() filteredTranslations: Translation[] = [];\n  @State() filter: string = \"\";\n  @State() translationsBackup: Translation[] = [];\n  translationsSub: any;\n  @State() translationsChanged: any = {};\n  selectedLanguage: any;\n  @State() updateView = false;\n\n  componentWillLoad() {\n    this.languages = SystemService.getLanguages();\n    this.selectedLanguage = this.languages[0];\n\n    this.translationsSub = onSnapshot(\n      query(collection(firestore, TRANSLATIONSCOLLECTION), orderBy(\"input\")),\n      (translations) => {\n        this.translations = [];\n        translations.forEach((doc) => {\n          const trans = doc.data() as Translation;\n          trans[\"id\"] = doc.id;\n          this.translations.push(trans);\n        });\n        this.translationsBackup = cloneDeep(this.translations);\n        this.filterTranslations();\n      }\n    );\n  }\n\n  componentDidLoad() {\n    this.setSliderHeight();\n  }\n\n  setSliderHeight() {\n    this.slider = new Swiper(\".slider-translations\", {\n      speed: 400,\n      spaceBetween: 100,\n      allowTouchMove: false,\n      autoHeight: true,\n      on: {\n        slideChange: () => {\n          this.slider ? this.slider.updateAutoHeight() : null;\n          this.slider.updateSize();\n        },\n      },\n    });\n    //reset sliders height inside slider\n    const slideContainers = Array.from(\n      this.el.getElementsByClassName(\"slide-container\")\n    );\n    slideContainers.map((container) => {\n      container.setAttribute(\"style\", \"height: \" + slideHeight(null, 4) + \"px\");\n    });\n    this.slider.updateSize();\n    this.updateView = !this.updateView;\n  }\n\n  disconnectedCallback() {\n    this.translationsSub();\n  }\n\n  segmentChanged(ev) {\n    if (ev.detail.value) {\n      this.segment = ev.detail.value;\n      if (ev.detail.value == \"admin\") {\n        this.slider.slideTo(1);\n      } else if (ev.detail.value == \"translations\") {\n        this.slider.slideTo(0);\n      }\n      this.updateView = !this.updateView;\n    }\n  }\n\n  selectLanguage(ev) {\n    this.selectedLanguage = ev.target.value;\n    this.updateView = !this.updateView;\n  }\n\n  async runTranslationsScript() {\n    try {\n      await CallableFunctionsService.updateTranslations();\n      SystemService.presentAlert(\"Done\", \"Translations saved!\");\n    } catch (error) {\n      console.log(\"error runTranslationsScript\", error);\n    }\n  }\n\n  translationChanged(ev) {\n    if (ev && ev.detail) {\n      const updated = ev.detail;\n      this.translationsChanged[updated.id] = updated;\n      let index = this.translations.findIndex((x) => x.id === updated.id);\n      this.translations[index] = updated;\n      this.translations = [...this.translations];\n      index = this.filteredTranslations.findIndex((x) => x.id === updated.id);\n      this.filteredTranslations[index] = updated;\n      this.filteredTranslations = [...this.filteredTranslations];\n      this.updateView = !this.updateView;\n    }\n  }\n\n  filterTranslations(ev?) {\n    if (ev && ev.target.value) {\n      this.filter = ev.target.value;\n    }\n    if (this.filter && this.filter !== \"\") {\n      this.filteredTranslations = this.translations.filter((trans) =>\n        trans.input.toLowerCase().includes(this.filter.toLowerCase())\n      );\n    } else {\n      this.filteredTranslations = cloneDeep(this.translations);\n    }\n    this.updateView = !this.updateView;\n  }\n\n  close() {\n    this.translations = cloneDeep(this.translationsBackup);\n    this.filterTranslations();\n  }\n\n  async save() {\n    const promises = [];\n    Object.keys(this.translationsChanged).map((transId) => {\n      const translation = this.translationsChanged[transId];\n      //remove id written by query\n      delete translation.id;\n      promises.push(\n        DatabaseService.updateDocument(\n          TRANSLATIONSCOLLECTION,\n          transId,\n          translation\n        )\n      );\n    });\n    //execute writes\n    await Promise.all(promises);\n    this.translationsChanged = [];\n  }\n\n  render() {\n    return [\n      <ion-header>\n        <app-navbar\n          color=\"udive\"\n          tag=\"translations\"\n          text=\"Translations\"\n        ></app-navbar>\n      </ion-header>,\n      UserService.userRoles && UserService.userRoles.isSuperAdmin()\n        ? [\n            <ion-header>\n              <ion-toolbar color=\"udive\" class=\"no-safe-padding\">\n                <ion-segment\n                  mode=\"md\"\n                  onIonChange={(ev) => this.segmentChanged(ev)}\n                  value={this.segment}\n                >\n                  <ion-segment-button value=\"translations\" layout=\"icon-start\">\n                    <ion-label>TRANSLATIONS</ion-label>\n                  </ion-segment-button>\n                  <ion-segment-button value=\"admin\" layout=\"icon-start\">\n                    <ion-label>ADMIN</ion-label>\n                  </ion-segment-button>\n                </ion-segment>\n              </ion-toolbar>\n            </ion-header>,\n            this.segment == \"translations\" ? (\n              <ion-header>\n                <ion-toolbar color=\"udive\">\n                  <ion-searchbar\n                    animated\n                    placeholder={TranslationService.getTransl(\n                      \"search\",\n                      \"Search\"\n                    )}\n                    value={this.filter}\n                    debounce={250}\n                    onIonInput={(ev) => this.filterTranslations(ev)}\n                  ></ion-searchbar>\n                </ion-toolbar>\n                <ion-toolbar color=\"udive\">\n                  <ion-item>\n                    <ion-select\n                      label={TranslationService.getTransl(\n                        \"language\",\n                        \"Language\"\n                      )}\n                      labelPlacement=\"floating\"\n                      interface=\"action-sheet\"\n                      value={this.selectedLanguage}\n                      onIonChange={(ev) => this.selectLanguage(ev)}\n                    >\n                      {this.languages.map((language) => (\n                        <ion-select-option value={language}>\n                          {language.label}\n                        </ion-select-option>\n                      ))}\n                    </ion-select>\n                    <ion-icon\n                      slot=\"end\"\n                      class={\n                        \"flag-icon flag-icon-\" +\n                        (this.selectedLanguage.countryCode == \"en\"\n                          ? \"gb\"\n                          : this.selectedLanguage.countryCode)\n                      }\n                    ></ion-icon>\n                  </ion-item>\n                </ion-toolbar>\n              </ion-header>\n            ) : undefined,\n          ]\n        : undefined,\n      <ion-content>\n        <swiper-container class=\"slider-translations swiper\">\n          <swiper-wrapper class=\"swiper-wrapper\">\n            <swiper-slide class=\"swiper-slide\">\n              <ion-content class=\"slide-container\">\n                <ion-grid>\n                  <ion-row>\n                    <ion-col>\n                      <app-admin-translations\n                        translations={this.filteredTranslations}\n                        language={this.selectedLanguage.value}\n                        onTranslationChanged={(ev) =>\n                          this.translationChanged(ev)\n                        }\n                      />\n                    </ion-col>\n                  </ion-row>\n                </ion-grid>\n              </ion-content>\n            </swiper-slide>\n            {UserService.userRoles && UserService.userRoles.isSuperAdmin() ? (\n              <swiper-slide class=\"swiper-slide\">\n                <ion-content class=\"slide-container\">\n                  <ion-button\n                    size=\"large\"\n                    onClick={() => this.runTranslationsScript()}\n                  >\n                    Run Translations Script\n                  </ion-button>\n                </ion-content>\n              </swiper-slide>\n            ) : undefined}\n          </swiper-wrapper>\n        </swiper-container>\n      </ion-content>,\n      Object.keys(this.translationsChanged).length > 0 ? (\n        <app-modal-footer\n          onCancelEmit={() => this.close()}\n          onSaveEmit={() => this.save()}\n        />\n      ) : undefined,\n    ];\n  }\n}\n"],"mappings":"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","ignoreList":[]}