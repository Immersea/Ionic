{"version":3,"names":["popoverGasCss","PopoverGasStyle0","PopoverGas","this","hasTrimixlicence","hasReblicence","Gas","componentWillLoad","UserService","checkLicence","updateStdGasList","gasProp","getFO2","gas","last","filter","stdGases","active","setForm","componentDidLoad","scrollGas","el","querySelector","stdDecoGases","forEach","DiveToolsService","isImperial","fromDepth","round","metersToFeet","popover","closest","disconnectedCallback","form","getForm","isStandardGas","i","n","selected","O2","He","gasModel","getGas","userRoles","licences","checkGasLimitations","push","setTimeout","width","scrollWidth","clientWidth","pagination","scrollLeft","updateWarnings","d","pO2","gasWarning","highPO2WarningatDepthWithTarget","ENDWarning","highENDWarningatDepth","updateView","selectStdGas","updateGas","input","setFO2","toNumber","o2","setFHe","he","setFromDepth","ppO2","inputHandler","event","value","detail","name","blurHandler","minO2","getUserLimitations","maxO2","maxHe","setUseAsDiluent","showpO2Info","alert","alertController","create","header","message","TranslationService","getTransl","buttons","text","present","render","h","key","style","marginBottom","class","onFormItemChanged","ev","onFormItemBlur","forceInvalid","validator","options","min","max","getpO2atDepth","undefined","getEND","depthUnit","onClick","ccr","size","shape","fill","tag","color","slot","onIonChange","checked","getUseAsDiluent","id","map","disabled","GasBlenderService","getGasName","getModF","fO2","onCancelEmit","dismiss","onSaveEmit"],"sources":["src/components/udive/popovers/popover-gas/popover-gas.scss?tag=popover-gas","src/components/udive/popovers/popover-gas/popover-gas.tsx"],"sourcesContent":["popover-gas {\n  /* Component styles go here */\n  .scrollx {\n    display: flex;\n    flex-wrap: nowrap;\n    overflow-x: auto;\n\n    .item {\n      flex: 0 0 0 0;\n    }\n\n    ::-webkit-scrollbar {\n      display: none;\n    }\n  }\n\n  //validators notification\n  .notification {\n    min-height: 20px;\n    height: 20px;\n    font-size: 0.8em;\n    color: #ea6153;\n    border-width: 1px;\n    border-color: #ea6153;\n    padding-left: 10px;\n    .item-inner {\n      margin-left: 0px !important;\n      border-bottom: 0px !important;\n    }\n    .icon {\n      font-size: 1.7em;\n      padding-left: 6px !important;\n      padding-top: 4px !important;\n    }\n  }\n}\n","import {Component, h, Element, Prop, State} from \"@stencil/core\";\nimport {Gas} from \"../../../../interfaces/udive/planner/gas\";\nimport {GasModel} from \"../../../../interfaces/udive/planner/gas-model\";\nimport {GasBlenderService} from \"../../../../services/udive/planner/gas-blender\";\nimport {UserService} from \"../../../../services/common/user\";\nimport {DiveToolsService} from \"../../../../services/udive/planner/dive-tools\";\nimport {alertController} from \"@ionic/core\";\nimport {TranslationService} from \"../../../../services/common/translations\";\nimport {filter, last, round, toNumber} from \"lodash\";\n\n@Component({\n  tag: \"popover-gas\",\n  styleUrl: \"popover-gas.scss\",\n})\nexport class PopoverGas {\n  @Element() el: HTMLElement;\n  scrollGas: HTMLElement;\n\n  hasTrimixlicence = true;\n  hasReblicence = true;\n  @Prop() ccr = false;\n  @Prop() parameters: any;\n  @Prop() stdDecoGases: Array<GasModel>;\n  @Prop() gasProp: Gas;\n  stdGases: Array<any>;\n  @State() gasWarning: boolean = false;\n  @State() ENDWarning: boolean = false;\n  popover: HTMLIonPopoverElement;\n\n  @State() gas: Gas = new Gas();\n  @State() form: any;\n  @State() updateView = false;\n\n  async componentWillLoad() {\n    this.hasTrimixlicence = await UserService.checkLicence(\"trimix\");\n    this.hasReblicence = await UserService.checkLicence(\"reb\");\n    this.updateStdGasList();\n    if (this.gasProp && this.gasProp.getFO2()) {\n      this.gas = this.gasProp;\n    } else {\n      //select first available gas\n      const gas = last(filter(this.stdGases, {active: true}));\n      this.gas = gas ? gas[\"gas\"] : new Gas(0.21, 0, 30, 1.2);\n    }\n    /*if (this.gas.fO2) {\n      //update setpoint according to parameters\n      if (this.gas.fO2 == 1) {\n        this.gas.ppO2 = this.parameters.oxygenppO2;\n      } else {\n        this.gas.ppO2 = this.parameters.decoppO2;\n      }\n    }*/\n    this.setForm();\n    this.updateStdGasList();\n  }\n\n  componentDidLoad() {\n    this.scrollGas = this.el.querySelector(\"#scrollGas\");\n    //update from Depth if Imperial\n    this.stdDecoGases.forEach((gas) => {\n      if (DiveToolsService.isImperial()) {\n        gas.fromDepth =\n          round(DiveToolsService.metersToFeet(gas.fromDepth) / 10) * 10;\n      }\n    });\n    this.updateStdGasList();\n    this.popover = this.el.closest(\"ion-popover\");\n  }\n\n  disconnectedCallback() {\n    //check valid gases\n    this.setForm();\n  }\n\n  async setForm() {\n    this.form = this.gas.getForm();\n    this.hasTrimixlicence = await UserService.checkLicence(\"trimix\");\n    this.hasReblicence = await UserService.checkLicence(\"reb\");\n  }\n\n  updateStdGasList() {\n    //create gas list\n    this.stdGases = [];\n    let isStandardGas = false;\n    let i = 0,\n      n = 0;\n    this.stdDecoGases.forEach((gas) => {\n      i++;\n      let selected =\n        this.gas.O2 === gas.O2 && this.gas.He === gas.He ? true : false;\n      if (selected) {\n        isStandardGas = true;\n        n = i;\n      }\n\n      //update setpoint according to parameters\n      /*if (gas.O2 == 100) {\n        gas.ppO2 = this.parameters.oxygenppO2;\n      } else {\n        gas.ppO2 = this.parameters.decoppO2;\n      }*/\n      //check user limitations and activate gas\n      const gasModel = gas.getGas();\n      const active = UserService.userRoles.licences.checkGasLimitations(\n        gasModel,\n        false\n      );\n\n      this.stdGases.push({\n        selected: selected,\n        active: active,\n        gas: gasModel,\n      });\n    });\n    setTimeout(() => {\n      if (isStandardGas && this.scrollGas) {\n        //scroll list to the left at the selected gas\n        let width = this.scrollGas.scrollWidth;\n        let clientWidth = this.scrollGas.clientWidth;\n        let pagination = i / (width / clientWidth);\n        n = n - pagination;\n        n = n < 0 ? 0 : n;\n        this.scrollGas.scrollLeft = ((width * n) / i) * 1.15;\n      }\n    });\n    //check if gas had high pO2\n    this.updateWarnings(this.gas.fromDepth, 1.6); //deco gases so keep 1.6 as limit pO2\n  }\n\n  updateWarnings(d, pO2) {\n    //check if gas had high pO2\n    this.gasWarning = this.gas.highPO2WarningatDepthWithTarget(d, pO2);\n    this.ENDWarning = this.gas.highENDWarningatDepth(this.gas.fromDepth);\n    this.updateView = !this.updateView;\n  }\n\n  selectStdGas(gas) {\n    if (!this.hasTrimixlicence && gas.He > 0) {\n      UserService.checkLicence(\"trimix\", true);\n      return;\n    }\n    this.gas = gas;\n    this.setForm();\n    this.updateStdGasList();\n  }\n\n  updateGas(input: string) {\n    if (input == \"o2\") {\n      this.gas.setFO2(round(toNumber(this.form.o2), 2) / 100);\n    } else if (input == \"he\") {\n      this.gas.setFHe(round(toNumber(this.form.he), 2) / 100);\n    } else if (input == \"fromDepth\") {\n      this.gas.setFromDepth(toNumber(this.form.fromDepth));\n    } else if (input == \"ppO2\") {\n      this.gas.ppO2 = toNumber(this.form.ppO2);\n    }\n    this.updateStdGasList();\n  }\n\n  inputHandler(event: any) {\n    let value = toNumber(event.detail.value);\n    this.form[event.detail.name] = value;\n    this.updateGas(event.detail.name);\n  }\n\n  blurHandler(event) {\n    let value = toNumber(event.detail.value);\n    if (event.detail.name === \"o2\") {\n      //check max O2\n      const minO2 = UserService.userRoles.licences.getUserLimitations().minO2;\n      const maxO2 = UserService.userRoles.licences.getUserLimitations().maxO2;\n      if (value > maxO2) {\n        value = maxO2;\n      } else if (value < minO2) {\n        value = minO2;\n      }\n      //check He value\n      if (this.form.he + value > 100) {\n        this.form.he = 100 - value;\n      }\n    } else if (event.detail.name === \"he\") {\n      //check max O2\n      const maxHe = UserService.userRoles.licences.getUserLimitations().maxHe;\n      if (value > maxHe) {\n        value = maxHe;\n      }\n      //check O2 value\n      if (this.form.o2 + value > 100) {\n        this.form.o2 = 100 - value;\n      }\n    } else if (event.detail.name === \"ppO2\") {\n      value = toNumber(value);\n    }\n    this.form[event.detail.name] = value;\n    this.updateGas(event.detail.name);\n    this.setForm();\n    this.updateStdGasList();\n  }\n\n  setUseAsDiluent(value) {\n    this.gas.setUseAsDiluent(value);\n    this.setForm();\n  }\n\n  async showpO2Info() {\n    const alert = await alertController.create({\n      header: \"pO2 setpoint\",\n      message: TranslationService.getTransl(\n        \"po2-setpoint-info\",\n        \"The pO2 setpoint is used to update the setpoint of the CCR within the range of this level or deco gas.\"\n      ),\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n        },\n      ],\n    });\n    alert.present();\n  }\n\n  render() {\n    return [\n      <ion-list style={{marginBottom: \"0px\"}}>\n        <ion-grid class=\"ion-no-padding\">\n          <ion-row>\n            <ion-col>\n              <ion-row class=\"ion-no-padding\">\n                <app-form-item\n                  label-text=\"O2\"\n                  value={this.form.o2}\n                  name=\"o2\"\n                  input-type=\"number\"\n                  onFormItemChanged={(ev) => this.inputHandler(ev)}\n                  onFormItemBlur={(ev) => this.blurHandler(ev)}\n                  forceInvalid={this.gasWarning}\n                  validator={[\n                    \"required\",\n                    {\n                      name: \"minmaxvalue\",\n                      options: {\n                        min: UserService.userRoles.licences.getUserLimitations()\n                          .minO2,\n                        max: UserService.userRoles.licences.getUserLimitations()\n                          .maxO2,\n                      },\n                    },\n                  ]}\n                ></app-form-item>\n              </ion-row>\n              {this.gasWarning ? (\n                <ion-row class=\"ion-no-padding\">\n                  <ion-col>\n                    <div class=\"notification\">\n                      <ion-icon name=\"warning\" item-start></ion-icon>\n                      High pO2 ({this.gas.getpO2atDepth(this.gas.fromDepth)}\n                      )!\n                    </div>\n                  </ion-col>\n                </ion-row>\n              ) : undefined}\n            </ion-col>\n            <ion-col>\n              {this.hasTrimixlicence ? (\n                [\n                  <ion-row class=\"ion-no-padding\">\n                    <app-form-item\n                      label-text=\"He\"\n                      value={this.form.he}\n                      name=\"he\"\n                      input-type=\"number\"\n                      onFormItemChanged={(ev) => this.inputHandler(ev)}\n                      onFormItemBlur={(ev) => this.blurHandler(ev)}\n                      forceInvalid={this.ENDWarning}\n                      validator={[\n                        \"required\",\n                        {\n                          name: \"minmaxvalue\",\n                          options: {\n                            min: 0,\n                            max: UserService.userRoles.licences.getUserLimitations()\n                              .maxHe,\n                          },\n                        },\n                      ]}\n                    ></app-form-item>\n                  </ion-row>,\n                  this.ENDWarning ? (\n                    <ion-row class=\"ion-no-padding\">\n                      <ion-col>\n                        <div class=\"notification\">\n                          <ion-icon name=\"warning\" item-start></ion-icon>\n                          High END ({this.gas.getEND(this.gas.fromDepth)}\n                          {DiveToolsService.depthUnit})!\n                        </div>\n                      </ion-col>\n                    </ion-row>\n                  ) : undefined,\n                ]\n              ) : (\n                <app-form-item\n                  label-text=\"He\"\n                  value={this.form.he}\n                  onClick={() => UserService.checkLicence(\"trimix\", true)}\n                ></app-form-item>\n              )}\n            </ion-col>\n          </ion-row>\n          <ion-row>\n            <ion-col>\n              <app-form-item\n                label-tag=\"from-depth\"\n                label-text=\"From Depth\"\n                value={this.form.fromDepth}\n                name=\"fromDepth\"\n                input-type=\"number\"\n                onFormItemChanged={(ev) => this.inputHandler(ev)}\n                onFormItemBlur={(ev) => this.blurHandler(ev)}\n                validator={[\"required\"]}\n              ></app-form-item>\n            </ion-col>\n          </ion-row>\n          {this.ccr\n            ? [\n                <ion-row>\n                  <ion-col>\n                    {this.hasReblicence ? (\n                      <app-form-item\n                        label-tag=\"pO2-setpoint\"\n                        label-text=\"pO2 setPoint\"\n                        value={this.form.ppO2}\n                        name=\"ppO2\"\n                        input-type=\"number\"\n                        onFormItemChanged={(ev) => this.inputHandler(ev)}\n                        onFormItemBlur={(ev) => this.blurHandler(ev)}\n                        validator={[\n                          {\n                            name: \"minmaxvalue\",\n                            options: {min: 0.5, max: 1.6},\n                          },\n                        ]}\n                      ></app-form-item>\n                    ) : (\n                      <app-form-item\n                        label-tag=\"pO2-setpoint\"\n                        label-text=\"pO2 setPoint\"\n                        value={this.form.ppO2}\n                        onClick={() => UserService.checkLicence(\"reb\", true)}\n                      ></app-form-item>\n                    )}\n                  </ion-col>\n                  <ion-col size=\"2\" class=\"ion-no-padding\">\n                    <ion-button\n                      shape=\"round\"\n                      fill=\"clear\"\n                      icon-only\n                      class=\"ion-no-padding\"\n                      onClick={() => this.showpO2Info()}\n                    >\n                      <ion-icon name=\"help-circle-outline\"></ion-icon>\n                    </ion-button>\n                  </ion-col>\n                </ion-row>,\n                <ion-row class=\"ion-no-padding\">\n                  <ion-item style={{width: \"100%\"}}>\n                    <ion-label>\n                      <my-transl\n                        tag=\"use-as-diluent\"\n                        text=\"Use as diluent gas\"\n                      ></my-transl>\n                    </ion-label>\n                    <ion-toggle\n                      color=\"gue-blue\"\n                      slot=\"end\"\n                      onIonChange={(ev) =>\n                        this.setUseAsDiluent(ev.detail.checked)\n                      }\n                      checked={this.gas.getUseAsDiluent()}\n                    ></ion-toggle>\n                  </ion-item>\n                </ion-row>,\n              ]\n            : undefined}\n\n          <ion-row class=\"scrollx\" id=\"scrollGas\">\n            {this.stdGases.map((gas) => (\n              <ion-col class=\"item\">\n                <ion-button\n                  shape=\"round\"\n                  color={gas.selected ? \"secondary\" : \"primary\"}\n                  disabled={!gas.active}\n                  onClick={() => this.selectStdGas(gas.gas)}\n                >\n                  {GasBlenderService.getGasName(gas.gas)}\n                </ion-button>\n              </ion-col>\n            ))}\n          </ion-row>\n          <ion-row>\n            <ion-col>\n              <div class=\"notification\" style={{color: \"blue\"}}>\n                MOD: {this.gas.getModF(this.gas.fO2, this.gas.ppO2)}\n                {DiveToolsService.depthUnit} @ {this.gas.ppO2} pO2\n              </div>\n              <div class=\"notification\" style={{color: \"blue\"}}>\n                pO2: {this.gas.getpO2atDepth(this.gas.fromDepth)} @{\" \"}\n                {this.gas.fromDepth}\n                {DiveToolsService.depthUnit}\n              </div>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </ion-list>,\n      <app-modal-footer\n        onCancelEmit={() => this.popover.dismiss()}\n        onSaveEmit={() => this.popover.dismiss(this.form)}\n      />,\n    ];\n  }\n}\n"],"mappings":"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","ignoreList":[]}