{"version":3,"names":["popoverShapesFilterCss","PopoverShapesFilterStyle0","PopoverShapesFilter","componentWillLoad","this","popover","el","closest","shapeTypes","ShapesService","getShapeTypes","adjustPopoverWidth","handleFilter","ev","filter","detail","name","value","handleSelect","shapeTypeId","shape","Shape","setDwgForShape","dwg","width","style","setProperty","close","popoverController","dismiss","save","render","h","Host","key","translucent","label","tag","text","lines","selectFn","selectOptions","selectValueId","selectValueText","Object","keys","map","includes","onFormItemChanged","size","color","interface","onIonChange","undefined","scrollTopValue","heightPx","backgroundCover","link","url","saveTag","onCancelEmit","onSaveEmit"],"sources":["src/components/trasteel/popovers/popover-shapes-filter/popover-shapes-filter.scss?tag=popover-shapes-filter","src/components/trasteel/popovers/popover-shapes-filter/popover-shapes-filter.tsx"],"sourcesContent":["popover-shapes-filter {\n  /* Component styles go here */\n  min-width: var(--popover-width);\n}\n","import {Component, h, Host, Element, Prop, State} from \"@stencil/core\";\nimport {popoverController} from \"@ionic/core\";\nimport {ShapesService} from \"../../../../services/trasteel/refractories/shapes\";\nimport {\n  Shape,\n  ShapeFilter,\n  ShapeType,\n} from \"../../../../interfaces/trasteel/refractories/shapes\";\n\n@Component({\n  tag: \"popover-shapes-filter\",\n  styleUrl: \"popover-shapes-filter.scss\",\n})\nexport class PopoverShapesFilter {\n  @Element() el: HTMLElement;\n  @Prop() filter: ShapeFilter;\n  @State() shapeTypes: ShapeType[];\n  @State() dwg;\n  popover: HTMLIonPopoverElement;\n\n  async componentWillLoad() {\n    this.popover = this.el.closest(\"ion-popover\");\n    this.shapeTypes = await ShapesService.getShapeTypes();\n    this.adjustPopoverWidth(\"900px\");\n  }\n\n  handleFilter(ev) {\n    this.filter[ev.detail.name] = ev.detail.value;\n  }\n\n  async handleSelect(ev) {\n    this.filter.shapeTypeId = ev.detail.value;\n    const shape = new Shape(this.filter);\n    await ShapesService.setDwgForShape(shape);\n    this.dwg = shape.dwg;\n  }\n\n  adjustPopoverWidth(width: string) {\n    this.popover.style.setProperty(\"--popover-width\", width);\n  }\n\n  close() {\n    popoverController.dismiss();\n  }\n\n  save() {\n    popoverController.dismiss(this.filter);\n  }\n\n  render() {\n    return (\n      <Host>\n        <ion-header translucent>\n          <ion-toolbar>\n            <ion-title>Filter Shapes</ion-title>\n          </ion-toolbar>\n        </ion-header>\n        <ion-content>\n          <ion-grid>\n            <ion-row>\n              <ion-col>\n                <ion-list>\n                  <ion-grid>\n                    <ion-row>\n                      <ion-col>\n                        <app-select-search\n                          label={{\n                            tag: \"shape_type\",\n                            text: \"Shape Type\",\n                          }}\n                          value={this.filter.shapeTypeId}\n                          lines=\"inset\"\n                          selectFn={(ev) => this.handleSelect(ev)}\n                          selectOptions={this.shapeTypes}\n                          selectValueId=\"typeId\"\n                          selectValueText={[\"typeName\", \"en\"]}\n                        ></app-select-search>\n                      </ion-col>\n                    </ion-row>\n                  </ion-grid>\n\n                  {Object.keys(this.filter).map((key) =>\n                    !key.includes(\"operator\") && key !== \"shapeTypeId\" ? (\n                      <ion-row>\n                        <ion-col>\n                          <app-form-item\n                            label-text={key}\n                            value={this.filter[key]}\n                            name={key}\n                            input-type=\"number\"\n                            onFormItemChanged={(ev) => this.handleFilter(ev)}\n                          ></app-form-item>\n                        </ion-col>\n                        <ion-col size=\"1\">\n                          <ion-select\n                            color=\"trasteel\"\n                            interface=\"action-sheet\"\n                            onIonChange={(ev) =>\n                              (this.filter[key + \"_operator\"] = ev.detail.value)\n                            }\n                            value={this.filter[key + \"_operator\"]}\n                          >\n                            <ion-select-option value={\">=\"}>\n                              <ion-label>{\">=\"}</ion-label>\n                            </ion-select-option>\n                            <ion-select-option value={\">\"}>\n                              <ion-label>{\">\"}</ion-label>\n                            </ion-select-option>\n                            <ion-select-option value={\"=\"}>\n                              <ion-label>{\"=\"}</ion-label>\n                            </ion-select-option>\n                            <ion-select-option value={\"<\"}>\n                              <ion-label>{\"<\"}</ion-label>\n                            </ion-select-option>\n                            <ion-select-option value={\"<=\"}>\n                              <ion-label>{\"<=\"}</ion-label>\n                            </ion-select-option>\n                          </ion-select>\n                        </ion-col>\n                      </ion-row>\n                    ) : undefined\n                  )}\n                </ion-list>\n              </ion-col>\n              <ion-col>\n                <app-banner\n                  scrollTopValue={0}\n                  heightPx={300}\n                  backgroundCover={false}\n                  link={this.dwg ? this.dwg.url : null}\n                ></app-banner>\n              </ion-col>\n            </ion-row>\n          </ion-grid>\n        </ion-content>\n        <ion-footer>\n          <app-modal-footer\n            saveTag={{tag: \"filter\", text: \"Filter\"}}\n            onCancelEmit={() => this.close()}\n            onSaveEmit={() => this.save()}\n          />\n        </ion-footer>\n      </Host>\n    );\n  }\n}\n"],"mappings":"0aAAA,MAAMA,EAAyB,wDAC/B,MAAAC,EAAeD,E,MCYFE,EAAmB,M,4FAO9B,uBAAMC,GACJC,KAAKC,QAAUD,KAAKE,GAAGC,QAAQ,eAC/BH,KAAKI,iBAAmBC,EAAcC,gBACtCN,KAAKO,mBAAmB,Q,CAG1B,YAAAC,CAAaC,GACXT,KAAKU,OAAOD,EAAGE,OAAOC,MAAQH,EAAGE,OAAOE,K,CAG1C,kBAAMC,CAAaL,GACjBT,KAAKU,OAAOK,YAAcN,EAAGE,OAAOE,MACpC,MAAMG,EAAQ,IAAIC,EAAMjB,KAAKU,cACvBL,EAAca,eAAeF,GACnChB,KAAKmB,IAAMH,EAAMG,G,CAGnB,kBAAAZ,CAAmBa,GACjBpB,KAAKC,QAAQoB,MAAMC,YAAY,kBAAmBF,E,CAGpD,KAAAG,GACEC,EAAkBC,S,CAGpB,IAAAC,GACEF,EAAkBC,QAAQzB,KAAKU,O,CAGjC,MAAAiB,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAA,cAAAE,IAAA,2CAAYC,YAAW,MACrBH,EAAA,eAAAE,IAAA,4CACEF,EAAA,aAAAE,IAAA,+DAGJF,EAAA,eAAAE,IAAA,4CACEF,EAAA,YAAAE,IAAA,4CACEF,EAAA,WAAAE,IAAA,4CACEF,EAAA,WAAAE,IAAA,4CACEF,EAAA,YAAAE,IAAA,4CACEF,EAAA,YAAAE,IAAA,4CACEF,EAAA,WAAAE,IAAA,4CACEF,EAAA,WAAAE,IAAA,4CACEF,EAAA,qBAAAE,IAAA,2CACEE,MAAO,CACLC,IAAK,aACLC,KAAM,cAERrB,MAAOb,KAAKU,OAAOK,YACnBoB,MAAM,QACNC,SAAW3B,GAAOT,KAAKc,aAAaL,GACpC4B,cAAerC,KAAKI,WACpBkC,cAAc,SACdC,gBAAiB,CAAC,WAAY,WAMrCC,OAAOC,KAAKzC,KAAKU,QAAQgC,KAAKZ,IAC5BA,EAAIa,SAAS,aAAeb,IAAQ,cACnCF,EAAA,eACEA,EAAA,eACEA,EAAA,8BACcE,EACZjB,MAAOb,KAAKU,OAAOoB,GACnBlB,KAAMkB,EAAG,aACE,SACXc,kBAAoBnC,GAAOT,KAAKQ,aAAaC,MAGjDmB,EAAA,WAASiB,KAAK,KACZjB,EAAA,cACEkB,MAAM,WACNC,UAAU,eACVC,YAAcvC,GACXT,KAAKU,OAAOoB,EAAM,aAAerB,EAAGE,OAAOE,MAE9CA,MAAOb,KAAKU,OAAOoB,EAAM,cAEzBF,EAAA,qBAAmBf,MAAO,MACxBe,EAAA,iBAAY,OAEdA,EAAA,qBAAmBf,MAAO,KACxBe,EAAA,iBAAY,MAEdA,EAAA,qBAAmBf,MAAO,KACxBe,EAAA,iBAAY,MAEdA,EAAA,qBAAmBf,MAAO,KACxBe,EAAA,iBAAY,MAEdA,EAAA,qBAAmBf,MAAO,MACxBe,EAAA,iBAAY,UAKlBqB,cAIVrB,EAAA,WAAAE,IAAA,4CACEF,EAAA,cAAAE,IAAA,2CACEoB,eAAgB,EAChBC,SAAU,IACVC,gBAAiB,MACjBC,KAAMrD,KAAKmB,IAAMnB,KAAKmB,IAAImC,IAAM,WAM1C1B,EAAA,cAAAE,IAAA,4CACEF,EAAA,oBAAAE,IAAA,2CACEyB,QAAS,CAACtB,IAAK,SAAUC,KAAM,UAC/BsB,aAAc,IAAMxD,KAAKuB,QACzBkC,WAAY,IAAMzD,KAAK0B,U","ignoreList":[]}