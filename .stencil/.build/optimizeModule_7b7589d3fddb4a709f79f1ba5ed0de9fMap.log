{"version":3,"names":["appSearchFilterCss","AppSearchFilterStyle0","AppSearchFilter","this","tags","types","search","color","icon","filter","componentWillLoad","userSub","UserService","userRoles$","subscribe","filterButtonTypes","UDiveFilterService","getMapDocs","disconnectedCallback","unsubscribe","searchFilterEmit","emit","addTag","tag","push","type","hideSearch","updateView","removeTag","i","splice","searchInputChange","str","name","checkButtonEnabled","button","find","el","removeFilterTag","index","findIndex","render","h","Host","key","hideToolbar","Environment","getAppColor","class","size","text","Object","keys","map","layout","onClick","vertical","horizontal","slot","side","style","disabled","floating","onInputChanged","ev","detail","undefined","outline","background"],"sources":["src/components/common/app/map/app-search-filter/app-search-filter.scss?tag=app-search-filter","src/components/common/app/map/app-search-filter/app-search-filter.tsx"],"sourcesContent":["app-search-filter {\n  padding: env(safe-area-inset-top) env(safe-area-inset-right)\n    env(safe-area-inset-bottom) env(safe-area-inset-left);\n  .search-tags {\n    position: absolute;\n    top: calc(env(safe-area-inset-top) + 88px);\n    right: 0px;\n    z-index: 2;\n  }\n}\n","import {\n  Component,\n  h,\n  Host,\n  Method,\n  State,\n  Event,\n  EventEmitter,\n  Prop,\n} from \"@stencil/core\";\nimport {SearchTag, CollectionGroup} from \"../../../../../interfaces/interfaces\";\nimport {UDiveFilterService} from \"../../../../../services/udive/ud-db-filter\";\nimport {UserService} from \"../../../../../services/common/user\";\nimport {Subscription} from \"rxjs\";\nimport {Environment} from \"../../../../../global/env\";\n\n@Component({\n  tag: \"app-search-filter\",\n  styleUrl: \"app-search-filter.scss\",\n})\nexport class AppSearchFilter {\n  @Event() searchFilterEmit: EventEmitter<SearchTag[]>;\n  tags: SearchTag[] = [];\n  @State() updateView = true;\n  @State() hideSearch = false;\n  userSub: Subscription;\n  @Prop() hideToolbar = false;\n  types = {\n    search: {\n      color: \"light\",\n      icon: \"search-circle\",\n    },\n    filter: {\n      color: \"primary\",\n      icon: \"filter\",\n    },\n  };\n  @State() filterButtonTypes: CollectionGroup;\n\n  componentWillLoad() {\n    this.userSub = UserService.userRoles$.subscribe(() => {\n      //update after user is loaded\n      this.filterButtonTypes = UDiveFilterService.getMapDocs();\n    });\n    this.filterButtonTypes = UDiveFilterService.getMapDocs();\n  }\n  disconnectedCallback() {\n    this.userSub.unsubscribe();\n    this.tags = [];\n    this.searchFilterEmit.emit(this.tags);\n  }\n\n  @Method()\n  async addTag(tag: SearchTag) {\n    this.tags.push(tag);\n    this.searchFilterEmit.emit(this.tags);\n    if (tag.type == \"search\") this.hideSearch = true;\n    this.updateView = !this.updateView;\n  }\n  @Method()\n  async removeTag(i) {\n    if (this.tags[i].type == \"search\") this.hideSearch = false;\n    this.tags.splice(i, 1);\n    this.searchFilterEmit.emit(this.tags);\n    this.updateView = !this.updateView;\n  }\n\n  searchInputChange(str) {\n    const search = {name: str, type: \"search\"};\n    //pass search value to search filter\n    this.addTag(search);\n  }\n\n  checkButtonEnabled(button) {\n    return this.tags.find((el) => el.name == button) != null;\n  }\n\n  async removeFilterTag(button) {\n    const index = this.tags.findIndex(\n      (el) => el.name == button && el.type == \"filter\"\n    );\n    this.tags.splice(index, 1);\n    this.searchFilterEmit.emit(this.tags);\n    this.updateView = !this.updateView;\n  }\n\n  render() {\n    return (\n      <Host>\n        {!this.hideToolbar ? (\n          <ion-toolbar color={Environment.getAppColor()}>\n            <ion-grid>\n              <ion-row class=\"ion-text-center\">\n                <ion-col size=\"1\">\n                  <ion-menu-button />\n                </ion-col>\n                <ion-col>\n                  <my-transl\n                    tag=\"looking-for\"\n                    text=\"What are you looking for?\"\n                  />\n                </ion-col>\n                <ion-col size=\"1\"></ion-col>\n              </ion-row>\n              <ion-row>\n                {Object.keys(this.filterButtonTypes).map((button) => (\n                  <ion-col class=\"ion-no-padding\">\n                    <ion-tab-button\n                      color={Environment.getAppColor()}\n                      layout=\"icon-bottom\"\n                      onClick={() =>\n                        !this.checkButtonEnabled(button)\n                          ? this.addTag({type: \"filter\", name: button})\n                          : this.removeFilterTag(button)\n                      }\n                    >\n                      {this.filterButtonTypes[button].icon.type == \"ionicon\" ? (\n                        <ion-icon\n                          name={this.filterButtonTypes[button].icon.name}\n                          color={this.filterButtonTypes[button].icon.color}\n                        ></ion-icon>\n                      ) : (\n                        <ion-icon\n                          class={\n                            \"map-icon \" +\n                            this.filterButtonTypes[button].icon.name\n                          }\n                          color={this.filterButtonTypes[button].icon.color}\n                        ></ion-icon>\n                      )}\n                      <ion-label\n                        color={this.filterButtonTypes[button].icon.color}\n                      >\n                        {this.filterButtonTypes[button].name}\n                      </ion-label>\n                    </ion-tab-button>\n                  </ion-col>\n                ))}\n              </ion-row>\n            </ion-grid>\n          </ion-toolbar>\n        ) : (\n          [\n            <ion-fab vertical=\"top\" horizontal=\"end\" slot=\"fixed\">\n              <ion-fab-button class=\"fab-icon\">\n                <ion-icon name=\"filter\"></ion-icon>\n              </ion-fab-button>\n              <ion-fab-list side=\"start\">\n                {Object.keys(this.filterButtonTypes).map((button) => (\n                  <ion-fab-button\n                    style={{\n                      \"--background\": this.filterButtonTypes[button].icon.color,\n                    }}\n                    onClick={() => this.addTag({type: \"filter\", name: button})}\n                    disabled={this.tags.find((el) => el.name == button) != null}\n                  >\n                    {this.filterButtonTypes[button].icon.type == \"ionicon\" ? (\n                      <ion-icon\n                        name={this.filterButtonTypes[button].icon.name}\n                      ></ion-icon>\n                    ) : (\n                      <ion-icon\n                        class={\n                          \"map-icon \" + this.filterButtonTypes[button].icon.name\n                        }\n                      ></ion-icon>\n                    )}\n                  </ion-fab-button>\n                ))}\n              </ion-fab-list>\n            </ion-fab>,\n          ]\n        )}\n        {!this.hideSearch ? (\n          <app-searchbar\n            floating\n            onInputChanged={(ev) => this.searchInputChange(ev.detail)}\n          />\n        ) : undefined}\n\n        <div class=\"search-tags\">\n          <ion-grid class=\"ion-no-padding ion-no-margin ion-text-end\">\n            {this.tags.map((tag, i) => (\n              <ion-row>\n                <ion-col>\n                  <ion-chip\n                    outline={true}\n                    style={{\n                      background:\n                        tag.type == \"filter\"\n                          ? \"rgba(var(--ion-color-\" +\n                            this.filterButtonTypes[tag.name].icon.color +\n                            \"-contrast-rgb),0.3)\"\n                          : \"#00000050\",\n                    }}\n                    color={\n                      tag.type == \"filter\"\n                        ? this.filterButtonTypes[tag.name].icon.color\n                        : \"light\"\n                    }\n                  >\n                    {tag.type == \"search\" ? (\n                      <ion-icon name={this.types[tag.type].icon}></ion-icon>\n                    ) : this.filterButtonTypes[tag.name].icon.type ==\n                      \"ionicon\" ? (\n                      <ion-icon\n                        color={this.filterButtonTypes[tag.name].icon.color}\n                        name={this.filterButtonTypes[tag.name].icon.name}\n                      ></ion-icon>\n                    ) : (\n                      <ion-icon\n                        color={this.filterButtonTypes[tag.name].icon.color}\n                        class={\n                          \"map-icon \" +\n                          this.filterButtonTypes[tag.name].icon.name\n                        }\n                      ></ion-icon>\n                    )}\n                    <ion-label>\n                      {tag.type == \"search\"\n                        ? tag.name\n                        : this.filterButtonTypes[tag.name].name}\n                    </ion-label>\n                    <ion-icon\n                      name=\"close-circle\"\n                      color={\n                        tag.type == \"filter\"\n                          ? this.filterButtonTypes[tag.name].icon.color\n                          : \"light\"\n                      }\n                      onClick={() => this.removeTag(i)}\n                    ></ion-icon>\n                  </ion-chip>\n                </ion-col>\n              </ion-row>\n            ))}\n          </ion-grid>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}