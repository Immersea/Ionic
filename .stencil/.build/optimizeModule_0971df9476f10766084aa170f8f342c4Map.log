{"version":3,"names":["pageContactsCss","PageContactsStyle0","PageContacts","this","contactsList","componentWillLoad","ContactsService","contactsList$","subscribe","async","list","customersList","map","item","newItem","cloneDeep","customer","CustomersService","getCustomersDetails","customerId","fullName","push","loading","componentDidLoad","addContact","presentContactUpdate","render","h","key","tag","text","color","searchTitle","orderFields","placeholder","filterBy","onFilteredList","ev","filteredContactsList","detail","TrasteelService","isCustomerDBAdmin","vertical","horizontal","slot","edge","onClick","name","undefined","showFields","returnField","groupBy","icon","TrasteelFilterService","getMapDocs","CONTACTSCOLLECTION","onItemClicked","presentContactDetails"],"sources":["src/components/trasteel/pages/crm/page-contacts/page-contacts.scss?tag=page-contacts","src/components/trasteel/pages/crm/page-contacts/page-contacts.tsx"],"sourcesContent":["page-contacts {\n  /* Component styles go here */\n}\n","import {Component, State, h} from \"@stencil/core\";\nimport {MapDataContact} from \"../../../../../interfaces/trasteel/contact/contact\";\nimport {\n  CONTACTSCOLLECTION,\n  ContactsService,\n} from \"../../../../../services/trasteel/crm/contacts\";\nimport {TrasteelFilterService} from \"../../../../../services/trasteel/common/trs-db-filter\";\nimport {CustomersService} from \"../../../../../services/trasteel/crm/customers\";\nimport {cloneDeep} from \"lodash\";\nimport {TrasteelService} from \"../../../../../services/trasteel/common/services\";\n\n@Component({\n  tag: \"page-contacts\",\n  styleUrl: \"page-contacts.scss\",\n})\nexport class PageContacts {\n  contactsList: MapDataContact[] = [];\n  @State() filteredContactsList: MapDataContact[] = [];\n  @State() loading = true;\n\n  componentWillLoad() {\n    ContactsService.contactsList$.subscribe(async (list: MapDataContact[]) => {\n      //replace name of customers\n      const customersList = [];\n      list.map((item) => {\n        const newItem = cloneDeep(item);\n        const customer = CustomersService.getCustomersDetails(item.customerId);\n        if (customer) {\n          newItem.customerId = customer.fullName;\n          customersList.push(newItem);\n        }\n      });\n      this.contactsList = customersList;\n      this.loading = false;\n    });\n  }\n\n  componentDidLoad() {}\n\n  addContact() {\n    ContactsService.presentContactUpdate();\n  }\n\n  render() {\n    return [\n      <ion-header>\n        <app-navbar\n          tag=\"contacts\"\n          text=\"Contacts\"\n          color=\"trasteel\"\n        ></app-navbar>\n        <app-search-toolbar\n          searchTitle=\"contacts\"\n          list={this.contactsList}\n          orderFields={[\"lastName\", \"firstName\"]}\n          color=\"trasteel\"\n          placeholder=\"Search by name\"\n          filterBy={[\"lastName\", \"firstName\", \"customerId\"]}\n          onFilteredList={(ev) => (this.filteredContactsList = ev.detail)}\n        ></app-search-toolbar>\n      </ion-header>,\n      <ion-content>\n        {TrasteelService.isCustomerDBAdmin() ? (\n          <ion-fab vertical=\"top\" horizontal=\"end\" slot=\"fixed\" edge>\n            <ion-fab-button onClick={() => this.addContact()} color=\"trasteel\">\n              <ion-icon name=\"add\"></ion-icon>\n            </ion-fab-button>\n          </ion-fab>\n        ) : undefined}\n        <app-infinite-scroll\n          list={this.filteredContactsList}\n          loading={this.loading}\n          showFields={[\"lastName\", \"firstName\"]}\n          returnField=\"id\"\n          groupBy={[\"customerId\"]}\n          icon={TrasteelFilterService.getMapDocs(CONTACTSCOLLECTION).icon.name}\n          onItemClicked={(ev) =>\n            ContactsService.presentContactDetails(ev.detail)\n          }\n        ></app-infinite-scroll>\n      </ion-content>,\n    ];\n  }\n}\n"],"mappings":"4cAAA,MAAMA,EAAkB,kBACxB,MAAAC,EAAeD,E,MCcFE,EAAY,M,yBACvBC,KAAAC,aAAiC,G,0BACiB,G,aAC/B,I,CAEnB,iBAAAC,GACEC,EAAgBC,cAAcC,WAAUC,MAAOC,IAE7C,MAAMC,EAAgB,GACtBD,EAAKE,KAAKC,IACR,MAAMC,EAAUC,oBAAUF,GAC1B,MAAMG,EAAWC,EAAiBC,oBAAoBL,EAAKM,YAC3D,GAAIH,EAAU,CACZF,EAAQK,WAAaH,EAASI,SAC9BT,EAAcU,KAAKP,E,KAGvBX,KAAKC,aAAeO,EACpBR,KAAKmB,QAAU,KAAK,G,CAIxB,gBAAAC,GAAgB,CAEhB,UAAAC,GACElB,EAAgBmB,sB,CAGlB,MAAAC,GACE,MAAO,CACLC,EAAA,cAAAC,IAAA,4CACED,EAAA,cAAAC,IAAA,2CACEC,IAAI,WACJC,KAAK,WACLC,MAAM,aAERJ,EAAA,sBAAAC,IAAA,2CACEI,YAAY,WACZtB,KAAMP,KAAKC,aACX6B,YAAa,CAAC,WAAY,aAC1BF,MAAM,WACNG,YAAY,iBACZC,SAAU,CAAC,WAAY,YAAa,cACpCC,eAAiBC,GAAQlC,KAAKmC,qBAAuBD,EAAGE,UAG5DZ,EAAA,eAAAC,IAAA,4CACGY,EAAgBC,oBACfd,EAAA,WAASe,SAAS,MAAMC,WAAW,MAAMC,KAAK,QAAQC,KAAI,MACxDlB,EAAA,kBAAgBmB,QAAS,IAAM3C,KAAKqB,aAAcO,MAAM,YACtDJ,EAAA,YAAUoB,KAAK,UAGjBC,UACJrB,EAAA,uBAAAC,IAAA,2CACElB,KAAMP,KAAKmC,qBACXhB,QAASnB,KAAKmB,QACd2B,WAAY,CAAC,WAAY,aACzBC,YAAY,KACZC,QAAS,CAAC,cACVC,KAAMC,EAAsBC,WAAWC,GAAoBH,KAAKL,KAChES,cAAgBnB,GACd/B,EAAgBmD,sBAAsBpB,EAAGE,W","ignoreList":[]}