{"version":3,"names":["appNavbarCss","AppNavbarStyle0","AppNavbar","componentDidLoad","render","h","Host","key","this","color","modal","vertical","horizontal","slot","name","iconColor","undefined","backButton","onClick","RouterService","goBack","tag","text","extraTitle","rightButtonText","fill","rightButtonFc","icon","fabCss","IonFabStyle0","Fab","constructor","hostRef","edge","activated","activatedChanged","fab","getFab","Array","from","el","querySelectorAll","forEach","list","close","querySelector","toggle","hasList","mode","getIonMode","class","fabButtonIosCss","IonFabButtonIosStyle0","fabButtonMdCss","IonFabButtonMdStyle0","FabButton","inheritedAttributes","onFocus","ionFocus","emit","onBlur","ionBlur","disabled","download","href","rel","routerDirection","routerAnimation","target","show","translucent","type","size","closeIcon","connectedCallback","closest","componentWillLoad","inheritAriaAttributes","inList","hostContext","TagType","attrs","createColorClasses","Object","assign","part","ev","openURL","lazy","menuButtonIosCss","IonMenuButtonIosStyle0","menuButtonMdCss","IonMenuButtonMdStyle0","MenuButton","async","menuController","menu","visible","autoHide","visibilityChanged","updateVisibility","menuIcon","config","get","menuOutline","menuSharp","hidden","ariaLabel","button"],"sources":["src/components/common/app/common/app-navbar/app-navbar.scss?tag=app-navbar","src/components/common/app/common/app-navbar/app-navbar.tsx","node_modules/@ionic/core/dist/collection/components/fab/fab.css?tag=ion-fab&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/fab/fab.js","node_modules/@ionic/core/dist/collection/components/fab-button/fab-button.ios.css?tag=ion-fab-button&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/fab-button/fab-button.md.css?tag=ion-fab-button&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/fab-button/fab-button.js","node_modules/@ionic/core/dist/collection/components/menu-button/menu-button.ios.css?tag=ion-menu-button&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/menu-button/menu-button.md.css?tag=ion-menu-button&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/menu-button/menu-button.js"],"sourcesContent":["app-navbar {\n}\n","import {Component, h, Prop, Host} from \"@stencil/core\";\nimport {RouterService} from \"../../../../../services/common/router\";\n\n@Component({\n  tag: \"app-navbar\",\n  styleUrl: \"app-navbar.scss\",\n})\nexport class AppNavbar {\n  @Prop() tag?: string;\n  @Prop() text?: string;\n  @Prop() extraTitle?: string;\n  @Prop() color?: string = \"primary\";\n  @Prop() iconColor?: string = \"primary\";\n\n  @Prop() modal?: boolean = false;\n  @Prop() backButton?: boolean = false;\n\n  @Prop() rightButtonText?: {\n    icon: string;\n    tag: string;\n    text: string;\n    fill: \"clear\" | \"outline\" | \"solid\" | \"default\";\n  };\n  @Prop() rightButtonFc?: any;\n\n  componentDidLoad() {}\n\n  render() {\n    return (\n      <Host>\n        {this.color == \"transparent\" ? (\n          [\n            <div>\n              {!this.modal ? (\n                <ion-fab vertical=\"top\" horizontal=\"start\" slot=\"fixed\">\n                  <slot name=\"start\" />\n                  <ion-fab-button color=\"transparent\">\n                    <ion-menu-button color={this.iconColor} />\n                  </ion-fab-button>\n                </ion-fab>\n              ) : undefined}\n            </div>,\n            <slot name=\"end\" />,\n          ]\n        ) : (\n          <ion-header>\n            <ion-toolbar color={this.color}>\n              <ion-buttons slot=\"start\">\n                {!this.modal ? <ion-menu-button /> : undefined}\n                {this.backButton ? (\n                  <ion-button onClick={() => RouterService.goBack()}>\n                    <ion-icon name=\"chevron-back-outline\" slot=\"start\" />\n                  </ion-button>\n                ) : undefined}\n                <slot name=\"start\" />\n              </ion-buttons>\n              <ion-title>\n                {this.tag ? (\n                  <my-transl tag={this.tag} text={this.text}></my-transl>\n                ) : (\n                  this.text\n                )}\n                {this.extraTitle ? \" - \" + this.extraTitle : undefined}\n              </ion-title>\n              <ion-buttons slot=\"end\">\n                {this.rightButtonText ? (\n                  <ion-button\n                    fill={this.rightButtonText.fill}\n                    onClick={() => this.rightButtonFc()}\n                  >\n                    {this.rightButtonText.icon ? (\n                      <ion-icon name={this.rightButtonText.icon} slot=\"start\" />\n                    ) : undefined}\n                    {this.rightButtonText.tag ? (\n                      <ion-label>\n                        <my-transl\n                          tag={this.rightButtonText.tag}\n                          text={this.rightButtonText.text}\n                        ></my-transl>\n                      </ion-label>\n                    ) : undefined}\n                  </ion-button>\n                ) : undefined}\n                <slot name=\"end\" />\n              </ion-buttons>\n            </ion-toolbar>\n          </ion-header>\n        )}\n      </Host>\n    );\n  }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  position: absolute;\n  width: fit-content;\n  height: fit-content;\n  z-index: 999;\n}\n\n:host(.fab-horizontal-center) {\n  left: 0px;\n  right: 0px;\n  -webkit-margin-start: auto;\n  margin-inline-start: auto;\n  -webkit-margin-end: auto;\n  margin-inline-end: auto;\n}\n\n:host(.fab-horizontal-start) {\n  /* stylelint-disable */\n  left: calc(10px + var(--ion-safe-area-left, 0px));\n  /* stylelint-enable */\n}\n:host-context([dir=rtl]):host(.fab-horizontal-start), :host-context([dir=rtl]).fab-horizontal-start {\n  right: calc(10px + var(--ion-safe-area-right, 0px));\n  left: unset;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.fab-horizontal-start:dir(rtl)) {\n    right: calc(10px + var(--ion-safe-area-right, 0px));\n    left: unset;\n  }\n}\n\n:host(.fab-horizontal-end) {\n  /* stylelint-disable */\n  right: calc(10px + var(--ion-safe-area-right, 0px));\n  /* stylelint-enable */\n}\n:host-context([dir=rtl]):host(.fab-horizontal-end), :host-context([dir=rtl]).fab-horizontal-end {\n  left: calc(10px + var(--ion-safe-area-left, 0px));\n  right: unset;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.fab-horizontal-end:dir(rtl)) {\n    left: calc(10px + var(--ion-safe-area-left, 0px));\n    right: unset;\n  }\n}\n\n:host(.fab-vertical-top) {\n  top: 10px;\n}\n\n/**\n * Reset the top value since edge\n * styles use margin-top.\n */\n:host(.fab-vertical-top.fab-edge) {\n  top: 0;\n}\n\n/**\n * We need to adjust the parent FAB button up by half\n * its height so that half of it sits on the header. As a result,\n * we target the slotted ion-fab-button instead of targeting the host.\n */\n:host(.fab-vertical-top.fab-edge) ::slotted(ion-fab-button) {\n  margin-top: -50%;\n}\n\n/**\n * The small FAB button adds top and bottom margin. We need to account for\n * that margin when we adjust the FAB button for edge styles since we\n * are overriding the margin-top value below.\n */\n:host(.fab-vertical-top.fab-edge) ::slotted(ion-fab-button.fab-button-small) {\n  margin-top: calc((-100% + 16px) / 2);\n}\n\n/**\n * Since we are adjusting the FAB button we also need\n * to adjust the sibling ion-fab-list otherwise there will be\n * a gap between the parent FAB button and the associated list.\n */\n:host(.fab-vertical-top.fab-edge) ::slotted(ion-fab-list.fab-list-side-start),\n:host(.fab-vertical-top.fab-edge) ::slotted(ion-fab-list.fab-list-side-end) {\n  margin-top: -50%;\n}\n\n:host(.fab-vertical-top.fab-edge) ::slotted(ion-fab-list.fab-list-side-top),\n:host(.fab-vertical-top.fab-edge) ::slotted(ion-fab-list.fab-list-side-bottom) {\n  margin-top: calc(50% + 10px);\n}\n\n:host(.fab-vertical-bottom) {\n  bottom: 10px;\n}\n\n/**\n * Reset the bottom value since edge\n * styles use margin-bottom.\n */\n:host(.fab-vertical-bottom.fab-edge) {\n  bottom: 0;\n}\n\n/**\n * We need to adjust the parent FAB button down by half\n * its height so that half of it sits on the footer. As a result,\n * we target the slotted ion-fab-button instead of targeting the host.\n */\n:host(.fab-vertical-bottom.fab-edge) ::slotted(ion-fab-button) {\n  margin-bottom: -50%;\n}\n\n/**\n * The small FAB button adds top and bottom margin. We need to account for\n * that margin when we adjust the FAB button for edge styles since we\n * are overriding the margin-bottom value below.\n */\n:host(.fab-vertical-bottom.fab-edge) ::slotted(ion-fab-button.fab-button-small) {\n  margin-bottom: calc((-100% + 16px) / 2);\n}\n\n/**\n * Since we are adjusting the FAB button we also need\n * to adjust the sibling ion-fab-list otherwise there will be\n * a gap between the parent FAB button and the associated list.\n */\n:host(.fab-vertical-bottom.fab-edge) ::slotted(ion-fab-list.fab-list-side-start),\n:host(.fab-vertical-bottom.fab-edge) ::slotted(ion-fab-list.fab-list-side-end) {\n  margin-bottom: -50%;\n}\n\n:host(.fab-vertical-bottom.fab-edge) ::slotted(ion-fab-list.fab-list-side-top),\n:host(.fab-vertical-bottom.fab-edge) ::slotted(ion-fab-list.fab-list-side-bottom) {\n  margin-bottom: calc(50% + 10px);\n}\n\n:host(.fab-vertical-center) {\n  top: 0px;\n  bottom: 0px;\n  margin-top: auto;\n  margin-bottom: auto;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { getIonMode } from \"../../global/ionic-global\";\nexport class Fab {\n    constructor() {\n        this.horizontal = undefined;\n        this.vertical = undefined;\n        this.edge = false;\n        this.activated = false;\n    }\n    activatedChanged() {\n        const activated = this.activated;\n        const fab = this.getFab();\n        if (fab) {\n            fab.activated = activated;\n        }\n        Array.from(this.el.querySelectorAll('ion-fab-list')).forEach((list) => {\n            list.activated = activated;\n        });\n    }\n    componentDidLoad() {\n        if (this.activated) {\n            this.activatedChanged();\n        }\n    }\n    /**\n     * Close an active FAB list container.\n     */\n    async close() {\n        this.activated = false;\n    }\n    getFab() {\n        return this.el.querySelector('ion-fab-button');\n    }\n    /**\n     * Opens/Closes the FAB list container.\n     * @internal\n     */\n    async toggle() {\n        const hasList = !!this.el.querySelector('ion-fab-list');\n        if (hasList) {\n            this.activated = !this.activated;\n        }\n    }\n    render() {\n        const { horizontal, vertical, edge } = this;\n        const mode = getIonMode(this);\n        return (h(Host, { key: 'cb44cf6486b0a6439b99da87c065b0b52e2514f4', class: {\n                [mode]: true,\n                [`fab-horizontal-${horizontal}`]: horizontal !== undefined,\n                [`fab-vertical-${vertical}`]: vertical !== undefined,\n                'fab-edge': edge,\n            } }, h(\"slot\", { key: '1ed484c7ecb10cd81fbca9a4f5c4049bf82f9f8a' })));\n    }\n    static get is() { return \"ion-fab\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"fab.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"fab.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"horizontal\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'start' | 'end' | 'center'\",\n                    \"resolved\": \"\\\"center\\\" | \\\"end\\\" | \\\"start\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Where to align the fab horizontally in the viewport.\"\n                },\n                \"attribute\": \"horizontal\",\n                \"reflect\": false\n            },\n            \"vertical\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'top' | 'bottom' | 'center'\",\n                    \"resolved\": \"\\\"bottom\\\" | \\\"center\\\" | \\\"top\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Where to align the fab vertically in the viewport.\"\n                },\n                \"attribute\": \"vertical\",\n                \"reflect\": false\n            },\n            \"edge\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the fab will display on the edge of the header if\\n`vertical` is `\\\"top\\\"`, and on the edge of the footer if\\nit is `\\\"bottom\\\"`. Should be used with a `fixed` slot.\"\n                },\n                \"attribute\": \"edge\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"activated\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, both the `ion-fab-button` and all `ion-fab-list` inside `ion-fab` will become active.\\nThat means `ion-fab-button` will become a `close` icon and `ion-fab-list` will become visible.\"\n                },\n                \"attribute\": \"activated\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n    static get methods() {\n        return {\n            \"close\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Close an active FAB list container.\",\n                    \"tags\": []\n                }\n            },\n            \"toggle\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Opens/Closes the FAB list container.\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"activated\",\n                \"methodName\": \"activatedChanged\"\n            }];\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the button\n   * @prop --background-activated: Background of the button when pressed. Note: setting this will interfere with the Material Design ripple.\n   * @prop --background-activated-opacity: Opacity of the button background when pressed\n   * @prop --background-focused: Background of the button when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the button background when focused with the tab key\n   * @prop --background-hover: Background of the button on hover\n   * @prop --background-hover-opacity: Opacity of the button background on hover\n   *\n   * @prop --color: Text color of the button\n   * @prop --color-activated: Text color of the button when pressed\n   * @prop --color-focused: Text color of the button when focused with the tab key\n   * @prop --color-hover: Text color of the button on hover\n   *\n   * @prop --transition: Transition of the button\n   *\n   * @prop --close-icon-font-size: Font size of the close icon\n   *\n   * @prop --border-radius: Border radius of the button\n   * @prop --border-width: Border width of the button\n   * @prop --border-style: Border style of the button\n   * @prop --border-color: Border color of the button\n   *\n   * @prop --ripple-color: Color of the button ripple effect\n   *\n   * @prop --box-shadow: Box shadow of the button\n   *\n   * @prop --padding-top: Top padding of the button\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button\n   * @prop --padding-bottom: Bottom padding of the button\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button\n   */\n  --color-activated: var(--color);\n  --color-focused: var(--color);\n  --color-hover: var(--color);\n  --background-hover: var(--ion-color-primary-contrast, #fff);\n  --background-hover-opacity: .08;\n  --transition: background-color, opacity 100ms linear;\n  --ripple-color: currentColor;\n  --border-radius: 50%;\n  --border-width: 0;\n  --border-style: none;\n  --border-color: initial;\n  --padding-top: 0;\n  --padding-end: 0;\n  --padding-bottom: 0;\n  --padding-start: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: block;\n  width: 56px;\n  height: 56px;\n  font-size: 14px;\n  text-align: center;\n  text-overflow: ellipsis;\n  text-transform: none;\n  white-space: nowrap;\n  font-kerning: none;\n}\n\n.button-native {\n  border-radius: var(--border-radius);\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  display: block;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  transform: var(--transform);\n  transition: var(--transition);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  outline: none;\n  background: var(--background);\n  background-clip: padding-box;\n  color: var(--color);\n  box-shadow: var(--box-shadow);\n  contain: strict;\n  cursor: pointer;\n  overflow: hidden;\n  z-index: 0;\n  appearance: none;\n  box-sizing: border-box;\n}\n\n::slotted(ion-icon) {\n  line-height: 1;\n}\n\n.button-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n.button-inner {\n  left: 0;\n  right: 0;\n  top: 0;\n  display: flex;\n  position: absolute;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  transition: all ease-in-out 300ms;\n  transition-property: transform, opacity;\n  z-index: 1;\n}\n\n:host(.fab-button-disabled) {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n@media (any-hover: hover) {\n  :host(:hover) .button-native {\n    color: var(--color-hover);\n  }\n  :host(:hover) .button-native::after {\n    background: var(--background-hover);\n    opacity: var(--background-hover-opacity);\n  }\n}\n:host(.ion-focused) .button-native {\n  color: var(--color-focused);\n}\n:host(.ion-focused) .button-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n:host(.ion-activated) .button-native {\n  color: var(--color-activated);\n}\n:host(.ion-activated) .button-native::after {\n  background: var(--background-activated);\n  opacity: var(--background-activated-opacity);\n}\n\n::slotted(ion-icon) {\n  line-height: 1;\n}\n\n:host(.fab-button-small) {\n  -webkit-margin-start: 8px;\n  margin-inline-start: 8px;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: 8px;\n  margin-bottom: 8px;\n  width: 40px;\n  height: 40px;\n}\n\n.close-icon {\n  -webkit-margin-start: auto;\n  margin-inline-start: auto;\n  -webkit-margin-end: auto;\n  margin-inline-end: auto;\n  margin-top: 0;\n  margin-bottom: 0;\n  left: 0;\n  right: 0;\n  top: 0;\n  position: absolute;\n  height: 100%;\n  transform: scale(0.4) rotateZ(-45deg);\n  transition: all ease-in-out 300ms;\n  transition-property: transform, opacity;\n  font-size: var(--close-icon-font-size);\n  opacity: 0;\n  z-index: 1;\n}\n\n:host(.fab-button-close-active) .close-icon {\n  transform: scale(1) rotateZ(0deg);\n  opacity: 1;\n}\n\n:host(.fab-button-close-active) .button-inner {\n  transform: scale(0.4) rotateZ(45deg);\n  opacity: 0;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n@supports (backdrop-filter: blur(0)) {\n  :host(.fab-button-translucent) .button-native {\n    backdrop-filter: var(--backdrop-filter);\n  }\n}\n:host(.ion-color) .button-native {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: var(--ion-color-primary, #0054e9);\n  --background-activated: var(--ion-color-primary-shade, #004acd);\n  --background-focused: var(--ion-color-primary-shade, #004acd);\n  --background-hover: var(--ion-color-primary-tint, #1a65eb);\n  --background-activated-opacity: 1;\n  --background-focused-opacity: 1;\n  --background-hover-opacity: 1;\n  --color: var(--ion-color-primary-contrast, #fff);\n  --box-shadow: 0 4px 16px rgba(0, 0, 0, 0.12);\n  --transition: 0.2s transform cubic-bezier(0.25, 1.11, 0.78, 1.59);\n  --close-icon-font-size: 28px;\n}\n\n:host(.ion-activated) {\n  --box-shadow: 0 4px 16px rgba(0, 0, 0, 0.12);\n  --transform: scale(1.1);\n  --transition: 0.2s transform ease-out;\n}\n\n::slotted(ion-icon) {\n  font-size: 28px;\n}\n\n:host(.fab-button-in-list) {\n  --background: var(--ion-color-light, #f4f5f8);\n  --background-activated: var(--ion-color-light-shade, #d7d8da);\n  --background-focused: var(--background-activated);\n  --background-hover: var(--ion-color-light-tint, #f5f6f9);\n  --color: var(--ion-color-light-contrast, #000);\n  --color-activated: var(--ion-color-light-contrast, #000);\n  --color-focused: var(--color-activated);\n  --transition: transform 200ms ease 10ms, opacity 200ms ease 10ms;\n}\n\n:host(.fab-button-in-list) ::slotted(ion-icon) {\n  font-size: 18px;\n}\n\n:host(.ion-color.ion-focused) .button-native::after {\n  background: var(--ion-color-shade);\n}\n\n:host(.ion-color.ion-focused) .button-native,\n:host(.ion-color.ion-activated) .button-native {\n  color: var(--ion-color-contrast);\n}\n:host(.ion-color.ion-focused) .button-native::after,\n:host(.ion-color.ion-activated) .button-native::after {\n  background: var(--ion-color-shade);\n}\n\n@media (any-hover: hover) {\n  :host(.ion-color:hover) .button-native {\n    color: var(--ion-color-contrast);\n  }\n  :host(.ion-color:hover) .button-native::after {\n    background: var(--ion-color-tint);\n  }\n}\n@supports (backdrop-filter: blur(0)) {\n  :host(.fab-button-translucent) {\n    --background: rgba(var(--ion-color-primary-rgb, 0, 84, 233), 0.9);\n    --background-hover: rgba(var(--ion-color-primary-rgb, 0, 84, 233), 0.8);\n    --background-focused: rgba(var(--ion-color-primary-rgb, 0, 84, 233), 0.82);\n    --backdrop-filter: saturate(180%) blur(20px);\n  }\n  :host(.fab-button-translucent-in-list) {\n    --background: rgba(var(--ion-color-light-rgb, 244, 245, 248), 0.9);\n    --background-hover: rgba(var(--ion-color-light-rgb, 244, 245, 248), 0.8);\n    --background-focused: rgba(var(--ion-color-light-rgb, 244, 245, 248), 0.82);\n  }\n}\n@supports (backdrop-filter: blur(0)) {\n  @media (any-hover: hover) {\n    :host(.fab-button-translucent.ion-color:hover) .button-native {\n      background: rgba(var(--ion-color-base-rgb), 0.8);\n    }\n  }\n  :host(.ion-color.fab-button-translucent) .button-native {\n    background: rgba(var(--ion-color-base-rgb), 0.9);\n  }\n  :host(.ion-color.ion-focused.fab-button-translucent) .button-native,\n  :host(.ion-color.ion-activated.fab-button-translucent) .button-native {\n    background: var(--ion-color-base);\n  }\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the button\n   * @prop --background-activated: Background of the button when pressed. Note: setting this will interfere with the Material Design ripple.\n   * @prop --background-activated-opacity: Opacity of the button background when pressed\n   * @prop --background-focused: Background of the button when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the button background when focused with the tab key\n   * @prop --background-hover: Background of the button on hover\n   * @prop --background-hover-opacity: Opacity of the button background on hover\n   *\n   * @prop --color: Text color of the button\n   * @prop --color-activated: Text color of the button when pressed\n   * @prop --color-focused: Text color of the button when focused with the tab key\n   * @prop --color-hover: Text color of the button on hover\n   *\n   * @prop --transition: Transition of the button\n   *\n   * @prop --close-icon-font-size: Font size of the close icon\n   *\n   * @prop --border-radius: Border radius of the button\n   * @prop --border-width: Border width of the button\n   * @prop --border-style: Border style of the button\n   * @prop --border-color: Border color of the button\n   *\n   * @prop --ripple-color: Color of the button ripple effect\n   *\n   * @prop --box-shadow: Box shadow of the button\n   *\n   * @prop --padding-top: Top padding of the button\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button\n   * @prop --padding-bottom: Bottom padding of the button\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button\n   */\n  --color-activated: var(--color);\n  --color-focused: var(--color);\n  --color-hover: var(--color);\n  --background-hover: var(--ion-color-primary-contrast, #fff);\n  --background-hover-opacity: .08;\n  --transition: background-color, opacity 100ms linear;\n  --ripple-color: currentColor;\n  --border-radius: 50%;\n  --border-width: 0;\n  --border-style: none;\n  --border-color: initial;\n  --padding-top: 0;\n  --padding-end: 0;\n  --padding-bottom: 0;\n  --padding-start: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: block;\n  width: 56px;\n  height: 56px;\n  font-size: 14px;\n  text-align: center;\n  text-overflow: ellipsis;\n  text-transform: none;\n  white-space: nowrap;\n  font-kerning: none;\n}\n\n.button-native {\n  border-radius: var(--border-radius);\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  display: block;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  transform: var(--transform);\n  transition: var(--transition);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  outline: none;\n  background: var(--background);\n  background-clip: padding-box;\n  color: var(--color);\n  box-shadow: var(--box-shadow);\n  contain: strict;\n  cursor: pointer;\n  overflow: hidden;\n  z-index: 0;\n  appearance: none;\n  box-sizing: border-box;\n}\n\n::slotted(ion-icon) {\n  line-height: 1;\n}\n\n.button-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n.button-inner {\n  left: 0;\n  right: 0;\n  top: 0;\n  display: flex;\n  position: absolute;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  transition: all ease-in-out 300ms;\n  transition-property: transform, opacity;\n  z-index: 1;\n}\n\n:host(.fab-button-disabled) {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n@media (any-hover: hover) {\n  :host(:hover) .button-native {\n    color: var(--color-hover);\n  }\n  :host(:hover) .button-native::after {\n    background: var(--background-hover);\n    opacity: var(--background-hover-opacity);\n  }\n}\n:host(.ion-focused) .button-native {\n  color: var(--color-focused);\n}\n:host(.ion-focused) .button-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n:host(.ion-activated) .button-native {\n  color: var(--color-activated);\n}\n:host(.ion-activated) .button-native::after {\n  background: var(--background-activated);\n  opacity: var(--background-activated-opacity);\n}\n\n::slotted(ion-icon) {\n  line-height: 1;\n}\n\n:host(.fab-button-small) {\n  -webkit-margin-start: 8px;\n  margin-inline-start: 8px;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: 8px;\n  margin-bottom: 8px;\n  width: 40px;\n  height: 40px;\n}\n\n.close-icon {\n  -webkit-margin-start: auto;\n  margin-inline-start: auto;\n  -webkit-margin-end: auto;\n  margin-inline-end: auto;\n  margin-top: 0;\n  margin-bottom: 0;\n  left: 0;\n  right: 0;\n  top: 0;\n  position: absolute;\n  height: 100%;\n  transform: scale(0.4) rotateZ(-45deg);\n  transition: all ease-in-out 300ms;\n  transition-property: transform, opacity;\n  font-size: var(--close-icon-font-size);\n  opacity: 0;\n  z-index: 1;\n}\n\n:host(.fab-button-close-active) .close-icon {\n  transform: scale(1) rotateZ(0deg);\n  opacity: 1;\n}\n\n:host(.fab-button-close-active) .button-inner {\n  transform: scale(0.4) rotateZ(45deg);\n  opacity: 0;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n@supports (backdrop-filter: blur(0)) {\n  :host(.fab-button-translucent) .button-native {\n    backdrop-filter: var(--backdrop-filter);\n  }\n}\n:host(.ion-color) .button-native {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: var(--ion-color-primary, #0054e9);\n  --background-activated: transparent;\n  --background-focused: currentColor;\n  --background-hover: currentColor;\n  --background-activated-opacity: 0;\n  --background-focused-opacity: .24;\n  --background-hover-opacity: .08;\n  --color: var(--ion-color-primary-contrast, #fff);\n  --box-shadow: 0 3px 5px -1px rgba(0, 0, 0, 0.2), 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12);\n  --transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), background-color 280ms cubic-bezier(0.4, 0, 0.2, 1), color 280ms cubic-bezier(0.4, 0, 0.2, 1), opacity 15ms linear 30ms, transform 270ms cubic-bezier(0, 0, 0.2, 1) 0ms;\n  --close-icon-font-size: 24px;\n}\n\n:host(.ion-activated) {\n  --box-shadow: 0 7px 8px -4px rgba(0, 0, 0, 0.2), 0 12px 17px 2px rgba(0, 0, 0, 0.14), 0 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n\n::slotted(ion-icon) {\n  font-size: 24px;\n}\n\n:host(.fab-button-in-list) {\n  --color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.54);\n  --color-activated: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.54);\n  --color-focused: var(--color-activated);\n  --background: var(--ion-color-light, #f4f5f8);\n  --background-activated: transparent;\n  --background-focused: var(--ion-color-light-shade, #d7d8da);\n  --background-hover: var(--ion-color-light-tint, #f5f6f9);\n}\n\n:host(.fab-button-in-list) ::slotted(ion-icon) {\n  font-size: 18px;\n}\n\n:host(.ion-color.ion-focused) .button-native {\n  color: var(--ion-color-contrast);\n}\n:host(.ion-color.ion-focused) .button-native::after {\n  background: var(--ion-color-contrast);\n}\n\n:host(.ion-color.ion-activated) .button-native {\n  color: var(--ion-color-contrast);\n}\n:host(.ion-color.ion-activated) .button-native::after {\n  background: transparent;\n}\n\n@media (any-hover: hover) {\n  :host(.ion-color:hover) .button-native {\n    color: var(--ion-color-contrast);\n  }\n  :host(.ion-color:hover) .button-native::after {\n    background: var(--ion-color-contrast);\n  }\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { inheritAriaAttributes } from \"../../utils/helpers\";\nimport { createColorClasses, hostContext, openURL } from \"../../utils/theme\";\nimport { close } from \"ionicons/icons\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @part native - The native HTML button or anchor element that wraps all child elements.\n * @part close-icon - The close icon that is displayed when a fab list opens (uses ion-icon).\n */\nexport class FabButton {\n    constructor() {\n        this.fab = null;\n        this.inheritedAttributes = {};\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.onClick = () => {\n            const { fab } = this;\n            if (!fab) {\n                return;\n            }\n            fab.toggle();\n        };\n        this.color = undefined;\n        this.activated = false;\n        this.disabled = false;\n        this.download = undefined;\n        this.href = undefined;\n        this.rel = undefined;\n        this.routerDirection = 'forward';\n        this.routerAnimation = undefined;\n        this.target = undefined;\n        this.show = false;\n        this.translucent = false;\n        this.type = 'button';\n        this.size = undefined;\n        this.closeIcon = close;\n    }\n    connectedCallback() {\n        this.fab = this.el.closest('ion-fab');\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAriaAttributes(this.el);\n    }\n    render() {\n        const { el, disabled, color, href, activated, show, translucent, size, inheritedAttributes } = this;\n        const inList = hostContext('ion-fab-list', el);\n        const mode = getIonMode(this);\n        const TagType = href === undefined ? 'button' : 'a';\n        const attrs = TagType === 'button'\n            ? { type: this.type }\n            : {\n                download: this.download,\n                href,\n                rel: this.rel,\n                target: this.target,\n            };\n        return (h(Host, { key: 'eb347f7d6749c40637540d84778eb8d1b667a947', onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, class: createColorClasses(color, {\n                [mode]: true,\n                'fab-button-in-list': inList,\n                'fab-button-translucent-in-list': inList && translucent,\n                'fab-button-close-active': activated,\n                'fab-button-show': show,\n                'fab-button-disabled': disabled,\n                'fab-button-translucent': translucent,\n                'ion-activatable': true,\n                'ion-focusable': true,\n                [`fab-button-${size}`]: size !== undefined,\n            }) }, h(TagType, Object.assign({ key: '83e853c8815f41543c848eb2e05ec2bb1716110a' }, attrs, { class: \"button-native\", part: \"native\", disabled: disabled, onFocus: this.onFocus, onBlur: this.onBlur, onClick: (ev) => openURL(href, ev, this.routerDirection, this.routerAnimation) }, inheritedAttributes), h(\"ion-icon\", { key: '798deede94de658e4345acf7c2aafe2ab2567b0b', \"aria-hidden\": \"true\", icon: this.closeIcon, part: \"close-icon\", class: \"close-icon\", lazy: false }), h(\"span\", { key: '99252fde6de1aca73fc240a6da7e29acac9acb18', class: \"button-inner\" }, h(\"slot\", { key: 'dc73e9b41bf1f0e385e5784f975dfb81e37c8dfb' })), mode === 'md' && h(\"ion-ripple-effect\", { key: '8413e162f44a0350f54dff06cff7aad101de3549' }))));\n    }\n    static get is() { return \"ion-fab-button\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"fab-button.ios.scss\"],\n            \"md\": [\"fab-button.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"fab-button.ios.css\"],\n            \"md\": [\"fab-button.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"activated\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the fab button will be show a close icon.\"\n                },\n                \"attribute\": \"activated\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the fab button.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"download\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"This attribute instructs browsers to download a URL instead of navigating to\\nit, so the user will be prompted to save it as a local file. If the attribute\\nhas a value, it is used as the pre-filled file name in the Save prompt\\n(the user can still change the file name if they want).\"\n                },\n                \"attribute\": \"download\",\n                \"reflect\": false\n            },\n            \"href\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Contains a URL or a URL fragment that the hyperlink points to.\\nIf this property is set, an anchor tag will be rendered.\"\n                },\n                \"attribute\": \"href\",\n                \"reflect\": false\n            },\n            \"rel\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the relationship of the target object to the link object.\\nThe value is a space-separated list of [link types](https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types).\"\n                },\n                \"attribute\": \"rel\",\n                \"reflect\": false\n            },\n            \"routerDirection\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"RouterDirection\",\n                    \"resolved\": \"\\\"back\\\" | \\\"forward\\\" | \\\"root\\\"\",\n                    \"references\": {\n                        \"RouterDirection\": {\n                            \"location\": \"import\",\n                            \"path\": \"../router/utils/interface\",\n                            \"id\": \"src/components/router/utils/interface.ts::RouterDirection\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When using a router, it specifies the transition direction when navigating to\\nanother page using `href`.\"\n                },\n                \"attribute\": \"router-direction\",\n                \"reflect\": false,\n                \"defaultValue\": \"'forward'\"\n            },\n            \"routerAnimation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder | undefined\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When using a router, it specifies the transition animation when navigating to\\nanother page using `href`.\"\n                }\n            },\n            \"target\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies where to display the linked URL.\\nOnly applies when an `href` is provided.\\nSpecial keywords: `\\\"_blank\\\"`, `\\\"_self\\\"`, `\\\"_parent\\\"`, `\\\"_top\\\"`.\"\n                },\n                \"attribute\": \"target\",\n                \"reflect\": false\n            },\n            \"show\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the fab button will show when in a fab-list.\"\n                },\n                \"attribute\": \"show\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"translucent\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the fab button will be translucent.\\nOnly applies when the mode is `\\\"ios\\\"` and the device supports\\n[`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\"\n                },\n                \"attribute\": \"translucent\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"type\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'submit' | 'reset' | 'button'\",\n                    \"resolved\": \"\\\"button\\\" | \\\"reset\\\" | \\\"submit\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The type of the button.\"\n                },\n                \"attribute\": \"type\",\n                \"reflect\": false,\n                \"defaultValue\": \"'button'\"\n            },\n            \"size\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'small'\",\n                    \"resolved\": \"\\\"small\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The size of the button. Set this to `small` in order to have a mini fab button.\"\n                },\n                \"attribute\": \"size\",\n                \"reflect\": false\n            },\n            \"closeIcon\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The icon name to use for the close icon. This will appear when the fab button\\nis pressed. Only applies if it is the main button inside of a fab containing a\\nfab list.\"\n                },\n                \"attribute\": \"close-icon\",\n                \"reflect\": false,\n                \"defaultValue\": \"close\"\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionFocus\",\n                \"name\": \"ionFocus\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the button has focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionBlur\",\n                \"name\": \"ionBlur\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the button loses focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get elementRef() { return \"el\"; }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --border-radius: Border radius of the menu button\n   *\n   * @prop --background: Background of the menu button\n   * @prop --background-hover: Background of the menu button on hover\n   * @prop --background-hover-opacity: Opacity of the background on hover\n   * @prop --background-focused: Background of the menu button when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the menu button background when focused with the tab key\n   *\n   * @prop --color: Color of the menu button\n   * @prop --color-hover: Color of the menu button on hover\n   * @prop --color-focused: Color of the menu button when focused with the tab key\n   *\n   * @prop --padding-top: Top padding of the button\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button\n   * @prop --padding-bottom: Bottom padding of the button\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button\n   */\n  --background: transparent;\n  --color-focused: currentColor;\n  --border-radius: initial;\n  --padding-top: 0;\n  --padding-bottom: 0;\n  color: var(--color);\n  text-align: center;\n  text-decoration: none;\n  text-overflow: ellipsis;\n  text-transform: none;\n  white-space: nowrap;\n  font-kerning: none;\n}\n\n.button-native {\n  border-radius: var(--border-radius);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  min-height: inherit;\n  border: 0;\n  outline: none;\n  background: var(--background);\n  line-height: 1;\n  cursor: pointer;\n  overflow: hidden;\n  user-select: none;\n  z-index: 0;\n  appearance: none;\n}\n\n.button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  min-height: inherit;\n  z-index: 1;\n}\n\nion-icon {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  pointer-events: none;\n}\n\n:host(.menu-button-hidden) {\n  display: none;\n}\n\n:host(.menu-button-disabled) {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n:host(.ion-focused) .button-native {\n  color: var(--color-focused);\n}\n:host(.ion-focused) .button-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n.button-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n@media (any-hover: hover) {\n  :host(:hover) .button-native {\n    color: var(--color-hover);\n  }\n  :host(:hover) .button-native::after {\n    background: var(--background-hover);\n    opacity: var(--background-hover-opacity, 0);\n  }\n}\n:host(.ion-color) .button-native {\n  color: var(--ion-color-base);\n}\n\n:host(.in-toolbar:not(.in-toolbar-color)) {\n  color: var(--ion-toolbar-color, var(--color));\n}\n\n:host {\n  --background-focused: currentColor;\n  --background-focused-opacity: .1;\n  --border-radius: 4px;\n  --color: var(--ion-color-primary, #0054e9);\n  --padding-start: 5px;\n  --padding-end: 5px;\n  min-height: 32px;\n  font-size: clamp(31px, 1.9375rem, 38.13px);\n}\n\n:host(.ion-activated) {\n  opacity: 0.4;\n}\n\n@media (any-hover: hover) {\n  :host(:hover) {\n    opacity: 0.6;\n  }\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --border-radius: Border radius of the menu button\n   *\n   * @prop --background: Background of the menu button\n   * @prop --background-hover: Background of the menu button on hover\n   * @prop --background-hover-opacity: Opacity of the background on hover\n   * @prop --background-focused: Background of the menu button when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the menu button background when focused with the tab key\n   *\n   * @prop --color: Color of the menu button\n   * @prop --color-hover: Color of the menu button on hover\n   * @prop --color-focused: Color of the menu button when focused with the tab key\n   *\n   * @prop --padding-top: Top padding of the button\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button\n   * @prop --padding-bottom: Bottom padding of the button\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button\n   */\n  --background: transparent;\n  --color-focused: currentColor;\n  --border-radius: initial;\n  --padding-top: 0;\n  --padding-bottom: 0;\n  color: var(--color);\n  text-align: center;\n  text-decoration: none;\n  text-overflow: ellipsis;\n  text-transform: none;\n  white-space: nowrap;\n  font-kerning: none;\n}\n\n.button-native {\n  border-radius: var(--border-radius);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  min-height: inherit;\n  border: 0;\n  outline: none;\n  background: var(--background);\n  line-height: 1;\n  cursor: pointer;\n  overflow: hidden;\n  user-select: none;\n  z-index: 0;\n  appearance: none;\n}\n\n.button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  min-height: inherit;\n  z-index: 1;\n}\n\nion-icon {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  pointer-events: none;\n}\n\n:host(.menu-button-hidden) {\n  display: none;\n}\n\n:host(.menu-button-disabled) {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n:host(.ion-focused) .button-native {\n  color: var(--color-focused);\n}\n:host(.ion-focused) .button-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n.button-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n@media (any-hover: hover) {\n  :host(:hover) .button-native {\n    color: var(--color-hover);\n  }\n  :host(:hover) .button-native::after {\n    background: var(--background-hover);\n    opacity: var(--background-hover-opacity, 0);\n  }\n}\n:host(.ion-color) .button-native {\n  color: var(--ion-color-base);\n}\n\n:host(.in-toolbar:not(.in-toolbar-color)) {\n  color: var(--ion-toolbar-color, var(--color));\n}\n\n:host {\n  --background-focused: currentColor;\n  --background-focused-opacity: .12;\n  --background-hover: currentColor;\n  --background-hover-opacity: .04;\n  --border-radius: 50%;\n  --color: initial;\n  --padding-start: 8px;\n  --padding-end: 8px;\n  width: 3rem;\n  height: 3rem;\n  font-size: 1.5rem;\n}\n\n:host(.ion-color.ion-focused)::after {\n  background: var(--ion-color-base);\n}\n\n@media (any-hover: hover) {\n  :host(.ion-color:hover) .button-native::after {\n    background: var(--ion-color-base);\n  }\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { inheritAriaAttributes } from \"../../utils/helpers\";\nimport { menuController } from \"../../utils/menu-controller/index\";\nimport { createColorClasses, hostContext } from \"../../utils/theme\";\nimport { menuOutline, menuSharp } from \"ionicons/icons\";\nimport { config } from \"../../global/config\";\nimport { getIonMode } from \"../../global/ionic-global\";\nimport { updateVisibility } from \"../menu-toggle/menu-toggle-util\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @part native - The native HTML button element that wraps all child elements.\n * @part icon - The menu button icon (uses ion-icon).\n */\nexport class MenuButton {\n    constructor() {\n        this.inheritedAttributes = {};\n        this.onClick = async () => {\n            return menuController.toggle(this.menu);\n        };\n        this.visible = false;\n        this.color = undefined;\n        this.disabled = false;\n        this.menu = undefined;\n        this.autoHide = true;\n        this.type = 'button';\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAriaAttributes(this.el);\n    }\n    componentDidLoad() {\n        this.visibilityChanged();\n    }\n    async visibilityChanged() {\n        this.visible = await updateVisibility(this.menu);\n    }\n    render() {\n        const { color, disabled, inheritedAttributes } = this;\n        const mode = getIonMode(this);\n        const menuIcon = config.get('menuIcon', mode === 'ios' ? menuOutline : menuSharp);\n        const hidden = this.autoHide && !this.visible;\n        const attrs = {\n            type: this.type,\n        };\n        const ariaLabel = inheritedAttributes['aria-label'] || 'menu';\n        return (h(Host, { key: '95a8b9f09c7fae9713a8dc003ed277f6f31403da', onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, \"aria-hidden\": hidden ? 'true' : null, class: createColorClasses(color, {\n                [mode]: true,\n                button: true, // ion-buttons target .button\n                'menu-button-hidden': hidden,\n                'menu-button-disabled': disabled,\n                'in-toolbar': hostContext('ion-toolbar', this.el),\n                'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n                'ion-activatable': true,\n                'ion-focusable': true,\n            }) }, h(\"button\", Object.assign({ key: '39f3ce20c400d2fac4890a042e8e44426709fca5' }, attrs, { disabled: disabled, class: \"button-native\", part: \"native\", \"aria-label\": ariaLabel }), h(\"span\", { key: '310978dc1cdef668de6720cde2a2304253679176', class: \"button-inner\" }, h(\"slot\", { key: '2a2b9de524c1fc3c526fe9559cb077b976852725' }, h(\"ion-icon\", { key: '9c22d7ea9fc3d76c32ec1c1b4b13d982c60b8c2d', part: \"icon\", icon: menuIcon, mode: mode, lazy: false, \"aria-hidden\": \"true\" }))), mode === 'md' && h(\"ion-ripple-effect\", { key: 'c58c9e29c763070383472f65a9d322a684bcb564', type: \"unbounded\" }))));\n    }\n    static get is() { return \"ion-menu-button\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"menu-button.ios.scss\"],\n            \"md\": [\"menu-button.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"menu-button.ios.css\"],\n            \"md\": [\"menu-button.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the menu button.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"menu\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Optional property that maps to a Menu's `menuId` prop. Can also be `start` or `end` for the menu side. This is used to find the correct menu to toggle\"\n                },\n                \"attribute\": \"menu\",\n                \"reflect\": false\n            },\n            \"autoHide\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Automatically hides the menu button when the corresponding menu is not active\"\n                },\n                \"attribute\": \"auto-hide\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"type\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'submit' | 'reset' | 'button'\",\n                    \"resolved\": \"\\\"button\\\" | \\\"reset\\\" | \\\"submit\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The type of the button.\"\n                },\n                \"attribute\": \"type\",\n                \"reflect\": false,\n                \"defaultValue\": \"'button'\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"visible\": {}\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get listeners() {\n        return [{\n                \"name\": \"ionMenuChange\",\n                \"method\": \"visibilityChanged\",\n                \"target\": \"body\",\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"ionSplitPaneVisible\",\n                \"method\": \"visibilityChanged\",\n                \"target\": \"body\",\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n"],"mappings":"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","ignoreList":[]}