{"version":3,"names":["appChatCss","AppChatStyle0","AppChat","this","showingPopover","addParticipants","ev","popover","popoverController","create","component","componentProps","chat","event","translucent","onDidDismiss","then","async","data","participants","ChatService","updateParticipants","chatId","Object","keys","length","alert","alertController","header","TranslationService","getTransl","message","buttons","text","role","handler","RouterService","push","present","componentWillLoad","chatSub","loadedChat$","subscribe","updateMessagesArrayArray","loadChatsForUser","UserService","userProfile","uid","loadChat","componentDidLoad","chatContainer","document","getElementById","scrollToBottom","disconnectedCallback","saveLastChatReadToUser","unsubscribe","unloadChat","setTimeout","messageGroups","actualMessageSender","previousMessageSender","previousDate","nextMessageSender","messageGroupsCount","thread","orderBy","i","senderId","isFirst","isMine","chatUser","id","isLast","isSystem","messageObject","content","senderName","created","date","fromUnixTime","toNumber","showDate","differenceInMinutes","today","differenceInDays","Date","format","messages","item","sendingMessage","handleChange","target","value","handleKey","key","code","preventDefault","sendMessage","sendChatMessage","render","h","Host","map","messageGroup","class","undefined","innerHTML","lines","name","mode","placeholder","autofocus","clearOnEdit","disabled","onIonInput","onKeyUp","slot","fill","onClick"],"sources":["src/components/common/app/chat/app-chat/app-chat.scss?tag=app-chat","src/components/common/app/chat/app-chat/app-chat.tsx"],"sourcesContent":["app-chat {\n  width: 100%;\n  height: var(--chatHeight);\n\n  #chat-container {\n    --padding-bottom: 65px;\n  }\n\n  .chat-footer {\n    position: absolute;\n    bottom: 0 !important;\n    width: 100%;\n  }\n\n  .messages {\n    padding-left: 20px;\n    padding-right: 20px;\n    margin-bottom: 20px;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .message {\n    border-radius: 20px;\n    padding: 8px 15px;\n    margin-top: 5px;\n    margin-bottom: 5px;\n    display: inline-block;\n  }\n\n  .system {\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n  }\n  .system .message {\n    color: rgb(68, 68, 68);\n    padding: 0;\n    margin-top: 5px;\n    margin-bottom: 1px;\n    font-size: smaller;\n  }\n\n  .yours {\n    align-items: flex-start;\n  }\n  .yours .sendername {\n    color: rgb(201, 201, 201);\n    font-size: smaller;\n  }\n  .yours .message {\n    margin-right: 25%;\n    background: linear-gradient(to bottom, #eee 0%, rgb(212, 212, 212) 100%);\n    background-attachment: fixed;\n    position: relative;\n  }\n\n  .yours .message.last:before {\n    content: \"\";\n    position: absolute;\n    z-index: 0;\n    bottom: 0;\n    left: -7px;\n    height: 20px;\n    width: 20px;\n    background: linear-gradient(to bottom, #eee 0%, rgb(212, 212, 212) 100%);\n    background-attachment: fixed;\n    border-bottom-right-radius: 15px;\n  }\n  .yours .message.last:after {\n    content: \"\";\n    position: absolute;\n    z-index: 1;\n    bottom: 0;\n    left: -10px;\n    width: 10px;\n    height: 20px;\n    background: white;\n    border-bottom-right-radius: 10px;\n  }\n\n  .mine {\n    align-items: flex-end;\n  }\n  .mine .timestamp {\n    color: #00d0ea;\n    font-size: smaller;\n  }\n\n  .mine .message {\n    color: white;\n    margin-left: 25%;\n    background: linear-gradient(to bottom, #00d0ea 0%, #0085d1 100%);\n    background-attachment: fixed;\n    position: relative;\n  }\n\n  .mine .message.last:before {\n    content: \"\";\n    position: absolute;\n    z-index: 0;\n    bottom: 0;\n    right: -8px;\n    height: 20px;\n    width: 20px;\n    background: linear-gradient(to bottom, #00d0ea 0%, #0085d1 100%);\n    background-attachment: fixed;\n    border-bottom-left-radius: 15px;\n  }\n\n  .mine .message.last:after {\n    content: \"\";\n    position: absolute;\n    z-index: 1;\n    bottom: 0;\n    right: -10px;\n    width: 10px;\n    height: 20px;\n    background: white;\n    border-bottom-left-radius: 10px;\n  }\n}\n","import {Component, h, Prop, State, Host, Method} from \"@stencil/core\";\nimport {Subscription} from \"rxjs\";\nimport {ChatService} from \"../../../../../services/common/chat\";\nimport {TranslationService} from \"../../../../../services/common/translations\";\nimport {popoverController, alertController} from \"@ionic/core\";\nimport {Chat} from \"../../../../../interfaces/common/chat/chat\";\nimport {RouterService} from \"../../../../../services/common/router\";\nimport {UserService} from \"../../../../../services/common/user\";\nimport {\n  fromUnixTime,\n  differenceInMinutes,\n  differenceInDays,\n  format,\n} from \"date-fns\";\nimport {orderBy, toNumber} from \"lodash\";\n\n@Component({\n  tag: \"app-chat\",\n  styleUrl: \"app-chat.scss\",\n})\nexport class AppChat {\n  @Prop() chatId: string;\n  chat: Chat;\n  @State() messageGroups: any = [];\n  chatSub: Subscription;\n  showingPopover = false;\n  @State() message: string;\n  chatContainer: HTMLIonContentElement;\n  @State() sendingMessage = false;\n\n  @Method()\n  async addParticipants(ev) {\n    if (!this.showingPopover) {\n      this.showingPopover = true;\n      const popover = await popoverController.create({\n        component: \"popover-chat-participants\",\n        componentProps: {chat: this.chat},\n        event: ev,\n        translucent: true,\n      });\n      popover.onDidDismiss().then(async (ev) => {\n        if (ev && ev.data) {\n          const participants = ev.data;\n          ChatService.updateParticipants(this.chatId, this.chat, participants);\n        } else {\n          //checkif number of participants is >2\n          if (Object.keys(this.chat.participants).length <= 1) {\n            const alert = await alertController.create({\n              header: TranslationService.getTransl(\"chat\", \"Chat\"),\n              message: TranslationService.getTransl(\n                \"chat-participants-error\",\n                \"You should add at least another participant to the chat.\"\n              ),\n              buttons: [\n                {\n                  text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n                  role: \"cancel\",\n                  handler: async () => {\n                    RouterService.push(\"/chat\", \"root\");\n                  },\n                },\n                {\n                  text: TranslationService.getTransl(\"ok\", \"OK\"),\n                  handler: async () => {\n                    this.addParticipants(null);\n                  },\n                },\n              ],\n            });\n            alert.present();\n          }\n        }\n\n        this.showingPopover = false;\n      });\n      popover.present();\n    }\n  }\n\n  componentWillLoad() {\n    this.chatSub = ChatService.loadedChat$.subscribe((chat: Chat) => {\n      if (chat && chat.participants) {\n        this.chat = chat;\n        this.updateMessagesArrayArray();\n        if (Object.keys(this.chat.participants).length == 1) {\n          this.addParticipants(null);\n        }\n      }\n    });\n    ChatService.loadChatsForUser(UserService.userProfile.uid);\n    ChatService.loadChat(this.chatId);\n  }\n\n  componentDidLoad() {\n    this.chatContainer = document.getElementById(\n      \"chat-container\"\n    ) as HTMLIonContentElement;\n    this.scrollToBottom();\n  }\n\n  disconnectedCallback() {\n    ChatService.saveLastChatReadToUser(this.chatId, this.chat);\n    this.chatSub.unsubscribe();\n    ChatService.unloadChat();\n  }\n\n  scrollToBottom() {\n    setTimeout(() => {\n      this.chatContainer.scrollToBottom();\n    }, 100);\n  }\n\n  updateMessagesArrayArray() {\n    this.messageGroups = [];\n    let actualMessageSender = null;\n    let previousMessageSender = null;\n    let previousDate = null;\n    let nextMessageSender = null;\n    let messageGroupsCount = -1;\n    const thread = orderBy(this.chat.thread, \"created\");\n    for (let i = 0; i < thread.length; i++) {\n      const message = thread[i];\n      actualMessageSender = message.senderId;\n      nextMessageSender =\n        i == thread.length - 1 ? null : thread[i + 1].senderId;\n      //check if is last message\n      let isFirst =\n        previousMessageSender == null ||\n        previousMessageSender != actualMessageSender;\n      let isMine = actualMessageSender == ChatService.chatUser.id;\n      let isLast = actualMessageSender != nextMessageSender;\n      let isSystem = message.senderId == \"system\";\n      const messageObject = {\n        content:\n          message.content +\n          (isSystem\n            ? message.senderName == \"added\"\n              ? \" \" + TranslationService.getTransl(\"is-in\", \"is in\")\n              : \" \" + TranslationService.getTransl(\"is-out\", \"is out\")\n            : \"\"),\n        created: message.created,\n        isFirst: isFirst,\n        isLast: isLast,\n        senderName: message.senderName,\n      };\n      if (isFirst) {\n        const date = fromUnixTime(toNumber(message.created));\n        const showDate = previousDate\n          ? differenceInMinutes(previousDate, date) >= 10\n          : true;\n        if (!isSystem && showDate) {\n          //insert message group date\n          const today =\n            differenceInDays(new Date(), date) >= 1\n              ? format(date, \"PPPP\") // Full textual representation\n              : `${format(date, \"EEEE\")} ${format(date, \"p\")}`; // Day of the week + time\n          this.messageGroups.push({\n            isSystem: true,\n            messages: [\n              {\n                content: today,\n              },\n            ],\n          });\n          previousDate = date;\n          messageGroupsCount++;\n        }\n        //create message group\n        messageGroupsCount++;\n        const item = {\n          isMine: isMine,\n          isSystem: isSystem,\n          messages: [messageObject],\n        };\n        this.messageGroups.push(item);\n      } else {\n        this.messageGroups[messageGroupsCount].messages.push(messageObject);\n      }\n      previousMessageSender = message.senderId;\n    }\n    this.sendingMessage = false;\n    this.scrollToBottom();\n  }\n\n  handleChange(ev) {\n    this.message = ev.target.value;\n  }\n\n  handleKey(key) {\n    //send message on Enter key\n    if (key.code === \"Enter\") {\n      event.preventDefault();\n      this.sendMessage();\n    }\n  }\n\n  sendMessage() {\n    this.sendingMessage = true;\n    const message = this.message;\n    this.message = \"\";\n    ChatService.sendChatMessage(this.chatId, this.chat, message);\n  }\n\n  render() {\n    return (\n      <Host>\n        <ion-content id=\"chat-container\">\n          {this.messageGroups.map((messageGroup) => [\n            <div\n              class={\n                messageGroup.isMine\n                  ? \"mine messages\"\n                  : messageGroup.isSystem\n                    ? \"system\"\n                    : \"yours messages\"\n              }\n            >\n              {messageGroup.messages.map((message) => [\n                this.chat &&\n                this.chat.participants &&\n                Object.keys(this.chat.participants).length > 2 &&\n                !messageGroup.isMine &&\n                message.isFirst &&\n                !messageGroup.isSystem ? (\n                  <div class=\"sendername\">{message.senderName}</div>\n                ) : undefined,\n                <div\n                  class={\"message\" + (message.isLast ? \" last\" : \"\")}\n                  innerHTML={message.content}\n                ></div>,\n              ])}\n            </div>,\n          ])}\n        </ion-content>\n        <ion-footer class=\"chat-footer\">\n          <ion-toolbar>\n            <ion-item lines=\"none\">\n              {this.sendingMessage ? (\n                <ion-spinner name=\"dots\"></ion-spinner>\n              ) : undefined}\n              <ion-input\n                mode=\"ios\"\n                placeholder={\n                  !this.sendingMessage\n                    ? TranslationService.getTransl(\n                        \"write-message\",\n                        \"Write a message\"\n                      )\n                    : undefined\n                }\n                autofocus={true}\n                clearOnEdit={true}\n                value={this.message}\n                disabled={this.sendingMessage}\n                onIonInput={(ev) => this.handleChange(ev)}\n                onKeyUp={(ev) => this.handleKey(ev)}\n              ></ion-input>\n              <ion-button\n                slot=\"end\"\n                icon-only\n                fill=\"clear\"\n                disabled={this.sendingMessage}\n                onClick={() => this.sendMessage()}\n              >\n                <ion-icon name=\"paper-plane-outline\"></ion-icon>\n              </ion-button>\n            </ion-item>\n          </ion-toolbar>\n        </ion-footer>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}