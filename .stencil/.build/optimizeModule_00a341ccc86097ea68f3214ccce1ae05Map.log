{"version":3,"names":["appItemCoverCss","AppItemCoverStyle0","AppItemCover","render","h","Host","key","this","item","class","style","coverURL","backgroundImage","undefined","photoURL","marginLeft","tmbPosition","marginRight","src","alt","displayName","CACHED_MAP","getIconMap","window","Map","win","Ionicons","map","getUrl","i","url","getSrc","getName","name","icon","mode","ios","md","getNamedUrl","iconName","iconEl","get","getAssetPath","e","console","warn","toLower","isSrc","isStr","trim","invalidChars","replace","str","length","test","val","toLowerCase","inheritAttributes","el","attributes","attributeObject","forEach","attr","hasAttribute","value","getAttribute","removeAttribute","isRTL","hostEl","dir","document","appLanguagePickerCss","AppLanguagePickerStyle0","AppLanguagePicker","listItems","label","update","selectLanguage","componentWillLoad","SystemService","getLanguages","find","x","selectedLangCode","selectedItem","Object","assign","updateView","changeLang","ev","detail","languageChanged","emit","openLanguagePicker","buttons","lang","push","text","handler","action","actionSheetController","create","header","TranslationService","getTransl","present","picker","selectOnly","fill","slot","onClick","countryCode","interface","onIonChange","iconOnly","MenuController","constructor","appMenu","resetMenus","adminMenu","listButtons","enableMenu","menu","menuController","enable","MenuService","renderMenus","ADMINROUTE","DIVECOMMUNITIESCOLLECTION","DiveCommunitiesService","getDiveCommunityDetails","selectDiveCommunityForAdmin","id","createAdminMenu","headerColor","DIVECENTERSSCOLLECTION","DivingCentersService","getDivingCenterDetails","selectDivingCenterForAdmin","DIVESCHOOLSSCOLLECTION","DivingSchoolsService","getDivingSchoolDetails","selectDivingSchoolForAdmin","SERVICECENTERSCOLLECTION","ServiceCentersService","getServiceCenterDetails","selectServiceCenterForAdmin","unsubscribeDivingCenterForAdmin","unsubscribeDivingSchoolForAdmin","unsubscribeServiceCenterForAdmin","Environment","getAppColor","renderUserMenus","UserService","userProfile","uid","coverItemUser","isUdive","listTitle","tag","iconType","admin","renderUserAdminMenus","userRoles","isAgencyAdmin","isTranslator","systemMenu","isDecoplanner","isSuperAdmin","menus","icons","UDiveFilterService","getMapDocs","itemId","editorOf","collection","dc","dcicon","avatar","type","dcom","dcomicon","ds","dsicon","sc","scicon","arrayMenu","keys","orderedMenu","orderBy","coverItemAdmin","UDiveMenuService","CUSTOMERSCOLLECTION","TrasteelFilterService","PROJECTSCOLLECTION","DATASHEETSCOLLECTION","SHAPESCOLLECTION","externalUrl","isUserAdmin","TrasteelMenuService","appMenuCss","AppMenuStyle0","AppMenu","userRoles$","subscribe","roles","RouterService","routerSub$","to","showMenu","selectedMenu","isArray","join","isTrasteel","itemSelect","alert","alertController","message","role","async","Browser","open","when","menuId","color","getAppLogo","getAppTitle","getAppSubTitle","isPlatform","size","forceOverscroll","showUserDetails","list","isLabel","p","adminOnly","isAdmin","autoHide","button","getAppVersion","href","animated","PushNotifications","registerPlugin","SplashScreen","web","import","then","m","SplashScreenWeb","init","register","addListener","token","log","error","JSON","stringify","notification","hideSplash","hide","TrasteelRouting","renderRedirectRoutes","unmatched","component","res","from","renderAdminRoutes","routes","TrasteelService","isTeamAdmin","renderLoggedinUserRoutes","ret","CONTACTSCOLLECTION","renderCommonUserRoutes","renderSuperAdminRoutes","TrasteelRoutingService","UdiveRouting","renderUDiveRedirectRoutes","renderDecoplannerRedirectRoutes","renderUdiveLoggedinUserRoutes","renderDecoplannerLoggedinUserRoutes","renderUDiveAdminRoutes","componentProps","dcid","dsid","centerid","renderDecoplannerAdminRoutes","renderUdiveCommonUserRoutes","renderDecoplannerCommonUserRoutes","renderUDiveSuperAdminRoutes","renderDecoplannerSuperAdminRoutes","UdiveRoutingService","appRootCss","AppRootStyle0","AppRoot","userProfileLoaded","onServiceWorkerUpdate","NotificationsService","initApp","componentDidLoad","Plugins.init","appLoaded","resetBkgColor","addEventListener","setCoverHeight","userProfile$","DatabaseService","servicesStarted","user","auth","currentUser","UserProfile","customElements","whenDefined","setTimeout","AuthService","showDashboard","navCtrl","forceRefreshMapData","showUserSettings","presentUserUpdate","dismissLoading","Plugins.hideSplash","signOut","loadRouter","UserRoles","initServices","userSettings$","userSettings","UserSettings","systemPreferences$","refreshMapData","startServices","start","isElectron","signInLinkReceived","location","onSignInLinkReceived","onMainLog","_a","getNetworkStatus","networkObservable","networkObs","status","unsubscribe","white","documentElement","setProperty","getAppSplashColor","nav","querySelector","componentOnReady","renderLoggedInUserRoutes","renderCommonRoutes","darkTheme","prefersDark","matchMedia","toggleDarkTheme","matches","mediaQuery","shouldAdd","body","classList","toggle","useHash","onIonRouteWillChange","routerChanged","appUserCoverCss","AppUserCoverStyle0","AppUserCover","userProfileSub$","userSettingsSub$","initLocalUser","disconnectedCallback","showCover","email","address","display_name","settings","units","getLanguage","bio","expand","deleteUser","createButtonActiveGesture","isButton","currentTouchedButton","initialTouchedButton","activateButtonAtPoint","y","hapticFeedbackFn","target","elementFromPoint","disabled","clearActiveButton","setActiveButton","buttonToModify","writeTask","add","dispatchClick","remove","click","createGesture","gestureName","threshold","onStart","currentX","currentY","hapticSelectionStart","onMove","hapticSelectionChanged","onEnd","hapticSelectionEnd","iosEnterAnimation","baseEl","baseAnimation","createAnimation","backdropAnimation","wrapperAnimation","addElement","fromTo","beforeStyles","afterClearStyles","easing","duration","addAnimation","iosLeaveAnimation","mdEnterAnimation","mdLeaveAnimation","actionSheetIosCss","IonActionSheetIosStyle0","actionSheetMdCss","IonActionSheetMdStyle0","ActionSheet","hostRef","delegateController","createDelegateController","lockController","createLockController","triggerController","createTriggerController","presented","onBackdropTap","dismiss","BACKDROP","dispatchCancelHandler","isCancel","cancelButton","getButtons","b","callButtonHandler","overlayIndex","delegate","hasController","keyboardClose","enterAnimation","leaveAnimation","cssClass","backdropDismiss","subHeader","translucent","htmlAttributes","isOpen","trigger","onIsOpenChange","newValue","oldValue","triggerChanged","addClickListener","unlock","lock","attachViewToDom","data","dismissed","removeViewFromDom","onDidDismiss","eventMethod","onWillDismiss","buttonClick","shouldDismiss","Promise","resolve","rtn","safeCall","connectedCallback","prepareOverlay","gesture","destroy","removeClickListener","setOverlayId","groupEl","wrapperEl","getIonMode","readTask","isScrollable","scrollHeight","clientHeight","refEl","contains","raf","allButtons","filter","headerID","tabindex","zIndex","getClassMap","onIonActionSheetWillDismiss","onIonBackdropTap","tappable","ref","buttonClass","lazy","keyframes","offset","opacity","transform","alertIosCss","IonAlertIosStyle0","alertMdCss","IonAlertMdStyle0","Alert","customHTMLEnabled","config","ENABLE_HTML_CONTENT_DEFAULT","processedInputs","processedButtons","inputs","onKeydown","inputTypes","Set","has","preventDefault","query","querySelectorAll","radios","Array","radio","index","findIndex","nextEl","includes","nextProcessed","input","rbClick","focus","buttonsChanged","btn","inputsChanged","first","checked","focusable","values","inputType","next","placeholder","min","max","selectedInput","activeId","forceUpdate","cbClick","getValues","returnData","checkedInput","renderAlertInputs","renderCheckbox","renderRadio","renderInput","tabIndex","_b","_c","_d","inputClass","onInput","renderAlertButtons","alertButtonGroupClass","renderAlertMessage","msgId","innerHTML","sanitizeDOMString","hdrId","subHdrId","ariaLabelledBy","onIonAlertWillDismiss","toString","appCss","IonAppStyle0","App","rIC","isHybrid","getBoolean","module","startTapClick","startStatusTap","needInputShims","platform","startInputShims","hardwareBackButtonModule","supportsHardwareBackButtonEvents","shouldUseCloseWatcher","startHardwareBackButton","printIonWarning","blockHardwareBackButton","startKeyboardAssist","focusVisible","startFocusVisible","setFocus","elements","needsShimsIOS","isAndroidMobileWeb","callback","requestIdleCallback","avatarIosCss","IonAvatarIosStyle0","avatarMdCss","IonAvatarMdStyle0","Avatar","backdropIosCss","IonBackdropIosStyle0","backdropMdCss","IonBackdropMdStyle0","Backdrop","visible","stopPropagation","onMouseDown","emitTap","ionBackdropTap","buttonIosCss","IonButtonIosStyle0","buttonMdCss","IonButtonMdStyle0","Button","inItem","inListHeader","inToolbar","formButtonEl","formEl","inheritedAttributes","handleClick","openURL","routerDirection","routerAnimation","hasShadowDom","submitForm","onFocus","ionFocus","onBlur","ionBlur","slotChanged","isCircle","hasIconOnly","buttonType","download","rel","shape","strong","form","disabledChanged","renderHiddenButton","findForm","newFormButtonEl","createElement","display","appendChild","closest","inheritAriaAttributes","rippleType","hasClearFill","HTMLFormElement","getElementById","finalSize","TagType","attrs","createColorClasses","hostContext","part","onSlotchange","buttonsIosCss","IonButtonsIosStyle0","buttonsMdCss","IonButtonsMdStyle0","Buttons","collapse","cardIosCss","IonCardIosStyle0","cardMdCss","IonCardMdStyle0","Card","inheritedAriaAttributes","isClickable","renderCard","clickable","cardContentIosCss","IonCardContentIosStyle0","cardContentMdCss","IonCardContentMdStyle0","CardContent","cardSubtitleIosCss","IonCardSubtitleIosStyle0","cardSubtitleMdCss","IonCardSubtitleMdStyle0","CardSubtitle","checkboxIosCss","IonCheckboxIosStyle0","checkboxMdCss","IonCheckboxMdStyle0","Checkbox","inputId","checkboxIds","setChecked","state","isChecked","ionChange","toggleChecked","indeterminate","labelPlacement","justify","alignment","focusEl","getSVGPath","path","renderHiddenInput","interactive","onChange","textContent","viewBox","d","SIZE_TO_MEDIA","xs","sm","lg","xl","matchBreakpoint","breakpoint","colCss","IonColStyle0","SUPPORTS_VARS","CSS","supports","BREAKPOINTS","Col","offsetXs","offsetSm","offsetMd","offsetLg","offsetXl","pull","pullXs","pullSm","pullMd","pullLg","pullXl","pushXs","pushSm","pushMd","pushLg","pushXl","sizeXs","sizeSm","sizeMd","sizeLg","sizeXl","onResize","getColumns","property","matched","columns","charAt","toUpperCase","slice","calculateSize","colSize","flex","width","calculatePosition","modifier","amount","calculateOffset","calculatePull","calculatePush","contentCss","IonContentStyle0","Content","watchDog","isScrolling","lastScroll","queued","cTop","cBottom","isMainContent","resizeTimeout","tabsElement","scrollTop","scrollLeft","event","startX","startY","startTime","velocityX","velocityY","deltaX","deltaY","currentTime","fullscreen","fixedSlotPlacement","scrollX","scrollY","scrollEvents","hasLazyBuild","closestTabs","tabsLoadCallback","resize","onScrollEnd","removeEventListener","clearTimeout","offsetParent","shouldForceOverscroll","readDimensions","page","getPageElement","top","Math","offsetTop","bottom","offsetHeight","dirty","onScroll","timeStamp","Date","now","shouldStart","onScrollStart","ts","updateScrollDetail","scrollEl","ionScroll","getScrollElement","getBackgroundElement","backgroundContentEl","scrollToTop","scrollToPoint","scrollToBottom","scrollByPoint","promise","r","fromY","fromX","step","linearTime","easedT","pow","floor","requestAnimationFrame","ionScrollStart","clearInterval","setInterval","ionScrollEnd","rtl","transitionShadow","overscroll","getParentElement","parentElement","parentNode","host","tabs","timestamp","prevX","prevY","prevT","timeDelta","handleFooterFade","maxScroll","fadeDuration","fadeStart","distanceToStart","scale","clamp","footerIosCss","IonFooterIosStyle0","footerMdCss","IonFooterMdStyle0","Footer","keyboardCtrl","checkCollapsibleFooter","hasFade","destroyCollapsibleFooter","pageEl","contentEl","findIonContent","printIonContentErrorMsg","setupFadeFooter","contentScrollCallback","keyboardVisible","componentDidUpdate","createKeyboardController","keyboardOpen","waitForResize","tabBar","TRANSITION","cloneElement","tagName","getCachedEl","clonedEl","createHeaderIndex","headerEl","toolbars","toolbar","ionTitleEl","background","shadowRoot","innerTitleEl","ionButtonsEl","handleContentScroll","scrollHeaderIndex","nativeRefresher","scaleLargeTitles","setToolbarBackgroundOpacity","removeProperty","handleToolbarBorderIntersection","mainHeaderIndex","isIntersecting","intersectionRatio","handleToolbarIntersection","intersection","intersectionRect","intersectionArea","height","rootArea","rootBounds","isPageHidden","leftDiff","abs","left","boundingClientRect","rightDiff","right","isPageTransitioning","setHeaderActive","hasValidIntersection","headerIndex","active","setAttribute","transition","ionTitle","titleDiv","handleHeaderFade","condenseHeader","baseElHeight","headerIosCss","IonHeaderIosStyle0","headerMdCss","IonHeaderMdStyle0","Header","setupFadeHeader","checkCollapsibleHeader","destroyCollapsibleHeader","hasCondense","title","setupCondenseHeader","intersectionObserver","disconnect","collapsibleMainHeader","IntersectionObserver","headers","toolbarIntersection","root","observe","roleType","validateContent","svgContent","div","childNodes","nodeName","removeChild","svgElm","firstElementChild","svgClass","isValid","elm","nodeType","indexOf","isSvgDataUrl","startsWith","isEncodedDataUrl","ioniconContent","requests","parser","getSvgContent","sanitize","req","fetch","DOMParser","doc","parseFromString","svg","set","outerHTML","rsp","ok","iconCss","IonIconStyle0","Icon","didLoadIcon","isVisible","flipRtl","waitUntilVisible","loadIcon","io","rootMargin","cb","shouldAutoFlip","shouldBeFlippable","assetsDirs","itemIosCss","IonItemIosStyle0","itemMdCss","IonItemMdStyle0","Item","labelColorStyles","itemStyles","multipleInputs","detailIcon","chevronForward","lines","buttonChanged","isFocusable","labelColorChanged","itemStyle","updatedStyles","newStyles","childStyles","hasStyleChange","itemKey","hasStartEl","setMultipleInputs","covers","clickables","hasCover","canActivate","focusableChild","startEl","getFirstInteractive","controls","clickFn","firstInteractive","composedPath","isTrusted","clickedWithinShadowRoot","showDetail","ariaDisabled","inList","firstInteractiveNeedsPointerCursor","labelIosCss","IonLabelIosStyle0","labelMdCss","IonLabelMdStyle0","Label","inRange","position","noAnimate","emitStyle","emitColor","colorChanged","positionChanged","ionColor","ionStyle","listIosCss","IonListIosStyle0","listMdCss","IonListMdStyle0","List","inset","closeSlidingItems","closeOpened","listHeaderIosCss","IonListHeaderIosStyle0","listHeaderMdCss","IonListHeaderMdStyle0","ListHeader","menuIosCss","IonMenuIosStyle0","menuMdCss","IonMenuMdStyle0","iosEasing","mdEasing","iosEasingReverse","mdEasingReverse","Menu","lastOnEnd","blocker","GESTURE_CONTROLLER","createBlocker","disableScroll","didLoad","operationCancelled","isAnimating","_isOpen","handleFocus","lastOverlay","getPresentedOverlay","trapKeyboardFocus","isPaneVisible","isEndSide","contentId","side","swipeGesture","maxEdgeStart","typeChanged","oldType","menuInnerEl","animation","updateState","ionMenuChange","sideChanged","isEnd","swipeGestureChanged","content","_register","menuChanged","gesturePriority","blurOnStart","canStart","onWillStart","splitPane","close","_unregister","onSplitPaneChanged","closestSplitPane","onBackdropClick","shouldClose","isActive","_isActive","setOpen","shouldOpen","_setOpen","lastFocus","focusFirstDescendant","activeElement","focusLastDescendant","beforeAnimation","loadAnimation","startAnimation","afterAnimation","offsetWidth","_createAnimation","isReversed","easingReverse","ani","direction","play","sync","getDirection","canSwipe","isModalPresented","_getOpenSync","checkEdgeSide","assert","progressStart","delta","computeDelta","stepValue","progressStep","velocity","z","shouldCompleteRight","shouldCompleteLeft","shouldComplete","newStepValue","adjustedStepValue","getTimeGivenProgression","playTo","onFinish","oneTimeCallback","progressEnd","SHOW_MENU","backdropEl","SHOW_BACKDROP","MENU_CONTENT_OPEN","block","ionWillOpen","ionWillClose","unblock","ionDidOpen","focusedMenu","stop","ionDidClose","onKeyDown","posX","innerWidth","menuToggleCss","IonMenuToggleStyle0","MenuToggle","visibilityChanged","updateVisibility","hidden","getArrowDimensions","arrowEl","arrowWidth","arrowHeight","getBoundingClientRect","getPopoverDimensions","triggerEl","contentDimentions","contentHeight","contentWidth","triggerDimensions","configureDismissInteraction","triggerAction","popoverEl","parentPopoverEl","dismissCallbacks","getElementRoot","parentContentEl","eventName","element","clientX","clientY","closestTrigger","configureTriggerInteraction","triggerCallbacks","hoverTimeout","presentFromTrigger","relatedTarget","getIndexOfItem","items","getNextItem","currentItem","currentItemIndex","getPrevItem","focusItem","isTriggerElement","configureKeyboardInteraction","targetTagName","parentPopover","getParentPopover","nextItem","prevItem","firstItem","lastItem","rightEvent","CustomEvent","dispatchEvent","getPopoverPosition","reference","align","defaultPosition","referenceCoordinates","mouseEv","customEv","actualTriggerEl","ionShadowTarget","triggerBoundingBox","coordinates","calculatePopoverSide","alignedCoordinates","calculatePopoverAlign","arrowTop","arrowLeft","calculateArrowPosition","originX","originY","calculatePopoverOrigin","getOriginXAlignment","getOriginYAlignment","leftPosition","rightPosition","sideLeft","sideRight","calculatePopoverCenterAlign","calculatePopoverEndAlign","calculateWindowAdjustment","coordTop","coordLeft","bodyPadding","bodyWidth","bodyHeight","safeAreaMargin","contentOriginX","contentOriginY","triggerCoordinates","coordArrowTop","coordArrowLeft","checkSafeAreaLeft","checkSafeAreaRight","triggerTop","triggerHeight","addPopoverBottomClass","shouldShowArrow","didAdjustBounds","POPOVER_IOS_BODY_PADDING","opts","ownerDocument","defaultView","innerHeight","referenceSizeEl","results","padding","margin","contentAnimation","beforeAddWrite","safeAreaLeft","safeAreaRight","leftValue","showArrow","afterAddWrite","POPOVER_MD_BODY_PADDING","viewportAnimation","popoverIosCss","IonPopoverIosStyle0","popoverMdCss","IonPopoverMdStyle0","Popover","coreDelegate","CoreDelegate","inline","focusDescendantOnPresent","onLifecycle","modalEvent","usersElement","LIFECYCLE_MAP","bubbles","cancelable","destroyTriggerInteraction","destroyKeyboardInteraction","destroyDismissInteraction","showBackdrop","dismissOnSelect","arrow","keyboardEvents","focusTrap","keepContentsMounted","onTriggerChange","popoverId","focusDescendant","getDelegate","force","workingDelegate","parentEl","ionMount","attachComponent","deepReady","waitForMount","dismissParentPopover","detachComponent","desktop","enableArrow","FOCUS_TRAP_DISABLE_CLASS","onIonPopoverDidPresent","onIonPopoverWillPresent","onIonPopoverWillDismiss","onIonPopoverDidDismiss","ionPopoverDidPresent","ionPopoverWillPresent","ionPopoverWillDismiss","ionPopoverDidDismiss","compareOptions","currentValue","compareValue","compareWith","isOptionSelected","some","radioIosCss","IonRadioIosStyle0","radioMdCss","IonRadioMdStyle0","Radio","radioButtonIds","radioGroup","radioGroupValue","allowEmptySelection","buttonTabindex","valueChanged","setButtonTabindex","hasLabel","renderRadioControl","RadioGroup","radioGroupIds","labelId","setRadioTabindex","getRadios","selectedRadio","emitValueChange","ionValueChange","inSelectPopover","current","previousValue","rippleEffectCss","IonRippleEffectStyle0","RippleEffect","addRipple","rect","hypotenuse","sqrt","maxDim","maxRadius","unbounded","PADDING","initialSize","INITIAL_ORIGIN_SCALE","finalScale","posY","styleX","styleY","moveX","moveY","container","removeRipple","ripple","Route","beforeLeave","beforeEnter","onUpdate","ionRouteDataChanged","onComponentProps","keys1","keys2","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","s","generateUrl","queryString","writeSegments","history","parsePath","pushState","replaceState","chainToSegments","chain","route","segment","param","params","removePrefix","prefix","readSegments","loc","pathname","hash","qsStart","substring","split","printRoutes","group","ids","debug","groupEnd","printRedirects","redirects","redirect","writeNavState","changed","outlet","searchNavNode","result","setRouteId","markVisible","readNavState","node","getRouteId","waitUntilNavNode","once","OUTLET_SELECTOR","matchesRedirect","expected","findRouteRedirect","matchesIDs","len","score","routeId","routeChain","routeIdParams","pathWithParams","j","matchesSegments","inputSegments","RouterSegments","matchesDefault","allparams","chainSegments","mergeParams","a","findChainForIDs","chains","match","maxMatches","findChainForSegments","bestScore","matchedChain","computePriority","level","shift","readProp","prop","readRedirects","children","readRoutes","flattenRouterTree","readRouteNodes","nodes","flattenNode","child","Router","previousPath","busy","lastState","canProceed","runGuards","getSegments","setSegments","writeNavStateRoot","onRoutesChanged","debounce","onRedirectChanged","bind","onPopState","historyDirection","onBackButton","processNextHandler","back","canTransition","currentPath","URL","search","parsedPath","waitPromise","printDebug","navChanged","safeWriteNavState","redirectFrom","toSegments","fromChain","beforeLeaveHook","canLeave","toChain","beforeEnterHook","routeEvent","routeChangeEvent","ionRouteWillChange","ionRouteDidChange","redirectFromSegments","redirectedFrom","routerOutletCss","IonRouterOutletStyle0","RouterOutlet","gestureOrAnimationInProgress","swipeHandler","swipeHandlerChanged","createSwipeBackGesture","dur","ionNavWillLoad","commit","enteringEl","leavingEl","setRoot","animationBuilder","activeEl","activeParams","activeComponent","shallowEqualStringMap","ionNavWillChange","deepWait","progressCallback","progressAnimation","ionNavDidChange","rowCss","IonRowStyle0","Row","selectIosCss","IonSelectIosStyle0","selectMdCss","IonSelectMdStyle0","Select","selectIds","closestSlot","isExpanded","cancelText","interfaceOptions","multiple","okText","selectedText","toggleIcon","expandedIcon","styleChanged","setValue","notchController","createNotchController","notchSpacerEl","labelSlot","updateOverlayOptions","mutationO","watchForOptions","overlay","createOverlay","ionDismiss","indexOfSelected","childOpts","o","focusVisibleElement","interactiveEl","firstEnabledOption","selectInterface","openActionSheet","openPopover","openAlert","createActionSheetButtons","popover","options","createPopoverOptions","createAlertInputs","selectValue","actionSheetButtons","option","getOptionValue","copyClasses","cls","optClass","OPTION_CLASS","ionCancel","alertInputs","popoverOptions","selected","hasFloatingOrStackedLabel","nativeWrapperEl","popoverOpts","popoverController","actionSheetOpts","alertOpts","labelText","selectedValues","hasValue","getText","generateText","renderLabel","componentDidRender","calculateNotchWidth","renderLabelContainer","hasOutlineFill","renderSelectText","displayValue","addPlaceholderClass","selectText","selectTextClasses","textPart","renderSelectIcon","defaultIcon","chevronExpand","caretDownSharp","ariaLabel","definedLabel","renderedLabel","renderListbox","justifyEnabled","shouldRenderHighlight","hasStartEndSlots","parseValue","labelShouldFloat","v","textForValue","opt","selectOpt","selectOptionCss","IonSelectOptionStyle0","SelectOption","selectOptionIds","selectPopoverIosCss","IonSelectPopoverIosStyle0","selectPopoverMdCss","IonSelectPopoverMdStyle0","SelectPopover","findOptionFromEvent","callOptionHandler","renderOptions","renderCheckboxOptions","renderRadioOptions","onKeyUp","hasSubHeaderOrMessage","spinnerCss","IonSpinnerStyle0","Spinner","paused","spinnerName","self","spinner","SPINNERS","svgs","circles","buildCircle","buildLine","elmDuration","animationDuration","total","fn","cx","cy","y1","y2","splitPaneIosCss","IonSplitPaneIosStyle0","splitPaneMdCss","IonSplitPaneMdStyle0","SPLIT_PANE_MAIN","SPLIT_PANE_SIDE","QUERY","never","SplitPane","visibleChanged","ionSplitPaneVisible","styleMainElement","rmL","q","mediaList","removeListener","nu","childElementCount","foundMain","isMain","setPaneClass","toAdd","toRemove","thumbnailCss","IonThumbnailStyle0","Thumbnail","titleIosCss","IonTitleIosStyle0","titleMdCss","IonTitleMdStyle0","ToolbarTitle","sizeChanged","getSize","toolbarIosCss","IonToolbarIosStyle0","toolbarMdCss","IonToolbarMdStyle0","Toolbar","childrenStyles","firstButtons","buttonsReversed","reverse","lastButtons","childrenStyle","childKey","appTranslateCss","MyTranslStyle0","AppTranslate","updateTranslation","updatedTranslation","translation","appendText","pageLoadingCss","PageLoadingStyle0","PageLoading","newUserRegistration","checkingEmail","obs","network","visibility"],"sources":["src/components/common/app/common/app-item-cover/app-item-cover.scss?tag=app-item-cover","src/components/common/app/common/app-item-cover/app-item-cover.tsx","node_modules/ionicons/dist/collection/components/icon/utils.js","src/components/common/app/common/app-language-picker/app-language-picker.scss?tag=app-language-picker","src/components/common/app/common/app-language-picker/app-language-picker.tsx","src/services/common/menus.ts","src/services/udive/menus.ts","src/services/trasteel/common/menus.ts","src/components/common/app/common/app-menu/app-menu.scss?tag=app-menu","src/components/common/app/common/app-menu/app-menu.tsx","node_modules/@capacitor/push-notifications/dist/esm/index.js","node_modules/@capacitor/splash-screen/dist/esm/index.js","src/helpers/plugins.ts","src/services/trasteel/common/routing.tsx","src/services/udive/routing.tsx","src/components/common/app/app-root/app-root.scss?tag=app-root","src/components/common/app/app-root/app-root.tsx","src/components/common/app/user/app-user-cover/app-user-cover.scss?tag=app-user-cover","src/components/common/app/user/app-user-cover/app-user-cover.tsx","node_modules/@ionic/core/dist/collection/utils/gesture/button-active.js","node_modules/@ionic/core/dist/collection/components/action-sheet/animations/ios.enter.js","node_modules/@ionic/core/dist/collection/components/action-sheet/animations/ios.leave.js","node_modules/@ionic/core/dist/collection/components/action-sheet/animations/md.enter.js","node_modules/@ionic/core/dist/collection/components/action-sheet/animations/md.leave.js","node_modules/@ionic/core/dist/collection/components/action-sheet/action-sheet.ios.css?tag=ion-action-sheet&mode=ios&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/action-sheet/action-sheet.md.css?tag=ion-action-sheet&mode=md&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/action-sheet/action-sheet.js","node_modules/@ionic/core/dist/collection/components/alert/animations/ios.enter.js","node_modules/@ionic/core/dist/collection/components/alert/animations/ios.leave.js","node_modules/@ionic/core/dist/collection/components/alert/animations/md.enter.js","node_modules/@ionic/core/dist/collection/components/alert/animations/md.leave.js","node_modules/@ionic/core/dist/collection/components/alert/alert.ios.css?tag=ion-alert&mode=ios&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/alert/alert.md.css?tag=ion-alert&mode=md&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/alert/alert.js","node_modules/@ionic/core/dist/collection/components/app/app.css?tag=ion-app","node_modules/@ionic/core/dist/collection/components/app/app.js","node_modules/@ionic/core/dist/collection/components/avatar/avatar.ios.css?tag=ion-avatar&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/avatar/avatar.md.css?tag=ion-avatar&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/avatar/avatar.js","node_modules/@ionic/core/dist/collection/components/backdrop/backdrop.ios.css?tag=ion-backdrop&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/backdrop/backdrop.md.css?tag=ion-backdrop&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/backdrop/backdrop.js","node_modules/@ionic/core/dist/collection/components/button/button.ios.css?tag=ion-button&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/button/button.md.css?tag=ion-button&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/button/button.js","node_modules/@ionic/core/dist/collection/components/buttons/buttons.ios.css?tag=ion-buttons&mode=ios&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/buttons/buttons.md.css?tag=ion-buttons&mode=md&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/buttons/buttons.js","node_modules/@ionic/core/dist/collection/components/card/card.ios.css?tag=ion-card&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/card/card.md.css?tag=ion-card&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/card/card.js","node_modules/@ionic/core/dist/collection/components/card-content/card-content.ios.css?tag=ion-card-content&mode=ios","node_modules/@ionic/core/dist/collection/components/card-content/card-content.md.css?tag=ion-card-content&mode=md","node_modules/@ionic/core/dist/collection/components/card-content/card-content.js","node_modules/@ionic/core/dist/collection/components/card-subtitle/card-subtitle.ios.css?tag=ion-card-subtitle&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/card-subtitle/card-subtitle.md.css?tag=ion-card-subtitle&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/card-subtitle/card-subtitle.js","node_modules/@ionic/core/dist/collection/components/checkbox/checkbox.ios.css?tag=ion-checkbox&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/checkbox/checkbox.md.css?tag=ion-checkbox&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/checkbox/checkbox.js","node_modules/@ionic/core/dist/collection/utils/media.js","node_modules/@ionic/core/dist/collection/components/col/col.css?tag=ion-col&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/col/col.js","node_modules/@ionic/core/dist/collection/components/content/content.css?tag=ion-content&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/content/content.js","node_modules/@ionic/core/dist/collection/components/footer/footer.utils.js","node_modules/@ionic/core/dist/collection/components/footer/footer.ios.css?tag=ion-footer&mode=ios","node_modules/@ionic/core/dist/collection/components/footer/footer.md.css?tag=ion-footer&mode=md","node_modules/@ionic/core/dist/collection/components/footer/footer.js","node_modules/@ionic/core/dist/collection/components/header/header.utils.js","node_modules/@ionic/core/dist/collection/components/header/header.ios.css?tag=ion-header&mode=ios","node_modules/@ionic/core/dist/collection/components/header/header.md.css?tag=ion-header&mode=md","node_modules/@ionic/core/dist/collection/components/header/header.js","node_modules/ionicons/dist/collection/components/icon/validate.js","node_modules/ionicons/dist/collection/components/icon/request.js","node_modules/ionicons/dist/collection/components/icon/icon.css?tag=ion-icon&encapsulation=shadow","node_modules/ionicons/dist/collection/components/icon/icon.js","node_modules/@ionic/core/dist/collection/components/item/item.ios.css?tag=ion-item&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/item/item.md.css?tag=ion-item&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/item/item.js","node_modules/@ionic/core/dist/collection/components/label/label.ios.css?tag=ion-label&mode=ios&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/label/label.md.css?tag=ion-label&mode=md&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/label/label.js","node_modules/@ionic/core/dist/collection/components/list/list.ios.css?tag=ion-list&mode=ios","node_modules/@ionic/core/dist/collection/components/list/list.md.css?tag=ion-list&mode=md","node_modules/@ionic/core/dist/collection/components/list/list.js","node_modules/@ionic/core/dist/collection/components/list-header/list-header.ios.css?tag=ion-list-header&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/list-header/list-header.md.css?tag=ion-list-header&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/list-header/list-header.js","node_modules/@ionic/core/dist/collection/components/menu/menu.ios.css?tag=ion-menu&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/menu/menu.md.css?tag=ion-menu&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/menu/menu.js","node_modules/@ionic/core/dist/collection/components/menu-toggle/menu-toggle.css?tag=ion-menu-toggle&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/menu-toggle/menu-toggle.js","node_modules/@ionic/core/dist/collection/components/popover/utils.js","node_modules/@ionic/core/dist/collection/components/popover/animations/ios.enter.js","node_modules/@ionic/core/dist/collection/components/popover/animations/ios.leave.js","node_modules/@ionic/core/dist/collection/components/popover/animations/md.enter.js","node_modules/@ionic/core/dist/collection/components/popover/animations/md.leave.js","node_modules/@ionic/core/dist/collection/components/popover/popover.ios.css?tag=ion-popover&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/popover/popover.md.css?tag=ion-popover&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/popover/popover.js","node_modules/@ionic/core/dist/collection/utils/forms/compare-with-utils.js","node_modules/@ionic/core/dist/collection/components/radio/radio.ios.css?tag=ion-radio&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/radio/radio.md.css?tag=ion-radio&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/radio/radio.js","node_modules/@ionic/core/dist/collection/components/radio-group/radio-group.js","node_modules/@ionic/core/dist/collection/components/ripple-effect/ripple-effect.css?tag=ion-ripple-effect&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/ripple-effect/ripple-effect.js","node_modules/@ionic/core/dist/collection/components/route/route.js","node_modules/@ionic/core/dist/collection/components/router/utils/constants.js","node_modules/@ionic/core/dist/collection/components/router/utils/path.js","node_modules/@ionic/core/dist/collection/components/router/utils/debug.js","node_modules/@ionic/core/dist/collection/components/router/utils/dom.js","node_modules/@ionic/core/dist/collection/components/router/utils/matching.js","node_modules/@ionic/core/dist/collection/components/router/utils/parser.js","node_modules/@ionic/core/dist/collection/components/router/router.js","node_modules/@ionic/core/dist/collection/components/router-outlet/router-outlet.css?tag=ion-router-outlet&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/router-outlet/router-outlet.js","node_modules/@ionic/core/dist/collection/components/row/row.css?tag=ion-row&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/row/row.js","node_modules/@ionic/core/dist/collection/components/select/select.ios.css?tag=ion-select&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/select/select.md.css?tag=ion-select&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/select/select.js","node_modules/@ionic/core/dist/collection/components/select-option/select-option.css?tag=ion-select-option&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/select-option/select-option.js","node_modules/@ionic/core/dist/collection/components/select-popover/select-popover.ios.css?tag=ion-select-popover&mode=ios&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/select-popover/select-popover.md.css?tag=ion-select-popover&mode=md&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/select-popover/select-popover.js","node_modules/@ionic/core/dist/collection/components/spinner/spinner.css?tag=ion-spinner&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/spinner/spinner.js","node_modules/@ionic/core/dist/collection/components/split-pane/split-pane.ios.css?tag=ion-split-pane&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/split-pane/split-pane.md.css?tag=ion-split-pane&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/split-pane/split-pane.js","node_modules/@ionic/core/dist/collection/components/thumbnail/thumbnail.css?tag=ion-thumbnail&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/thumbnail/thumbnail.js","node_modules/@ionic/core/dist/collection/components/title/title.ios.css?tag=ion-title&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/title/title.md.css?tag=ion-title&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/title/title.js","node_modules/@ionic/core/dist/collection/components/toolbar/toolbar.ios.css?tag=ion-toolbar&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/toolbar/toolbar.md.css?tag=ion-toolbar&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/toolbar/toolbar.js","src/components/common/app/common/app-translate/app-translate.css?tag=my-transl&encapsulation=shadow","src/components/common/app/common/app-translate/app-translate.tsx","src/components/common/pages/user/page-loading/page-loading.scss?tag=page-loading","src/components/common/pages/user/page-loading/page-loading.tsx"],"sourcesContent":["app-item-cover {\n  width: 100%;\n  height: 20%;\n\n  ion-thumbnail {\n    position: relative;\n    margin-top: -100px;\n    margin-bottom: 0;\n    width: 100px;\n    height: 100px;\n    img {\n      border-radius: 50%;\n      padding: 0.08em;\n      border: solid 0.25em lightsteelblue;\n      background-color: white;\n    }\n  }\n  .cover {\n    position: relative;\n    height: var(--coverHeight);\n    background-color: lightblue;\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n    width: 100%;\n    ion-button {\n      position: absolute;\n      right: 0px;\n    }\n    ion-menu-button {\n      position: absolute;\n      left: 0px;\n      top: 0px;\n      color: black;\n      mix-blend-mode: difference;\n    }\n  }\n}\n","import { Component, h, Prop, Host } from \"@stencil/core\";\n\n@Component({\n  tag: \"app-item-cover\",\n  styleUrl: \"app-item-cover.scss\",\n})\nexport class AppItemCover {\n  @Prop() item: any;\n  @Prop() tmbPosition?: string;\n\n  render() {\n    return (\n      <Host>\n        {this.item\n          ? [\n              <div\n                class='cover'\n                style={\n                  this.item.coverURL\n                    ? {\n                        backgroundImage: \"url(\" + this.item.coverURL + \")\",\n                      }\n                    : undefined\n                }\n              ></div>,\n              this.item.photoURL ? (\n                <ion-thumbnail\n                  style={{\n                    marginLeft: this.tmbPosition == \"left\" ? \"10%\" : \"auto\",\n                    marginRight: this.tmbPosition == \"right\" ? \"10%\" : \"auto\",\n                  }}\n                >\n                  <img\n                    src={\n                      this.item.photoURL\n                        ? this.item.photoURL\n                        : \"assets/images/avatar.png\"\n                    }\n                    alt={this.item.displayName}\n                  />\n                </ion-thumbnail>\n              ) : undefined,\n            ]\n          : undefined}\n      </Host>\n    );\n  }\n}\n","import { getAssetPath } from \"@stencil/core\";\nlet CACHED_MAP;\nexport const getIconMap = () => {\n  if (typeof window === 'undefined') {\n    return new Map();\n  }\n  else {\n    if (!CACHED_MAP) {\n      const win = window;\n      win.Ionicons = win.Ionicons || {};\n      CACHED_MAP = win.Ionicons.map = win.Ionicons.map || new Map();\n    }\n    return CACHED_MAP;\n  }\n};\nexport const addIcons = (icons) => {\n  Object.keys(icons).forEach(name => {\n    addToIconMap(name, icons[name]);\n    /**\n     * Developers can also pass in the SVG object directly\n     * and Ionicons can map the object to a kebab case name.\n     * Example: addIcons({ addCircleOutline });\n     * This will create an \"addCircleOutline\" entry and\n     * an \"add-circle-outline\" entry.\n     * Usage: <ion-icon name=\"add-circle-outline\"></ion-icon>\n     * Using name=\"addCircleOutline\" is valid too, but the\n     * kebab case naming is preferred.\n     */\n    const toKebabCase = name.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, \"$1-$2\").toLowerCase();\n    if (name !== toKebabCase) {\n      addToIconMap(toKebabCase, icons[name]);\n    }\n  });\n};\nconst addToIconMap = (name, data) => {\n  const map = getIconMap();\n  const existingIcon = map.get(name);\n  if (existingIcon === undefined) {\n    map.set(name, data);\n    /**\n     * Importing and defining the same icon reference\n     * multiple times should not yield a warning.\n     */\n  }\n  else if (existingIcon !== data) {\n    console.warn(`[Ionicons Warning]: Multiple icons were mapped to name \"${name}\". Ensure that multiple icons are not mapped to the same icon name.`);\n  }\n};\nexport const getUrl = (i) => {\n  let url = getSrc(i.src);\n  if (url) {\n    return url;\n  }\n  url = getName(i.name, i.icon, i.mode, i.ios, i.md);\n  if (url) {\n    return getNamedUrl(url, i);\n  }\n  if (i.icon) {\n    url = getSrc(i.icon);\n    if (url) {\n      return url;\n    }\n    url = getSrc(i.icon[i.mode]);\n    if (url) {\n      return url;\n    }\n  }\n  return null;\n};\nconst getNamedUrl = (iconName, iconEl) => {\n  const url = getIconMap().get(iconName);\n  if (url) {\n    return url;\n  }\n  try {\n    return getAssetPath(`svg/${iconName}.svg`);\n  }\n  catch (e) {\n    /**\n     * In the custom elements build version of ionicons, referencing an icon\n     * by name will throw an invalid URL error because the asset path is not defined.\n     * This catches that error and logs something that is more developer-friendly.\n     * We also include a reference to the ion-icon element so developers can\n     * figure out which instance of ion-icon needs to be updated.\n     */\n    console.warn(`[Ionicons Warning]: Could not load icon with name \"${iconName}\". Ensure that the icon is registered using addIcons or that the icon SVG data is passed directly to the icon component.`, iconEl);\n  }\n};\nexport const getName = (iconName, icon, mode, ios, md) => {\n  // default to \"md\" if somehow the mode wasn't set\n  mode = (mode && toLower(mode)) === 'ios' ? 'ios' : 'md';\n  // if an icon was passed in using the ios or md attributes\n  // set the iconName to whatever was passed in\n  if (ios && mode === 'ios') {\n    iconName = toLower(ios);\n  }\n  else if (md && mode === 'md') {\n    iconName = toLower(md);\n  }\n  else {\n    if (!iconName && icon && !isSrc(icon)) {\n      iconName = icon;\n    }\n    if (isStr(iconName)) {\n      iconName = toLower(iconName);\n    }\n  }\n  if (!isStr(iconName) || iconName.trim() === '') {\n    return null;\n  }\n  // only allow alpha characters and dash\n  const invalidChars = iconName.replace(/[a-z]|-|\\d/gi, '');\n  if (invalidChars !== '') {\n    return null;\n  }\n  return iconName;\n};\nexport const getSrc = (src) => {\n  if (isStr(src)) {\n    src = src.trim();\n    if (isSrc(src)) {\n      return src;\n    }\n  }\n  return null;\n};\nexport const isSrc = (str) => str.length > 0 && /(\\/|\\.)/.test(str);\nexport const isStr = (val) => typeof val === 'string';\nexport const toLower = (val) => val.toLowerCase();\n/**\n * Elements inside of web components sometimes need to inherit global attributes\n * set on the host. For example, the inner input in `ion-input` should inherit\n * the `title` attribute that developers set directly on `ion-input`. This\n * helper function should be called in componentWillLoad and assigned to a variable\n * that is later used in the render function.\n *\n * This does not need to be reactive as changing attributes on the host element\n * does not trigger a re-render.\n */\nexport const inheritAttributes = (el, attributes = []) => {\n  const attributeObject = {};\n  attributes.forEach(attr => {\n    if (el.hasAttribute(attr)) {\n      const value = el.getAttribute(attr);\n      if (value !== null) {\n        attributeObject[attr] = el.getAttribute(attr);\n      }\n      el.removeAttribute(attr);\n    }\n  });\n  return attributeObject;\n};\n/**\n * Returns `true` if the document or host element\n * has a `dir` set to `rtl`. The host value will always\n * take priority over the root document value.\n */\nexport const isRTL = (hostEl) => {\n  if (hostEl) {\n    if (hostEl.dir !== '') {\n      return hostEl.dir.toLowerCase() === 'rtl';\n    }\n  }\n  return (document === null || document === void 0 ? void 0 : document.dir.toLowerCase()) === 'rtl';\n};\n","@import \"../../../../../assets/css/flag-icon.min.css\";\napp-language-picker {\n}\n","import {actionSheetController} from \"@ionic/core\";\nimport {\n  Component,\n  h,\n  State,\n  Event,\n  EventEmitter,\n  Prop,\n  Host,\n  Watch,\n} from \"@stencil/core\";\nimport {SystemService} from \"../../../../../services/common/system\";\nimport {TranslationService} from \"../../../../../services/common/translations\";\n\n@Component({\n  tag: \"app-language-picker\",\n  styleUrl: \"app-language-picker.scss\",\n})\nexport class AppLanguagePicker {\n  @Event() languageChanged: EventEmitter;\n\n  @Prop({mutable: true}) selectedLangCode: string = \"en\";\n  @Prop() picker: boolean = false;\n  @Prop() selectOnly: boolean = false;\n  @Prop() iconOnly: boolean = false;\n\n  listItems = [];\n\n  @Watch(\"selectedLangCode\")\n  update() {\n    this.selectLanguage();\n  }\n\n  @State() selectedItem: any = {label: \"English\", value: \"en\"};\n  @State() updateView = false;\n\n  @Event() clickedItem: EventEmitter;\n\n  componentWillLoad() {\n    this.listItems = SystemService.getLanguages();\n    this.selectLanguage();\n  }\n\n  selectLanguage() {\n    const item = this.listItems.find((x) => x.value == this.selectedLangCode);\n    this.selectedItem = {...item};\n    this.updateView = !this.updateView;\n  }\n\n  changeLang(ev) {\n    this.selectedLangCode = ev.detail.value;\n    this.selectLanguage();\n    this.languageChanged.emit(ev.detail.value);\n    this.updateView = !this.updateView;\n  }\n\n  async openLanguagePicker() {\n    const buttons = [];\n    SystemService.getLanguages().forEach((lang) => {\n      buttons.push({\n        text: lang.label,\n        handler: () => {\n          this.changeLang({detail: {value: lang.value}});\n        },\n      });\n    });\n    const action = await actionSheetController.create({\n      header: TranslationService.getTransl(\"language\", \"Language\"),\n      buttons: buttons,\n    });\n    action.present();\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.picker\n          ? this.selectOnly\n            ? [\n                <ion-button\n                  icon-only\n                  fill=\"clear\"\n                  slot=\"end\"\n                  onClick={() => this.openLanguagePicker()}\n                >\n                  <ion-icon\n                    class={\n                      \"flag-icon flag-icon-\" +\n                      (this.selectedItem.countryCode == \"en\"\n                        ? \"gb\"\n                        : this.selectedItem.countryCode)\n                    }\n                  ></ion-icon>\n                </ion-button>,\n              ]\n            : [\n                <ion-item>\n                  <ion-select\n                    label={TranslationService.getTransl(\"language\", \"Language\")}\n                    interface=\"action-sheet\"\n                    onIonChange={(ev) => this.changeLang(ev)}\n                    value={this.selectedItem.value}\n                  >\n                    {this.listItems.map((lang) => (\n                      <ion-select-option value={lang.value}>\n                        {lang.label}\n                      </ion-select-option>\n                    ))}\n                  </ion-select>\n                  <ion-icon\n                    slot=\"end\"\n                    class={\n                      \"flag-icon flag-icon-\" +\n                      (this.selectedItem.countryCode == \"en\"\n                        ? \"gb\"\n                        : this.selectedItem.countryCode)\n                    }\n                  ></ion-icon>\n                </ion-item>,\n              ]\n          : [\n              <p>\n                <ion-icon\n                  class={\n                    \"flag-icon flag-icon-\" +\n                    (this.selectedItem.countryCode == \"en\"\n                      ? \"gb\"\n                      : this.selectedItem.countryCode)\n                  }\n                ></ion-icon>\n                {!this.iconOnly ? \"   \" + this.selectedItem.label : \"\"}\n              </p>,\n            ]}\n      </Host>\n    );\n  }\n}\n","import {menuController} from \"@ionic/core\";\n\nexport class MenuController {\n  appMenu = [];\n  url = [];\n  coverItemUser: any;\n  coverItemAdmin: any;\n  adminMenu: any;\n  headerColor: string;\n\n  resetMenus() {\n    this.appMenu = [];\n    this.adminMenu = {\n      listButtons: [],\n    };\n  }\n\n  enableMenu(menu: \"admin\" | \"user\") {\n    if (menu == \"user\") {\n      menuController.enable(true, \"user\");\n      menuController.enable(false, \"admin\");\n    } else {\n      menuController.enable(false, \"user\");\n      menuController.enable(true, \"admin\");\n    }\n  }\n}\n\nexport const MenuService = new MenuController();\n","import { ADMINROUTE } from \"../common/router\";\nimport { DIVECENTERSSCOLLECTION, DivingCentersService } from \"./divingCenters\";\nimport { DivingSchoolsService, DIVESCHOOLSSCOLLECTION } from \"./divingSchools\";\nimport {\n  SERVICECENTERSCOLLECTION,\n  ServiceCentersService,\n} from \"./serviceCenters\";\nimport { UserService } from \"../common/user\";\nimport { MenuService } from \"../common/menus\";\nimport { UDiveFilterService } from \"./ud-db-filter\";\nimport {\n  DIVECOMMUNITIESCOLLECTION,\n  DiveCommunitiesService,\n} from \"./diveCommunities\";\nimport { Environment } from \"../../global/env\";\nimport { orderBy } from \"lodash\";\n\nexport class MenuController {\n  renderMenus(url) {\n    if (\n      url[1] === ADMINROUTE &&\n      url[2] === DIVECOMMUNITIESCOLLECTION.toLowerCase()\n    ) {\n      const item = DiveCommunitiesService.getDiveCommunityDetails(url[3]);\n      //load diving center observable into service\n      DiveCommunitiesService.selectDiveCommunityForAdmin(item.id);\n      //create related menu\n      this.createAdminMenu(url[2], item);\n      MenuService.headerColor = \"divecommunity\";\n      MenuService.enableMenu(\"admin\");\n    } else if (\n      url[1] === ADMINROUTE &&\n      url[2] === DIVECENTERSSCOLLECTION.toLowerCase()\n    ) {\n      const item = DivingCentersService.getDivingCenterDetails(url[3]);\n      //load diving center observable into service\n      DivingCentersService.selectDivingCenterForAdmin(item.id);\n      //create related menu\n      this.createAdminMenu(url[2], item);\n      MenuService.headerColor = \"divingcenter\";\n      MenuService.enableMenu(\"admin\");\n    } else if (\n      url[1] === ADMINROUTE &&\n      url[2] === DIVESCHOOLSSCOLLECTION.toLowerCase()\n    ) {\n      const item = DivingSchoolsService.getDivingSchoolDetails(url[3]);\n      //load diving center observable into service\n      DivingSchoolsService.selectDivingSchoolForAdmin(item.id);\n      //create related menu\n      this.createAdminMenu(url[2], item);\n      MenuService.headerColor = \"school\";\n      MenuService.enableMenu(\"admin\");\n    } else if (\n      url[1] === ADMINROUTE &&\n      url[2] === SERVICECENTERSCOLLECTION.toLowerCase()\n    ) {\n      const item = ServiceCentersService.getServiceCenterDetails(url[3]);\n      //load diving center observable into service\n      ServiceCentersService.selectServiceCenterForAdmin(item.id);\n      //create related menu\n      this.createAdminMenu(url[2], item);\n      MenuService.headerColor = \"servicecenter\";\n      MenuService.enableMenu(\"admin\");\n    } else {\n      //unsubsrcibe to various observables\n      DivingCentersService.unsubscribeDivingCenterForAdmin();\n      DivingSchoolsService.unsubscribeDivingSchoolForAdmin();\n      ServiceCentersService.unsubscribeServiceCenterForAdmin();\n      MenuService.headerColor = Environment.getAppColor();\n      MenuService.enableMenu(\"user\");\n    }\n    this.renderUserMenus();\n  }\n\n  renderUserMenus() {\n    if (UserService.userProfile && UserService.userProfile.uid) {\n      //logged in  user menu\n      MenuService.coverItemUser = UserService.userProfile;\n      if (Environment.isUdive()) {\n        //UDive\n        MenuService.appMenu.push({\n          listTitle: {\n            tag: \"scuba-diver\",\n            text: \"Diver\",\n          },\n          listButtons: [\n            {\n              tag: \"dashboard\",\n              text: \"Dashboard\",\n              url: \"/dashboard\",\n              iconType: \"ionicon\",\n              icon: \"calendar\",\n            },\n            {\n              tag: \"map\",\n              text: \"Map\",\n              url: \"/map\",\n              iconType: \"ionicon\",\n              icon: \"globe\",\n            },\n            {\n              tag: \"logbook\",\n              text: \"Logbook\",\n              url: \"/logbook\",\n              iconType: \"udiveicon\",\n              icon: \"udive-icon-diver\",\n            },\n            {\n              tag: \"dive-trips\",\n              text: \"Dive Trips\",\n              url: \"/divetrips\",\n              iconType: \"ionicon\",\n              icon: \"boat\",\n            },\n            {\n              tag: \"diving-classes\",\n              text: \"Diving Classes\",\n              url: \"/divingclasses\",\n              iconType: \"ionicon\",\n              icon: \"school\",\n            },\n            {\n              tag: \"deco-planner\",\n              text: \"Deco Planner\",\n              url: \"/deco-planner\",\n              iconType: \"custom\",\n              icon: \"assets/images/dp4.svg\",\n            },\n            {\n              tag: \"gas-blender\",\n              text: \"Gas Blender\",\n              url: \"/gas-blender\",\n              iconType: \"udiveicon\",\n              icon: \"udive-icon-scuba-tank\",\n            },\n            {\n              tag: \"chat\",\n              text: \"Chat\",\n              url: \"/chat\",\n              iconType: \"ionicon\",\n              icon: \"chatbubbles\",\n            },\n          ],\n        });\n      } else {\n        //Decoplanner\n        MenuService.appMenu.push({\n          listTitle: {\n            tag: \"scuba-diver\",\n            text: \"Diver\",\n          },\n          listButtons: [\n            {\n              tag: \"deco-planner\",\n              text: \"Deco Planner\",\n              url: \"/deco-planner\",\n              iconType: \"custom\",\n              icon: \"assets/images/dp4.svg\",\n            },\n            {\n              tag: \"logbook\",\n              text: \"Logbook\",\n              url: \"/logbook\",\n              iconType: \"udiveicon\",\n              icon: \"udive-icon-diver\",\n            },\n            {\n              tag: \"gas-blender\",\n              text: \"Gas Blender\",\n              url: \"/gas-blender\",\n              iconType: \"udiveicon\",\n              icon: \"udive-icon-scuba-tank\",\n            },\n          ],\n        });\n      }\n\n      const admin = this.renderUserAdminMenus();\n      if (admin) {\n        admin.forEach((item) => {\n          MenuService.appMenu.push(item);\n        });\n      }\n      MenuService.appMenu.push({\n        listTitle: {\n          tag: \"settings\",\n          text: \"Settings\",\n        },\n        listButtons: [\n          {\n            tag: \"settings\",\n            text: \"Settings\",\n            url: \"/\" + ADMINROUTE + \"/user\",\n            icon: \"cog\",\n          },\n          {\n            tag: \"support\",\n            text: \"Support\",\n            url: \"/support\",\n            icon: \"help-buoy\",\n          },\n        ],\n      });\n\n      //translation and system menus\n      if (\n        UserService.userRoles &&\n        (UserService.userRoles.isAgencyAdmin() ||\n          UserService.userRoles.isTranslator())\n      ) {\n        const systemMenu = {\n          listTitle: {\n            tag: \"admin\",\n            text: \"Administrator\",\n          },\n          listButtons: [],\n        };\n        if (UserService.userRoles.isTranslator()) {\n          systemMenu.listButtons.push({\n            tag: \"translations\",\n            text: \"Translations\",\n            url: \"/translations\",\n            iconType: \"ionicon\",\n            icon: \"language-outline\",\n          });\n        }\n        if (\n          UserService.userRoles.isAgencyAdmin() &&\n          !Environment.isDecoplanner()\n        ) {\n          systemMenu.listButtons.push({\n            tag: \"diving-agency\",\n            text: \"Diving Agency\",\n            url: \"/\" + ADMINROUTE + \"/agencies\",\n            iconType: \"ionicon\",\n            icon: \"library-outline\",\n          });\n        }\n        //user management\n        if (UserService.userRoles.isSuperAdmin()) {\n          systemMenu.listButtons.push({\n            tag: \"user-manager\",\n            text: \"User Manager\",\n            url: \"/usermanager\",\n            iconType: \"ionicon\",\n            icon: \"person-outline\",\n          });\n        }\n\n        MenuService.appMenu.push(systemMenu);\n      }\n    } else {\n      //not logged in user\n      let listButtons = null;\n      if (Environment.isUdive()) {\n        //UDive\n        listButtons = [\n          {\n            tag: \"map\",\n            text: \"Map\",\n            url: \"/map\",\n            iconType: \"ionicon\",\n            icon: \"globe\",\n          },\n          {\n            tag: \"deco-planner\",\n            text: \"Deco Planner\",\n            url: \"/deco-planner\",\n            iconType: \"custom\",\n            icon: \"assets/images/dp4.svg\",\n          },\n          {\n            tag: \"gas-blender\",\n            text: \"Gas Blender\",\n            url: \"/gas-blender\",\n            iconType: \"udiveicon\",\n            icon: \"udive-icon-scuba-tank\",\n          },\n        ];\n      } else {\n        //Decoplanner\n        listButtons = [];\n      }\n      if (listButtons.length > 0)\n        MenuService.appMenu.push({\n          listTitle: {\n            tag: \"dashboard\",\n            text: \"Dashboard\",\n          },\n          listButtons: listButtons,\n        });\n      MenuService.appMenu.push({\n        listTitle: {\n          tag: \"settings\",\n          text: \"Settings\",\n        },\n        listButtons: [\n          {\n            tag: \"login\",\n            text: \"Login\",\n            url: \"/login\",\n            iconType: \"ionicon\",\n            icon: \"log-in\",\n          },\n          {\n            tag: \"support\",\n            text: \"Support\",\n            url: \"/support\",\n            iconType: \"ionicon\",\n            icon: \"help-buoy\",\n          },\n        ],\n      });\n    }\n  }\n\n  renderUserAdminMenus() {\n    if (UserService.userRoles && Environment.isUdive()) {\n      const menus = {};\n      const icons = UDiveFilterService.getMapDocs();\n      for (let itemId in UserService.userRoles.editorOf) {\n        const editorOf = UserService.userRoles.editorOf[itemId];\n        switch (editorOf.collection) {\n          case DIVECENTERSSCOLLECTION:\n            if (!menus[DIVECENTERSSCOLLECTION]) {\n              menus[DIVECENTERSSCOLLECTION] = {\n                listTitle: {\n                  tag: \"diving-center\",\n                  text: \"Diving Center\",\n                },\n                listButtons: [],\n              };\n            }\n            const dc = DivingCentersService.getDivingCenterDetails(itemId);\n            const dcicon = icons[DIVECENTERSSCOLLECTION].icon;\n            if (dc)\n              menus[DIVECENTERSSCOLLECTION].listButtons.push({\n                text: dc.displayName,\n                url:\n                  \"/\" +\n                  ADMINROUTE +\n                  \"/\" +\n                  DIVECENTERSSCOLLECTION.toLowerCase() +\n                  \"/\" +\n                  itemId +\n                  \"/dashboard\",\n                avatar: dc.photoURL ? dc.photoURL : null,\n                iconType: dcicon.type,\n                icon: dcicon.name,\n              });\n            break;\n          case DIVECOMMUNITIESCOLLECTION:\n            if (!menus[DIVECOMMUNITIESCOLLECTION]) {\n              menus[DIVECOMMUNITIESCOLLECTION] = {\n                listTitle: {\n                  tag: \"dive-community\",\n                  text: \"Dive Community\",\n                },\n                listButtons: [],\n              };\n            }\n            const dcom = DiveCommunitiesService.getDiveCommunityDetails(itemId);\n            const dcomicon = icons[DIVECOMMUNITIESCOLLECTION].icon;\n            if (dcom)\n              menus[DIVECOMMUNITIESCOLLECTION].listButtons.push({\n                text: dcom.displayName,\n                url:\n                  \"/\" +\n                  ADMINROUTE +\n                  \"/\" +\n                  DIVECOMMUNITIESCOLLECTION.toLowerCase() +\n                  \"/\" +\n                  itemId +\n                  \"/dashboard\",\n                avatar: dcom.photoURL ? dcom.photoURL : null,\n                iconType: dcomicon.type,\n                icon: dcomicon.name,\n              });\n            break;\n          case DIVESCHOOLSSCOLLECTION:\n            if (!menus[DIVESCHOOLSSCOLLECTION]) {\n              menus[DIVESCHOOLSSCOLLECTION] = {\n                listTitle: {\n                  tag: \"diving-school\",\n                  text: \"Diving School\",\n                },\n                listButtons: [],\n              };\n            }\n            const ds = DivingSchoolsService.getDivingSchoolDetails(itemId);\n            const dsicon = icons[DIVESCHOOLSSCOLLECTION].icon;\n            if (ds)\n              menus[DIVESCHOOLSSCOLLECTION].listButtons.push({\n                text: ds.displayName,\n                url:\n                  \"/\" +\n                  ADMINROUTE +\n                  \"/\" +\n                  DIVESCHOOLSSCOLLECTION.toLowerCase() +\n                  \"/\" +\n                  itemId +\n                  \"/dashboard\",\n                avatar: ds.photoURL ? ds.photoURL : null,\n                iconType: dsicon.type,\n                icon: dsicon.name,\n              });\n            break;\n          case SERVICECENTERSCOLLECTION:\n            if (!menus[SERVICECENTERSCOLLECTION]) {\n              menus[SERVICECENTERSCOLLECTION] = {\n                listTitle: {\n                  tag: \"service-center\",\n                  text: \"Service Center\",\n                },\n                listButtons: [],\n              };\n            }\n            const sc = ServiceCentersService.getServiceCenterDetails(itemId);\n            const scicon = icons[SERVICECENTERSCOLLECTION].icon;\n            if (sc)\n              menus[SERVICECENTERSCOLLECTION].listButtons.push({\n                text: sc.displayName,\n                url:\n                  \"/\" +\n                  ADMINROUTE +\n                  \"/\" +\n                  SERVICECENTERSCOLLECTION.toLowerCase() +\n                  \"/\" +\n                  itemId +\n                  \"/dashboard\",\n                avatar: sc.photoURL ? sc.photoURL : null,\n                iconType: scicon.type,\n                icon: scicon.name,\n              });\n            break;\n        }\n      }\n      const arrayMenu = [];\n      Object.keys(menus).forEach((menu) => {\n        //order by name\n        const orderedMenu = orderBy(menus[menu].listButtons, \"text\");\n        menus[menu].listButtons = orderedMenu;\n        arrayMenu.push(menus[menu]);\n      });\n      return arrayMenu;\n    } else {\n      return undefined;\n    }\n  }\n\n  createAdminMenu(type, item) {\n    MenuService.coverItemAdmin = item;\n    switch (type) {\n      case DIVECENTERSSCOLLECTION.toLowerCase():\n        MenuService.adminMenu.listButtons = [\n          {\n            tag: \"dashboard\",\n            text: \"Dashboard\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/dashboard\",\n            iconType: \"ionicon\",\n            icon: \"calendar\",\n          },\n          {\n            tag: \"customers\",\n            text: \"Customers\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/customers\",\n            iconType: \"ionicon\",\n            icon: \"people\",\n          },\n          {\n            tag: \"dive-trips\",\n            text: \"Dive trips\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/divetrips\",\n            iconType: \"ionicon\",\n            icon: \"boat\",\n          },\n          {\n            tag: \"chat\",\n            text: \"Chat\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/chat\",\n            iconType: \"ionicon\",\n            icon: \"chatbubbles\",\n          },\n          {\n            tag: \"rental\",\n            text: \"Rental\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/rentals\",\n            iconType: \"ionicon\",\n            icon: \"stopwatch\",\n          },\n          {\n            tag: \"warehouse\",\n            text: \"Warehouse\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/warehouse\",\n            iconType: \"ionicon\",\n            icon: \"business\",\n          },\n          {\n            tag: \"payments\",\n            text: \"Payments\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/payments\",\n            iconType: \"ionicon\",\n            icon: \"card\",\n          },\n          {\n            tag: \"invoicing\",\n            text: \"Invoicing\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/invoicing\",\n            iconType: \"ionicon\",\n            icon: \"wallet\",\n          },\n          {\n            tag: \"documents\",\n            text: \"Documents\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/documents\",\n            iconType: \"ionicon\",\n            icon: \"file-tray-full-outline\",\n          },\n          {\n            tag: \"reports\",\n            text: \"Reports\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/reports\",\n            iconType: \"ionicon\",\n            icon: \"analytics\",\n          },\n          {\n            tag: \"settings\",\n            text: \"Settings\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/settings\",\n            iconType: \"ionicon\",\n            icon: \"settings\",\n          },\n        ];\n        break;\n      case DIVECOMMUNITIESCOLLECTION.toLowerCase():\n        MenuService.adminMenu.listButtons = [\n          {\n            tag: \"dashboard\",\n            text: \"Dashboard\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/dashboard\",\n            icon: \"calendar\",\n          },\n          {\n            tag: \"members\",\n            text: \"Members\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/members\",\n            icon: \"people\",\n          },\n          {\n            tag: \"dive-trips\",\n            text: \"Dive trips\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/divetrips\",\n            icon: \"boat\",\n          },\n          {\n            tag: \"chat\",\n            text: \"Chat\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/chat\",\n            icon: \"chatbubbles\",\n          },\n          {\n            tag: \"settings\",\n            text: \"Settings\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/settings\",\n            icon: \"settings\",\n          },\n        ];\n        break;\n      case DIVESCHOOLSSCOLLECTION.toLowerCase():\n        MenuService.adminMenu.listButtons = [\n          {\n            tag: \"dashboard\",\n            text: \"Dashboard\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/dashboard\",\n            icon: \"calendar\",\n          },\n          {\n            tag: \"members\",\n            text: \"Members\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/members\",\n            icon: \"people\",\n          },\n          {\n            tag: \"classes\",\n            text: \"Classes\",\n            url:\n              \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/divingclasses\",\n            icon: \"school\",\n          },\n          {\n            tag: \"dive-trips\",\n            text: \"Dive trips\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/divetrips\",\n            icon: \"boat\",\n          },\n          {\n            tag: \"chat\",\n            text: \"Chat\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/chat\",\n            icon: \"chatbubbles\",\n          },\n          {\n            tag: \"warehouse\",\n            text: \"Warehouse\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/warehouse\",\n            icon: \"business\",\n          },\n          {\n            tag: \"rental\",\n            text: \"Rental\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/rentals\",\n            icon: \"stopwatch\",\n          },\n          {\n            tag: \"settings\",\n            text: \"Settings\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/settings\",\n            icon: \"settings\",\n          },\n        ];\n        break;\n      case SERVICECENTERSCOLLECTION.toLowerCase():\n        MenuService.adminMenu.listButtons = [\n          {\n            tag: \"dashboard\",\n            text: \"Dashboard\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/dashboard\",\n            icon: \"calendar\",\n          },\n          {\n            tag: \"customers\",\n            text: \"Customers\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/customers\",\n            icon: \"people\",\n          },\n          {\n            tag: \"chat\",\n            text: \"Chat\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/chat\",\n            icon: \"chatbubbles\",\n          },\n          {\n            tag: \"servicing\",\n            text: \"Servicing\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/servicing\",\n            icon: \"construct\",\n          },\n          {\n            tag: \"warehouse\",\n            text: \"Warehouse\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/warehouse\",\n            icon: \"business\",\n          },\n          {\n            tag: \"payments\",\n            text: \"Payments\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/payments\",\n            icon: \"card\",\n          },\n          {\n            tag: \"invoicing\",\n            text: \"Invoicing\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/invoicing\",\n            icon: \"wallet\",\n          },\n          {\n            tag: \"documents\",\n            text: \"Documents\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/documents\",\n            icon: \"file-tray-full-outline\",\n          },\n          {\n            tag: \"settings\",\n            text: \"Settings\",\n            url: \"/\" + ADMINROUTE + \"/\" + type + \"/\" + item.id + \"/settings\",\n            icon: \"settings\",\n          },\n        ];\n        break;\n    }\n    MenuService.enableMenu(\"admin\");\n  }\n}\nexport const UDiveMenuService = new MenuController();\n","import {ADMINROUTE} from \"../../common/router\";\nimport {UserService} from \"../../common/user\";\nimport {MenuService} from \"../../common/menus\";\nimport {orderBy} from \"lodash\";\nimport {TrasteelFilterService} from \"./trs-db-filter\";\nimport {CUSTOMERSCOLLECTION} from \"../crm/customers\";\nimport {PROJECTSCOLLECTION} from \"../refractories/projects\";\nimport {DATASHEETSCOLLECTION} from \"../refractories/datasheets\";\nimport {SHAPESCOLLECTION} from \"../refractories/shapes\";\n//import {USERPLANSCOLLECTION} from \"../crm/user-plans\";\n\nexport class MenuController {\n  renderMenus(url) {\n    if (url[1] === ADMINROUTE && url[2] !== \"user\") {\n      /*const item = DiveCommunitiesService.getDiveCommunityDetails(url[3]);\n      //load diving center observable into service\n      DiveCommunitiesService.selectDiveCommunityForAdmin(item.id);\n      //create related menu\n      this.createAdminMenu(url[2], item);\n      MenuService.headerColor = \"divecommunity\";*/\n    } else {\n      //unsubsrcibe to various observables\n      //DivingCentersService.unsubscribeDivingCenterForAdmin();\n      //DivingSchoolsService.unsubscribeDivingSchoolForAdmin();\n      //ServiceCentersService.unsubscribeServiceCenterForAdmin();\n      this.renderUserMenus();\n      MenuService.enableMenu(\"user\");\n      MenuService.headerColor = \"trasteel\";\n    }\n  }\n\n  renderUserMenus() {\n    if (UserService.userProfile && UserService.userProfile.uid) {\n      //logged in  user menu\n      MenuService.coverItemUser = UserService.userProfile;\n      MenuService.appMenu.push({\n        listTitle: {\n          tag: \"clients\",\n          text: \"Clients\",\n        },\n        listButtons: [\n          /*{\n            tag: \"dashboard\",\n            text: \"Dashboard\",\n            url: \"/dashboard\",\n            iconType: \"ionicon\",\n            icon: \"calendar\",\n          },*/\n          {\n            tag: \"customers\",\n            text: \"Customers\",\n            url: \"/\" + CUSTOMERSCOLLECTION,\n            iconType:\n              TrasteelFilterService.getMapDocs()[CUSTOMERSCOLLECTION].icon.type,\n            icon: TrasteelFilterService.getMapDocs()[CUSTOMERSCOLLECTION].icon\n              .name,\n          } /*\n          {\n            tag: \"contacts\",\n            text: \"Contacts\",\n            url: \"/\" + CONTACTSCOLLECTION,\n            iconType:\n              TrasteelFilterService.getMapDocs()[CONTACTSCOLLECTION].icon.type,\n            icon: TrasteelFilterService.getMapDocs()[CONTACTSCOLLECTION].icon\n              .name,\n          },,\n          {\n            tag: \"planofaction\",\n            text: \"Plan of Actions\",\n            url: \"/\" + USERPLANSCOLLECTION,\n            iconType: \"ionicon\",\n            icon: \"calendar\",\n          },*/,\n        ],\n      });\n      MenuService.appMenu.push({\n        listTitle: {\n          tag: \"refractories\",\n          text: \"Refractories\",\n        },\n        listButtons: [\n          {\n            tag: \"projects\",\n            text: \"Projects\",\n            url: \"/\" + PROJECTSCOLLECTION,\n            iconType:\n              TrasteelFilterService.getMapDocs()[PROJECTSCOLLECTION].icon.type,\n            icon: TrasteelFilterService.getMapDocs()[PROJECTSCOLLECTION].icon\n              .name,\n          },\n          {\n            tag: \"datasheets\",\n            text: \"Data Sheets\",\n            url: \"/\" + DATASHEETSCOLLECTION,\n            iconType:\n              TrasteelFilterService.getMapDocs()[DATASHEETSCOLLECTION].icon\n                .type,\n            icon: TrasteelFilterService.getMapDocs()[DATASHEETSCOLLECTION].icon\n              .name,\n          },\n          {\n            tag: \"shapes\",\n            text: \"Shapes\",\n            url: \"/\" + SHAPESCOLLECTION,\n            iconType:\n              TrasteelFilterService.getMapDocs()[SHAPESCOLLECTION].icon.type,\n            icon: TrasteelFilterService.getMapDocs()[SHAPESCOLLECTION].icon\n              .name,\n          },\n        ],\n      });\n\n      MenuService.appMenu.push({\n        listTitle: {\n          tag: \"marketing\",\n          text: \"Marketing\",\n        },\n        listButtons: [\n          {\n            tag: \"ladle-slide-gate\",\n            text: \"Ladle Slide Gate\",\n            externalUrl:\n              \"https://trasteel-consumables.web.app/assets/vt/trasteel/index.htm\",\n            iconType: \"ionicon\",\n            icon: \"tablet-portrait\",\n          },\n        ],\n      });\n      const admin = this.renderUserAdminMenus();\n      if (admin) {\n        admin.forEach((item) => {\n          MenuService.appMenu.push(item);\n        });\n      }\n      MenuService.appMenu.push({\n        listTitle: {\n          tag: \"settings\",\n          text: \"Settings\",\n        },\n        listButtons: [\n          {\n            tag: \"settings\",\n            text: \"Settings\",\n            url: \"/\" + ADMINROUTE + \"/user\",\n            icon: \"cog\",\n          },\n        ],\n      });\n\n      //translation and system menus\n      if (\n        UserService.userRoles &&\n        (UserService.userRoles.isSuperAdmin() ||\n          UserService.userRoles.isTranslator())\n      ) {\n        const systemMenu = {\n          listTitle: {\n            tag: \"admin\",\n            text: \"Administrator\",\n          },\n          listButtons: [],\n        };\n        if (UserService.userRoles.isTranslator()) {\n          systemMenu.listButtons.push({\n            tag: \"translations\",\n            text: \"Translations\",\n            url: \"/translations\",\n            iconType: \"ionicon\",\n            icon: \"language-outline\",\n          });\n        }\n\n        //user management\n        if (UserService.userRoles.isUserAdmin()) {\n          systemMenu.listButtons.push({\n            tag: \"user-manager\",\n            text: \"User Manager\",\n            url: \"/usermanager\",\n            iconType: \"ionicon\",\n            icon: \"person-outline\",\n          });\n          systemMenu.listButtons.push({\n            tag: \"team-manager\",\n            text: \"Team Manager\",\n            url: \"/teammanager\",\n            iconType: \"ionicon\",\n            icon: \"people-outline\",\n          });\n        }\n\n        MenuService.appMenu.push(systemMenu);\n      }\n    } else {\n      //not logged in user\n      MenuService.appMenu.push({\n        listTitle: {\n          tag: \"settings\",\n          text: \"Settings\",\n        },\n        listButtons: [\n          {\n            tag: \"login\",\n            text: \"Login\",\n            url: \"/login\",\n            iconType: \"ionicon\",\n            icon: \"log-in\",\n          },\n        ],\n      });\n    }\n  }\n\n  renderUserAdminMenus() {\n    if (UserService.userRoles) {\n      const menus = {};\n      //const icons = TrasteelFilterService.getMapDocs();\n      for (let itemId in UserService.userRoles.editorOf) {\n        const editorOf = UserService.userRoles.editorOf[itemId];\n        switch (editorOf.collection) {\n        }\n      }\n      const arrayMenu = [];\n      Object.keys(menus).forEach((menu) => {\n        //order by name\n        const orderedMenu = orderBy(menus[menu].listButtons, \"text\");\n        menus[menu].listButtons = orderedMenu;\n        arrayMenu.push(menus[menu]);\n      });\n      return arrayMenu;\n    } else {\n      return undefined;\n    }\n  }\n\n  createAdminMenu(type, item) {\n    MenuService.coverItemAdmin = item;\n    switch (type) {\n    }\n    MenuService.enableMenu(\"admin\");\n  }\n}\nexport const TrasteelMenuService = new MenuController();\n","app-menu {\n  .cover {\n    height: 20%;\n  }\n\n  .logo {\n    padding-left: 10px;\n    height: 50px;\n  }\n\n  .right-menu {\n    --min-width: 300px;\n    --width: 50%;\n  }\n}\n","import { Component, h, State } from \"@stencil/core\";\nimport { RouterService } from \"../../../../../services/common/router\";\nimport { Environment } from \"../../../../../global/env\";\nimport { UDiveMenuService } from \"../../../../../services/udive/menus\";\nimport { MenuService } from \"../../../../../services/common/menus\";\nimport { UserService } from \"../../../../../services/common/user\";\nimport { alertController, isPlatform } from \"@ionic/core\";\nimport { UserRoles } from \"../../../../../interfaces/common/user/user-roles\";\nimport { TrasteelMenuService } from \"../../../../../services/trasteel/common/menus\";\nimport { Browser } from \"@capacitor/browser\";\nimport { TranslationService } from \"../../../../../services/common/translations\";\nimport { isArray } from \"lodash\";\n\n@Component({\n  tag: \"app-menu\",\n  styleUrl: \"app-menu.scss\",\n})\nexport class AppMenu {\n  @State() userRoles: UserRoles;\n  @State() selectedMenu: string;\n  @State() appMenu = [];\n  @State() url = [];\n  @State() coverItemUser: any;\n  @State() coverItemAdmin: any;\n  @State() adminMenu: any;\n  @State() headerColor: string;\n  @State() showMenu: boolean | string = true;\n\n  componentWillLoad() {\n    UserService.userRoles$.subscribe((roles) => {\n      this.userRoles = roles;\n      this.renderMenus();\n    });\n    //get page url and render menu accordingly\n    RouterService.routerSub$.subscribe((to) => {\n      this.url = to;\n      this.renderMenus();\n    });\n  }\n\n  renderMenus() {\n    this.showMenu = \"lg\"; //if true shows always the menu without auto-hide\n\n    //update selected menu for highlight\n    this.selectedMenu = isArray(this.url) ? this.url.join(\"/\") : this.url;\n    //create menu for admin\n    MenuService.resetMenus();\n\n    if (Environment.isUdive() || Environment.isDecoplanner()) {\n      //UDIVE - DECOPLANNER\n      UDiveMenuService.renderMenus(this.url);\n    } else if (Environment.isTrasteel()) {\n      //TRASTEEL\n      TrasteelMenuService.renderMenus(this.url);\n    }\n\n    this.appMenu = MenuService.appMenu;\n    this.coverItemUser = MenuService.coverItemUser;\n    this.coverItemAdmin = MenuService.coverItemAdmin;\n    this.adminMenu = MenuService.adminMenu;\n    this.headerColor = MenuService.headerColor;\n  }\n\n  async itemSelect(item) {\n    if (item.url) {\n      RouterService.push(item.url, \"forward\");\n    } else if (item.externalUrl) {\n      const alert = await alertController.create({\n        header: TranslationService.getTransl(item.tag, item.text),\n        message: TranslationService.getTransl(\n          \"open-new-window\",\n          \"The page will be opened in a new window\"\n        ),\n        buttons: [\n          {\n            text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n            role: \"cancel\",\n          },\n          {\n            text: TranslationService.getTransl(\"ok\", \"OK\"),\n            handler: async () => {\n              await Browser.open({ url: item.externalUrl });\n            },\n          },\n        ],\n      });\n      alert.present();\n    }\n  }\n\n  render() {\n    return (\n      <ion-split-pane content-id='menu-content' when={this.showMenu}>\n        <ion-menu content-id='menu-content' menuId='user'>\n          <ion-header>\n            <ion-toolbar color={this.headerColor}>\n              <img\n                slot='start'\n                class='logo'\n                src={\"assets/images/\" + Environment.getAppLogo()}\n              />\n              <ion-title>{Environment.getAppTitle()}</ion-title>\n              {Environment.getAppSubTitle() && !isPlatform(\"ios\") ? (\n                <ion-title size='small'>\n                  {Environment.getAppSubTitle()}\n                </ion-title>\n              ) : undefined}\n              {/**\n               * <ion-buttons slot=\"end\">\n                {this.userRoles ? (\n                  <ion-button\n                    slot=\"end\"\n                    fill=\"clear\"\n                    onClick={() => AuthService.logout()}\n                  >\n                    <ion-icon slot=\"icon-only\" name=\"log-out\"></ion-icon>\n                  </ion-button>\n                ) : (\n                  <ion-button\n                    slot=\"end\"\n                    fill=\"clear\"\n                    onClick={() => RouterService.push(\"/login\", \"forward\")}\n                  >\n                    <ion-icon slot=\"icon-only\" name=\"log-in\"></ion-icon>\n                  </ion-button>\n                )}\n              </ion-buttons>\n               */}\n            </ion-toolbar>\n          </ion-header>\n          <ion-content forceOverscroll={false}>\n            {this.userRoles ? (\n              <app-user-cover\n                showUserDetails={false}\n                class='cover'\n              ></app-user-cover>\n            ) : undefined}\n            {this.appMenu.map((list) => (\n              <ion-list>\n                <ion-list-header>\n                  <my-transl\n                    tag={list.listTitle.tag}\n                    text={list.listTitle.text}\n                    isLabel\n                  ></my-transl>\n                </ion-list-header>\n                {list.listButtons.map((p) =>\n                  !p.adminOnly ||\n                  (p.adminOnly && UserService.userRoles.isAdmin()) ? (\n                    <ion-menu-toggle autoHide={false}>\n                      <ion-item\n                        button\n                        onClick={() => this.itemSelect(p)}\n                        detail={false}\n                        color={\n                          this.selectedMenu == p.url ? this.headerColor : \"\"\n                        }\n                      >\n                        {p.avatar ? (\n                          <ion-avatar slot='start'>\n                            <img src={p.avatar} />\n                          </ion-avatar>\n                        ) : p.iconType && p.iconType !== \"ionicon\" ? (\n                          p.iconType == \"custom\" ? (\n                            <ion-icon slot='start' src={p.icon}></ion-icon>\n                          ) : (\n                            <ion-icon\n                              slot='start'\n                              class={\n                                p.iconType == \"mapicon\"\n                                  ? \"map-icon \" + p.icon\n                                  : p.iconType == \"udiveicon\"\n                                    ? \"udive-icon \" + p.icon\n                                    : undefined\n                              }\n                            ></ion-icon>\n                          )\n                        ) : (\n                          <ion-icon slot='start' name={p.icon}></ion-icon>\n                        )}\n\n                        <ion-label>\n                          <my-transl\n                            tag={p.tag ? p.tag : null}\n                            text={p.text}\n                          ></my-transl>\n                        </ion-label>\n                      </ion-item>\n                    </ion-menu-toggle>\n                  ) : undefined\n                )}\n              </ion-list>\n            ))}\n          </ion-content>\n          <ion-footer>\n            <ion-title size='small'>\n              {\"version: \" + Environment.getAppVersion()}\n            </ion-title>\n          </ion-footer>\n        </ion-menu>\n        <ion-menu content-id='menu-content' menuId='admin'>\n          {this.adminMenu\n            ? [\n                <ion-header>\n                  <ion-toolbar color={this.headerColor}>\n                    <ion-title>\n                      {this.coverItemAdmin\n                        ? this.coverItemAdmin.displayName\n                        : undefined}\n                    </ion-title>\n                    <ion-buttons slot='start'>\n                      <ion-button fill='clear' href='/'>\n                        <ion-icon name='arrow-back-outline'></ion-icon>\n                      </ion-button>\n                    </ion-buttons>\n                  </ion-toolbar>\n                </ion-header>,\n                <ion-content forceOverscroll={false}>\n                  {this.coverItemAdmin &&\n                  (this.coverItemAdmin.coverURL ||\n                    this.coverItemAdmin.photoURL) ? (\n                    <app-item-cover\n                      item={this.coverItemAdmin}\n                      class='cover'\n                    ></app-item-cover>\n                  ) : undefined}\n                  <ion-list>\n                    {this.adminMenu.listButtons.map((p) =>\n                      !p.adminOnly ||\n                      (p.adminOnly && UserService.userRoles.isAdmin()) ? (\n                        <ion-menu-toggle autoHide={false}>\n                          <ion-item\n                            button\n                            onClick={() => this.itemSelect(p)}\n                            detail={false}\n                            color={\n                              this.selectedMenu == p.url ? this.headerColor : \"\"\n                            }\n                          >\n                            {p.avatar ? (\n                              <ion-avatar slot='start'>\n                                <img src={p.avatar} />\n                              </ion-avatar>\n                            ) : p.iconType && p.iconType !== \"ionicon\" ? (\n                              p.iconType == \"custom\" ? (\n                                <ion-icon slot='start' src={p.icon}></ion-icon>\n                              ) : (\n                                <ion-icon\n                                  slot='start'\n                                  class={\n                                    p.iconType == \"mapicon\"\n                                      ? \"map-icon \" + p.icon\n                                      : p.iconType == \"udiveicon\"\n                                        ? \"udive-icon \" + p.icon\n                                        : undefined\n                                  }\n                                ></ion-icon>\n                              )\n                            ) : (\n                              <ion-icon slot='start' name={p.icon}></ion-icon>\n                            )}\n\n                            <ion-label>\n                              <my-transl\n                                tag={p.tag ? p.tag : null}\n                                text={p.text}\n                              ></my-transl>\n                            </ion-label>\n                          </ion-item>\n                        </ion-menu-toggle>\n                      ) : undefined\n                    )}\n                  </ion-list>\n                </ion-content>,\n                <ion-footer>\n                  <ion-title size='small'>\n                    {\"version: \" + Environment.getAppVersion()}\n                  </ion-title>\n                </ion-footer>,\n              ]\n            : undefined}\n        </ion-menu>\n        <ion-router-outlet\n          animated={true}\n          id='menu-content'\n        ></ion-router-outlet>\n      </ion-split-pane>\n    );\n  }\n}\n","import { registerPlugin } from '@capacitor/core';\nconst PushNotifications = registerPlugin('PushNotifications', {});\nexport * from './definitions';\nexport { PushNotifications };\n//# sourceMappingURL=index.js.map","import { registerPlugin } from '@capacitor/core';\nconst SplashScreen = registerPlugin('SplashScreen', {\n    web: () => import('./web').then(m => new m.SplashScreenWeb()),\n});\nexport * from './definitions';\nexport { SplashScreen };\n//# sourceMappingURL=index.js.map","import { isPlatform } from \"@ionic/core\";\n\nimport {\n  PushNotifications,\n  Token,\n  ActionPerformed,\n  PushNotificationSchema,\n} from \"@capacitor/push-notifications\";\nimport { SplashScreen } from \"@capacitor/splash-screen\";\n\nexport function init() {\n  if (isPlatform(\"capacitor\")) {\n    // Register with Apple / Google to receive push via APNS/FCM\n    PushNotifications.register();\n\n    // On success, we should be able to receive notifications\n    PushNotifications.addListener(\"registration\", (token: Token) => {\n      console.log(\"Push registration success, token: \" + token.value);\n    });\n\n    // Some issue with our setup and push will not work\n    PushNotifications.addListener(\"registrationError\", (error: any) => {\n      console.log(\"Error on registration: \" + JSON.stringify(error));\n    });\n\n    // Show us the notification payload if the app is open on our device\n    PushNotifications.addListener(\n      \"pushNotificationReceived\",\n      (notification: PushNotificationSchema) => {\n        console.log(\"Push received: \" + JSON.stringify(notification));\n      }\n    );\n\n    // Method called when tapping on a notification\n    PushNotifications.addListener(\n      \"pushNotificationActionPerformed\",\n      (notification: ActionPerformed) => {\n        alert(\"Push action performed: \" + JSON.stringify(notification));\n      }\n    );\n  }\n}\n\nexport function hideSplash() {\n  SplashScreen.hide();\n}\n\nexport function showSplash() {\n  SplashScreen.show({\n    showDuration: 2000,\n    autoHide: false,\n  });\n}\n","import {h} from \"@stencil/core\";\nimport {UserService} from \"../../common/user\";\nimport {ADMINROUTE} from \"../../common/router\";\nimport {CUSTOMERSCOLLECTION} from \"../crm/customers\";\nimport {DATASHEETSCOLLECTION} from \"../refractories/datasheets\";\nimport {PROJECTSCOLLECTION} from \"../refractories/projects\";\nimport {SHAPESCOLLECTION} from \"../refractories/shapes\";\nimport {CONTACTSCOLLECTION} from \"../crm/contacts\";\n//import {USERPLANSCOLLECTION} from \"../crm/user-plans\";\nimport {TrasteelService} from \"./services\";\n\nexport class TrasteelRouting {\n  renderRedirectRoutes() {\n    const unmatched = [<ion-route url=\":any\" component=\"page-404\" />];\n    const res = UserService.userProfile\n      ? [\n          <ion-route-redirect from=\"/\" to={\"/\" + CUSTOMERSCOLLECTION} />,\n          <ion-route-redirect from=\"/login\" to={\"/\" + CUSTOMERSCOLLECTION} />,\n        ]\n      : [<ion-route-redirect from=\"/\" to=\"/login\" />];\n    return [...unmatched, ...res];\n  }\n\n  renderAdminRoutes() {\n    const routes = [];\n    for (let itemId in UserService.userRoles.editorOf) {\n      const editorOf = UserService.userRoles.editorOf[itemId];\n      switch (\n        editorOf.collection\n        ///to be completed\n      ) {\n      }\n    }\n\n    //set administration routes\n    if (TrasteelService.isTeamAdmin()) {\n      /*routes.push([\n        <ion-route\n          url={USERPLANSCOLLECTION + \"/user/:uid\"}\n          component=\"page-user-plans\"\n        ></ion-route>,\n      ]);*/\n    }\n\n    //set administration routes\n    if (UserService.userRoles.isTranslator()) {\n      routes.push([\n        <ion-route\n          url={\"/translations\"}\n          component=\"page-admin-translations\"\n        ></ion-route>,\n      ]);\n    }\n    //set administration routes\n    if (UserService.userRoles.isUserAdmin()) {\n      routes.push([\n        <ion-route\n          url={\"/usermanager\"}\n          component=\"page-user-manager\"\n        ></ion-route>,\n        <ion-route\n          url={\"/teammanager\"}\n          component=\"page-team-manager\"\n        ></ion-route>,\n      ]);\n    }\n    return routes;\n  }\n\n  renderLoggedinUserRoutes() {\n    const ret = [\n      <ion-route\n        url={\"/\" + ADMINROUTE + \"/user\"}\n        component=\"page-trs-user-settings\"\n      ></ion-route>,\n      <ion-route url=\"/dashboard\" component=\"page-trs-dashboard\"></ion-route>,\n      <ion-route\n        url={\"/\" + CONTACTSCOLLECTION}\n        component=\"page-contacts\"\n      ></ion-route>,\n      <ion-route\n        url={\"/\" + CONTACTSCOLLECTION + \"/:itemId\"}\n        component=\"page-contact-details\"\n      ></ion-route>,\n      <ion-route\n        url={\"/\" + CUSTOMERSCOLLECTION}\n        component=\"page-customers\"\n      ></ion-route>,\n      <ion-route\n        url={\"/\" + CUSTOMERSCOLLECTION + \"/:itemId\"}\n        component=\"page-customer-details\"\n      ></ion-route>,\n      /*<ion-route\n        url={\"/\" + USERPLANSCOLLECTION}\n        component=\"page-user-plans\"\n      ></ion-route>,\n      <ion-route\n        url={\"/\" + USERPLANSCOLLECTION + \"/details/:itemId\"}\n        component=\"page-user-plans-details\"\n      ></ion-route>,*/\n      <ion-route\n        url={\"/\" + DATASHEETSCOLLECTION}\n        component=\"page-datasheets\"\n      ></ion-route>,\n      <ion-route\n        url={\"/\" + DATASHEETSCOLLECTION + \"/:itemId\"}\n        component=\"page-datasheet-details\"\n      ></ion-route>,\n      <ion-route\n        url={\"/\" + PROJECTSCOLLECTION}\n        component=\"page-projects\"\n      ></ion-route>,\n      <ion-route\n        url={\"/\" + PROJECTSCOLLECTION + \"/:itemId\"}\n        component=\"page-project-details\"\n      ></ion-route>,\n      <ion-route\n        url={\"/\" + SHAPESCOLLECTION}\n        component=\"page-shapes\"\n      ></ion-route>,\n      <ion-route\n        url={\"/\" + SHAPESCOLLECTION + \"/:itemId\"}\n        component=\"page-shape-details\"\n      ></ion-route>,\n    ];\n    return ret;\n  }\n  renderCommonUserRoutes() {\n    return [\n      <ion-route url=\"/page-404\" component=\"page-404\"></ion-route>,\n      <ion-route url=\"/login\" component=\"page-login\"></ion-route>,\n      <ion-route url=\"/forgotpsw\" component=\"page-lostpsw\"></ion-route>,\n      <ion-route url=\"/loading\" component=\"page-loading\"></ion-route>,\n    ];\n  }\n\n  renderSuperAdminRoutes() {\n    /*translator route urls*/\n    return UserService.userRoles && UserService.userRoles.isSuperAdmin()\n      ? []\n      : undefined;\n  }\n}\nexport const TrasteelRoutingService = new TrasteelRouting();\n","import {h} from \"@stencil/core\";\nimport {UserService} from \"../common/user\";\nimport {ADMINROUTE} from \"../common/router\";\nimport {DIVECOMMUNITIESCOLLECTION} from \"./diveCommunities\";\nimport {SERVICECENTERSCOLLECTION} from \"./serviceCenters\";\nimport {DIVESCHOOLSSCOLLECTION} from \"./divingSchools\";\nimport {DIVECENTERSSCOLLECTION} from \"./divingCenters\";\n\nexport class UdiveRouting {\n  renderUDiveRedirectRoutes() {\n    const unmatched = [<ion-route url=\":any\" component=\"page-404\" />];\n    const res = UserService.userProfile\n      ? [\n          <ion-route-redirect from=\"/\" to=\"/dashboard\" />,\n          <ion-route-redirect from=\"/login\" to=\"/dashboard\" />,\n        ]\n      : [\n          <ion-route-redirect from=\"/\" to=\"/map\" />,\n          <ion-route-redirect from=\"/admin\" to=\"/map\" />,\n          <ion-route-redirect from=\"/admin/*\" to=\"/map\" />,\n          <ion-route-redirect from=\"/dashboard\" to=\"/map\" />,\n        ];\n    return [...unmatched, ...res];\n  }\n  renderDecoplannerRedirectRoutes() {\n    const unmatched = [<ion-route url=\":any\" component=\"page-404\" />];\n    const res = UserService.userProfile\n      ? [\n          <ion-route-redirect from=\"/\" to=\"/deco-planner\" />,\n          <ion-route-redirect from=\"/login\" to=\"/deco-planner\" />,\n        ]\n      : [\n          <ion-route-redirect from=\"/\" to=\"/login\" />,\n          <ion-route-redirect from=\"/admin\" to=\"/login\" />,\n          <ion-route-redirect from=\"/admin/*\" to=\"/login\" />,\n          <ion-route-redirect from=\"/deco-planner\" to=\"/login\" />,\n          <ion-route-redirect from=\"/deco-planner/*\" to=\"/login\" />,\n        ];\n    return [...unmatched, ...res];\n  }\n  renderUdiveLoggedinUserRoutes() {\n    const ret = [\n      <ion-route url=\"/dashboard\" component=\"page-dashboard\"></ion-route>,\n      <ion-route url=\"/divetrips\" component=\"page-dive-trips\"></ion-route>,\n      <ion-route\n        url=\"/divingclasses\"\n        component=\"page-diving-classes\"\n      ></ion-route>,\n      <ion-route url=\"/chat\" component=\"page-chats-list\"></ion-route>,\n      <ion-route url=\"/chat/:chatId\" component=\"page-chat\"></ion-route>,\n      <ion-route\n        url={\"/\" + ADMINROUTE + \"/user\"}\n        component=\"page-user-settings\"\n      ></ion-route>,\n    ];\n    //Agency admin route\n    if (UserService.userRoles.isAgencyAdmin()) {\n      ret.push(\n        <ion-route\n          url={\"/\" + ADMINROUTE + \"/agencies\"}\n          component=\"page-admin-agencies\"\n        ></ion-route>\n      );\n    }\n    return ret;\n  }\n  renderDecoplannerLoggedinUserRoutes() {\n    const ret = [\n      <ion-route\n        url={\"/\" + ADMINROUTE + \"/user\"}\n        component=\"page-user-settings\"\n      ></ion-route>,\n    ];\n    //Agency admin route\n    if (UserService.userRoles.isAgencyAdmin()) {\n      ret.push(\n        <ion-route\n          url={\"/\" + ADMINROUTE + \"/agencies\"}\n          component=\"page-admin-agencies\"\n        ></ion-route>\n      );\n    }\n    return ret;\n  }\n  renderUDiveAdminRoutes() {\n    const routes = [];\n    for (let itemId in UserService.userRoles.editorOf) {\n      const editorOf = UserService.userRoles.editorOf[itemId];\n      switch (editorOf.collection) {\n        case DIVECENTERSSCOLLECTION:\n          routes.push([\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVECENTERSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/dashboard\"\n              }\n              componentProps={{dcid: itemId}}\n              component=\"page-diving-dashboard\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVECENTERSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/customers\"\n              }\n              componentProps={{dcid: itemId}}\n              component=\"page-diving-customers\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVECENTERSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/customers/:clientId\"\n              }\n              componentProps={{dcid: itemId}}\n              component=\"page-client-details\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVECENTERSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/chat\"\n              }\n              componentProps={{dcid: itemId}}\n              component=\"page-diving-chats-list\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVECENTERSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/chat/:chatId\"\n              }\n              componentProps={{dcid: itemId}}\n              component=\"page-chat\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVECENTERSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/divetrips\"\n              }\n              componentProps={{dcid: itemId}}\n              component=\"page-diving-dive-trips\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVECENTERSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/divetrips/:tripid\"\n              }\n              componentProps={{dcid: itemId}}\n              component=\"page-dive-trip-details\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVECENTERSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/rentals\"\n              }\n              componentProps={{dcid: itemId}}\n              component=\"page-diving-rentals\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVECENTERSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/warehouse\"\n              }\n              componentProps={{dcid: itemId}}\n              component=\"page-diving-warehouse\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVECENTERSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/payments\"\n              }\n              componentProps={{dcid: itemId}}\n              component=\"page-diving-payments\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVECENTERSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/invoicing\"\n              }\n              componentProps={{dcid: itemId}}\n              component=\"page-diving-invoicing\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVECENTERSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/documents\"\n              }\n              componentProps={{dcid: itemId}}\n              component=\"page-diving-documents\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVECENTERSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/reports\"\n              }\n              componentProps={{dcid: itemId}}\n              component=\"page-diving-reports\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVECENTERSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/settings\"\n              }\n              componentProps={{dcid: itemId}}\n              component=\"page-diving-center-details\"\n            ></ion-route>,\n          ]);\n          break;\n        case DIVECOMMUNITIESCOLLECTION:\n          routes.push([\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVECOMMUNITIESCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/dashboard\"\n              }\n              componentProps={{dcid: itemId}}\n              component=\"page-community-dashboard\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVECOMMUNITIESCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/members\"\n              }\n              componentProps={{dcid: itemId}}\n              component=\"page-community-members\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVECOMMUNITIESCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/members/:memberId\"\n              }\n              componentProps={{dcid: itemId}}\n              component=\"page-member-details\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVECOMMUNITIESCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/chat\"\n              }\n              componentProps={{dcid: itemId}}\n              component=\"page-community-chats-list\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVECOMMUNITIESCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/chat/:chatId\"\n              }\n              componentProps={{dcid: itemId}}\n              component=\"page-chat\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVECOMMUNITIESCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/divetrips\"\n              }\n              componentProps={{dcid: itemId}}\n              component=\"page-community-dive-trips\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVECOMMUNITIESCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/divetrips/:tripid\"\n              }\n              componentProps={{dcid: itemId}}\n              component=\"page-dive-trip-details\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVECOMMUNITIESCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/settings\"\n              }\n              componentProps={{dcid: itemId}}\n              component=\"page-dive-community-details\"\n            ></ion-route>,\n          ]);\n          break;\n        case DIVESCHOOLSSCOLLECTION:\n          routes.push([\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVESCHOOLSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/dashboard\"\n              }\n              componentProps={{dsid: itemId}}\n              component=\"page-school-dashboard\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVESCHOOLSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/members\"\n              }\n              componentProps={{dsid: itemId}}\n              component=\"page-school-members\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVESCHOOLSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/members/:clientId\"\n              }\n              componentProps={{dsid: itemId}}\n              component=\"page-client-details\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVESCHOOLSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/chat\"\n              }\n              componentProps={{dsid: itemId}}\n              component=\"page-school-chats-list\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVESCHOOLSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/chat/:chatId\"\n              }\n              componentProps={{dsid: itemId}}\n              component=\"page-chat\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVESCHOOLSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/divingclasses\"\n              }\n              componentProps={{dsid: itemId}}\n              component=\"page-school-classes\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVESCHOOLSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/divingclasses/:classid\"\n              }\n              componentProps={{dsid: itemId}}\n              component=\"page-diving-class-details\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVESCHOOLSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/divetrips\"\n              }\n              componentProps={{dsid: itemId}}\n              component=\"page-school-dive-trips\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVESCHOOLSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/divetrips/:tripid\"\n              }\n              componentProps={{dsid: itemId}}\n              component=\"page-dive-trip-details\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVESCHOOLSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/warehouse\"\n              }\n              componentProps={{dsid: itemId}}\n              component=\"page-school-warehouse\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVESCHOOLSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/rentals\"\n              }\n              componentProps={{dsid: itemId}}\n              component=\"page-school-rentals\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                DIVESCHOOLSSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/settings\"\n              }\n              componentProps={{dsid: itemId}}\n              component=\"page-diving-school-details\"\n            ></ion-route>,\n          ]);\n          break;\n        case SERVICECENTERSCOLLECTION:\n          routes.push([\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                SERVICECENTERSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/dashboard\"\n              }\n              componentProps={{centerid: itemId}}\n              component=\"page-service-dashboard\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                SERVICECENTERSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/customers\"\n              }\n              componentProps={{centerid: itemId}}\n              component=\"page-service-customers\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                SERVICECENTERSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/customers/:clientId\"\n              }\n              componentProps={{centerid: itemId}}\n              component=\"page-client-details\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                SERVICECENTERSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/chat\"\n              }\n              componentProps={{centerid: itemId}}\n              component=\"page-service-chats-list\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                SERVICECENTERSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/chat/:chatId\"\n              }\n              componentProps={{centerid: itemId}}\n              component=\"page-chat\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                SERVICECENTERSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/servicing\"\n              }\n              componentProps={{centerid: itemId}}\n              component=\"page-service-servicing\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                SERVICECENTERSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/warehouse\"\n              }\n              componentProps={{centerid: itemId}}\n              component=\"page-service-warehouse\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                SERVICECENTERSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/payments\"\n              }\n              componentProps={{centerid: itemId}}\n              component=\"page-service-payments\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                SERVICECENTERSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/invoicing\"\n              }\n              componentProps={{centerid: itemId}}\n              component=\"page-service-invoicing\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                SERVICECENTERSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/documents\"\n              }\n              componentProps={{centerid: itemId}}\n              component=\"page-service-documents\"\n            ></ion-route>,\n            <ion-route\n              url={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                SERVICECENTERSCOLLECTION.toLowerCase() +\n                \"/\" +\n                itemId +\n                \"/settings\"\n              }\n              componentProps={{centerid: itemId}}\n              component=\"page-service-center-details\"\n            ></ion-route>,\n          ]);\n          break;\n      }\n    }\n    //user administration routes\n    if (UserService.userRoles.isUserAdmin()) {\n      routes.push([\n        <ion-route\n          url={\"/usermanager\"}\n          component=\"page-user-manager\"\n        ></ion-route>,\n      ]);\n    }\n    return routes;\n  }\n  renderDecoplannerAdminRoutes() {\n    const routes = [];\n    //user administration routes\n    if (UserService.userRoles.isUserAdmin()) {\n      routes.push([\n        <ion-route\n          url={\"/usermanager\"}\n          component=\"page-user-manager\"\n        ></ion-route>,\n      ]);\n    }\n    return routes;\n  }\n  renderUdiveCommonUserRoutes() {\n    return [\n      <ion-route url=\"/page-404\" component=\"page-404\"></ion-route>,\n      <ion-route url=\"/map\" component=\"page-map\"></ion-route>,\n      <ion-route url=\"/guemap\" component=\"page-gue-map\"></ion-route>,\n      <ion-route url=\"/logbook\" component=\"page-log-book\"></ion-route>,\n      <ion-route url=\"/deco-planner\" component=\"page-dive-planner\"></ion-route>,\n      <ion-route url=\"/gas-blender\" component=\"page-gas-blender\"></ion-route>,\n      <ion-route\n        url=\"/divetrips/:tripid\"\n        component=\"page-dive-trip-details\"\n      ></ion-route>,\n      <ion-route\n        url=\"/divingclasses/:classid\"\n        component=\"page-diving-class-details\"\n      ></ion-route>,\n      <ion-route\n        url=\"/divesite/:siteid\"\n        component=\"page-dive-site-details\"\n      ></ion-route>,\n      <ion-route\n        url=\"/divingcenter/:dcid\"\n        component=\"page-diving-center-details\"\n      ></ion-route>,\n      <ion-route\n        url=\"/divecommunity/:dcid\"\n        component=\"page-dive-community-details\"\n      ></ion-route>,\n      <ion-route\n        url=\"/divingschool/:dsid\"\n        component=\"page-diving-school-details\"\n      ></ion-route>,\n      <ion-route\n        url=\"/servicecenter/:centerid\"\n        component=\"page-service-center-details\"\n      ></ion-route>,\n      <ion-route\n        url=\"/diveplan/:planid/dive/:diveid\"\n        component=\"page-dive-plan-details\"\n      ></ion-route>,\n      <ion-route url=\"/login\" component=\"page-login\"></ion-route>,\n      <ion-route url=\"/forgotpsw\" component=\"page-lostpsw\"></ion-route>,\n      <ion-route url=\"/support\" component=\"page-support\"></ion-route>,\n      <ion-route url=\"/loading\" component=\"page-loading\"></ion-route>,\n    ];\n  }\n  renderDecoplannerCommonUserRoutes() {\n    return [\n      <ion-route url=\"/page-404\" component=\"page-404\"></ion-route>,\n      <ion-route url=\"/deco-planner\" component=\"page-dive-planner\"></ion-route>,\n      <ion-route url=\"/gas-blender\" component=\"page-gas-blender\"></ion-route>,\n      <ion-route url=\"/login\" component=\"page-login\"></ion-route>,\n      <ion-route url=\"/forgotpsw\" component=\"page-lostpsw\"></ion-route>,\n      <ion-route url=\"/support\" component=\"page-support\"></ion-route>,\n      <ion-route url=\"/loading\" component=\"page-loading\"></ion-route>,\n      <ion-route url=\"/logbook\" component=\"page-log-book\"></ion-route>,\n      <ion-route\n        url=\"/diveplan/:planid/dive/:diveid\"\n        component=\"page-dive-plan-details\"\n      ></ion-route>,\n    ];\n  }\n\n  renderUDiveSuperAdminRoutes() {\n    /*translator route urls*/\n    return UserService.userRoles && UserService.userRoles.isSuperAdmin()\n      ? []\n      : undefined;\n  }\n  renderDecoplannerSuperAdminRoutes() {\n    /*translator route urls*/\n    return UserService.userRoles && UserService.userRoles.isSuperAdmin()\n      ? []\n      : undefined;\n  }\n}\nexport const UdiveRoutingService = new UdiveRouting();\n",null,"import { Component, h, State, Element, Listen } from \"@stencil/core\";\nimport { AuthService } from \"../../../../services/common/auth\";\nimport { UserService } from \"../../../../services/common/user\";\nimport * as Plugins from \"../../../../helpers/plugins\";\nimport { TranslationService } from \"../../../../services/common/translations\";\nimport { UDiveFilterService } from \"../../../../services/udive/ud-db-filter\";\nimport { RouterService, ADMINROUTE } from \"../../../../services/common/router\";\nimport { SystemService } from \"../../../../services/common/system\";\nimport { isElectron, setCoverHeight } from \"../../../../helpers/utils\";\nimport { UserProfile } from \"../../../../interfaces/common/user/user-profile\";\nimport { UserRoles } from \"../../../../interfaces/common/user/user-roles\";\nimport { UserSettings } from \"../../../../interfaces/udive/user/user-settings\";\nimport { Environment } from \"../../../../global/env\";\n//import {defineCustomElements} from \"@ionic/pwa-elements/loader\";\nimport { isPlatform } from \"@ionic/core\";\nimport { TrasteelFilterService } from \"../../../../services/trasteel/common/trs-db-filter\";\nimport { auth } from \"../../../../helpers/firebase\";\nimport { DatabaseService } from \"../../../../services/common/database\";\nimport { TrasteelRoutingService } from \"../../../../services/trasteel/common/routing\";\nimport { UdiveRoutingService } from \"../../../../services/udive/routing\";\nimport { NotificationsService } from \"../../../../services/common/notifications\";\n\n@Component({\n  tag: \"app-root\",\n  styleUrl: \"app-root.scss\",\n})\nexport class AppRoot {\n  @Element() el: HTMLElement;\n  @State() userProfile: UserProfile;\n  @State() isAdmin = false;\n  @State() appLoaded = false;\n  @State() userRoles: UserRoles;\n  @State() userSettings: UserSettings;\n  userProfileLoaded = false;\n  navCtrl: HTMLIonRouterElement;\n\n  // SEND a message to user for software updates\n  @Listen(\"swUpdate\", { target: \"window\" })\n  onServiceWorkerUpdate() {\n    NotificationsService.onServiceWorkerUpdate();\n  }\n\n  componentWillLoad() {\n    this.initApp();\n  }\n\n  componentDidLoad() {\n    //for PWA custom windows\n    //defineCustomElements(window);\n  }\n\n  async initApp() {\n    Plugins.init();\n    //check platform\n    if (isPlatform(\"pwa\") || isPlatform(\"desktop\") || isPlatform(\"mobileweb\")) {\n      //load pwa splash screen\n      this.appLoaded = false;\n      this.resetBkgColor(false);\n    } else {\n      //native app\n      this.appLoaded = true;\n      this.resetBkgColor(true);\n    }\n\n    window.addEventListener(\"resize\", setCoverHeight);\n    setCoverHeight();\n\n    //this.darkTheme();\n    UserService.userProfile$.subscribe(async (userProfile: UserProfile) => {\n      //wait for user services to start and skip first null userProfile\n      if (DatabaseService.servicesStarted) {\n        const user = auth.currentUser;\n        if (user && user.uid && userProfile && userProfile.uid) {\n          //user logged in\n          this.userProfile = new UserProfile(userProfile);\n          //DatabaseService.initServices();\n          //avoid double calling\n          if (!this.userProfileLoaded) {\n            this.userProfileLoaded = true;\n            //wait for new router and menu to render\n            await customElements.whenDefined(\"app-menu\");\n            await setTimeout(async () => {\n              if (AuthService.showDashboard) {\n                if (Environment.isUdive()) {\n                  this.navCtrl.push(\"/dashboard\", \"root\");\n                } else if (Environment.isDecoplanner()) {\n                  this.navCtrl.push(\"/deco-planner\", \"root\");\n                } else if (Environment.isTrasteel()) {\n                  //after first login force download data\n                  await DatabaseService.forceRefreshMapData();\n                  this.navCtrl.push(\"/customers\", \"root\");\n                }\n                AuthService.showDashboard = false;\n              } else if (AuthService.showUserSettings) {\n                this.navCtrl.push(\"/\" + ADMINROUTE + \"/user\", \"root\");\n                this.presentUserUpdate();\n                AuthService.showUserSettings = false;\n              }\n              AuthService.dismissLoading();\n              this.appLoaded = true;\n              this.resetBkgColor(true);\n              Plugins.hideSplash();\n            }, 200);\n          }\n        } else {\n          Environment.log(\"user not logged in\");\n          //user not logged in\n          this.appLoaded = true;\n          this.resetBkgColor(true);\n          this.userProfile = null;\n          this.userProfileLoaded = false;\n          AuthService.signOut();\n          Plugins.hideSplash();\n        }\n        this.loadRouter();\n      }\n    });\n    UserService.userRoles$.subscribe((userRoles) => {\n      if (userRoles && userRoles.uid) {\n        this.userRoles = new UserRoles(userRoles);\n        DatabaseService.initServices();\n      } else {\n        this.userRoles = null;\n      }\n    });\n    UserService.userSettings$.subscribe((userSettings) => {\n      if (userSettings && userSettings.uid) {\n        this.userSettings = new UserSettings(userSettings);\n        //DatabaseService.initServices();\n      } else {\n        this.userSettings = null;\n      }\n    });\n\n    //subscribe to updates in data\n    SystemService.systemPreferences$.subscribe(() => {\n      //refresh mapdata when system document is updated\n      DatabaseService.refreshMapData(false);\n    });\n    this.startServices();\n  }\n\n  async startServices() {\n    try {\n      AuthService.init();\n      await SystemService.init();\n      await TranslationService.init(\n        Environment.isUdive() ||\n          Environment.isDecoplanner() ||\n          Environment.isTrasteel()\n          ? \"en\"\n          : \"it\"\n      );\n\n      if (Environment.isUdive() || Environment.isDecoplanner()) {\n        await UDiveFilterService.init();\n      } else if (Environment.isTrasteel()) {\n        await TrasteelFilterService.init();\n      }\n      UserService.start();\n      DatabaseService.servicesStarted = true;\n      DatabaseService.initServices();\n\n      //check email link for user registration\n      if (!isElectron()) {\n        await AuthService.signInLinkReceived(location.href);\n      } else {\n        // Ensure that the electronAPI is available before calling\n        if (window[\"electronAPI\"]) {\n          if (window[\"electronAPI\"].onSignInLinkReceived) {\n            // Listen for the 'sign-in-link-received' event from Electron\n            window[\"electronAPI\"].onSignInLinkReceived((url: string) => {\n              console.log(\"Electron sign-in-link-received\", url);\n              // Call the AuthService's method\n              AuthService.signInLinkReceived(url);\n            });\n          }\n          if (window[\"electronAPI\"].onMainLog) {\n            // Listen for logs from the main process\n            window[\"electronAPI\"].onMainLog((log: string) => {\n              console.log(\"Received main process log:\", log);\n            });\n          }\n        }\n      }\n    } catch {\n      //user never logged in\n      //check network\n      await SystemService.getNetworkStatus().then((networkObservable) => {\n        const networkObs = networkObservable.subscribe((status) => {\n          if (status) {\n            //wait for network\n            this.startServices();\n            networkObs.unsubscribe();\n          }\n        });\n      });\n    }\n  }\n\n  resetBkgColor(white) {\n    //reset background color after splash screen\n    if (white) {\n      document.documentElement.style.setProperty(\n        \"--ion-background-color\",\n        \"#fff\"\n      );\n      document.documentElement.style.setProperty(\"--ion-text-color\", \"#000\");\n    } else {\n      document.documentElement.style.setProperty(\n        \"--ion-background-color\",\n        \"var(\" + Environment.getAppSplashColor() + \")\"\n      );\n      document.documentElement.style.setProperty(\n        \"--ion-text-color\",\n        \"var(\" + Environment.getAppSplashColor() + \"-contrast)\"\n      );\n    }\n  }\n\n  /*setManifestJSON() {\n    let manifest = \"\";\n    if (Environment.isUdive()) {\n      manifest = \"udive\";\n    } \n    document\n      .querySelector(\"#my-manifest-placeholder\")\n      .setAttribute(\"href\", \"/manifest_\" + manifest + \".json\");\n  }*/\n\n  loadRouter() {\n    //loop until router is loaded\n    setTimeout(async () => {\n      let nav = this.el.querySelector(\"#app-router\");\n      if (nav) {\n        this.navCtrl = await (nav as any).componentOnReady();\n        RouterService.init(this.navCtrl);\n      } else {\n        this.loadRouter();\n      }\n    });\n  }\n\n  async presentUserUpdate() {\n    UserService.presentUserUpdate();\n  }\n\n  renderRedirectRoutes() {\n    let res;\n    if (Environment.isUdive()) {\n      res = UdiveRoutingService.renderUDiveRedirectRoutes();\n    } else if (Environment.isDecoplanner()) {\n      res = UdiveRoutingService.renderDecoplannerRedirectRoutes();\n    } else if (Environment.isTrasteel()) {\n      res = TrasteelRoutingService.renderRedirectRoutes();\n    }\n    return res;\n  }\n\n  renderLoggedInUserRoutes() {\n    if (this.userRoles) {\n      if (Environment.isUdive()) {\n        return UdiveRoutingService.renderUdiveLoggedinUserRoutes();\n      } else if (Environment.isDecoplanner()) {\n        return UdiveRoutingService.renderDecoplannerLoggedinUserRoutes();\n      } else if (Environment.isTrasteel()) {\n        return TrasteelRoutingService.renderLoggedinUserRoutes();\n      }\n    } else {\n      return undefined;\n    }\n  }\n\n  renderAdminRoutes() {\n    if (this.userRoles) {\n      if (Environment.isUdive()) {\n        return UdiveRoutingService.renderUDiveAdminRoutes();\n      } else if (Environment.isDecoplanner()) {\n        return UdiveRoutingService.renderDecoplannerAdminRoutes();\n      } else if (Environment.isTrasteel()) {\n        return TrasteelRoutingService.renderAdminRoutes();\n      }\n    } else {\n      return undefined;\n    }\n  }\n\n  renderCommonRoutes() {\n    if (Environment.isUdive()) {\n      return UdiveRoutingService.renderUdiveCommonUserRoutes();\n    } else if (Environment.isDecoplanner()) {\n      return UdiveRoutingService.renderDecoplannerCommonUserRoutes();\n    } else if (Environment.isTrasteel()) {\n      return TrasteelRoutingService.renderCommonUserRoutes();\n    }\n  }\n\n  renderSuperAdminRoutes() {\n    if (Environment.isUdive()) {\n      return UdiveRoutingService.renderUDiveSuperAdminRoutes();\n    } else if (Environment.isDecoplanner()) {\n      return UdiveRoutingService.renderDecoplannerSuperAdminRoutes();\n    } else if (Environment.isTrasteel()) {\n      return TrasteelRoutingService.renderSuperAdminRoutes();\n    }\n  }\n\n  darkTheme() {\n    // Use matchMedia to check the user preference\n    const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n    toggleDarkTheme(prefersDark.matches);\n\n    // Listen for changes to the prefers-color-scheme media query\n    prefersDark.addListener((mediaQuery) =>\n      toggleDarkTheme(mediaQuery.matches)\n    );\n\n    // Add or remove the \"dark\" class based on if the media query matches\n    function toggleDarkTheme(shouldAdd) {\n      document.body.classList.toggle(\"dark\", shouldAdd);\n    }\n  }\n\n  render() {\n    return (\n      <ion-app class={\"ion-color-\" + Environment.getAppColor()}>\n        {this.appLoaded ? (\n          <ion-router\n            useHash={false}\n            id='app-router'\n            onIonRouteWillChange={(ev) => RouterService.routerChanged(ev)}\n          >\n            {\n              /*loggedin user route urls*/\n              this.renderLoggedInUserRoutes()\n            }\n            {\n              /*admin for diving ceneters, schools, service centers*/\n              this.renderAdminRoutes()\n            }\n            {\n              /*common route urls*/\n              this.renderCommonRoutes()\n            }\n            {\n              /*translator route urls*/\n              this.userRoles && this.userRoles.isTranslator()\n                ? [\n                    <ion-route\n                      url={\"/translations\"}\n                      component='page-admin-translations'\n                    ></ion-route>,\n                  ]\n                : undefined\n            }\n            {\n              /* superadmin routes */\n              this.renderSuperAdminRoutes()\n            }\n            {\n              /* redirect routes */\n              this.renderRedirectRoutes()\n            }\n          </ion-router>\n        ) : undefined}\n\n        {this.appLoaded ? <app-menu /> : <page-loading></page-loading>}\n      </ion-app>\n    );\n  }\n}\n","app-user-cover {\n  width: 100%;\n\n  ion-grid {\n    height: 100%;\n    padding: 0;\n  }\n  ion-row {\n    align-items: center;\n    text-align: center;\n\n    height: 80%;\n    width: 100%;\n  }\n\n  .name {\n    margin-top: 20px;\n    font-weight: 600;\n    font-size: 18pt;\n    color: #777;\n  }\n\n  .info {\n    margin-top: -5px;\n    margin-bottom: 5px;\n    font-family: \"Montserrat\", sans-serif;\n    font-size: 11pt;\n    color: #aaa;\n  }\n\n  ion-thumbnail {\n    position: relative;\n    margin-top: -100px;\n    margin-bottom: 0;\n    width: 100px;\n    height: 100px;\n    img {\n      border-radius: 50%;\n      padding: 0.08em;\n      border: solid 0.25em lightsteelblue;\n      background-color: white;\n    }\n  }\n  .cover-main {\n    position: absolute;\n    background-color: lightblue;\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n    margin-top: calc(-1 * var(--coverHeight));\n    height: var(--coverHeight);\n    width: 100%;\n    ion-button {\n      position: absolute;\n      right: 0px;\n    }\n    ion-menu-button {\n      position: absolute;\n      left: 0px;\n      top: 0px;\n      color: black;\n      mix-blend-mode: difference;\n    }\n  }\n}\n","import { Component, h, Prop, Host, State } from \"@stencil/core\";\nimport { Subscription } from \"rxjs\";\nimport { UserService } from \"../../../../../services/common/user\";\nimport { UserProfile } from \"../../../../../interfaces/common/user/user-profile\";\nimport { UserSettings } from \"../../../../../interfaces/udive/user/user-settings\";\nimport { Environment } from \"../../../../../global/env\";\nimport { AuthService } from \"../../../../../services/common/auth\";\n\n@Component({\n  tag: \"app-user-cover\",\n  styleUrl: \"app-user-cover.scss\",\n})\nexport class AppUserCover {\n  @State() userProfile: UserProfile;\n  @State() userSettings: UserSettings;\n  userProfileSub$: Subscription;\n  userSettingsSub$: Subscription;\n  @Prop() tmbPosition?: string;\n  @Prop() showCover?: boolean = true;\n  @Prop() showUserDetails?: boolean = true;\n  @State() updateView = false;\n\n  componentWillLoad() {\n    if (!this.userProfile) {\n      this.userProfileSub$ = UserService.userProfile$.subscribe(\n        (userProfile: UserProfile) => {\n          this.userProfile = new UserProfile(userProfile);\n        }\n      );\n      this.userSettingsSub$ = UserService.userSettings$.subscribe(\n        (userSettings: UserSettings) => {\n          this.userSettings = new UserSettings(userSettings);\n        }\n      );\n    }\n  }\n\n  componentDidLoad() {\n    //check if user is loaded or trigger local user\n    if (!this.userProfile) {\n      UserService.initLocalUser();\n    }\n  }\n\n  disconnectedCallback() {\n    this.userProfileSub$ ? this.userProfileSub$.unsubscribe() : undefined;\n    this.userSettingsSub$ ? this.userSettingsSub$.unsubscribe() : undefined;\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.showCover && this.userProfile && this.userProfile.uid ? (\n          [\n            <div\n              class='cover-main'\n              style={{\n                backgroundImage: this.userProfile.coverURL\n                  ? \"url(\" + this.userProfile.coverURL + \")\"\n                  : \"url('./assets/images/friendship2SM.jpg')\",\n              }}\n            >\n              <slot />\n            </div>,\n            <ion-thumbnail\n              style={{\n                marginLeft: this.tmbPosition == \"left\" ? \"10%\" : \"auto\",\n                marginRight: this.tmbPosition == \"right\" ? \"10%\" : \"auto\",\n              }}\n            >\n              <img\n                src={\n                  this.userProfile.photoURL\n                    ? this.userProfile.photoURL\n                    : \"assets/images/avatar.png\"\n                }\n                alt={this.userProfile.displayName}\n              />\n            </ion-thumbnail>,\n          ]\n        ) : (\n          <div\n            class='cover-main'\n            style={{\n              backgroundImage: \"url('./assets/images/friendship2SM.jpg')\",\n            }}\n          >\n            <slot />\n          </div>\n        )}\n        {this.showUserDetails && this.userProfile && this.userProfile.uid ? (\n          <div>\n            <ion-row>\n              <ion-col>\n                <h1 class='name'>{this.userProfile.displayName}</h1>\n              </ion-col>\n            </ion-row>\n            <ion-row>\n              <ion-col>\n                <p class='info'>\n                  <ion-icon name='mail'></ion-icon> {this.userProfile.email}\n                </p>\n              </ion-col>\n            </ion-row>\n            {this.userProfile.address ? (\n              <ion-row>\n                <ion-col>\n                  <p class='info'>\n                    <ion-icon name='navigate-outline'></ion-icon>{\" \"}\n                    {this.userProfile.address.display_name}\n                  </p>\n                </ion-col>\n              </ion-row>\n            ) : undefined}\n            {this.userSettings\n              ? [\n                  !Environment.isTrasteel() ? (\n                    <ion-row>\n                      <ion-col>\n                        <p class='info'>\n                          <my-transl tag='units' text='Units' />:{\" \"}\n                          {this.userSettings.settings.units}\n                        </p>\n                      </ion-col>\n                    </ion-row>\n                  ) : undefined,\n                  <ion-row>\n                    <ion-col>\n                      <app-language-picker\n                        class='info'\n                        selectedLangCode={this.userSettings.getLanguage()}\n                      />\n                    </ion-col>\n                  </ion-row>,\n                ]\n              : undefined}\n            {this.userProfile.bio ? (\n              <ion-row>\n                <ion-col>\n                  <ion-card class='info'>\n                    <ion-card-subtitle>\n                      <my-transl tag='biography' text='Biography'></my-transl>\n                    </ion-card-subtitle>\n                    <ion-card-content>{this.userProfile.bio}</ion-card-content>\n                  </ion-card>\n                </ion-col>\n              </ion-row>\n            ) : undefined}\n            <ion-row>\n              <ion-col>\n                <ion-button\n                  expand='block'\n                  color={Environment.getAppColor()}\n                  onClick={() => UserService.presentUserUpdate()}\n                >\n                  <ion-icon name='create' slot='start'></ion-icon>\n                  <ion-label>\n                    <my-transl tag='edit' text='Edit' />\n                  </ion-label>\n                </ion-button>\n              </ion-col>\n            </ion-row>\n            <ion-row>\n              <ion-col class='ion-text-right ion-padding-end'>\n                <a onClick={() => AuthService.deleteUser()}>\n                  <my-transl\n                    tag='delete-account'\n                    text='Delete Account'\n                  ></my-transl>\n                </a>\n              </ion-col>\n            </ion-row>\n          </div>\n        ) : undefined}\n      </Host>\n    );\n  }\n}\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { writeTask } from \"@stencil/core\";\nimport { hapticSelectionChanged, hapticSelectionEnd, hapticSelectionStart } from \"../native/haptic\";\nimport { createGesture } from \"./index\";\nexport const createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target) || target.disabled) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: (ev) => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: (ev) => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        },\n    });\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * iOS Action Sheet Enter Animation\n */\nexport const iosEnterAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation\n        .addElement(baseEl.querySelector('ion-backdrop'))\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    wrapperAnimation\n        .addElement(baseEl.querySelector('.action-sheet-wrapper'))\n        .fromTo('transform', 'translateY(100%)', 'translateY(0%)');\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('cubic-bezier(.36,.66,.04,1)')\n        .duration(400)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * iOS Action Sheet Leave Animation\n */\nexport const iosLeaveAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    wrapperAnimation\n        .addElement(baseEl.querySelector('.action-sheet-wrapper'))\n        .fromTo('transform', 'translateY(0%)', 'translateY(100%)');\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('cubic-bezier(.36,.66,.04,1)')\n        .duration(450)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * MD Action Sheet Enter Animation\n */\nexport const mdEnterAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation\n        .addElement(baseEl.querySelector('ion-backdrop'))\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    wrapperAnimation\n        .addElement(baseEl.querySelector('.action-sheet-wrapper'))\n        .fromTo('transform', 'translateY(100%)', 'translateY(0%)');\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('cubic-bezier(.36,.66,.04,1)')\n        .duration(400)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * MD Action Sheet Leave Animation\n */\nexport const mdLeaveAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    wrapperAnimation\n        .addElement(baseEl.querySelector('.action-sheet-wrapper'))\n        .fromTo('transform', 'translateY(0%)', 'translateY(100%)');\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('cubic-bezier(.36,.66,.04,1)')\n        .duration(450)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the action sheet group\n   * @prop --color: Color of the action sheet text\n   *\n   * @prop --min-width: Minimum width of the action sheet\n   * @prop --width: Width of the action sheet\n   * @prop --max-width: Maximum width of the action sheet\n   *\n   * @prop --min-height: Minimum height of the action sheet\n   * @prop --height: height of the action sheet\n   * @prop --max-height: Maximum height of the action sheet\n   *\n   * @prop --backdrop-opacity: Opacity of the backdrop\n   *\n   * @prop --button-background: Background of the action sheet button\n   * @prop --button-background-activated: Background of the action sheet button when pressed. Note: setting this will interfere with the Material Design ripple.\n   * @prop --button-background-activated-opacity: Opacity of the action sheet button background when pressed\n   * @prop --button-background-hover: Background of the action sheet button on hover\n   * @prop --button-background-hover-opacity: Opacity of the action sheet button background on hover\n   * @prop --button-background-focused: Background of the action sheet button when tabbed to\n   * @prop --button-background-focused-opacity: Opacity of the action sheet button background when tabbed to\n   * @prop --button-background-selected: Background of the selected action sheet button\n   * @prop --button-background-selected-opacity: Opacity of the selected action sheet button background\n   *\n   * @prop --button-color: Color of the action sheet button\n   * @prop --button-color-activated: Color of the action sheet button when pressed\n   * @prop --button-color-hover: Color of the action sheet button on hover\n   * @prop --button-color-focused: Color of the action sheet button when tabbed to\n   * @prop --button-color-selected: Color of the selected action sheet button\n   * @prop --button-color-disabled: Color of the selected action sheet button when disabled\n   */\n  --color: initial;\n  --button-color-activated: var(--button-color);\n  --button-color-focused: var(--button-color);\n  --button-color-hover: var(--button-color);\n  --button-color-selected: var(--button-color);\n  --min-width: auto;\n  --width: 100%;\n  --max-width: 500px;\n  --min-height: auto;\n  --height: auto;\n  --max-height: calc(100% - (var(--ion-safe-area-top) + var(--ion-safe-area-bottom)));\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: block;\n  position: fixed;\n  outline: none;\n  font-family: var(--ion-font-family, inherit);\n  touch-action: none;\n  user-select: none;\n  z-index: 1001;\n}\n\n:host(.overlay-hidden) {\n  display: none;\n}\n\n.action-sheet-wrapper {\n  left: 0;\n  right: 0;\n  bottom: 0;\n  transform: translate3d(0,  100%,  0);\n  display: block;\n  position: absolute;\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  z-index: 10;\n  pointer-events: none;\n}\n\n.action-sheet-button {\n  display: block;\n  position: relative;\n  width: 100%;\n  border: 0;\n  outline: none;\n  background: var(--button-background);\n  color: var(--button-color);\n  font-family: inherit;\n  overflow: hidden;\n}\n\n.action-sheet-button:disabled {\n  color: var(--button-color-disabled);\n  opacity: 0.4;\n}\n\n.action-sheet-button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  pointer-events: none;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n}\n\n.action-sheet-container {\n  display: flex;\n  flex-flow: column;\n  justify-content: flex-end;\n  height: 100%;\n  /* Fallback for browsers that do not support dvh */\n  max-height: calc(100vh - (var(--ion-safe-area-top, 0) + var(--ion-safe-area-bottom, 0)));\n  max-height: calc(100dvh - (var(--ion-safe-area-top, 0) + var(--ion-safe-area-bottom, 0)));\n}\n\n.action-sheet-group {\n  flex-shrink: 2;\n  overscroll-behavior-y: contain;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  pointer-events: all;\n  background: var(--background);\n}\n\n/**\n  * Scrollbars on mobile devices will be hidden.\n  * Users can still scroll the content by swiping.\n  * If a user has a fine pointing device, such as a\n  * mouse or trackpad, then scrollbars will be\n  * visible. This allows users to scroll the\n  * content with their pointing device.\n  * Otherwise, the user would have to use the\n  * keyboard to navigate through the options.\n  * This may not be intuitive for users who\n  * are not familiar with keyboard navigation.\n  */\n@media (any-pointer: coarse) {\n  .action-sheet-group::-webkit-scrollbar {\n    display: none;\n  }\n}\n.action-sheet-group-cancel {\n  flex-shrink: 0;\n  overflow: hidden;\n}\n\n.action-sheet-button::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n.action-sheet-selected {\n  color: var(--button-color-selected);\n}\n.action-sheet-selected::after {\n  background: var(--button-background-selected);\n  opacity: var(--button-background-selected-opacity);\n}\n\n.action-sheet-button.ion-activated {\n  color: var(--button-color-activated);\n}\n.action-sheet-button.ion-activated::after {\n  background: var(--button-background-activated);\n  opacity: var(--button-background-activated-opacity);\n}\n\n.action-sheet-button.ion-focused {\n  color: var(--button-color-focused);\n}\n.action-sheet-button.ion-focused::after {\n  background: var(--button-background-focused);\n  opacity: var(--button-background-focused-opacity);\n}\n\n@media (any-hover: hover) {\n  .action-sheet-button:not(:disabled):hover {\n    color: var(--button-color-hover);\n  }\n  .action-sheet-button:not(:disabled):hover::after {\n    background: var(--button-background-hover);\n    opacity: var(--button-background-hover-opacity);\n  }\n}\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: var(--ion-overlay-background-color, var(--ion-color-step-100, var(--ion-background-color-step-100, #f9f9f9)));\n  --backdrop-opacity: var(--ion-backdrop-opacity, 0.4);\n  --button-background: linear-gradient(0deg, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.08), rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.08) 50%, transparent 50%) bottom/100% 1px no-repeat transparent;\n  --button-background-activated: var(--ion-text-color, #000);\n  --button-background-activated-opacity: .08;\n  --button-background-hover: currentColor;\n  --button-background-hover-opacity: .04;\n  --button-background-focused: currentColor;\n  --button-background-focused-opacity: .12;\n  --button-background-selected: var(--ion-color-step-150, var(--ion-background-color-step-150, var(--ion-background-color, #fff)));\n  --button-background-selected-opacity: 1;\n  --button-color: var(--ion-color-primary, #0054e9);\n  --button-color-disabled: var(--ion-color-step-850, var(--ion-text-color-step-150, #262626));\n  --color: var(--ion-color-step-400, var(--ion-text-color-step-600, #999999));\n  text-align: center;\n}\n\n.action-sheet-wrapper {\n  -webkit-margin-start: auto;\n  margin-inline-start: auto;\n  -webkit-margin-end: auto;\n  margin-inline-end: auto;\n  margin-top: var(--ion-safe-area-top, 0);\n  /**\n   * Bottom safe area is applied as padding so that it impacts the bounding box.\n   * When the action sheet is shown/hidden, this element is transformed by translating\n   * 100% of its height. This translation needs to include the bottom safe area\n   * otherwise part of the action sheet will still be visible at the end of\n   * the show transition.\n   *\n   * If this code is changed, reviewers should verify that the action\n   * sheet still translates out of the viewport completely when the bottom\n   * safe area is a positive value.\n   */\n  padding-bottom: var(--ion-safe-area-bottom, 0);\n  box-sizing: content-box;\n}\n\n.action-sheet-container {\n  -webkit-padding-start: 8px;\n  padding-inline-start: 8px;\n  -webkit-padding-end: 8px;\n  padding-inline-end: 8px;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n.action-sheet-group {\n  border-radius: 13px;\n  margin-bottom: 8px;\n}\n\n.action-sheet-group:first-child {\n  margin-top: 10px;\n}\n\n.action-sheet-group:last-child {\n  margin-bottom: 10px;\n}\n\n@supports (backdrop-filter: blur(0)) {\n  :host(.action-sheet-translucent) .action-sheet-group {\n    background-color: transparent;\n    backdrop-filter: saturate(280%) blur(20px);\n  }\n  :host(.action-sheet-translucent) .action-sheet-title,\n  :host(.action-sheet-translucent) .action-sheet-button {\n    background-color: transparent;\n    background-image: linear-gradient(0deg, rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8), rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8) 100%), linear-gradient(0deg, rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.4), rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.4) 50%, rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8) 50%);\n    background-repeat: no-repeat;\n    /* stylelint-disable-next-line all */\n    background-position: top, bottom;\n    background-size: 100% calc(100% - 1px), 100% 1px;\n    backdrop-filter: saturate(120%);\n  }\n  :host(.action-sheet-translucent) .action-sheet-button.ion-activated {\n    background-color: rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.7);\n    background-image: none;\n  }\n  :host(.action-sheet-translucent) .action-sheet-cancel {\n    background: var(--button-background-selected);\n  }\n}\n.action-sheet-title {\n  background: linear-gradient(0deg, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.08), rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.08) 50%, transparent 50%) bottom/100% 1px no-repeat transparent;\n}\n\n.action-sheet-title {\n  -webkit-padding-start: 10px;\n  padding-inline-start: 10px;\n  -webkit-padding-end: 10px;\n  padding-inline-end: 10px;\n  padding-top: 14px;\n  padding-bottom: 13px;\n  color: var(--color, var(--ion-color-step-400, var(--ion-text-color-step-600, #999999)));\n  font-size: max(13px, 0.8125rem);\n  font-weight: 400;\n  text-align: center;\n}\n\n.action-sheet-title.action-sheet-has-sub-title {\n  font-weight: 600;\n}\n\n.action-sheet-sub-title {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 6px;\n  padding-bottom: 0;\n  font-size: max(13px, 0.8125rem);\n  font-weight: 400;\n}\n\n.action-sheet-button {\n  -webkit-padding-start: 14px;\n  padding-inline-start: 14px;\n  -webkit-padding-end: 14px;\n  padding-inline-end: 14px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  min-height: 56px;\n  font-size: max(20px, 1.25rem);\n  contain: content;\n}\n\n.action-sheet-button .action-sheet-icon {\n  -webkit-margin-end: 0.3em;\n  margin-inline-end: 0.3em;\n  font-size: max(28px, 1.75rem);\n  pointer-events: none;\n}\n\n.action-sheet-button:last-child {\n  background-image: none;\n}\n\n.action-sheet-selected {\n  font-weight: bold;\n}\n\n.action-sheet-cancel {\n  font-weight: 600;\n}\n.action-sheet-cancel::after {\n  background: var(--button-background-selected);\n  opacity: var(--button-background-selected-opacity);\n}\n\n.action-sheet-destructive,\n.action-sheet-destructive.ion-activated,\n.action-sheet-destructive.ion-focused {\n  color: var(--ion-color-danger, #c5000f);\n}\n\n@media (any-hover: hover) {\n  .action-sheet-destructive:hover {\n    color: var(--ion-color-danger, #c5000f);\n  }\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the action sheet group\n   * @prop --color: Color of the action sheet text\n   *\n   * @prop --min-width: Minimum width of the action sheet\n   * @prop --width: Width of the action sheet\n   * @prop --max-width: Maximum width of the action sheet\n   *\n   * @prop --min-height: Minimum height of the action sheet\n   * @prop --height: height of the action sheet\n   * @prop --max-height: Maximum height of the action sheet\n   *\n   * @prop --backdrop-opacity: Opacity of the backdrop\n   *\n   * @prop --button-background: Background of the action sheet button\n   * @prop --button-background-activated: Background of the action sheet button when pressed. Note: setting this will interfere with the Material Design ripple.\n   * @prop --button-background-activated-opacity: Opacity of the action sheet button background when pressed\n   * @prop --button-background-hover: Background of the action sheet button on hover\n   * @prop --button-background-hover-opacity: Opacity of the action sheet button background on hover\n   * @prop --button-background-focused: Background of the action sheet button when tabbed to\n   * @prop --button-background-focused-opacity: Opacity of the action sheet button background when tabbed to\n   * @prop --button-background-selected: Background of the selected action sheet button\n   * @prop --button-background-selected-opacity: Opacity of the selected action sheet button background\n   *\n   * @prop --button-color: Color of the action sheet button\n   * @prop --button-color-activated: Color of the action sheet button when pressed\n   * @prop --button-color-hover: Color of the action sheet button on hover\n   * @prop --button-color-focused: Color of the action sheet button when tabbed to\n   * @prop --button-color-selected: Color of the selected action sheet button\n   * @prop --button-color-disabled: Color of the selected action sheet button when disabled\n   */\n  --color: initial;\n  --button-color-activated: var(--button-color);\n  --button-color-focused: var(--button-color);\n  --button-color-hover: var(--button-color);\n  --button-color-selected: var(--button-color);\n  --min-width: auto;\n  --width: 100%;\n  --max-width: 500px;\n  --min-height: auto;\n  --height: auto;\n  --max-height: calc(100% - (var(--ion-safe-area-top) + var(--ion-safe-area-bottom)));\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: block;\n  position: fixed;\n  outline: none;\n  font-family: var(--ion-font-family, inherit);\n  touch-action: none;\n  user-select: none;\n  z-index: 1001;\n}\n\n:host(.overlay-hidden) {\n  display: none;\n}\n\n.action-sheet-wrapper {\n  left: 0;\n  right: 0;\n  bottom: 0;\n  transform: translate3d(0,  100%,  0);\n  display: block;\n  position: absolute;\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  z-index: 10;\n  pointer-events: none;\n}\n\n.action-sheet-button {\n  display: block;\n  position: relative;\n  width: 100%;\n  border: 0;\n  outline: none;\n  background: var(--button-background);\n  color: var(--button-color);\n  font-family: inherit;\n  overflow: hidden;\n}\n\n.action-sheet-button:disabled {\n  color: var(--button-color-disabled);\n  opacity: 0.4;\n}\n\n.action-sheet-button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  pointer-events: none;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n}\n\n.action-sheet-container {\n  display: flex;\n  flex-flow: column;\n  justify-content: flex-end;\n  height: 100%;\n  /* Fallback for browsers that do not support dvh */\n  max-height: calc(100vh - (var(--ion-safe-area-top, 0) + var(--ion-safe-area-bottom, 0)));\n  max-height: calc(100dvh - (var(--ion-safe-area-top, 0) + var(--ion-safe-area-bottom, 0)));\n}\n\n.action-sheet-group {\n  flex-shrink: 2;\n  overscroll-behavior-y: contain;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  pointer-events: all;\n  background: var(--background);\n}\n\n/**\n  * Scrollbars on mobile devices will be hidden.\n  * Users can still scroll the content by swiping.\n  * If a user has a fine pointing device, such as a\n  * mouse or trackpad, then scrollbars will be\n  * visible. This allows users to scroll the\n  * content with their pointing device.\n  * Otherwise, the user would have to use the\n  * keyboard to navigate through the options.\n  * This may not be intuitive for users who\n  * are not familiar with keyboard navigation.\n  */\n@media (any-pointer: coarse) {\n  .action-sheet-group::-webkit-scrollbar {\n    display: none;\n  }\n}\n.action-sheet-group-cancel {\n  flex-shrink: 0;\n  overflow: hidden;\n}\n\n.action-sheet-button::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n.action-sheet-selected {\n  color: var(--button-color-selected);\n}\n.action-sheet-selected::after {\n  background: var(--button-background-selected);\n  opacity: var(--button-background-selected-opacity);\n}\n\n.action-sheet-button.ion-activated {\n  color: var(--button-color-activated);\n}\n.action-sheet-button.ion-activated::after {\n  background: var(--button-background-activated);\n  opacity: var(--button-background-activated-opacity);\n}\n\n.action-sheet-button.ion-focused {\n  color: var(--button-color-focused);\n}\n.action-sheet-button.ion-focused::after {\n  background: var(--button-background-focused);\n  opacity: var(--button-background-focused-opacity);\n}\n\n@media (any-hover: hover) {\n  .action-sheet-button:not(:disabled):hover {\n    color: var(--button-color-hover);\n  }\n  .action-sheet-button:not(:disabled):hover::after {\n    background: var(--button-background-hover);\n    opacity: var(--button-background-hover-opacity);\n  }\n}\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: var(--ion-overlay-background-color, var(--ion-background-color, #fff));\n  --backdrop-opacity: var(--ion-backdrop-opacity, 0.32);\n  --button-background: transparent;\n  --button-background-selected: currentColor;\n  --button-background-selected-opacity: 0;\n  --button-background-activated: transparent;\n  --button-background-activated-opacity: 0;\n  --button-background-hover: currentColor;\n  --button-background-hover-opacity: .04;\n  --button-background-focused: currentColor;\n  --button-background-focused-opacity: .12;\n  --button-color: var(--ion-color-step-850, var(--ion-text-color-step-150, #262626));\n  --button-color-disabled: var(--button-color);\n  --color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.54);\n}\n\n.action-sheet-wrapper {\n  -webkit-margin-start: auto;\n  margin-inline-start: auto;\n  -webkit-margin-end: auto;\n  margin-inline-end: auto;\n  margin-top: var(--ion-safe-area-top, 0);\n  margin-bottom: 0;\n}\n\n.action-sheet-title {\n  -webkit-padding-start: 16px;\n  padding-inline-start: 16px;\n  -webkit-padding-end: 16px;\n  padding-inline-end: 16px;\n  padding-top: 20px;\n  padding-bottom: 17px;\n  min-height: 60px;\n  color: var(--color, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.54));\n  font-size: 1rem;\n  text-align: start;\n}\n\n.action-sheet-sub-title {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 16px;\n  padding-bottom: 0;\n  font-size: 0.875rem;\n}\n\n.action-sheet-group:first-child {\n  padding-top: 0;\n}\n\n.action-sheet-group:last-child {\n  padding-bottom: var(--ion-safe-area-bottom);\n}\n\n.action-sheet-button {\n  -webkit-padding-start: 16px;\n  padding-inline-start: 16px;\n  -webkit-padding-end: 16px;\n  padding-inline-end: 16px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  position: relative;\n  min-height: 52px;\n  font-size: 1rem;\n  text-align: start;\n  contain: content;\n  overflow: hidden;\n}\n\n.action-sheet-icon {\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 32px;\n  margin-inline-end: 32px;\n  margin-top: 0;\n  margin-bottom: 0;\n  color: var(--color);\n  font-size: 1.5rem;\n}\n\n.action-sheet-button-inner {\n  justify-content: flex-start;\n}\n\n.action-sheet-selected {\n  font-weight: bold;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h, readTask } from \"@stencil/core\";\nimport { createButtonActiveGesture } from \"../../utils/gesture/button-active\";\nimport { raf } from \"../../utils/helpers\";\nimport { createLockController } from \"../../utils/lock-controller\";\nimport { BACKDROP, createDelegateController, createTriggerController, dismiss, eventMethod, isCancel, prepareOverlay, present, safeCall, setOverlayId, } from \"../../utils/overlays\";\nimport { getClassMap } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\nimport { iosEnterAnimation } from \"./animations/ios.enter\";\nimport { iosLeaveAnimation } from \"./animations/ios.leave\";\nimport { mdEnterAnimation } from \"./animations/md.enter\";\nimport { mdLeaveAnimation } from \"./animations/md.leave\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class ActionSheet {\n    constructor() {\n        this.delegateController = createDelegateController(this);\n        this.lockController = createLockController();\n        this.triggerController = createTriggerController();\n        this.presented = false;\n        this.onBackdropTap = () => {\n            this.dismiss(undefined, BACKDROP);\n        };\n        this.dispatchCancelHandler = (ev) => {\n            const role = ev.detail.role;\n            if (isCancel(role)) {\n                const cancelButton = this.getButtons().find((b) => b.role === 'cancel');\n                this.callButtonHandler(cancelButton);\n            }\n        };\n        this.overlayIndex = undefined;\n        this.delegate = undefined;\n        this.hasController = false;\n        this.keyboardClose = true;\n        this.enterAnimation = undefined;\n        this.leaveAnimation = undefined;\n        this.buttons = [];\n        this.cssClass = undefined;\n        this.backdropDismiss = true;\n        this.header = undefined;\n        this.subHeader = undefined;\n        this.translucent = false;\n        this.animated = true;\n        this.htmlAttributes = undefined;\n        this.isOpen = false;\n        this.trigger = undefined;\n    }\n    onIsOpenChange(newValue, oldValue) {\n        if (newValue === true && oldValue === false) {\n            this.present();\n        }\n        else if (newValue === false && oldValue === true) {\n            this.dismiss();\n        }\n    }\n    triggerChanged() {\n        const { trigger, el, triggerController } = this;\n        if (trigger) {\n            triggerController.addClickListener(el, trigger);\n        }\n    }\n    /**\n     * Present the action sheet overlay after it has been created.\n     */\n    async present() {\n        const unlock = await this.lockController.lock();\n        await this.delegateController.attachViewToDom();\n        await present(this, 'actionSheetEnter', iosEnterAnimation, mdEnterAnimation);\n        unlock();\n    }\n    /**\n     * Dismiss the action sheet overlay after it has been presented.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the action sheet.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the action sheet.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     *\n     * This is a no-op if the overlay has not been presented yet. If you want\n     * to remove an overlay from the DOM that was never presented, use the\n     * [remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\n     */\n    async dismiss(data, role) {\n        const unlock = await this.lockController.lock();\n        const dismissed = await dismiss(this, data, role, 'actionSheetLeave', iosLeaveAnimation, mdLeaveAnimation);\n        if (dismissed) {\n            this.delegateController.removeViewFromDom();\n        }\n        unlock();\n        return dismissed;\n    }\n    /**\n     * Returns a promise that resolves when the action sheet did dismiss.\n     */\n    onDidDismiss() {\n        return eventMethod(this.el, 'ionActionSheetDidDismiss');\n    }\n    /**\n     * Returns a promise that resolves when the action sheet will dismiss.\n     *\n     */\n    onWillDismiss() {\n        return eventMethod(this.el, 'ionActionSheetWillDismiss');\n    }\n    async buttonClick(button) {\n        const role = button.role;\n        if (isCancel(role)) {\n            return this.dismiss(button.data, role);\n        }\n        const shouldDismiss = await this.callButtonHandler(button);\n        if (shouldDismiss) {\n            return this.dismiss(button.data, button.role);\n        }\n        return Promise.resolve();\n    }\n    async callButtonHandler(button) {\n        if (button) {\n            // a handler has been provided, execute it\n            // pass the handler the values from the inputs\n            const rtn = await safeCall(button.handler);\n            if (rtn === false) {\n                // if the return value of the handler is false then do not dismiss\n                return false;\n            }\n        }\n        return true;\n    }\n    getButtons() {\n        return this.buttons.map((b) => {\n            return typeof b === 'string' ? { text: b } : b;\n        });\n    }\n    connectedCallback() {\n        prepareOverlay(this.el);\n        this.triggerChanged();\n    }\n    disconnectedCallback() {\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        this.triggerController.removeClickListener();\n    }\n    componentWillLoad() {\n        var _a;\n        if (!((_a = this.htmlAttributes) === null || _a === void 0 ? void 0 : _a.id)) {\n            setOverlayId(this.el);\n        }\n    }\n    componentDidLoad() {\n        /**\n         * Only create gesture if:\n         * 1. A gesture does not already exist\n         * 2. App is running in iOS mode\n         * 3. A wrapper ref exists\n         * 4. A group ref exists\n         */\n        const { groupEl, wrapperEl } = this;\n        if (!this.gesture && getIonMode(this) === 'ios' && wrapperEl && groupEl) {\n            readTask(() => {\n                const isScrollable = groupEl.scrollHeight > groupEl.clientHeight;\n                if (!isScrollable) {\n                    this.gesture = createButtonActiveGesture(wrapperEl, (refEl) => refEl.classList.contains('action-sheet-button'));\n                    this.gesture.enable(true);\n                }\n            });\n        }\n        /**\n         * If action sheet was rendered with isOpen=\"true\"\n         * then we should open action sheet immediately.\n         */\n        if (this.isOpen === true) {\n            raf(() => this.present());\n        }\n        /**\n         * When binding values in frameworks such as Angular\n         * it is possible for the value to be set after the Web Component\n         * initializes but before the value watcher is set up in Stencil.\n         * As a result, the watcher callback may not be fired.\n         * We work around this by manually calling the watcher\n         * callback when the component has loaded and the watcher\n         * is configured.\n         */\n        this.triggerChanged();\n    }\n    render() {\n        const { header, htmlAttributes, overlayIndex } = this;\n        const mode = getIonMode(this);\n        const allButtons = this.getButtons();\n        const cancelButton = allButtons.find((b) => b.role === 'cancel');\n        const buttons = allButtons.filter((b) => b.role !== 'cancel');\n        const headerID = `action-sheet-${overlayIndex}-header`;\n        return (h(Host, Object.assign({ key: '7bbd202ca9e19727e7514abbe073687d982f80c3', role: \"dialog\", \"aria-modal\": \"true\", \"aria-labelledby\": header !== undefined ? headerID : null, tabindex: \"-1\" }, htmlAttributes, { style: {\n                zIndex: `${20000 + this.overlayIndex}`,\n            }, class: Object.assign(Object.assign({ [mode]: true }, getClassMap(this.cssClass)), { 'overlay-hidden': true, 'action-sheet-translucent': this.translucent }), onIonActionSheetWillDismiss: this.dispatchCancelHandler, onIonBackdropTap: this.onBackdropTap }), h(\"ion-backdrop\", { key: '23344a9221a2e6720d7b9de5249dc37256cafa7b', tappable: this.backdropDismiss }), h(\"div\", { key: 'd46361bb5cdc32a7922dcf76b566f358a6174bfa', tabindex: \"0\" }), h(\"div\", { key: '136c3f2e77c8a2eac8e9ae4bb13d735e1d62598d', class: \"action-sheet-wrapper ion-overlay-wrapper\", ref: (el) => (this.wrapperEl = el) }, h(\"div\", { key: '6168ea8b2be42020b2edeb8ff3a0f3d1254be37a', class: \"action-sheet-container\" }, h(\"div\", { key: '29b9e6619dc54574733a704d6bf885839151bd84', class: \"action-sheet-group\", ref: (el) => (this.groupEl = el) }, header !== undefined && (h(\"div\", { key: '536ce764bfddb3816ea3512d90f4acef2ccb8589', id: headerID, class: {\n                'action-sheet-title': true,\n                'action-sheet-has-sub-title': this.subHeader !== undefined,\n            } }, header, this.subHeader && h(\"div\", { key: '6d888219145824fd36cdfe0d3c8388bbf2769777', class: \"action-sheet-sub-title\" }, this.subHeader))), buttons.map((b) => (h(\"button\", Object.assign({}, b.htmlAttributes, { type: \"button\", id: b.id, class: buttonClass(b), onClick: () => this.buttonClick(b), disabled: b.disabled }), h(\"span\", { class: \"action-sheet-button-inner\" }, b.icon && h(\"ion-icon\", { icon: b.icon, \"aria-hidden\": \"true\", lazy: false, class: \"action-sheet-icon\" }), b.text), mode === 'md' && h(\"ion-ripple-effect\", null))))), cancelButton && (h(\"div\", { key: '46f98f0ed5a9bdb3e35feb9ae71c4489c17b7d77', class: \"action-sheet-group action-sheet-group-cancel\" }, h(\"button\", Object.assign({ key: 'e3c457bced8ad5f692e48de26e65f731fd631b4f' }, cancelButton.htmlAttributes, { type: \"button\", class: buttonClass(cancelButton), onClick: () => this.buttonClick(cancelButton) }), h(\"span\", { key: '4cba6dc559f734ecc852e024959210cd0dd25354', class: \"action-sheet-button-inner\" }, cancelButton.icon && (h(\"ion-icon\", { key: '9df64989aad1b4d1e75edf4d37ab208965cfe37f', icon: cancelButton.icon, \"aria-hidden\": \"true\", lazy: false, class: \"action-sheet-icon\" })), cancelButton.text), mode === 'md' && h(\"ion-ripple-effect\", { key: '558089275a29177cefdb2e38eefc9b5c8b62872b' })))))), h(\"div\", { key: 'fa4df6e043b00a6e4126dbc71cb344cfc2b2e7bc', tabindex: \"0\" })));\n    }\n    static get is() { return \"ion-action-sheet\"; }\n    static get encapsulation() { return \"scoped\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"action-sheet.ios.scss\"],\n            \"md\": [\"action-sheet.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"action-sheet.ios.css\"],\n            \"md\": [\"action-sheet.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"overlayIndex\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"overlay-index\",\n                \"reflect\": false\n            },\n            \"delegate\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"FrameworkDelegate\",\n                    \"resolved\": \"FrameworkDelegate | undefined\",\n                    \"references\": {\n                        \"FrameworkDelegate\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::FrameworkDelegate\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                }\n            },\n            \"hasController\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"has-controller\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"keyboardClose\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the keyboard will be automatically dismissed when the overlay is presented.\"\n                },\n                \"attribute\": \"keyboard-close\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"enterAnimation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Animation to use when the action sheet is presented.\"\n                }\n            },\n            \"leaveAnimation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Animation to use when the action sheet is dismissed.\"\n                }\n            },\n            \"buttons\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"(ActionSheetButton | string)[]\",\n                    \"resolved\": \"(string | ActionSheetButton<any>)[]\",\n                    \"references\": {\n                        \"ActionSheetButton\": {\n                            \"location\": \"import\",\n                            \"path\": \"./action-sheet-interface\",\n                            \"id\": \"src/components/action-sheet/action-sheet-interface.ts::ActionSheetButton\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"An array of buttons for the action sheet.\"\n                },\n                \"defaultValue\": \"[]\"\n            },\n            \"cssClass\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | string[]\",\n                    \"resolved\": \"string | string[] | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Additional classes to apply for custom CSS. If multiple classes are\\nprovided they should be separated by spaces.\"\n                },\n                \"attribute\": \"css-class\",\n                \"reflect\": false\n            },\n            \"backdropDismiss\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the action sheet will be dismissed when the backdrop is clicked.\"\n                },\n                \"attribute\": \"backdrop-dismiss\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"header\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Title for the action sheet.\"\n                },\n                \"attribute\": \"header\",\n                \"reflect\": false\n            },\n            \"subHeader\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Subtitle for the action sheet.\"\n                },\n                \"attribute\": \"sub-header\",\n                \"reflect\": false\n            },\n            \"translucent\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the action sheet will be translucent.\\nOnly applies when the mode is `\\\"ios\\\"` and the device supports\\n[`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\"\n                },\n                \"attribute\": \"translucent\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"animated\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the action sheet will animate.\"\n                },\n                \"attribute\": \"animated\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"htmlAttributes\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"{ [key: string]: any }\",\n                    \"resolved\": \"undefined | { [key: string]: any; }\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Additional attributes to pass to the action sheet.\"\n                }\n            },\n            \"isOpen\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the action sheet will open. If `false`, the action sheet will close.\\nUse this if you need finer grained control over presentation, otherwise\\njust use the actionSheetController or the `trigger` property.\\nNote: `isOpen` will not automatically be set back to `false` when\\nthe action sheet dismisses. You will need to do that in your code.\"\n                },\n                \"attribute\": \"is-open\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"trigger\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"An ID corresponding to the trigger element that\\ncauses the action sheet to open when clicked.\"\n                },\n                \"attribute\": \"trigger\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"didPresent\",\n                \"name\": \"ionActionSheetDidPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the action sheet has presented.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willPresent\",\n                \"name\": \"ionActionSheetWillPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the action sheet has presented.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willDismiss\",\n                \"name\": \"ionActionSheetWillDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the action sheet has dismissed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"didDismiss\",\n                \"name\": \"ionActionSheetDidDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the action sheet has dismissed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"didPresentShorthand\",\n                \"name\": \"didPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the action sheet has presented.\\nShorthand for ionActionSheetWillDismiss.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willPresentShorthand\",\n                \"name\": \"willPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the action sheet has presented.\\nShorthand for ionActionSheetWillPresent.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willDismissShorthand\",\n                \"name\": \"willDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the action sheet has dismissed.\\nShorthand for ionActionSheetWillDismiss.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"didDismissShorthand\",\n                \"name\": \"didDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the action sheet has dismissed.\\nShorthand for ionActionSheetDidDismiss.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"present\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Present the action sheet overlay after it has been created.\",\n                    \"tags\": []\n                }\n            },\n            \"dismiss\": {\n                \"complexType\": {\n                    \"signature\": \"(data?: any, role?: string) => Promise<boolean>\",\n                    \"parameters\": [{\n                            \"name\": \"data\",\n                            \"type\": \"any\",\n                            \"docs\": \"Any data to emit in the dismiss events.\"\n                        }, {\n                            \"name\": \"role\",\n                            \"type\": \"string | undefined\",\n                            \"docs\": \"The role of the element that is dismissing the action sheet.\\nThis can be useful in a button handler for determining which button was\\nclicked to dismiss the action sheet.\\nSome examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n\\nThis is a no-op if the overlay has not been presented yet. If you want\\nto remove an overlay from the DOM that was never presented, use the\\n[remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Dismiss the action sheet overlay after it has been presented.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"data Any data to emit in the dismiss events.\"\n                        }, {\n                            \"name\": \"param\",\n                            \"text\": \"role The role of the element that is dismissing the action sheet.\\nThis can be useful in a button handler for determining which button was\\nclicked to dismiss the action sheet.\\nSome examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n\\nThis is a no-op if the overlay has not been presented yet. If you want\\nto remove an overlay from the DOM that was never presented, use the\\n[remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\"\n                        }]\n                }\n            },\n            \"onDidDismiss\": {\n                \"complexType\": {\n                    \"signature\": \"<T = any>() => Promise<OverlayEventDetail<T>>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        },\n                        \"T\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::T\"\n                        }\n                    },\n                    \"return\": \"Promise<OverlayEventDetail<T>>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns a promise that resolves when the action sheet did dismiss.\",\n                    \"tags\": []\n                }\n            },\n            \"onWillDismiss\": {\n                \"complexType\": {\n                    \"signature\": \"<T = any>() => Promise<OverlayEventDetail<T>>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        },\n                        \"T\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::T\"\n                        }\n                    },\n                    \"return\": \"Promise<OverlayEventDetail<T>>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns a promise that resolves when the action sheet will dismiss.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"isOpen\",\n                \"methodName\": \"onIsOpenChange\"\n            }, {\n                \"propName\": \"trigger\",\n                \"methodName\": \"triggerChanged\"\n            }];\n    }\n}\nconst buttonClass = (button) => {\n    return Object.assign({ 'action-sheet-button': true, 'ion-activatable': !button.disabled, 'ion-focusable': !button.disabled, [`action-sheet-${button.role}`]: button.role !== undefined }, getClassMap(button.cssClass));\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * iOS Alert Enter Animation\n */\nexport const iosEnterAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation\n        .addElement(baseEl.querySelector('ion-backdrop'))\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    wrapperAnimation.addElement(baseEl.querySelector('.alert-wrapper')).keyframes([\n        { offset: 0, opacity: '0.01', transform: 'scale(1.1)' },\n        { offset: 1, opacity: '1', transform: 'scale(1)' },\n    ]);\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('ease-in-out')\n        .duration(200)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * iOS Alert Leave Animation\n */\nexport const iosLeaveAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    wrapperAnimation.addElement(baseEl.querySelector('.alert-wrapper')).keyframes([\n        { offset: 0, opacity: 0.99, transform: 'scale(1)' },\n        { offset: 1, opacity: 0, transform: 'scale(0.9)' },\n    ]);\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('ease-in-out')\n        .duration(200)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * Md Alert Enter Animation\n */\nexport const mdEnterAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation\n        .addElement(baseEl.querySelector('ion-backdrop'))\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    wrapperAnimation.addElement(baseEl.querySelector('.alert-wrapper')).keyframes([\n        { offset: 0, opacity: '0.01', transform: 'scale(0.9)' },\n        { offset: 1, opacity: '1', transform: 'scale(1)' },\n    ]);\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('ease-in-out')\n        .duration(150)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * Md Alert Leave Animation\n */\nexport const mdLeaveAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    wrapperAnimation.addElement(baseEl.querySelector('.alert-wrapper')).fromTo('opacity', 0.99, 0);\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('ease-in-out')\n        .duration(150)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the alert\n   *\n   * @prop --min-width: Minimum width of the alert\n   * @prop --width: Width of the alert\n   * @prop --max-width: Maximum width of the alert\n   *\n   * @prop --min-height: Minimum height of the alert\n   * @prop --height: Height of the alert\n   * @prop --max-height: Maximum height of the alert\n   *\n   * @prop --backdrop-opacity: Opacity of the backdrop\n   */\n  --min-width: 250px;\n  --width: auto;\n  --min-height: auto;\n  --height: auto;\n  --max-height: 90%;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  font-family: var(--ion-font-family, inherit);\n  contain: strict;\n  touch-action: none;\n  user-select: none;\n  z-index: 1001;\n}\n\n:host(.overlay-hidden) {\n  display: none;\n}\n\n:host(.alert-top) {\n  padding-top: 50px;\n  align-items: flex-start;\n}\n\n.alert-wrapper {\n  display: flex;\n  flex-direction: column;\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  background: var(--background);\n  contain: content;\n  opacity: 0;\n  z-index: 10;\n}\n\n.alert-title {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n.alert-sub-title {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 5px;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  font-weight: normal;\n}\n\n/**\n * Alert has a maximum height in scenarios\n * such as the MD alert on tablet devices.\n * As a result, we need to make sure the inner\n * containers can scroll otherwise content\n * may be cut off.\n */\n.alert-message,\n.alert-input-group {\n  box-sizing: border-box;\n  -webkit-overflow-scrolling: touch;\n  overflow-y: auto;\n  overscroll-behavior-y: contain;\n}\n\n.alert-checkbox-label,\n.alert-radio-label {\n  /**\n   * This allows long words to wrap to the next line\n   * instead of flowing outside of the container.\n   *\n   * The \"anywhere\" keyword should be used instead\n   * of the \"break-word\" keyword since the parent\n   * container is using flexbox. Flex relies on min-content and\n   * max-content intrinsic sizes to structure the layout. Flex will\n   * wrap content only until it reaches its min-content intrinsic size\n   * which in this case is equal to the longest word in this container.\n   * \"break-word\" does not shrink the min-content intrinsic size\n   * of the flex item which causes the long word to still overflow.\n   * \"anywhere\" on the other hand does shrink the min-content\n   * intrinsic size which allows the long word to wrap to the next line.\n   */\n  overflow-wrap: anywhere;\n}\n\n/**\n  * Scrollbars on mobile devices will be hidden.\n  * Users can still scroll the content by swiping.\n  * If a user has a fine pointing device, such as a\n  * mouse or trackpad, then scrollbars will be\n  * visible. This allows users to scroll the\n  * content with their pointing device.\n  * Otherwise, the user would have to use the\n  * keyboard to navigate through the options.\n  * This may not be intuitive for users who\n  * are not familiar with keyboard navigation.\n  */\n@media (any-pointer: coarse) {\n  .alert-checkbox-group::-webkit-scrollbar,\n  .alert-radio-group::-webkit-scrollbar,\n  .alert-message::-webkit-scrollbar {\n    display: none;\n  }\n}\n.alert-input {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  width: 100%;\n  border: 0;\n  background: inherit;\n  font: inherit;\n  box-sizing: border-box;\n}\n\n.alert-button-group {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n}\n\n.alert-button-group-vertical {\n  flex-direction: column;\n  flex-wrap: nowrap;\n}\n\n.alert-button {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: block;\n  border: 0;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  z-index: 0;\n}\n\n.alert-button.ion-focused,\n.alert-tappable.ion-focused {\n  background: var(--ion-color-step-100, var(--ion-background-color-step-100, #e6e6e6));\n}\n\n.alert-button-inner {\n  display: flex;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  min-height: inherit;\n}\n\n.alert-input-disabled,\n.alert-checkbox-button-disabled .alert-button-inner,\n.alert-radio-button-disabled .alert-button-inner {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n.alert-tappable {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  display: flex;\n  width: 100%;\n  border: 0;\n  background: transparent;\n  font-size: inherit;\n  line-height: initial;\n  text-align: start;\n  appearance: none;\n  contain: content;\n}\n\n.alert-button,\n.alert-checkbox,\n.alert-input,\n.alert-radio {\n  outline: none;\n}\n\n.alert-radio-icon,\n.alert-checkbox-icon,\n.alert-checkbox-inner {\n  box-sizing: border-box;\n}\n\ntextarea.alert-input {\n  min-height: 37px;\n  resize: none;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * We want the height of the button to\n * scale with the text so the next never runs\n * into the edge of the button. We change the height\n * instead of adding padding because we would need to offset\n * the height the padding and the border. Since the border uses\n * a hairline (<1px) width, this will cause subpixel rendering\n * differences across browsers.\n */\n:host {\n  --background: var(--ion-overlay-background-color, var(--ion-color-step-100, var(--ion-background-color-step-100, #f9f9f9)));\n  --max-width: clamp(270px, 16.875rem, 324px);\n  --backdrop-opacity: var(--ion-backdrop-opacity, 0.3);\n  font-size: max(14px, 0.875rem);\n}\n\n.alert-wrapper {\n  border-radius: 13px;\n  box-shadow: none;\n  overflow: hidden;\n}\n\n.alert-button .alert-button-inner {\n  pointer-events: none;\n}\n\n@supports (backdrop-filter: blur(0)) {\n  :host(.alert-translucent) .alert-wrapper {\n    background: rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.9);\n    backdrop-filter: saturate(180%) blur(20px);\n  }\n}\n.alert-head {\n  -webkit-padding-start: 16px;\n  padding-inline-start: 16px;\n  -webkit-padding-end: 16px;\n  padding-inline-end: 16px;\n  padding-top: 12px;\n  padding-bottom: 7px;\n  text-align: center;\n}\n\n.alert-title {\n  margin-top: 8px;\n  color: var(--ion-text-color, #000);\n  font-size: max(17px, 1.0625rem);\n  font-weight: 600;\n}\n\n.alert-sub-title {\n  color: var(--ion-color-step-600, var(--ion-text-color-step-400, #666666));\n  font-size: max(14px, 0.875rem);\n}\n\n.alert-message,\n.alert-input-group {\n  -webkit-padding-start: 16px;\n  padding-inline-start: 16px;\n  -webkit-padding-end: 16px;\n  padding-inline-end: 16px;\n  padding-top: 0;\n  padding-bottom: 21px;\n  color: var(--ion-text-color, #000);\n  font-size: max(13px, 0.8125rem);\n  text-align: center;\n}\n\n.alert-message {\n  max-height: 240px;\n}\n\n.alert-message:empty {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 12px;\n}\n\n.alert-input {\n  border-radius: 7px;\n  margin-top: 10px;\n  -webkit-padding-start: 7px;\n  padding-inline-start: 7px;\n  -webkit-padding-end: 7px;\n  padding-inline-end: 7px;\n  padding-top: 7px;\n  padding-bottom: 7px;\n  border: 0.55px solid var(--ion-color-step-250, var(--ion-background-color-step-250, #bfbfbf));\n  background-color: var(--ion-background-color, #fff);\n  appearance: none;\n  font-size: 1rem;\n}\n.alert-input::placeholder {\n  color: var(--ion-placeholder-color, var(--ion-color-step-400, var(--ion-text-color-step-600, #999999)));\n  font-family: inherit;\n  font-weight: inherit;\n}\n.alert-input::-ms-clear {\n  display: none;\n}\n.alert-input::-webkit-date-and-time-value {\n  /**\n   * The -webkit-date-and-time-value pseudo element is used\n   * to style the date/time input on iOS/Mobile Safari.\n   * To avoid layout shift between an empty state and a selected state,\n   * we set the height `18px` to match the native input height for\n   * date/time inputs on iOS/Mobile Safari.\n   */\n  height: 18px;\n}\n\n.alert-radio-group,\n.alert-checkbox-group {\n  overscroll-behavior: contain;\n  max-height: 240px;\n  border-top: 0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n}\n\n.alert-tappable {\n  min-height: 44px;\n}\n\n.alert-radio-label {\n  -webkit-padding-start: 13px;\n  padding-inline-start: 13px;\n  -webkit-padding-end: 13px;\n  padding-inline-end: 13px;\n  padding-top: 13px;\n  padding-bottom: 13px;\n  flex: 1;\n  order: 0;\n  color: var(--ion-text-color, #000);\n}\n\n[aria-checked=true] .alert-radio-label {\n  color: var(--ion-color-primary, #0054e9);\n}\n\n.alert-radio-icon {\n  position: relative;\n  order: 1;\n  min-width: 30px;\n}\n\n[aria-checked=true] .alert-radio-inner {\n  top: -7px;\n  position: absolute;\n  width: 6px;\n  height: 12px;\n  transform: rotate(45deg);\n  border-width: 2px;\n  border-top-width: 0;\n  border-left-width: 0;\n  border-style: solid;\n  border-color: var(--ion-color-primary, #0054e9);\n}\n[aria-checked=true] .alert-radio-inner {\n  inset-inline-start: 7px;\n}\n\n.alert-checkbox-label {\n  -webkit-padding-start: 13px;\n  padding-inline-start: 13px;\n  -webkit-padding-end: 13px;\n  padding-inline-end: 13px;\n  padding-top: 13px;\n  padding-bottom: 13px;\n  flex: 1;\n  color: var(--ion-text-color, #000);\n}\n\n.alert-checkbox-icon {\n  border-radius: 50%;\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 6px;\n  margin-inline-end: 6px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  position: relative;\n  width: min(1.375rem, 55.836px);\n  height: min(1.375rem, 55.836px);\n  border-width: 0.125rem;\n  border-style: solid;\n  border-color: var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, var(--ion-background-color-step-250, #c8c7cc))));\n  background-color: var(--ion-item-background, var(--ion-background-color, #fff));\n  contain: strict;\n}\n\n[aria-checked=true] .alert-checkbox-icon {\n  border-color: var(--ion-color-primary, #0054e9);\n  background-color: var(--ion-color-primary, #0054e9);\n}\n\n[aria-checked=true] .alert-checkbox-inner {\n  top: calc(min(1.375rem, 55.836px) / 8);\n  position: absolute;\n  width: calc(min(1.375rem, 55.836px) / 6 + 1px);\n  height: calc(min(1.375rem, 55.836px) * 0.5);\n  transform: rotate(45deg);\n  border-width: 0.125rem;\n  border-top-width: 0;\n  border-left-width: 0;\n  border-style: solid;\n  border-color: var(--ion-background-color, #fff);\n}\n[aria-checked=true] .alert-checkbox-inner {\n  inset-inline-start: calc(min(1.375rem, 55.836px) / 3);\n}\n\n.alert-button-group {\n  -webkit-margin-end: -0.55px;\n  margin-inline-end: -0.55px;\n  flex-wrap: wrap;\n}\n\n/**\n  * The right border should only be applied to the first button\n  * when the group has 2 or less buttons (horizontal).\n  * Otherwise, the right border should not be applied\n  * when the group has 3 or more buttons (vertical).\n  */\n.alert-button-group-vertical .alert-button {\n  border-right: none;\n}\n:host-context([dir=rtl]) .alert-button-group-vertical .alert-button:last-child {\n  border-right: none;\n}\n\n[dir=rtl] .alert-button-group-vertical .alert-button:last-child {\n  border-right: none;\n}\n\n@supports selector(:dir(rtl)) {\n  .alert-button-group-vertical .alert-button:last-child:dir(rtl) {\n    border-right: none;\n  }\n}\n\n.alert-button {\n  /**\n   * This padding ensures that alerts\n   * with multiple buttons render on separate lines\n   * so the text does not run up against the edge of the button.\n   */\n  -webkit-padding-start: 8px;\n  padding-inline-start: 8px;\n  -webkit-padding-end: 8px;\n  padding-inline-end: 8px;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  border-radius: 0;\n  flex: 1 1 auto;\n  min-width: 50%;\n  height: max(44px, 2.75rem);\n  border-top: 0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n  border-right: 0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n  background-color: transparent;\n  color: var(--ion-color-primary, #0054e9);\n  font-size: max(17px, 1.0625rem);\n  overflow: hidden;\n}\n\n:host-context([dir=rtl]) .alert-button:first-child {\n  border-right: 0;\n}\n\n[dir=rtl] .alert-button:first-child {\n  border-right: 0;\n}\n\n@supports selector(:dir(rtl)) {\n  .alert-button:first-child:dir(rtl) {\n    border-right: 0;\n  }\n}\n\n.alert-button:last-child {\n  border-right: 0;\n  font-weight: bold;\n}\n:host-context([dir=rtl]) .alert-button:last-child {\n  border-right: 0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n}\n\n[dir=rtl] .alert-button:last-child {\n  border-right: 0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n}\n\n@supports selector(:dir(rtl)) {\n  .alert-button:last-child:dir(rtl) {\n    border-right: 0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n  }\n}\n\n.alert-button.ion-activated {\n  background-color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.1);\n}\n\n.alert-button-role-destructive,\n.alert-button-role-destructive.ion-activated,\n.alert-button-role-destructive.ion-focused {\n  color: var(--ion-color-danger, #c5000f);\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the alert\n   *\n   * @prop --min-width: Minimum width of the alert\n   * @prop --width: Width of the alert\n   * @prop --max-width: Maximum width of the alert\n   *\n   * @prop --min-height: Minimum height of the alert\n   * @prop --height: Height of the alert\n   * @prop --max-height: Maximum height of the alert\n   *\n   * @prop --backdrop-opacity: Opacity of the backdrop\n   */\n  --min-width: 250px;\n  --width: auto;\n  --min-height: auto;\n  --height: auto;\n  --max-height: 90%;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  font-family: var(--ion-font-family, inherit);\n  contain: strict;\n  touch-action: none;\n  user-select: none;\n  z-index: 1001;\n}\n\n:host(.overlay-hidden) {\n  display: none;\n}\n\n:host(.alert-top) {\n  padding-top: 50px;\n  align-items: flex-start;\n}\n\n.alert-wrapper {\n  display: flex;\n  flex-direction: column;\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  background: var(--background);\n  contain: content;\n  opacity: 0;\n  z-index: 10;\n}\n\n.alert-title {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n.alert-sub-title {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 5px;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  font-weight: normal;\n}\n\n/**\n * Alert has a maximum height in scenarios\n * such as the MD alert on tablet devices.\n * As a result, we need to make sure the inner\n * containers can scroll otherwise content\n * may be cut off.\n */\n.alert-message,\n.alert-input-group {\n  box-sizing: border-box;\n  -webkit-overflow-scrolling: touch;\n  overflow-y: auto;\n  overscroll-behavior-y: contain;\n}\n\n.alert-checkbox-label,\n.alert-radio-label {\n  /**\n   * This allows long words to wrap to the next line\n   * instead of flowing outside of the container.\n   *\n   * The \"anywhere\" keyword should be used instead\n   * of the \"break-word\" keyword since the parent\n   * container is using flexbox. Flex relies on min-content and\n   * max-content intrinsic sizes to structure the layout. Flex will\n   * wrap content only until it reaches its min-content intrinsic size\n   * which in this case is equal to the longest word in this container.\n   * \"break-word\" does not shrink the min-content intrinsic size\n   * of the flex item which causes the long word to still overflow.\n   * \"anywhere\" on the other hand does shrink the min-content\n   * intrinsic size which allows the long word to wrap to the next line.\n   */\n  overflow-wrap: anywhere;\n}\n\n/**\n  * Scrollbars on mobile devices will be hidden.\n  * Users can still scroll the content by swiping.\n  * If a user has a fine pointing device, such as a\n  * mouse or trackpad, then scrollbars will be\n  * visible. This allows users to scroll the\n  * content with their pointing device.\n  * Otherwise, the user would have to use the\n  * keyboard to navigate through the options.\n  * This may not be intuitive for users who\n  * are not familiar with keyboard navigation.\n  */\n@media (any-pointer: coarse) {\n  .alert-checkbox-group::-webkit-scrollbar,\n  .alert-radio-group::-webkit-scrollbar,\n  .alert-message::-webkit-scrollbar {\n    display: none;\n  }\n}\n.alert-input {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  width: 100%;\n  border: 0;\n  background: inherit;\n  font: inherit;\n  box-sizing: border-box;\n}\n\n.alert-button-group {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n}\n\n.alert-button-group-vertical {\n  flex-direction: column;\n  flex-wrap: nowrap;\n}\n\n.alert-button {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: block;\n  border: 0;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  z-index: 0;\n}\n\n.alert-button.ion-focused,\n.alert-tappable.ion-focused {\n  background: var(--ion-color-step-100, var(--ion-background-color-step-100, #e6e6e6));\n}\n\n.alert-button-inner {\n  display: flex;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  min-height: inherit;\n}\n\n.alert-input-disabled,\n.alert-checkbox-button-disabled .alert-button-inner,\n.alert-radio-button-disabled .alert-button-inner {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n.alert-tappable {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  display: flex;\n  width: 100%;\n  border: 0;\n  background: transparent;\n  font-size: inherit;\n  line-height: initial;\n  text-align: start;\n  appearance: none;\n  contain: content;\n}\n\n.alert-button,\n.alert-checkbox,\n.alert-input,\n.alert-radio {\n  outline: none;\n}\n\n.alert-radio-icon,\n.alert-checkbox-icon,\n.alert-checkbox-inner {\n  box-sizing: border-box;\n}\n\ntextarea.alert-input {\n  min-height: 37px;\n  resize: none;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Large display requirements for MD Alert:\n * 1. Maintain a minimum of 48px distance from the leading and\n * trailing edges of the screen. (48px * 2 = 96px)\n * 2. The width can increase up to 560px.\n * 3. The height can increase up to 560px.\n * Source: https://m2.material.io/components/dialogs#behavior\n */\n:host {\n  --background: var(--ion-overlay-background-color, var(--ion-background-color, #fff));\n  --max-width: 280px;\n  --backdrop-opacity: var(--ion-backdrop-opacity, 0.32);\n  font-size: 0.875rem;\n}\n\n.alert-wrapper {\n  border-radius: 4px;\n  box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.alert-head {\n  -webkit-padding-start: 23px;\n  padding-inline-start: 23px;\n  -webkit-padding-end: 23px;\n  padding-inline-end: 23px;\n  padding-top: 20px;\n  padding-bottom: 15px;\n  text-align: start;\n}\n\n.alert-title {\n  color: var(--ion-text-color, #000);\n  font-size: 1.25rem;\n  font-weight: 500;\n}\n\n.alert-sub-title {\n  color: var(--ion-text-color, #000);\n  font-size: 1rem;\n}\n\n.alert-message,\n.alert-input-group {\n  -webkit-padding-start: 24px;\n  padding-inline-start: 24px;\n  -webkit-padding-end: 24px;\n  padding-inline-end: 24px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  color: var(--ion-color-step-550, var(--ion-text-color-step-450, #737373));\n}\n\n.alert-message {\n  font-size: 1rem;\n}\n\n/**\n * MD Alerts on tablets can expand vertically up to\n * a total maximum height. We only want to set a max-height\n * on mobile phones.\n */\n@media screen and (max-width: 767px) {\n  .alert-message {\n    max-height: 266px;\n  }\n}\n.alert-message:empty {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n.alert-head + .alert-message {\n  padding-top: 0;\n}\n\n.alert-input {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  border-bottom: 1px solid var(--ion-color-step-150, var(--ion-background-color-step-150, #d9d9d9));\n  color: var(--ion-text-color, #000);\n}\n.alert-input::placeholder {\n  color: var(--ion-placeholder-color, var(--ion-color-step-400, var(--ion-text-color-step-600, #999999)));\n  font-family: inherit;\n  font-weight: inherit;\n}\n.alert-input::-ms-clear {\n  display: none;\n}\n\n.alert-input:focus {\n  margin-bottom: 4px;\n  border-bottom: 2px solid var(--ion-color-primary, #0054e9);\n}\n\n.alert-radio-group,\n.alert-checkbox-group {\n  position: relative;\n  border-top: 1px solid var(--ion-color-step-150, var(--ion-background-color-step-150, #d9d9d9));\n  border-bottom: 1px solid var(--ion-color-step-150, var(--ion-background-color-step-150, #d9d9d9));\n  overflow: auto;\n}\n\n/**\n * MD Alerts on tablets can expand vertically up to\n * a total maximum height. We only want to set a max-height\n * on mobile phones.\n */\n@media screen and (max-width: 767px) {\n  .alert-radio-group,\n  .alert-checkbox-group {\n    max-height: 266px;\n  }\n}\n.alert-tappable {\n  position: relative;\n  min-height: 48px;\n}\n\n.alert-radio-label {\n  -webkit-padding-start: 52px;\n  padding-inline-start: 52px;\n  -webkit-padding-end: 26px;\n  padding-inline-end: 26px;\n  padding-top: 13px;\n  padding-bottom: 13px;\n  flex: 1;\n  color: var(--ion-color-step-850, var(--ion-text-color-step-150, #262626));\n  font-size: 1rem;\n}\n\n.alert-radio-icon {\n  top: 0;\n  border-radius: 50%;\n  display: block;\n  position: relative;\n  width: 20px;\n  height: 20px;\n  border-width: 2px;\n  border-style: solid;\n  border-color: var(--ion-color-step-550, var(--ion-background-color-step-550, #737373));\n}\n.alert-radio-icon {\n  inset-inline-start: 26px;\n}\n\n.alert-radio-inner {\n  top: 3px;\n  border-radius: 50%;\n  position: absolute;\n  width: 10px;\n  height: 10px;\n  transform: scale3d(0, 0, 0);\n  transition: transform 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  background-color: var(--ion-color-primary, #0054e9);\n}\n.alert-radio-inner {\n  inset-inline-start: 3px;\n}\n\n[aria-checked=true] .alert-radio-label {\n  color: var(--ion-color-step-850, var(--ion-text-color-step-150, #262626));\n}\n\n[aria-checked=true] .alert-radio-icon {\n  border-color: var(--ion-color-primary, #0054e9);\n}\n\n[aria-checked=true] .alert-radio-inner {\n  transform: scale3d(1, 1, 1);\n}\n\n.alert-checkbox-label {\n  -webkit-padding-start: 53px;\n  padding-inline-start: 53px;\n  -webkit-padding-end: 26px;\n  padding-inline-end: 26px;\n  padding-top: 13px;\n  padding-bottom: 13px;\n  flex: 1;\n  width: calc(100% - 53px);\n  color: var(--ion-color-step-850, var(--ion-text-color-step-150, #262626));\n  font-size: 1rem;\n}\n\n.alert-checkbox-icon {\n  top: 0;\n  border-radius: 2px;\n  position: relative;\n  width: 16px;\n  height: 16px;\n  border-width: 2px;\n  border-style: solid;\n  border-color: var(--ion-color-step-550, var(--ion-background-color-step-550, #737373));\n  contain: strict;\n}\n.alert-checkbox-icon {\n  inset-inline-start: 26px;\n}\n\n[aria-checked=true] .alert-checkbox-icon {\n  border-color: var(--ion-color-primary, #0054e9);\n  background-color: var(--ion-color-primary, #0054e9);\n}\n\n[aria-checked=true] .alert-checkbox-inner {\n  top: 0;\n  position: absolute;\n  width: 6px;\n  height: 10px;\n  transform: rotate(45deg);\n  border-width: 2px;\n  border-top-width: 0;\n  border-left-width: 0;\n  border-style: solid;\n  border-color: var(--ion-color-primary-contrast, #fff);\n}\n[aria-checked=true] .alert-checkbox-inner {\n  inset-inline-start: 3px;\n}\n\n.alert-button-group {\n  -webkit-padding-start: 8px;\n  padding-inline-start: 8px;\n  -webkit-padding-end: 8px;\n  padding-inline-end: 8px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  box-sizing: border-box;\n  flex-wrap: wrap-reverse;\n  justify-content: flex-end;\n}\n\n.alert-button {\n  border-radius: 2px;\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-padding-start: 10px;\n  padding-inline-start: 10px;\n  -webkit-padding-end: 10px;\n  padding-inline-end: 10px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  position: relative;\n  background-color: transparent;\n  color: var(--ion-color-primary, #0054e9);\n  font-weight: 500;\n  text-align: end;\n  text-transform: uppercase;\n  overflow: hidden;\n}\n\n.alert-button-inner {\n  justify-content: flex-end;\n}\n\n/**\n * MD alerts should scale up to 560px x 560px\n * on tablet dimensions.\n */\n@media screen and (min-width: 768px) {\n  :host {\n    --max-width: min(100vw - 96px, 560px);\n    --max-height: min(100vh - 96px, 560px);\n  }\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, forceUpdate, h } from \"@stencil/core\";\nimport { ENABLE_HTML_CONTENT_DEFAULT } from \"../../utils/config\";\nimport { createButtonActiveGesture } from \"../../utils/gesture/button-active\";\nimport { raf } from \"../../utils/helpers\";\nimport { createLockController } from \"../../utils/lock-controller\";\nimport { createDelegateController, createTriggerController, BACKDROP, dismiss, eventMethod, isCancel, prepareOverlay, present, safeCall, setOverlayId, } from \"../../utils/overlays\";\nimport { sanitizeDOMString } from \"../../utils/sanitization/index\";\nimport { getClassMap } from \"../../utils/theme\";\nimport { config } from \"../../global/config\";\nimport { getIonMode } from \"../../global/ionic-global\";\nimport { iosEnterAnimation } from \"./animations/ios.enter\";\nimport { iosLeaveAnimation } from \"./animations/ios.leave\";\nimport { mdEnterAnimation } from \"./animations/md.enter\";\nimport { mdLeaveAnimation } from \"./animations/md.leave\";\n// TODO(FW-2832): types\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class Alert {\n    constructor() {\n        this.delegateController = createDelegateController(this);\n        this.lockController = createLockController();\n        this.triggerController = createTriggerController();\n        this.customHTMLEnabled = config.get('innerHTMLTemplatesEnabled', ENABLE_HTML_CONTENT_DEFAULT);\n        this.processedInputs = [];\n        this.processedButtons = [];\n        this.presented = false;\n        this.onBackdropTap = () => {\n            this.dismiss(undefined, BACKDROP);\n        };\n        this.dispatchCancelHandler = (ev) => {\n            const role = ev.detail.role;\n            if (isCancel(role)) {\n                const cancelButton = this.processedButtons.find((b) => b.role === 'cancel');\n                this.callButtonHandler(cancelButton);\n            }\n        };\n        this.overlayIndex = undefined;\n        this.delegate = undefined;\n        this.hasController = false;\n        this.keyboardClose = true;\n        this.enterAnimation = undefined;\n        this.leaveAnimation = undefined;\n        this.cssClass = undefined;\n        this.header = undefined;\n        this.subHeader = undefined;\n        this.message = undefined;\n        this.buttons = [];\n        this.inputs = [];\n        this.backdropDismiss = true;\n        this.translucent = false;\n        this.animated = true;\n        this.htmlAttributes = undefined;\n        this.isOpen = false;\n        this.trigger = undefined;\n    }\n    onIsOpenChange(newValue, oldValue) {\n        if (newValue === true && oldValue === false) {\n            this.present();\n        }\n        else if (newValue === false && oldValue === true) {\n            this.dismiss();\n        }\n    }\n    triggerChanged() {\n        const { trigger, el, triggerController } = this;\n        if (trigger) {\n            triggerController.addClickListener(el, trigger);\n        }\n    }\n    onKeydown(ev) {\n        const inputTypes = new Set(this.processedInputs.map((i) => i.type));\n        /**\n         * Based on keyboard navigation requirements, the\n         * checkbox should not respond to the enter keydown event.\n         */\n        if (inputTypes.has('checkbox') && ev.key === 'Enter') {\n            ev.preventDefault();\n            return;\n        }\n        // The only inputs we want to navigate between using arrow keys are the radios\n        // ignore the keydown event if it is not on a radio button\n        if (!inputTypes.has('radio') ||\n            (ev.target && !this.el.contains(ev.target)) ||\n            ev.target.classList.contains('alert-button')) {\n            return;\n        }\n        // Get all radios inside of the radio group and then\n        // filter out disabled radios since we need to skip those\n        const query = this.el.querySelectorAll('.alert-radio');\n        const radios = Array.from(query).filter((radio) => !radio.disabled);\n        // The focused radio is the one that shares the same id as\n        // the event target\n        const index = radios.findIndex((radio) => radio.id === ev.target.id);\n        // We need to know what the next radio element should\n        // be in order to change the focus\n        let nextEl;\n        // If hitting arrow down or arrow right, move to the next radio\n        // If we're on the last radio, move to the first radio\n        if (['ArrowDown', 'ArrowRight'].includes(ev.key)) {\n            nextEl = index === radios.length - 1 ? radios[0] : radios[index + 1];\n        }\n        // If hitting arrow up or arrow left, move to the previous radio\n        // If we're on the first radio, move to the last radio\n        if (['ArrowUp', 'ArrowLeft'].includes(ev.key)) {\n            nextEl = index === 0 ? radios[radios.length - 1] : radios[index - 1];\n        }\n        if (nextEl && radios.includes(nextEl)) {\n            const nextProcessed = this.processedInputs.find((input) => input.id === (nextEl === null || nextEl === void 0 ? void 0 : nextEl.id));\n            if (nextProcessed) {\n                this.rbClick(nextProcessed);\n                nextEl.focus();\n            }\n        }\n    }\n    buttonsChanged() {\n        const buttons = this.buttons;\n        this.processedButtons = buttons.map((btn) => {\n            return typeof btn === 'string' ? { text: btn, role: btn.toLowerCase() === 'cancel' ? 'cancel' : undefined } : btn;\n        });\n    }\n    inputsChanged() {\n        const inputs = this.inputs;\n        // Get the first input that is not disabled and the checked one\n        // If an enabled checked input exists, set it to be the focusable input\n        // otherwise we default to focus the first input\n        // This will only be used when the input is type radio\n        const first = inputs.find((input) => !input.disabled);\n        const checked = inputs.find((input) => input.checked && !input.disabled);\n        const focusable = checked || first;\n        // An alert can be created with several different inputs. Radios,\n        // checkboxes and inputs are all accepted, but they cannot be mixed.\n        const inputTypes = new Set(inputs.map((i) => i.type));\n        if (inputTypes.has('checkbox') && inputTypes.has('radio')) {\n            console.warn(`Alert cannot mix input types: ${Array.from(inputTypes.values()).join('/')}. Please see alert docs for more info.`);\n        }\n        this.inputType = inputTypes.values().next().value;\n        this.processedInputs = inputs.map((i, index) => {\n            var _a;\n            return ({\n                type: i.type || 'text',\n                name: i.name || `${index}`,\n                placeholder: i.placeholder || '',\n                value: i.value,\n                label: i.label,\n                checked: !!i.checked,\n                disabled: !!i.disabled,\n                id: i.id || `alert-input-${this.overlayIndex}-${index}`,\n                handler: i.handler,\n                min: i.min,\n                max: i.max,\n                cssClass: (_a = i.cssClass) !== null && _a !== void 0 ? _a : '',\n                attributes: i.attributes || {},\n                tabindex: i.type === 'radio' && i !== focusable ? -1 : 0,\n            });\n        });\n    }\n    connectedCallback() {\n        prepareOverlay(this.el);\n        this.triggerChanged();\n    }\n    componentWillLoad() {\n        var _a;\n        if (!((_a = this.htmlAttributes) === null || _a === void 0 ? void 0 : _a.id)) {\n            setOverlayId(this.el);\n        }\n        this.inputsChanged();\n        this.buttonsChanged();\n    }\n    disconnectedCallback() {\n        this.triggerController.removeClickListener();\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    componentDidLoad() {\n        /**\n         * Only create gesture if:\n         * 1. A gesture does not already exist\n         * 2. App is running in iOS mode\n         * 3. A wrapper ref exists\n         */\n        if (!this.gesture && getIonMode(this) === 'ios' && this.wrapperEl) {\n            this.gesture = createButtonActiveGesture(this.wrapperEl, (refEl) => refEl.classList.contains('alert-button'));\n            this.gesture.enable(true);\n        }\n        /**\n         * If alert was rendered with isOpen=\"true\"\n         * then we should open alert immediately.\n         */\n        if (this.isOpen === true) {\n            raf(() => this.present());\n        }\n        /**\n         * When binding values in frameworks such as Angular\n         * it is possible for the value to be set after the Web Component\n         * initializes but before the value watcher is set up in Stencil.\n         * As a result, the watcher callback may not be fired.\n         * We work around this by manually calling the watcher\n         * callback when the component has loaded and the watcher\n         * is configured.\n         */\n        this.triggerChanged();\n    }\n    /**\n     * Present the alert overlay after it has been created.\n     */\n    async present() {\n        const unlock = await this.lockController.lock();\n        await this.delegateController.attachViewToDom();\n        await present(this, 'alertEnter', iosEnterAnimation, mdEnterAnimation);\n        unlock();\n    }\n    /**\n     * Dismiss the alert overlay after it has been presented.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the alert.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the alert.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     *\n     * This is a no-op if the overlay has not been presented yet. If you want\n     * to remove an overlay from the DOM that was never presented, use the\n     * [remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\n     */\n    async dismiss(data, role) {\n        const unlock = await this.lockController.lock();\n        const dismissed = await dismiss(this, data, role, 'alertLeave', iosLeaveAnimation, mdLeaveAnimation);\n        if (dismissed) {\n            this.delegateController.removeViewFromDom();\n        }\n        unlock();\n        return dismissed;\n    }\n    /**\n     * Returns a promise that resolves when the alert did dismiss.\n     */\n    onDidDismiss() {\n        return eventMethod(this.el, 'ionAlertDidDismiss');\n    }\n    /**\n     * Returns a promise that resolves when the alert will dismiss.\n     */\n    onWillDismiss() {\n        return eventMethod(this.el, 'ionAlertWillDismiss');\n    }\n    rbClick(selectedInput) {\n        for (const input of this.processedInputs) {\n            input.checked = input === selectedInput;\n            input.tabindex = input === selectedInput ? 0 : -1;\n        }\n        this.activeId = selectedInput.id;\n        safeCall(selectedInput.handler, selectedInput);\n        forceUpdate(this);\n    }\n    cbClick(selectedInput) {\n        selectedInput.checked = !selectedInput.checked;\n        safeCall(selectedInput.handler, selectedInput);\n        forceUpdate(this);\n    }\n    async buttonClick(button) {\n        const role = button.role;\n        const values = this.getValues();\n        if (isCancel(role)) {\n            return this.dismiss({ values }, role);\n        }\n        const returnData = await this.callButtonHandler(button, values);\n        if (returnData !== false) {\n            return this.dismiss(Object.assign({ values }, returnData), button.role);\n        }\n        return false;\n    }\n    async callButtonHandler(button, data) {\n        if (button === null || button === void 0 ? void 0 : button.handler) {\n            // a handler has been provided, execute it\n            // pass the handler the values from the inputs\n            const returnData = await safeCall(button.handler, data);\n            if (returnData === false) {\n                // if the return value of the handler is false then do not dismiss\n                return false;\n            }\n            if (typeof returnData === 'object') {\n                return returnData;\n            }\n        }\n        return {};\n    }\n    getValues() {\n        if (this.processedInputs.length === 0) {\n            // this is an alert without any options/inputs at all\n            return undefined;\n        }\n        if (this.inputType === 'radio') {\n            // this is an alert with radio buttons (single value select)\n            // return the one value which is checked, otherwise undefined\n            const checkedInput = this.processedInputs.find((i) => !!i.checked);\n            return checkedInput ? checkedInput.value : undefined;\n        }\n        if (this.inputType === 'checkbox') {\n            // this is an alert with checkboxes (multiple value select)\n            // return an array of all the checked values\n            return this.processedInputs.filter((i) => i.checked).map((i) => i.value);\n        }\n        // this is an alert with text inputs\n        // return an object of all the values with the input name as the key\n        const values = {};\n        this.processedInputs.forEach((i) => {\n            values[i.name] = i.value || '';\n        });\n        return values;\n    }\n    renderAlertInputs() {\n        switch (this.inputType) {\n            case 'checkbox':\n                return this.renderCheckbox();\n            case 'radio':\n                return this.renderRadio();\n            default:\n                return this.renderInput();\n        }\n    }\n    renderCheckbox() {\n        const inputs = this.processedInputs;\n        const mode = getIonMode(this);\n        if (inputs.length === 0) {\n            return null;\n        }\n        return (h(\"div\", { class: \"alert-checkbox-group\" }, inputs.map((i) => (h(\"button\", { type: \"button\", onClick: () => this.cbClick(i), \"aria-checked\": `${i.checked}`, id: i.id, disabled: i.disabled, tabIndex: i.tabindex, role: \"checkbox\", class: Object.assign(Object.assign({}, getClassMap(i.cssClass)), { 'alert-tappable': true, 'alert-checkbox': true, 'alert-checkbox-button': true, 'ion-focusable': true, 'alert-checkbox-button-disabled': i.disabled || false }) }, h(\"div\", { class: \"alert-button-inner\" }, h(\"div\", { class: \"alert-checkbox-icon\" }, h(\"div\", { class: \"alert-checkbox-inner\" })), h(\"div\", { class: \"alert-checkbox-label\" }, i.label)), mode === 'md' && h(\"ion-ripple-effect\", null))))));\n    }\n    renderRadio() {\n        const inputs = this.processedInputs;\n        if (inputs.length === 0) {\n            return null;\n        }\n        return (h(\"div\", { class: \"alert-radio-group\", role: \"radiogroup\", \"aria-activedescendant\": this.activeId }, inputs.map((i) => (h(\"button\", { type: \"button\", onClick: () => this.rbClick(i), \"aria-checked\": `${i.checked}`, disabled: i.disabled, id: i.id, tabIndex: i.tabindex, class: Object.assign(Object.assign({}, getClassMap(i.cssClass)), { 'alert-radio-button': true, 'alert-tappable': true, 'alert-radio': true, 'ion-focusable': true, 'alert-radio-button-disabled': i.disabled || false }), role: \"radio\" }, h(\"div\", { class: \"alert-button-inner\" }, h(\"div\", { class: \"alert-radio-icon\" }, h(\"div\", { class: \"alert-radio-inner\" })), h(\"div\", { class: \"alert-radio-label\" }, i.label)))))));\n    }\n    renderInput() {\n        const inputs = this.processedInputs;\n        if (inputs.length === 0) {\n            return null;\n        }\n        return (h(\"div\", { class: \"alert-input-group\" }, inputs.map((i) => {\n            var _a, _b, _c, _d;\n            if (i.type === 'textarea') {\n                return (h(\"div\", { class: \"alert-input-wrapper\" }, h(\"textarea\", Object.assign({ placeholder: i.placeholder, value: i.value, id: i.id, tabIndex: i.tabindex }, i.attributes, { disabled: (_b = (_a = i.attributes) === null || _a === void 0 ? void 0 : _a.disabled) !== null && _b !== void 0 ? _b : i.disabled, class: inputClass(i), onInput: (e) => {\n                        var _a;\n                        i.value = e.target.value;\n                        if ((_a = i.attributes) === null || _a === void 0 ? void 0 : _a.onInput) {\n                            i.attributes.onInput(e);\n                        }\n                    } }))));\n            }\n            else {\n                return (h(\"div\", { class: \"alert-input-wrapper\" }, h(\"input\", Object.assign({ placeholder: i.placeholder, type: i.type, min: i.min, max: i.max, value: i.value, id: i.id, tabIndex: i.tabindex }, i.attributes, { disabled: (_d = (_c = i.attributes) === null || _c === void 0 ? void 0 : _c.disabled) !== null && _d !== void 0 ? _d : i.disabled, class: inputClass(i), onInput: (e) => {\n                        var _a;\n                        i.value = e.target.value;\n                        if ((_a = i.attributes) === null || _a === void 0 ? void 0 : _a.onInput) {\n                            i.attributes.onInput(e);\n                        }\n                    } }))));\n            }\n        })));\n    }\n    renderAlertButtons() {\n        const buttons = this.processedButtons;\n        const mode = getIonMode(this);\n        const alertButtonGroupClass = {\n            'alert-button-group': true,\n            'alert-button-group-vertical': buttons.length > 2,\n        };\n        return (h(\"div\", { class: alertButtonGroupClass }, buttons.map((button) => (h(\"button\", Object.assign({}, button.htmlAttributes, { type: \"button\", id: button.id, class: buttonClass(button), tabIndex: 0, onClick: () => this.buttonClick(button) }), h(\"span\", { class: \"alert-button-inner\" }, button.text), mode === 'md' && h(\"ion-ripple-effect\", null))))));\n    }\n    renderAlertMessage(msgId) {\n        const { customHTMLEnabled, message } = this;\n        if (customHTMLEnabled) {\n            return h(\"div\", { id: msgId, class: \"alert-message\", innerHTML: sanitizeDOMString(message) });\n        }\n        return (h(\"div\", { id: msgId, class: \"alert-message\" }, message));\n    }\n    render() {\n        const { overlayIndex, header, subHeader, message, htmlAttributes } = this;\n        const mode = getIonMode(this);\n        const hdrId = `alert-${overlayIndex}-hdr`;\n        const subHdrId = `alert-${overlayIndex}-sub-hdr`;\n        const msgId = `alert-${overlayIndex}-msg`;\n        const role = this.inputs.length > 0 || this.buttons.length > 0 ? 'alertdialog' : 'alert';\n        /**\n         * If the header is defined, use that. Otherwise, fall back to the subHeader.\n         * If neither is defined, don't set aria-labelledby.\n         */\n        const ariaLabelledBy = header ? hdrId : subHeader ? subHdrId : null;\n        return (h(Host, Object.assign({ key: 'c7d53f48b359f2bc3480a2e1ba34948fc9378fb0', role: role, \"aria-modal\": \"true\", \"aria-labelledby\": ariaLabelledBy, \"aria-describedby\": message !== undefined ? msgId : null, tabindex: \"-1\" }, htmlAttributes, { style: {\n                zIndex: `${20000 + overlayIndex}`,\n            }, class: Object.assign(Object.assign({}, getClassMap(this.cssClass)), { [mode]: true, 'overlay-hidden': true, 'alert-translucent': this.translucent }), onIonAlertWillDismiss: this.dispatchCancelHandler, onIonBackdropTap: this.onBackdropTap }), h(\"ion-backdrop\", { key: '18c7e6b5d63435d9a6a82bda951158e7e1af6e92', tappable: this.backdropDismiss }), h(\"div\", { key: 'e35e1a4b81286976c8a6bab570c986f3196b21f4', tabindex: \"0\" }), h(\"div\", { key: '9089864c80d96ed834bf723f3de863cf1c4a5b97', class: \"alert-wrapper ion-overlay-wrapper\", ref: (el) => (this.wrapperEl = el) }, h(\"div\", { key: 'dd600f02c84352059c6cdf98821b9c9a831bcdcb', class: \"alert-head\" }, header && (h(\"h2\", { key: '11afb605e1ccefc889fbdd2533d491bea8fbf183', id: hdrId, class: \"alert-title\" }, header)), subHeader && (h(\"h2\", { key: 'e53b0613d09d26e5a2cd7c9c6e63ec2535625ce5', id: subHdrId, class: \"alert-sub-title\" }, subHeader))), this.renderAlertMessage(msgId), this.renderAlertInputs(), this.renderAlertButtons()), h(\"div\", { key: 'cef60ec8b34c9aec8bc698f16f55324d1ce67c72', tabindex: \"0\" })));\n    }\n    static get is() { return \"ion-alert\"; }\n    static get encapsulation() { return \"scoped\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"alert.ios.scss\"],\n            \"md\": [\"alert.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"alert.ios.css\"],\n            \"md\": [\"alert.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"overlayIndex\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"overlay-index\",\n                \"reflect\": false\n            },\n            \"delegate\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"FrameworkDelegate\",\n                    \"resolved\": \"FrameworkDelegate | undefined\",\n                    \"references\": {\n                        \"FrameworkDelegate\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::FrameworkDelegate\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                }\n            },\n            \"hasController\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"has-controller\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"keyboardClose\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the keyboard will be automatically dismissed when the overlay is presented.\"\n                },\n                \"attribute\": \"keyboard-close\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"enterAnimation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Animation to use when the alert is presented.\"\n                }\n            },\n            \"leaveAnimation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Animation to use when the alert is dismissed.\"\n                }\n            },\n            \"cssClass\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | string[]\",\n                    \"resolved\": \"string | string[] | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Additional classes to apply for custom CSS. If multiple classes are\\nprovided they should be separated by spaces.\"\n                },\n                \"attribute\": \"css-class\",\n                \"reflect\": false\n            },\n            \"header\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The main title in the heading of the alert.\"\n                },\n                \"attribute\": \"header\",\n                \"reflect\": false\n            },\n            \"subHeader\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The subtitle in the heading of the alert. Displayed under the title.\"\n                },\n                \"attribute\": \"sub-header\",\n                \"reflect\": false\n            },\n            \"message\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | IonicSafeString\",\n                    \"resolved\": \"IonicSafeString | string | undefined\",\n                    \"references\": {\n                        \"IonicSafeString\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/sanitization\",\n                            \"id\": \"src/utils/sanitization/index.ts::IonicSafeString\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The main message to be displayed in the alert.\\n`message` can accept either plaintext or HTML as a string.\\nTo display characters normally reserved for HTML, they\\nmust be escaped. For example `<Ionic>` would become\\n`&lt;Ionic&gt;`\\n\\nFor more information: [Security Documentation](https://ionicframework.com/docs/faq/security)\\n\\nThis property accepts custom HTML as a string.\\nContent is parsed as plaintext by default.\\n`innerHTMLTemplatesEnabled` must be set to `true` in the Ionic config\\nbefore custom HTML can be used.\"\n                },\n                \"attribute\": \"message\",\n                \"reflect\": false\n            },\n            \"buttons\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"(AlertButton | string)[]\",\n                    \"resolved\": \"(string | AlertButton)[]\",\n                    \"references\": {\n                        \"AlertButton\": {\n                            \"location\": \"import\",\n                            \"path\": \"./alert-interface\",\n                            \"id\": \"src/components/alert/alert-interface.ts::AlertButton\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Array of buttons to be added to the alert.\"\n                },\n                \"defaultValue\": \"[]\"\n            },\n            \"inputs\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"AlertInput[]\",\n                    \"resolved\": \"AlertInput[]\",\n                    \"references\": {\n                        \"AlertInput\": {\n                            \"location\": \"import\",\n                            \"path\": \"./alert-interface\",\n                            \"id\": \"src/components/alert/alert-interface.ts::AlertInput\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Array of input to show in the alert.\"\n                },\n                \"defaultValue\": \"[]\"\n            },\n            \"backdropDismiss\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the alert will be dismissed when the backdrop is clicked.\"\n                },\n                \"attribute\": \"backdrop-dismiss\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"translucent\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the alert will be translucent.\\nOnly applies when the mode is `\\\"ios\\\"` and the device supports\\n[`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\"\n                },\n                \"attribute\": \"translucent\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"animated\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the alert will animate.\"\n                },\n                \"attribute\": \"animated\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"htmlAttributes\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"{ [key: string]: any }\",\n                    \"resolved\": \"undefined | { [key: string]: any; }\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Additional attributes to pass to the alert.\"\n                }\n            },\n            \"isOpen\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the alert will open. If `false`, the alert will close.\\nUse this if you need finer grained control over presentation, otherwise\\njust use the alertController or the `trigger` property.\\nNote: `isOpen` will not automatically be set back to `false` when\\nthe alert dismisses. You will need to do that in your code.\"\n                },\n                \"attribute\": \"is-open\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"trigger\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"An ID corresponding to the trigger element that\\ncauses the alert to open when clicked.\"\n                },\n                \"attribute\": \"trigger\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"didPresent\",\n                \"name\": \"ionAlertDidPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the alert has presented.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willPresent\",\n                \"name\": \"ionAlertWillPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the alert has presented.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willDismiss\",\n                \"name\": \"ionAlertWillDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the alert has dismissed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"didDismiss\",\n                \"name\": \"ionAlertDidDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the alert has dismissed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"didPresentShorthand\",\n                \"name\": \"didPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the alert has presented.\\nShorthand for ionAlertWillDismiss.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willPresentShorthand\",\n                \"name\": \"willPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the alert has presented.\\nShorthand for ionAlertWillPresent.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willDismissShorthand\",\n                \"name\": \"willDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the alert has dismissed.\\nShorthand for ionAlertWillDismiss.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"didDismissShorthand\",\n                \"name\": \"didDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the alert has dismissed.\\nShorthand for ionAlertDidDismiss.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"present\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Present the alert overlay after it has been created.\",\n                    \"tags\": []\n                }\n            },\n            \"dismiss\": {\n                \"complexType\": {\n                    \"signature\": \"(data?: any, role?: string) => Promise<boolean>\",\n                    \"parameters\": [{\n                            \"name\": \"data\",\n                            \"type\": \"any\",\n                            \"docs\": \"Any data to emit in the dismiss events.\"\n                        }, {\n                            \"name\": \"role\",\n                            \"type\": \"string | undefined\",\n                            \"docs\": \"The role of the element that is dismissing the alert.\\nThis can be useful in a button handler for determining which button was\\nclicked to dismiss the alert.\\nSome examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n\\nThis is a no-op if the overlay has not been presented yet. If you want\\nto remove an overlay from the DOM that was never presented, use the\\n[remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Dismiss the alert overlay after it has been presented.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"data Any data to emit in the dismiss events.\"\n                        }, {\n                            \"name\": \"param\",\n                            \"text\": \"role The role of the element that is dismissing the alert.\\nThis can be useful in a button handler for determining which button was\\nclicked to dismiss the alert.\\nSome examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n\\nThis is a no-op if the overlay has not been presented yet. If you want\\nto remove an overlay from the DOM that was never presented, use the\\n[remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\"\n                        }]\n                }\n            },\n            \"onDidDismiss\": {\n                \"complexType\": {\n                    \"signature\": \"<T = any>() => Promise<OverlayEventDetail<T>>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        },\n                        \"T\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::T\"\n                        }\n                    },\n                    \"return\": \"Promise<OverlayEventDetail<T>>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns a promise that resolves when the alert did dismiss.\",\n                    \"tags\": []\n                }\n            },\n            \"onWillDismiss\": {\n                \"complexType\": {\n                    \"signature\": \"<T = any>() => Promise<OverlayEventDetail<T>>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        },\n                        \"T\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::T\"\n                        }\n                    },\n                    \"return\": \"Promise<OverlayEventDetail<T>>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns a promise that resolves when the alert will dismiss.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"isOpen\",\n                \"methodName\": \"onIsOpenChange\"\n            }, {\n                \"propName\": \"trigger\",\n                \"methodName\": \"triggerChanged\"\n            }, {\n                \"propName\": \"buttons\",\n                \"methodName\": \"buttonsChanged\"\n            }, {\n                \"propName\": \"inputs\",\n                \"methodName\": \"inputsChanged\"\n            }];\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"keydown\",\n                \"method\": \"onKeydown\",\n                \"target\": \"document\",\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\nconst inputClass = (input) => {\n    var _a, _b, _c;\n    return Object.assign(Object.assign({ 'alert-input': true, 'alert-input-disabled': ((_b = (_a = input.attributes) === null || _a === void 0 ? void 0 : _a.disabled) !== null && _b !== void 0 ? _b : input.disabled) || false }, getClassMap(input.cssClass)), getClassMap(input.attributes ? (_c = input.attributes.class) === null || _c === void 0 ? void 0 : _c.toString() : ''));\n};\nconst buttonClass = (button) => {\n    return Object.assign({ 'alert-button': true, 'ion-focusable': true, 'ion-activatable': true, [`alert-button-role-${button.role}`]: button.role !== undefined }, getClassMap(button.cssClass));\n};\n","html.plt-mobile ion-app {\n  user-select: none;\n}\n\n/**\n * This works around a WebKit issue\n * where user-select: none was causing\n * contenteditable to not be selectable,\n * even though inputs and textareas are selectable.\n */\nhtml.plt-mobile ion-app [contenteditable] {\n  user-select: text;\n}\n\nion-app.force-statusbar-padding {\n  --ion-safe-area-top: 20px;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Build, Host, h } from \"@stencil/core\";\nimport { shouldUseCloseWatcher } from \"../../utils/hardware-back-button\";\nimport { printIonWarning } from \"../../utils/logging/index\";\nimport { isPlatform } from \"../../utils/platform\";\nimport { config } from \"../../global/config\";\nimport { getIonMode } from \"../../global/ionic-global\";\nexport class App {\n    componentDidLoad() {\n        if (Build.isBrowser) {\n            rIC(async () => {\n                const isHybrid = isPlatform(window, 'hybrid');\n                if (!config.getBoolean('_testing')) {\n                    import('../../utils/tap-click').then((module) => module.startTapClick(config));\n                }\n                if (config.getBoolean('statusTap', isHybrid)) {\n                    import('../../utils/status-tap').then((module) => module.startStatusTap());\n                }\n                if (config.getBoolean('inputShims', needInputShims())) {\n                    /**\n                     * needInputShims() ensures that only iOS and Android\n                     * platforms proceed into this block.\n                     */\n                    const platform = isPlatform(window, 'ios') ? 'ios' : 'android';\n                    import('../../utils/input-shims/input-shims').then((module) => module.startInputShims(config, platform));\n                }\n                const hardwareBackButtonModule = await import('../../utils/hardware-back-button');\n                const supportsHardwareBackButtonEvents = isHybrid || shouldUseCloseWatcher();\n                if (config.getBoolean('hardwareBackButton', supportsHardwareBackButtonEvents)) {\n                    hardwareBackButtonModule.startHardwareBackButton();\n                }\n                else {\n                    /**\n                     * If an app sets hardwareBackButton: false and experimentalCloseWatcher: true\n                     * then the close watcher will not be used.\n                     */\n                    if (shouldUseCloseWatcher()) {\n                        printIonWarning('experimentalCloseWatcher was set to `true`, but hardwareBackButton was set to `false`. Both config options must be `true` for the Close Watcher API to be used.');\n                    }\n                    hardwareBackButtonModule.blockHardwareBackButton();\n                }\n                if (typeof window !== 'undefined') {\n                    import('../../utils/keyboard/keyboard').then((module) => module.startKeyboardAssist(window));\n                }\n                import('../../utils/focus-visible').then((module) => (this.focusVisible = module.startFocusVisible()));\n            });\n        }\n    }\n    /**\n     * @internal\n     * Used to set focus on an element that uses `ion-focusable`.\n     * Do not use this if focusing the element as a result of a keyboard\n     * event as the focus utility should handle this for us. This method\n     * should be used when we want to programmatically focus an element as\n     * a result of another user action. (Ex: We focus the first element\n     * inside of a popover when the user presents it, but the popover is not always\n     * presented as a result of keyboard action.)\n     */\n    async setFocus(elements) {\n        if (this.focusVisible) {\n            this.focusVisible.setFocus(elements);\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: 'a562850f242d9d45573e35efdd4bd178254677ef', class: {\n                [mode]: true,\n                'ion-page': true,\n                'force-statusbar-padding': config.getBoolean('_forceStatusbarPadding'),\n            } }));\n    }\n    static get is() { return \"ion-app\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"app.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"app.css\"]\n        };\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"(elements: HTMLElement[]) => Promise<void>\",\n                    \"parameters\": [{\n                            \"name\": \"elements\",\n                            \"type\": \"HTMLElement[]\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"HTMLElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLElement\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": \"Used to set focus on an element that uses `ion-focusable`.\\nDo not use this if focusing the element as a result of a keyboard\\nevent as the focus utility should handle this for us. This method\\nshould be used when we want to programmatically focus an element as\\na result of another user action. (Ex: We focus the first element\\ninside of a popover when the user presents it, but the popover is not always\\npresented as a result of keyboard action.)\"\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\nconst needInputShims = () => {\n    /**\n     * iOS always needs input shims\n     */\n    const needsShimsIOS = isPlatform(window, 'ios') && isPlatform(window, 'mobile');\n    if (needsShimsIOS) {\n        return true;\n    }\n    /**\n     * Android only needs input shims when running\n     * in the browser and only if the browser is using the\n     * new Chrome 108+ resize behavior: https://developer.chrome.com/blog/viewport-resize-behavior/\n     */\n    const isAndroidMobileWeb = isPlatform(window, 'android') && isPlatform(window, 'mobileweb');\n    if (isAndroidMobileWeb) {\n        return true;\n    }\n    return false;\n};\nconst rIC = (callback) => {\n    if ('requestIdleCallback' in window) {\n        window.requestIdleCallback(callback);\n    }\n    else {\n        setTimeout(callback, 32);\n    }\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --border-radius: Border radius of the avatar and inner image\n   */\n  border-radius: var(--border-radius);\n  display: block;\n}\n\n::slotted(ion-img),\n::slotted(img) {\n  border-radius: var(--border-radius);\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  overflow: hidden;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --border-radius: 50%;\n  width: 48px;\n  height: 48px;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --border-radius: Border radius of the avatar and inner image\n   */\n  border-radius: var(--border-radius);\n  display: block;\n}\n\n::slotted(ion-img),\n::slotted(img) {\n  border-radius: var(--border-radius);\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  overflow: hidden;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --border-radius: 50%;\n  width: 64px;\n  height: 64px;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { getIonMode } from \"../../global/ionic-global\";\nexport class Avatar {\n    render() {\n        return (h(Host, { key: 'dc1e3cd535e419eebe5599574fd2393ebfde8bbc', class: getIonMode(this) }, h(\"slot\", { key: 'edb8441c063ea592b41345ea97d88ecd90cb3052' })));\n    }\n    static get is() { return \"ion-avatar\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"avatar.ios.scss\"],\n            \"md\": [\"avatar.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"avatar.ios.css\"],\n            \"md\": [\"avatar.md.css\"]\n        };\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: block;\n  position: absolute;\n  transform: translateZ(0);\n  contain: strict;\n  cursor: pointer;\n  opacity: 0.01;\n  touch-action: none;\n  z-index: 2;\n}\n\n:host(.backdrop-hide) {\n  background: transparent;\n}\n\n:host(.backdrop-no-tappable) {\n  cursor: auto;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  background-color: var(--ion-backdrop-color, #000);\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: block;\n  position: absolute;\n  transform: translateZ(0);\n  contain: strict;\n  cursor: pointer;\n  opacity: 0.01;\n  touch-action: none;\n  z-index: 2;\n}\n\n:host(.backdrop-hide) {\n  background: transparent;\n}\n\n:host(.backdrop-no-tappable) {\n  cursor: auto;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  background-color: var(--ion-backdrop-color, #000);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { getIonMode } from \"../../global/ionic-global\";\nexport class Backdrop {\n    constructor() {\n        this.visible = true;\n        this.tappable = true;\n        this.stopPropagation = true;\n    }\n    onMouseDown(ev) {\n        this.emitTap(ev);\n    }\n    emitTap(ev) {\n        if (this.stopPropagation) {\n            ev.preventDefault();\n            ev.stopPropagation();\n        }\n        if (this.tappable) {\n            this.ionBackdropTap.emit();\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: 'c803b4302c8e722064feb03dafe3cb6e190b4f2b', tabindex: \"-1\", \"aria-hidden\": \"true\", class: {\n                [mode]: true,\n                'backdrop-hide': !this.visible,\n                'backdrop-no-tappable': !this.tappable,\n            } }));\n    }\n    static get is() { return \"ion-backdrop\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"backdrop.ios.scss\"],\n            \"md\": [\"backdrop.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"backdrop.ios.css\"],\n            \"md\": [\"backdrop.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"visible\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the backdrop will be visible.\"\n                },\n                \"attribute\": \"visible\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"tappable\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the backdrop will can be clicked and will emit the `ionBackdropTap` event.\"\n                },\n                \"attribute\": \"tappable\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"stopPropagation\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the backdrop will stop propagation on tap.\"\n                },\n                \"attribute\": \"stop-propagation\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionBackdropTap\",\n                \"name\": \"ionBackdropTap\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the backdrop is tapped.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"click\",\n                \"method\": \"onMouseDown\",\n                \"target\": undefined,\n                \"capture\": true,\n                \"passive\": false\n            }];\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the button\n   * @prop --background-activated: Background of the button when pressed. Note: setting this will interfere with the Material Design ripple.\n   * @prop --background-activated-opacity: Opacity of the button when pressed\n   * @prop --background-focused: Background of the button when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the button when focused with the tab key\n   * @prop --background-hover: Background of the button on hover\n   * @prop --background-hover-opacity: Opacity of the background on hover\n   *\n   * @prop --color: Text color of the button\n   * @prop --color-activated: Text color of the button when pressed\n   * @prop --color-focused: Text color of the button when focused with the tab key\n   * @prop --color-hover: Text color of the button when hover\n   *\n   * @prop --transition: Transition of the button\n   *\n   * @prop --border-radius: Border radius of the button\n   * @prop --border-width: Border width of the button\n   * @prop --border-style: Border style of the button\n   * @prop --border-color: Border color of the button\n   *\n   * @prop --ripple-color: Color of the button ripple effect\n   *\n   * @prop --box-shadow: Box shadow of the button\n   * @prop --opacity: Opacity of the button\n   *\n   * @prop --padding-top: Top padding of the button\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button\n   * @prop --padding-bottom: Bottom padding of the button\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button\n   */\n  --overflow: hidden;\n  --ripple-color: currentColor;\n  --border-width: initial;\n  --border-color: initial;\n  --border-style: initial;\n  --color-activated: var(--color);\n  --color-focused: var(--color);\n  --color-hover: var(--color);\n  --box-shadow: none;\n  display: inline-block;\n  width: auto;\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  text-align: center;\n  text-decoration: none;\n  white-space: normal;\n  user-select: none;\n  vertical-align: top;\n  vertical-align: -webkit-baseline-middle;\n  font-kerning: none;\n}\n\n:host(.button-disabled) {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n:host(.button-solid) {\n  --background: var(--ion-color-primary, #0054e9);\n  --color: var(--ion-color-primary-contrast, #fff);\n}\n\n:host(.button-outline) {\n  --border-color: var(--ion-color-primary, #0054e9);\n  --background: transparent;\n  --color: var(--ion-color-primary, #0054e9);\n}\n\n:host(.button-clear) {\n  --border-width: 0;\n  --background: transparent;\n  --color: var(--ion-color-primary, #0054e9);\n}\n\n:host(.button-block) {\n  display: block;\n}\n\n:host(.button-block) .button-native {\n  margin-left: 0;\n  margin-right: 0;\n  width: 100%;\n  clear: both;\n  contain: content;\n}\n\n:host(.button-block) .button-native::after {\n  clear: both;\n}\n\n:host(.button-full) {\n  display: block;\n}\n\n:host(.button-full) .button-native {\n  margin-left: 0;\n  margin-right: 0;\n  width: 100%;\n  contain: content;\n}\n\n:host(.button-full:not(.button-round)) .button-native {\n  border-radius: 0;\n  border-right-width: 0;\n  border-left-width: 0;\n}\n\n.button-native {\n  border-radius: var(--border-radius);\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  display: flex;\n  position: relative;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  min-height: inherit;\n  transition: var(--transition);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  outline: none;\n  background: var(--background);\n  line-height: 1;\n  box-shadow: var(--box-shadow);\n  contain: layout style;\n  cursor: pointer;\n  opacity: var(--opacity);\n  overflow: var(--overflow);\n  z-index: 0;\n  box-sizing: border-box;\n  appearance: none;\n}\n\n.button-native::-moz-focus-inner {\n  border: 0;\n}\n\n.button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n}\n\n::slotted([slot=start]),\n::slotted([slot=end]) {\n  flex-shrink: 0;\n}\n\n::slotted(ion-icon) {\n  font-size: 1.35em;\n  pointer-events: none;\n}\n\n::slotted(ion-icon[slot=start]) {\n  -webkit-margin-start: -0.3em;\n  margin-inline-start: -0.3em;\n  -webkit-margin-end: 0.3em;\n  margin-inline-end: 0.3em;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n::slotted(ion-icon[slot=end]) {\n  -webkit-margin-start: 0.3em;\n  margin-inline-start: 0.3em;\n  -webkit-margin-end: -0.2em;\n  margin-inline-end: -0.2em;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n.button-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n:host(.ion-focused) {\n  color: var(--color-focused);\n}\n\n:host(.ion-focused) .button-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n@media (any-hover: hover) {\n  :host(:hover) {\n    color: var(--color-hover);\n  }\n  :host(:hover) .button-native::after {\n    background: var(--background-hover);\n    opacity: var(--background-hover-opacity);\n  }\n}\n:host(.ion-activated) {\n  color: var(--color-activated);\n}\n\n:host(.ion-activated) .button-native::after {\n  background: var(--background-activated);\n  opacity: var(--background-activated-opacity);\n}\n\n:host(.button-solid.ion-color) .button-native {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n:host(.button-outline.ion-color) .button-native {\n  border-color: var(--ion-color-base);\n  background: transparent;\n  color: var(--ion-color-base);\n}\n\n:host(.button-clear.ion-color) .button-native {\n  background: transparent;\n  color: var(--ion-color-base);\n}\n\n:host(.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native {\n  color: var(--ion-toolbar-color, var(--color));\n}\n\n:host(.button-outline.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native {\n  border-color: var(--ion-toolbar-color, var(--color, var(--border-color)));\n}\n\n:host(.button-solid.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native {\n  background: var(--ion-toolbar-color, var(--background));\n  color: var(--ion-toolbar-background, var(--color));\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --border-radius: 14px;\n  --padding-top: 13px;\n  --padding-bottom: 13px;\n  --padding-start: 1em;\n  --padding-end: 1em;\n  --transition: background-color, opacity 100ms linear;\n  -webkit-margin-start: 2px;\n  margin-inline-start: 2px;\n  -webkit-margin-end: 2px;\n  margin-inline-end: 2px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  min-height: 3.1em;\n  font-size: min(1rem, 48px);\n  font-weight: 500;\n  letter-spacing: 0;\n}\n\n:host(.button-solid) {\n  --background-activated: var(--ion-color-primary-shade, #004acd);\n  --background-focused: var(--ion-color-primary-shade, #004acd);\n  --background-hover: var(--ion-color-primary-tint, #1a65eb);\n  --background-activated-opacity: 1;\n  --background-focused-opacity: 1;\n  --background-hover-opacity: 1;\n}\n\n:host(.button-outline) {\n  --border-radius: 14px;\n  --border-width: 1px;\n  --border-style: solid;\n  --background-activated: var(--ion-color-primary, #0054e9);\n  --background-focused: var(--ion-color-primary, #0054e9);\n  --background-hover: transparent;\n  --background-focused-opacity: .1;\n  --color-activated: var(--ion-color-primary-contrast, #fff);\n}\n\n:host(.button-clear) {\n  --background-activated: transparent;\n  --background-activated-opacity: 0;\n  --background-focused: var(--ion-color-primary, #0054e9);\n  --background-hover: transparent;\n  --background-focused-opacity: .1;\n  font-size: min(1.0625rem, 51px);\n  font-weight: normal;\n}\n\n/**\n * The default buttons in a toolbar\n * have a different font size/weight\n * than buttons outside of a toolbar on iOS.\n * However, we still want the \"size\"/\"strong\"\n * properties to be usable in a toolbar, so we add\n * the .in-buttons selector such that we\n * can add the different font size/weight in a toolbar\n * but still let \"size\"/\"strong\" override it.\n */\n:host(.in-buttons) {\n  font-size: clamp(17px, 1.0625rem, 21.08px);\n  font-weight: 400;\n}\n\n:host(.button-large) {\n  --border-radius: 16px;\n  --padding-top: 17px;\n  --padding-start: 1em;\n  --padding-end: 1em;\n  --padding-bottom: 17px;\n  min-height: 3.1em;\n  font-size: min(1.25rem, 60px);\n}\n\n:host(.button-small) {\n  --border-radius: 6px;\n  --padding-top: 4px;\n  --padding-start: 0.9em;\n  --padding-end: 0.9em;\n  --padding-bottom: 4px;\n  min-height: 2.1em;\n  font-size: min(0.8125rem, 39px);\n}\n\n:host(.button-round) {\n  --border-radius: 999px;\n  --padding-top: 0;\n  --padding-start: 26px;\n  --padding-end: 26px;\n  --padding-bottom: 0;\n}\n\n:host(.button-strong) {\n  font-weight: 600;\n}\n\n:host(.button-has-icon-only) {\n  --padding-top: 0;\n  --padding-bottom: var(--padding-top);\n  --padding-end: var(--padding-top);\n  --padding-start: var(--padding-end);\n  min-width: clamp(30px, 2.125em, 60px);\n  min-height: clamp(30px, 2.125em, 60px);\n}\n\n::slotted(ion-icon[slot=icon-only]) {\n  /**\n    * The values were provided through a native iOS app.\n    * min font size: 15px, default font size: 18px, max font size: 43px\n    *\n    * Since the `ion-button` uses `rem` for the font size, we can't\n    * just pass the desired icon font size in `em` to the `\n    * dynamic-font-clamp`. Instead, we need to adjust the base size \n    * to account for the ion-button` font size.\n    *\n    * For example, if the default font size of `ion-button` is 16px\n    * (derived from rem), then the base size can use the default font\n    * size of the icon.\n    */\n  font-size: clamp(15.12px, 1.125em, 43.02px);\n}\n\n:host(.button-small.button-has-icon-only) {\n  min-width: clamp(23px, 2.16em, 54px);\n  min-height: clamp(23px, 2.16em, 54px);\n}\n\n:host(.button-small) ::slotted(ion-icon[slot=icon-only]) {\n  /**\n    * The values were provided through a native iOS app.\n    * min font size: 12px, default font size: 17px, max font size: 40px\n    *\n    * Since the `ion-button` uses `rem` for the font size, we can't\n    * just pass the desired icon font size in `em` to the `\n    * dynamic-font-clamp`. Instead, we need to adjust the base size \n    * to account for the ion-button` font size.\n    *\n    * For example, if the default font size of `ion-button` is 13px\n    * (derived from rem) and the default font size of the icon is\n    * 17px, then the base size would need to be increased.\n    */\n  font-size: clamp(12.1394px, 1.308125em, 40.1856px);\n}\n\n:host(.button-large.button-has-icon-only) {\n  min-width: clamp(46px, 2.5em, 78px);\n  min-height: clamp(46px, 2.5em, 78px);\n}\n\n:host(.button-large) ::slotted(ion-icon[slot=icon-only]) {\n  /**\n    * The values were provided through a native iOS app.\n    * min font size: 15px, default font size: 18px, max font size: 43px\n    *\n    * Since the `ion-button` uses `rem` for the font size, we can't\n    * just pass the desired icon font size in `em` to the `\n    * dynamic-font-clamp`. Instead, we need to adjust the base size \n    * to account for the ion-button` font size.\n    *\n    * For example, if the default font size of `ion-button` is 20px\n    * (derived from rem) and the default font size of the icon is\n    * 18px, then the base size would need to be decreased.\n    */\n  font-size: clamp(15.12px, 0.9em, 43.056px);\n}\n\n:host(.button-outline.ion-focused.ion-color) .button-native,\n:host(.button-clear.ion-focused.ion-color) .button-native {\n  color: var(--ion-color-base);\n}\n:host(.button-outline.ion-focused.ion-color) .button-native::after,\n:host(.button-clear.ion-focused.ion-color) .button-native::after {\n  background: var(--ion-color-base);\n}\n\n:host(.button-solid.ion-color.ion-focused) .button-native::after {\n  background: var(--ion-color-shade);\n}\n\n@media (any-hover: hover) {\n  :host(.button-clear:not(.ion-activated):hover),\n  :host(.button-outline:not(.ion-activated):hover) {\n    opacity: 0.6;\n  }\n  :host(.button-clear.ion-color:hover) .button-native,\n  :host(.button-outline.ion-color:hover) .button-native {\n    color: var(--ion-color-base);\n  }\n  :host(.button-clear.ion-color:hover) .button-native::after,\n  :host(.button-outline.ion-color:hover) .button-native::after {\n    background: transparent;\n  }\n  :host(.button-solid.ion-color:hover) .button-native::after {\n    background: var(--ion-color-tint);\n  }\n  :host(:hover.button-solid.in-toolbar:not(.ion-color):not(.in-toolbar-color):not(.ion-activated)) .button-native::after {\n    background: #fff;\n    opacity: 0.1;\n  }\n}\n:host(.button-clear.ion-activated) {\n  opacity: 0.4;\n}\n\n:host(.button-outline.ion-activated.ion-color) .button-native {\n  color: var(--ion-color-contrast);\n}\n:host(.button-outline.ion-activated.ion-color) .button-native::after {\n  background: var(--ion-color-base);\n}\n\n:host(.button-solid.ion-color.ion-activated) .button-native::after {\n  background: var(--ion-color-shade);\n}\n\n:host(.button-outline.ion-activated.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native {\n  background: var(--ion-toolbar-color, var(--color));\n  color: var(--ion-toolbar-background, var(--background), var(--ion-color-primary-contrast, #fff));\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the button\n   * @prop --background-activated: Background of the button when pressed. Note: setting this will interfere with the Material Design ripple.\n   * @prop --background-activated-opacity: Opacity of the button when pressed\n   * @prop --background-focused: Background of the button when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the button when focused with the tab key\n   * @prop --background-hover: Background of the button on hover\n   * @prop --background-hover-opacity: Opacity of the background on hover\n   *\n   * @prop --color: Text color of the button\n   * @prop --color-activated: Text color of the button when pressed\n   * @prop --color-focused: Text color of the button when focused with the tab key\n   * @prop --color-hover: Text color of the button when hover\n   *\n   * @prop --transition: Transition of the button\n   *\n   * @prop --border-radius: Border radius of the button\n   * @prop --border-width: Border width of the button\n   * @prop --border-style: Border style of the button\n   * @prop --border-color: Border color of the button\n   *\n   * @prop --ripple-color: Color of the button ripple effect\n   *\n   * @prop --box-shadow: Box shadow of the button\n   * @prop --opacity: Opacity of the button\n   *\n   * @prop --padding-top: Top padding of the button\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button\n   * @prop --padding-bottom: Bottom padding of the button\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button\n   */\n  --overflow: hidden;\n  --ripple-color: currentColor;\n  --border-width: initial;\n  --border-color: initial;\n  --border-style: initial;\n  --color-activated: var(--color);\n  --color-focused: var(--color);\n  --color-hover: var(--color);\n  --box-shadow: none;\n  display: inline-block;\n  width: auto;\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  text-align: center;\n  text-decoration: none;\n  white-space: normal;\n  user-select: none;\n  vertical-align: top;\n  vertical-align: -webkit-baseline-middle;\n  font-kerning: none;\n}\n\n:host(.button-disabled) {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n:host(.button-solid) {\n  --background: var(--ion-color-primary, #0054e9);\n  --color: var(--ion-color-primary-contrast, #fff);\n}\n\n:host(.button-outline) {\n  --border-color: var(--ion-color-primary, #0054e9);\n  --background: transparent;\n  --color: var(--ion-color-primary, #0054e9);\n}\n\n:host(.button-clear) {\n  --border-width: 0;\n  --background: transparent;\n  --color: var(--ion-color-primary, #0054e9);\n}\n\n:host(.button-block) {\n  display: block;\n}\n\n:host(.button-block) .button-native {\n  margin-left: 0;\n  margin-right: 0;\n  width: 100%;\n  clear: both;\n  contain: content;\n}\n\n:host(.button-block) .button-native::after {\n  clear: both;\n}\n\n:host(.button-full) {\n  display: block;\n}\n\n:host(.button-full) .button-native {\n  margin-left: 0;\n  margin-right: 0;\n  width: 100%;\n  contain: content;\n}\n\n:host(.button-full:not(.button-round)) .button-native {\n  border-radius: 0;\n  border-right-width: 0;\n  border-left-width: 0;\n}\n\n.button-native {\n  border-radius: var(--border-radius);\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  display: flex;\n  position: relative;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  min-height: inherit;\n  transition: var(--transition);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  outline: none;\n  background: var(--background);\n  line-height: 1;\n  box-shadow: var(--box-shadow);\n  contain: layout style;\n  cursor: pointer;\n  opacity: var(--opacity);\n  overflow: var(--overflow);\n  z-index: 0;\n  box-sizing: border-box;\n  appearance: none;\n}\n\n.button-native::-moz-focus-inner {\n  border: 0;\n}\n\n.button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n}\n\n::slotted([slot=start]),\n::slotted([slot=end]) {\n  flex-shrink: 0;\n}\n\n::slotted(ion-icon) {\n  font-size: 1.35em;\n  pointer-events: none;\n}\n\n::slotted(ion-icon[slot=start]) {\n  -webkit-margin-start: -0.3em;\n  margin-inline-start: -0.3em;\n  -webkit-margin-end: 0.3em;\n  margin-inline-end: 0.3em;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n::slotted(ion-icon[slot=end]) {\n  -webkit-margin-start: 0.3em;\n  margin-inline-start: 0.3em;\n  -webkit-margin-end: -0.2em;\n  margin-inline-end: -0.2em;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n.button-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n:host(.ion-focused) {\n  color: var(--color-focused);\n}\n\n:host(.ion-focused) .button-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n@media (any-hover: hover) {\n  :host(:hover) {\n    color: var(--color-hover);\n  }\n  :host(:hover) .button-native::after {\n    background: var(--background-hover);\n    opacity: var(--background-hover-opacity);\n  }\n}\n:host(.ion-activated) {\n  color: var(--color-activated);\n}\n\n:host(.ion-activated) .button-native::after {\n  background: var(--background-activated);\n  opacity: var(--background-activated-opacity);\n}\n\n:host(.button-solid.ion-color) .button-native {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n:host(.button-outline.ion-color) .button-native {\n  border-color: var(--ion-color-base);\n  background: transparent;\n  color: var(--ion-color-base);\n}\n\n:host(.button-clear.ion-color) .button-native {\n  background: transparent;\n  color: var(--ion-color-base);\n}\n\n:host(.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native {\n  color: var(--ion-toolbar-color, var(--color));\n}\n\n:host(.button-outline.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native {\n  border-color: var(--ion-toolbar-color, var(--color, var(--border-color)));\n}\n\n:host(.button-solid.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native {\n  background: var(--ion-toolbar-color, var(--background));\n  color: var(--ion-toolbar-background, var(--color));\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --border-radius: 4px;\n  --padding-top: 8px;\n  --padding-bottom: 8px;\n  --padding-start: 1.1em;\n  --padding-end: 1.1em;\n  --transition: box-shadow 280ms cubic-bezier(.4, 0, .2, 1),\n                background-color 15ms linear,\n                color 15ms linear;\n  -webkit-margin-start: 2px;\n  margin-inline-start: 2px;\n  -webkit-margin-end: 2px;\n  margin-inline-end: 2px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  min-height: 36px;\n  font-size: 0.875rem;\n  font-weight: 500;\n  letter-spacing: 0.06em;\n  text-transform: uppercase;\n}\n\n:host(.button-solid) {\n  --background-activated: transparent;\n  --background-hover: var(--ion-color-primary-contrast, #fff);\n  --background-focused: var(--ion-color-primary-contrast, #fff);\n  --background-activated-opacity: 0;\n  --background-focused-opacity: .24;\n  --background-hover-opacity: .08;\n  --box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}\n\n:host(.button-solid.ion-activated) {\n  --box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n:host(.button-outline) {\n  --border-width: 2px;\n  --border-style: solid;\n  --box-shadow: none;\n  --background-activated: transparent;\n  --background-focused: var(--ion-color-primary, #0054e9);\n  --background-hover: var(--ion-color-primary, #0054e9);\n  --background-activated-opacity: 0;\n  --background-focused-opacity: .12;\n  --background-hover-opacity: .04;\n}\n\n:host(.button-outline.ion-activated.ion-color) .button-native {\n  background: transparent;\n}\n\n:host(.button-clear) {\n  --background-activated: transparent;\n  --background-focused: var(--ion-color-primary, #0054e9);\n  --background-hover: var(--ion-color-primary, #0054e9);\n  --background-activated-opacity: 0;\n  --background-focused-opacity: .12;\n  --background-hover-opacity: .04;\n}\n\n:host(.button-round) {\n  --border-radius: 999px;\n  --padding-top: 0;\n  --padding-start: 26px;\n  --padding-end: 26px;\n  --padding-bottom: 0;\n}\n\n:host(.button-large) {\n  --padding-top: 14px;\n  --padding-start: 1em;\n  --padding-end: 1em;\n  --padding-bottom: 14px;\n  min-height: 2.8em;\n  font-size: 1.25rem;\n}\n\n:host(.button-small) {\n  --padding-top: 4px;\n  --padding-start: 0.9em;\n  --padding-end: 0.9em;\n  --padding-bottom: 4px;\n  min-height: 2.1em;\n  font-size: 0.8125rem;\n}\n\n:host(.button-strong) {\n  font-weight: bold;\n}\n\n:host(.button-has-icon-only) {\n  --padding-top: 0;\n  --padding-bottom: var(--padding-top);\n  --padding-end: var(--padding-top);\n  --padding-start: var(--padding-end);\n  min-width: clamp(30px, 2.86em, 60px);\n  min-height: clamp(30px, 2.86em, 60px);\n}\n\n::slotted(ion-icon[slot=icon-only]) {\n  /**\n    * The values were provided through MD design,\n    * large and small are based on the iOS sizes.\n    * min font size: 15px, default font size: 22.4px, max font size: 43px\n    *\n    * Since the `ion-button` uses `rem` for the font size, we can't\n    * just pass the desired icon font size in `em` to the `\n    * dynamic-font-clamp`. Instead, we need to adjust the base size \n    * to account for the ion-button` font size.\n    *\n    * For example, if the default font size of `ion-button` is 14px\n    * (derived from rem) and the default font size of the icon is\n    * 22.4px, then the base size would need to be increased.\n    */\n  font-size: clamp(15.104px, 1.6em, 43.008px);\n}\n\n:host(.button-small.button-has-icon-only) {\n  min-width: clamp(23px, 2.16em, 54px);\n  min-height: clamp(23px, 2.16em, 54px);\n}\n\n:host(.button-small) ::slotted(ion-icon[slot=icon-only]) {\n  /**\n    * The values were provided through MD design,\n    * large and small are based on the iOS sizes.\n    * min font size: 12px, default font size: 16px, max font size: 40px\n    *\n    * Since the `ion-button` uses `rem` for the font size, we can't\n    * just pass the desired icon font size in `em` to the `\n    * dynamic-font-clamp`. Instead, we need to adjust the base size \n    * to account for the ion-button` font size.\n    *\n    * For example, if the default font size of `ion-button` is 13px\n    * (derived from rem) and the default font size of the icon is\n    * 16px, then the base size would need to be increased.\n    */\n  font-size: clamp(13.002px, 1.23125em, 40.385px);\n}\n\n:host(.button-large.button-has-icon-only) {\n  min-width: clamp(46px, 2.5em, 78px);\n  min-height: clamp(46px, 2.5em, 78px);\n}\n\n:host(.button-large) ::slotted(ion-icon[slot=icon-only]) {\n  /**\n    * The values were provided through MD design,\n    * large and small are based on the iOS sizes.\n    * min font size: 15px, default font size: 28px, max font size: 43px\n    *\n    * Since the `ion-button` uses `rem` for the font size, we can't\n    * just pass the desired icon font size in `em` to the `\n    * dynamic-font-clamp`. Instead, we need to adjust the base size \n    * to account for the ion-button` font size.\n    *\n    * For example, if the default font size of `ion-button` is 20px\n    * (derived from rem) and the default font size of the icon is\n    * 28px, then the base size would need to be increased.\n    */\n  font-size: clamp(15.008px, 1.4em, 43.008px);\n}\n\n/**\n * Only allow overriding of opacity here\n * as developers should not be overriding\n * colors when using the color prop.\n */\n:host(.button-solid.ion-color.ion-focused) .button-native::after {\n  background: var(--ion-color-contrast);\n}\n\n:host(.button-clear.ion-color.ion-focused) .button-native::after,\n:host(.button-outline.ion-color.ion-focused) .button-native::after {\n  background: var(--ion-color-base);\n}\n\n@media (any-hover: hover) {\n  :host(.button-solid.ion-color:hover) .button-native::after {\n    background: var(--ion-color-contrast);\n  }\n  :host(.button-clear.ion-color:hover) .button-native::after,\n  :host(.button-outline.ion-color:hover) .button-native::after {\n    background: var(--ion-color-base);\n  }\n}\n:host(.button-outline.ion-activated.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native {\n  background: var(--ion-toolbar-background, var(--color));\n  color: var(--ion-toolbar-color, var(--background), var(--ion-color-primary-contrast, #fff));\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { inheritAriaAttributes, hasShadowDom } from \"../../utils/helpers\";\nimport { printIonWarning } from \"../../utils/logging/index\";\nimport { createColorClasses, hostContext, openURL } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @slot - Content is placed between the named slots if provided without a slot.\n * @slot icon-only - Should be used on an icon in a button that has no text.\n * @slot start - Content is placed to the left of the button text in LTR, and to the right in RTL.\n * @slot end - Content is placed to the right of the button text in LTR, and to the left in RTL.\n *\n * @part native - The native HTML button or anchor element that wraps all child elements.\n */\nexport class Button {\n    constructor() {\n        this.inItem = false;\n        this.inListHeader = false;\n        this.inToolbar = false;\n        this.formButtonEl = null;\n        this.formEl = null;\n        this.inheritedAttributes = {};\n        this.handleClick = (ev) => {\n            const { el } = this;\n            if (this.type === 'button') {\n                openURL(this.href, ev, this.routerDirection, this.routerAnimation);\n            }\n            else if (hasShadowDom(el)) {\n                this.submitForm(ev);\n            }\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.slotChanged = () => {\n            /**\n             * Ensures that the 'has-icon-only' class is properly added\n             * or removed from `ion-button` when manipulating the\n             * `icon-only` slot.\n             *\n             * Without this, the 'has-icon-only' class is only checked\n             * or added when `ion-button` component first renders.\n             */\n            this.isCircle = this.hasIconOnly;\n        };\n        this.isCircle = false;\n        this.color = undefined;\n        this.buttonType = 'button';\n        this.disabled = false;\n        this.expand = undefined;\n        this.fill = undefined;\n        this.routerDirection = 'forward';\n        this.routerAnimation = undefined;\n        this.download = undefined;\n        this.href = undefined;\n        this.rel = undefined;\n        this.shape = undefined;\n        this.size = undefined;\n        this.strong = false;\n        this.target = undefined;\n        this.type = 'button';\n        this.form = undefined;\n    }\n    disabledChanged() {\n        const { disabled } = this;\n        if (this.formButtonEl) {\n            this.formButtonEl.disabled = disabled;\n        }\n    }\n    /**\n     * This is responsible for rendering a hidden native\n     * button element inside the associated form. This allows\n     * users to submit a form by pressing \"Enter\" when a text\n     * field inside of the form is focused. The native button\n     * rendered inside of `ion-button` is in the Shadow DOM\n     * and therefore does not participate in form submission\n     * which is why the following code is necessary.\n     */\n    renderHiddenButton() {\n        const formEl = (this.formEl = this.findForm());\n        if (formEl) {\n            const { formButtonEl } = this;\n            /**\n             * If the form already has a rendered form button\n             * then do not append a new one again.\n             */\n            if (formButtonEl !== null && formEl.contains(formButtonEl)) {\n                return;\n            }\n            // Create a hidden native button inside of the form\n            const newFormButtonEl = (this.formButtonEl = document.createElement('button'));\n            newFormButtonEl.type = this.type;\n            newFormButtonEl.style.display = 'none';\n            // Only submit if the button is not disabled.\n            newFormButtonEl.disabled = this.disabled;\n            formEl.appendChild(newFormButtonEl);\n        }\n    }\n    componentWillLoad() {\n        this.inToolbar = !!this.el.closest('ion-buttons');\n        this.inListHeader = !!this.el.closest('ion-list-header');\n        this.inItem = !!this.el.closest('ion-item') || !!this.el.closest('ion-item-divider');\n        this.inheritedAttributes = inheritAriaAttributes(this.el);\n    }\n    get hasIconOnly() {\n        return !!this.el.querySelector('[slot=\"icon-only\"]');\n    }\n    get rippleType() {\n        const hasClearFill = this.fill === undefined || this.fill === 'clear';\n        // If the button is in a toolbar, has a clear fill (which is the default)\n        // and only has an icon we use the unbounded \"circular\" ripple effect\n        if (hasClearFill && this.hasIconOnly && this.inToolbar) {\n            return 'unbounded';\n        }\n        return 'bounded';\n    }\n    /**\n     * Finds the form element based on the provided `form` selector\n     * or element reference provided.\n     */\n    findForm() {\n        const { form } = this;\n        if (form instanceof HTMLFormElement) {\n            return form;\n        }\n        if (typeof form === 'string') {\n            // Check if the string provided is a form id.\n            const el = document.getElementById(form);\n            if (el) {\n                if (el instanceof HTMLFormElement) {\n                    return el;\n                }\n                else {\n                    /**\n                     * The developer specified a string for the form attribute, but the\n                     * element with that id is not a form element.\n                     */\n                    printIonWarning(`Form with selector: \"#${form}\" could not be found. Verify that the id is attached to a <form> element.`, this.el);\n                    return null;\n                }\n            }\n            else {\n                /**\n                 * The developer specified a string for the form attribute, but the\n                 * element with that id could not be found in the DOM.\n                 */\n                printIonWarning(`Form with selector: \"#${form}\" could not be found. Verify that the id is correct and the form is rendered in the DOM.`, this.el);\n                return null;\n            }\n        }\n        if (form !== undefined) {\n            /**\n             * The developer specified a HTMLElement for the form attribute,\n             * but the element is not a HTMLFormElement.\n             * This will also catch if the developer tries to pass in null\n             * as the form attribute.\n             */\n            printIonWarning(`The provided \"form\" element is invalid. Verify that the form is a HTMLFormElement and rendered in the DOM.`, this.el);\n            return null;\n        }\n        /**\n         * If the form element is not set, the button may be inside\n         * of a form element. Query the closest form element to the button.\n         */\n        return this.el.closest('form');\n    }\n    submitForm(ev) {\n        // this button wants to specifically submit a form\n        // climb up the dom to see if we're in a <form>\n        // and if so, then use JS to submit it\n        if (this.formEl && this.formButtonEl) {\n            ev.preventDefault();\n            this.formButtonEl.click();\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        const { buttonType, type, disabled, rel, target, size, href, color, expand, hasIconOnly, shape, strong, inheritedAttributes, } = this;\n        const finalSize = size === undefined && this.inItem ? 'small' : size;\n        const TagType = href === undefined ? 'button' : 'a';\n        const attrs = TagType === 'button'\n            ? { type }\n            : {\n                download: this.download,\n                href,\n                rel,\n                target,\n            };\n        let fill = this.fill;\n        /**\n         * We check both undefined and null to\n         * work around https://github.com/ionic-team/stencil/issues/3586.\n         */\n        if (fill == null) {\n            fill = this.inToolbar || this.inListHeader ? 'clear' : 'solid';\n        }\n        /**\n         * We call renderHiddenButton in the render function to account\n         * for any properties being set async. For example, changing the\n         * \"type\" prop from \"button\" to \"submit\" after the component has\n         * loaded would warrant the hidden button being added to the\n         * associated form.\n         */\n        {\n            type !== 'button' && this.renderHiddenButton();\n        }\n        return (h(Host, { key: '8f3a0363d46ef888d22b0b0812c70cb4f79e6efa', onClick: this.handleClick, \"aria-disabled\": disabled ? 'true' : null, class: createColorClasses(color, {\n                [mode]: true,\n                [buttonType]: true,\n                [`${buttonType}-${expand}`]: expand !== undefined,\n                [`${buttonType}-${finalSize}`]: finalSize !== undefined,\n                [`${buttonType}-${shape}`]: shape !== undefined,\n                [`${buttonType}-${fill}`]: true,\n                [`${buttonType}-strong`]: strong,\n                'in-toolbar': hostContext('ion-toolbar', this.el),\n                'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n                'in-buttons': hostContext('ion-buttons', this.el),\n                'button-has-icon-only': hasIconOnly,\n                'button-disabled': disabled,\n                'ion-activatable': true,\n                'ion-focusable': true,\n            }) }, h(TagType, Object.assign({ key: 'a517c7d06aab15ad4c2a51b8ec224c1aeb4ed565' }, attrs, { class: \"button-native\", part: \"native\", disabled: disabled, onFocus: this.onFocus, onBlur: this.onBlur }, inheritedAttributes), h(\"span\", { key: '127c26dd97c0bf5097433df77df7313d59784899', class: \"button-inner\" }, h(\"slot\", { key: '39d9a9cad8e1addbe63406062e555e05c2cb541b', name: \"icon-only\", onSlotchange: this.slotChanged }), h(\"slot\", { key: 'cfdebdd89155c6c21eb80e51e06456a3a6d877e0', name: \"start\" }), h(\"slot\", { key: 'eac497e0f97ab55baa834ae23155d89b0f7069c6' }), h(\"slot\", { key: 'c99f7900f8856b32a0b4ac11092d461f5e9a1109', name: \"end\" })), mode === 'md' && h(\"ion-ripple-effect\", { key: 'c681edb0480879fbd801575f2233f6e118898638', type: this.rippleType }))));\n    }\n    static get is() { return \"ion-button\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"button.ios.scss\"],\n            \"md\": [\"button.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"button.ios.css\"],\n            \"md\": [\"button.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"buttonType\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The type of button.\"\n                },\n                \"attribute\": \"button-type\",\n                \"reflect\": false,\n                \"defaultValue\": \"'button'\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the button.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"expand\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'full' | 'block'\",\n                    \"resolved\": \"\\\"block\\\" | \\\"full\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Set to `\\\"block\\\"` for a full-width button or to `\\\"full\\\"` for a full-width button\\nwith square corners and no left or right borders.\"\n                },\n                \"attribute\": \"expand\",\n                \"reflect\": true\n            },\n            \"fill\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"'clear' | 'outline' | 'solid' | 'default'\",\n                    \"resolved\": \"\\\"clear\\\" | \\\"default\\\" | \\\"outline\\\" | \\\"solid\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Set to `\\\"clear\\\"` for a transparent button that resembles a flat button, to `\\\"outline\\\"`\\nfor a transparent button with a border, or to `\\\"solid\\\"` for a button with a filled background.\\nThe default fill is `\\\"solid\\\"` except inside of a toolbar, where the default is `\\\"clear\\\"`.\"\n                },\n                \"attribute\": \"fill\",\n                \"reflect\": true\n            },\n            \"routerDirection\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"RouterDirection\",\n                    \"resolved\": \"\\\"back\\\" | \\\"forward\\\" | \\\"root\\\"\",\n                    \"references\": {\n                        \"RouterDirection\": {\n                            \"location\": \"import\",\n                            \"path\": \"../router/utils/interface\",\n                            \"id\": \"src/components/router/utils/interface.ts::RouterDirection\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When using a router, it specifies the transition direction when navigating to\\nanother page using `href`.\"\n                },\n                \"attribute\": \"router-direction\",\n                \"reflect\": false,\n                \"defaultValue\": \"'forward'\"\n            },\n            \"routerAnimation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder | undefined\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When using a router, it specifies the transition animation when navigating to\\nanother page using `href`.\"\n                }\n            },\n            \"download\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"This attribute instructs browsers to download a URL instead of navigating to\\nit, so the user will be prompted to save it as a local file. If the attribute\\nhas a value, it is used as the pre-filled file name in the Save prompt\\n(the user can still change the file name if they want).\"\n                },\n                \"attribute\": \"download\",\n                \"reflect\": false\n            },\n            \"href\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Contains a URL or a URL fragment that the hyperlink points to.\\nIf this property is set, an anchor tag will be rendered.\"\n                },\n                \"attribute\": \"href\",\n                \"reflect\": false\n            },\n            \"rel\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the relationship of the target object to the link object.\\nThe value is a space-separated list of [link types](https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types).\"\n                },\n                \"attribute\": \"rel\",\n                \"reflect\": false\n            },\n            \"shape\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'round'\",\n                    \"resolved\": \"\\\"round\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Set to `\\\"round\\\"` for a button with more rounded corners.\"\n                },\n                \"attribute\": \"shape\",\n                \"reflect\": true\n            },\n            \"size\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'small' | 'default' | 'large'\",\n                    \"resolved\": \"\\\"default\\\" | \\\"large\\\" | \\\"small\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Set to `\\\"small\\\"` for a button with less height and padding, to `\\\"default\\\"`\\nfor a button with the default height and padding, or to `\\\"large\\\"` for a button\\nwith more height and padding. By default the size is unset, unless the button\\nis inside of an item, where the size is `\\\"small\\\"` by default. Set the size to\\n`\\\"default\\\"` inside of an item to make it a standard size button.\"\n                },\n                \"attribute\": \"size\",\n                \"reflect\": true\n            },\n            \"strong\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, activates a button with a heavier font weight.\"\n                },\n                \"attribute\": \"strong\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"target\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies where to display the linked URL.\\nOnly applies when an `href` is provided.\\nSpecial keywords: `\\\"_blank\\\"`, `\\\"_self\\\"`, `\\\"_parent\\\"`, `\\\"_top\\\"`.\"\n                },\n                \"attribute\": \"target\",\n                \"reflect\": false\n            },\n            \"type\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'submit' | 'reset' | 'button'\",\n                    \"resolved\": \"\\\"button\\\" | \\\"reset\\\" | \\\"submit\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The type of the button.\"\n                },\n                \"attribute\": \"type\",\n                \"reflect\": false,\n                \"defaultValue\": \"'button'\"\n            },\n            \"form\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | HTMLFormElement\",\n                    \"resolved\": \"HTMLFormElement | string | undefined\",\n                    \"references\": {\n                        \"HTMLFormElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLFormElement\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The HTML form element or form element id. Used to submit a form when the button is not a child of the form.\"\n                },\n                \"attribute\": \"form\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"isCircle\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionFocus\",\n                \"name\": \"ionFocus\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the button has focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionBlur\",\n                \"name\": \"ionBlur\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the button loses focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"disabled\",\n                \"methodName\": \"disabledChanged\"\n            }];\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  display: flex;\n  align-items: center;\n  transform: translateZ(0);\n  z-index: 99;\n}\n\n::slotted(*) ion-button {\n  --padding-top: 0;\n  --padding-bottom: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n::slotted(*) ion-button {\n  --padding-top: 3px;\n  --padding-bottom: 3px;\n  --padding-start: 5px;\n  --padding-end: 5px;\n  -webkit-margin-start: 2px;\n  margin-inline-start: 2px;\n  -webkit-margin-end: 2px;\n  margin-inline-end: 2px;\n  min-height: 32px;\n}\n\n::slotted(*) .button-has-icon-only {\n  --padding-top: 0;\n  --padding-bottom: 0;\n}\n\n::slotted(*) ion-button:not(.button-round) {\n  --border-radius: 4px;\n}\n\n:host-context(.ion-color)::slotted(*) .button {\n  --color: initial;\n  --border-color: initial;\n  --background-focused: var(--ion-color-contrast);\n}\n\n:host-context(.ion-color)::slotted(*) .button-solid {\n  --background: var(--ion-color-contrast);\n  --background-focused: #000;\n  --background-focused-opacity: .12;\n  --background-activated: #000;\n  --background-activated-opacity: .12;\n  --background-hover: var(--ion-color-base);\n  --background-hover-opacity: 0.45;\n  --color: var(--ion-color-base);\n  --color-focused: var(--ion-color-base);\n}\n\n:host-context(.ion-color)::slotted(*) .button-clear {\n  --color-activated: var(--ion-color-contrast);\n  --color-focused: var(--ion-color-contrast);\n}\n\n:host-context(.ion-color)::slotted(*) .button-outline {\n  --color-activated: var(--ion-color-base);\n  --color-focused: var(--ion-color-contrast);\n  --background-activated: var(--ion-color-contrast);\n}\n\n::slotted(*) .button-clear,\n::slotted(*) .button-outline {\n  --background-activated: transparent;\n  --background-focused: currentColor;\n  --background-hover: transparent;\n}\n\n::slotted(*) .button-solid:not(.ion-color) {\n  --background-focused: #000;\n  --background-focused-opacity: .12;\n  --background-activated: #000;\n  --background-activated-opacity: .12;\n}\n\n::slotted(*) ion-icon[slot=start] {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-margin-end: 0.3em;\n  margin-inline-end: 0.3em;\n  font-size: 1.41em;\n  line-height: 0.67;\n}\n\n::slotted(*) ion-icon[slot=end] {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-margin-start: 0.4em;\n  margin-inline-start: 0.4em;\n  font-size: 1.41em;\n  line-height: 0.67;\n}\n\n::slotted(*) ion-icon[slot=icon-only] {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 1.65em;\n  line-height: 0.67;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  display: flex;\n  align-items: center;\n  transform: translateZ(0);\n  z-index: 99;\n}\n\n::slotted(*) ion-button {\n  --padding-top: 0;\n  --padding-bottom: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n::slotted(*) ion-button {\n  --padding-top: 3px;\n  --padding-bottom: 3px;\n  --padding-start: 8px;\n  --padding-end: 8px;\n  --box-shadow: none;\n  -webkit-margin-start: 2px;\n  margin-inline-start: 2px;\n  -webkit-margin-end: 2px;\n  margin-inline-end: 2px;\n  min-height: 32px;\n}\n\n::slotted(*) .button-has-icon-only {\n  --padding-top: 0;\n  --padding-bottom: 0;\n}\n\n::slotted(*) ion-button:not(.button-round) {\n  --border-radius: 2px;\n}\n\n:host-context(.ion-color)::slotted(*) .button {\n  --color: initial;\n  --color-focused: var(--ion-color-contrast);\n  --color-hover: var(--ion-color-contrast);\n  --background-activated: transparent;\n  --background-focused: var(--ion-color-contrast);\n  --background-hover: var(--ion-color-contrast);\n}\n\n:host-context(.ion-color)::slotted(*) .button-solid {\n  --background: var(--ion-color-contrast);\n  --background-activated: transparent;\n  --background-focused: var(--ion-color-shade);\n  --background-hover: var(--ion-color-base);\n  --color: var(--ion-color-base);\n  --color-focused: var(--ion-color-base);\n  --color-hover: var(--ion-color-base);\n}\n\n:host-context(.ion-color)::slotted(*) .button-outline {\n  --border-color: var(--ion-color-contrast);\n}\n\n::slotted(*) .button-has-icon-only.button-clear {\n  --padding-top: 12px;\n  --padding-end: 12px;\n  --padding-bottom: 12px;\n  --padding-start: 12px;\n  --border-radius: 50%;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  width: 3rem;\n  height: 3rem;\n}\n\n::slotted(*) .button {\n  --background-hover: currentColor;\n}\n\n::slotted(*) .button-solid {\n  --color: var(--ion-toolbar-background, var(--ion-background-color, #fff));\n  --background: var(--ion-toolbar-color, var(--ion-text-color, #424242));\n  --background-activated: transparent;\n  --background-focused: currentColor;\n}\n\n::slotted(*) .button-outline {\n  --color: initial;\n  --background: transparent;\n  --background-activated: transparent;\n  --background-focused: currentColor;\n  --background-hover: currentColor;\n  --border-color: currentColor;\n}\n\n::slotted(*) .button-clear {\n  --color: initial;\n  --background: transparent;\n  --background-activated: transparent;\n  --background-focused: currentColor;\n  --background-hover: currentColor;\n}\n\n::slotted(*) ion-icon[slot=start] {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-margin-end: 0.3em;\n  margin-inline-end: 0.3em;\n  font-size: 1.4em;\n}\n\n::slotted(*) ion-icon[slot=end] {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-margin-start: 0.4em;\n  margin-inline-start: 0.4em;\n  font-size: 1.4em;\n}\n\n::slotted(*) ion-icon[slot=icon-only] {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 1.8em;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { getIonMode } from \"../../global/ionic-global\";\nexport class Buttons {\n    constructor() {\n        this.collapse = false;\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: '4e5ce9abb3f56e8c91e3eb58c2819300e61eba24', class: {\n                [mode]: true,\n                ['buttons-collapse']: this.collapse,\n            } }, h(\"slot\", { key: 'f2f360ec888b6e946b512fed07431fab47c61482' })));\n    }\n    static get is() { return \"ion-buttons\"; }\n    static get encapsulation() { return \"scoped\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"buttons.ios.scss\"],\n            \"md\": [\"buttons.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"buttons.ios.css\"],\n            \"md\": [\"buttons.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"collapse\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If true, buttons will disappear when its\\nparent toolbar has fully collapsed if the toolbar\\nis not the first toolbar. If the toolbar is the\\nfirst toolbar, the buttons will be hidden and will\\nonly be shown once all toolbars have fully collapsed.\\n\\nOnly applies in `ios` mode with `collapse` set to\\n`true` on `ion-header`.\\n\\nTypically used for [Collapsible Large Titles](https://ionicframework.com/docs/api/title#collapsible-large-titles)\"\n                },\n                \"attribute\": \"collapse\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the card\n   * @prop --color: Color of the card\n   */\n  --ion-safe-area-left: 0px;\n  --ion-safe-area-right: 0px;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: block;\n  position: relative;\n  background: var(--background);\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  contain: content;\n  overflow: hidden;\n}\n\n:host(.ion-color) {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n:host(.card-disabled) {\n  cursor: default;\n  opacity: 0.3;\n  pointer-events: none;\n}\n\n.card-native {\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: block;\n  width: 100%;\n  min-height: var(--min-height);\n  transition: var(--transition);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  outline: none;\n  background: inherit;\n}\n\n.card-native::-moz-focus-inner {\n  border: 0;\n}\n\nbutton, a {\n  cursor: pointer;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: var(--ion-card-background, var(--ion-item-background, var(--ion-background-color, #fff)));\n  --color: var(--ion-card-color, var(--ion-item-color, var(--ion-color-step-600, var(--ion-text-color-step-400, #666666))));\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  transition: transform 500ms cubic-bezier(0.12, 0.72, 0.29, 1);\n  font-size: 0.875rem;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.12);\n}\n\n:host(.ion-activated) {\n  transform: scale3d(0.97, 0.97, 1);\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the card\n   * @prop --color: Color of the card\n   */\n  --ion-safe-area-left: 0px;\n  --ion-safe-area-right: 0px;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: block;\n  position: relative;\n  background: var(--background);\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  contain: content;\n  overflow: hidden;\n}\n\n:host(.ion-color) {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n:host(.card-disabled) {\n  cursor: default;\n  opacity: 0.3;\n  pointer-events: none;\n}\n\n.card-native {\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: block;\n  width: 100%;\n  min-height: var(--min-height);\n  transition: var(--transition);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  outline: none;\n  background: inherit;\n}\n\n.card-native::-moz-focus-inner {\n  border: 0;\n}\n\nbutton, a {\n  cursor: pointer;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: var(--ion-card-background, var(--ion-item-background, var(--ion-background-color, #fff)));\n  --color: var(--ion-card-color, var(--ion-item-color, var(--ion-color-step-550, var(--ion-text-color-step-450, #737373))));\n  -webkit-margin-start: 10px;\n  margin-inline-start: 10px;\n  -webkit-margin-end: 10px;\n  margin-inline-end: 10px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  border-radius: 4px;\n  font-size: 0.875rem;\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { inheritAttributes } from \"../../utils/helpers\";\nimport { createColorClasses, openURL } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @part native - The native HTML button, anchor, or div element that wraps all child elements.\n */\nexport class Card {\n    constructor() {\n        this.inheritedAriaAttributes = {};\n        this.color = undefined;\n        this.button = false;\n        this.type = 'button';\n        this.disabled = false;\n        this.download = undefined;\n        this.href = undefined;\n        this.rel = undefined;\n        this.routerDirection = 'forward';\n        this.routerAnimation = undefined;\n        this.target = undefined;\n    }\n    componentWillLoad() {\n        this.inheritedAriaAttributes = inheritAttributes(this.el, ['aria-label']);\n    }\n    isClickable() {\n        return this.href !== undefined || this.button;\n    }\n    renderCard(mode) {\n        const clickable = this.isClickable();\n        if (!clickable) {\n            return [h(\"slot\", null)];\n        }\n        const { href, routerAnimation, routerDirection, inheritedAriaAttributes } = this;\n        const TagType = clickable ? (href === undefined ? 'button' : 'a') : 'div';\n        const attrs = TagType === 'button'\n            ? { type: this.type }\n            : {\n                download: this.download,\n                href: this.href,\n                rel: this.rel,\n                target: this.target,\n            };\n        return (h(TagType, Object.assign({}, attrs, inheritedAriaAttributes, { class: \"card-native\", part: \"native\", disabled: this.disabled, onClick: (ev) => openURL(href, ev, routerDirection, routerAnimation) }), h(\"slot\", null), clickable && mode === 'md' && h(\"ion-ripple-effect\", null)));\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: '8584300522f382ee8891c039d71da82533dfa36a', class: createColorClasses(this.color, {\n                [mode]: true,\n                'card-disabled': this.disabled,\n                'ion-activatable': this.isClickable(),\n            }) }, this.renderCard(mode)));\n    }\n    static get is() { return \"ion-card\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"card.ios.scss\"],\n            \"md\": [\"card.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"card.ios.css\"],\n            \"md\": [\"card.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"button\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, a button tag will be rendered and the card will be tappable.\"\n                },\n                \"attribute\": \"button\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"type\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'submit' | 'reset' | 'button'\",\n                    \"resolved\": \"\\\"button\\\" | \\\"reset\\\" | \\\"submit\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The type of the button. Only used when an `onclick` or `button` property is present.\"\n                },\n                \"attribute\": \"type\",\n                \"reflect\": false,\n                \"defaultValue\": \"'button'\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the card.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"download\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"This attribute instructs browsers to download a URL instead of navigating to\\nit, so the user will be prompted to save it as a local file. If the attribute\\nhas a value, it is used as the pre-filled file name in the Save prompt\\n(the user can still change the file name if they want).\"\n                },\n                \"attribute\": \"download\",\n                \"reflect\": false\n            },\n            \"href\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Contains a URL or a URL fragment that the hyperlink points to.\\nIf this property is set, an anchor tag will be rendered.\"\n                },\n                \"attribute\": \"href\",\n                \"reflect\": false\n            },\n            \"rel\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the relationship of the target object to the link object.\\nThe value is a space-separated list of [link types](https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types).\"\n                },\n                \"attribute\": \"rel\",\n                \"reflect\": false\n            },\n            \"routerDirection\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"RouterDirection\",\n                    \"resolved\": \"\\\"back\\\" | \\\"forward\\\" | \\\"root\\\"\",\n                    \"references\": {\n                        \"RouterDirection\": {\n                            \"location\": \"import\",\n                            \"path\": \"../router/utils/interface\",\n                            \"id\": \"src/components/router/utils/interface.ts::RouterDirection\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When using a router, it specifies the transition direction when navigating to\\nanother page using `href`.\"\n                },\n                \"attribute\": \"router-direction\",\n                \"reflect\": false,\n                \"defaultValue\": \"'forward'\"\n            },\n            \"routerAnimation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder | undefined\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When using a router, it specifies the transition animation when navigating to\\nanother page using `href`.\"\n                }\n            },\n            \"target\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies where to display the linked URL.\\nOnly applies when an `href` is provided.\\nSpecial keywords: `\\\"_blank\\\"`, `\\\"_self\\\"`, `\\\"_parent\\\"`, `\\\"_top\\\"`.\"\n                },\n                \"attribute\": \"target\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\nion-card-content {\n  display: block;\n  position: relative;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.card-content-ios {\n  -webkit-padding-start: 20px;\n  padding-inline-start: 20px;\n  -webkit-padding-end: 20px;\n  padding-inline-end: 20px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  font-size: 1rem;\n  line-height: 1.4;\n}\n.card-content-ios h1 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 2px;\n  font-size: 1.5rem;\n  font-weight: normal;\n}\n.card-content-ios h2 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  font-size: 1rem;\n  font-weight: normal;\n}\n.card-content-ios h3,\n.card-content-ios h4,\n.card-content-ios h5,\n.card-content-ios h6 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  font-size: 0.875rem;\n  font-weight: normal;\n}\n.card-content-ios p {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 2px;\n  font-size: 0.875rem;\n}\n\nion-card-header + .card-content-ios {\n  padding-top: 0;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\nion-card-content {\n  display: block;\n  position: relative;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.card-content-md {\n  -webkit-padding-start: 16px;\n  padding-inline-start: 16px;\n  -webkit-padding-end: 16px;\n  padding-inline-end: 16px;\n  padding-top: 13px;\n  padding-bottom: 13px;\n  font-size: 0.875rem;\n  line-height: 1.5;\n}\n.card-content-md h1 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 2px;\n  font-size: 1.5rem;\n  font-weight: normal;\n}\n.card-content-md h2 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  font-size: 1rem;\n  font-weight: normal;\n}\n.card-content-md h3,\n.card-content-md h4,\n.card-content-md h5,\n.card-content-md h6 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  font-size: 0.875rem;\n  font-weight: normal;\n}\n.card-content-md p {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 2px;\n  font-size: 0.875rem;\n  font-weight: normal;\n  line-height: 1.5;\n}\n\nion-card-header + .card-content-md {\n  padding-top: 0;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class CardContent {\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: '2a2d0b48aad4b83990a1748fce60e772514eb223', class: {\n                [mode]: true,\n                // Used internally for styling\n                [`card-content-${mode}`]: true,\n            } }));\n    }\n    static get is() { return \"ion-card-content\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"card-content.ios.scss\"],\n            \"md\": [\"card-content.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"card-content.ios.css\"],\n            \"md\": [\"card-content.md.css\"]\n        };\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --color: Color of the card subtitle\n   */\n  display: block;\n  position: relative;\n  color: var(--color);\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-base);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --color: var(--ion-color-step-600, var(--ion-text-color-step-400, #666666));\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 4px;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  font-size: 0.75rem;\n  font-weight: 700;\n  letter-spacing: 0.4px;\n  text-transform: uppercase;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --color: Color of the card subtitle\n   */\n  display: block;\n  position: relative;\n  color: var(--color);\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-base);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --color: var(--ion-color-step-550, var(--ion-text-color-step-450, #737373));\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  font-size: 0.875rem;\n  font-weight: 500;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { createColorClasses } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class CardSubtitle {\n    constructor() {\n        this.color = undefined;\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: 'cbcb01bd01cf6de64a0b04fb626e42b07ceb8f53', role: \"heading\", \"aria-level\": \"3\", class: createColorClasses(this.color, {\n                'ion-inherit-color': true,\n                [mode]: true,\n            }) }, h(\"slot\", { key: 'cbcaa73aa5799882c48d6c0aabfb13651bcc91c0' })));\n    }\n    static get is() { return \"ion-card-subtitle\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"card-subtitle.ios.scss\"],\n            \"md\": [\"card-subtitle.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"card-subtitle.ios.css\"],\n            \"md\": [\"card-subtitle.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            }\n        };\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --size: Size of the checkbox icon\n   *\n   * @prop --checkbox-background: Background of the checkbox icon\n   * @prop --checkbox-background-checked: Background of the checkbox icon when checked\n   *\n   * @prop --border-color: Border color of the checkbox icon\n   * @prop --border-radius: Border radius of the checkbox icon\n   * @prop --border-width: Border width of the checkbox icon\n   * @prop --border-style: Border style of the checkbox icon\n   * @prop --border-color-checked: Border color of the checkbox icon when checked\n   *\n   * @prop --transition: Transition of the checkbox icon\n   *\n   * @prop --checkmark-color: Color of the checkbox checkmark when checked\n   * @prop --checkmark-width: Stroke width of the checkbox checkmark\n   */\n  --checkbox-background-checked: var(--ion-color-primary, #0054e9);\n  --border-color-checked: var(--ion-color-primary, #0054e9);\n  --checkmark-color: var(--ion-color-primary-contrast, #fff);\n  --transition: none;\n  display: inline-block;\n  position: relative;\n  cursor: pointer;\n  user-select: none;\n  z-index: 2;\n}\n\n:host(.in-item) {\n  flex: 1 1 0;\n  width: 100%;\n  height: 100%;\n}\n\n/**\n * Checkbox can be slotted\n * in components such as item and\n * toolbar which is why we do not\n * limit the below behavior to just ion-item.\n */\n:host([slot=start]),\n:host([slot=end]) {\n  flex: initial;\n  width: auto;\n}\n\n:host(.ion-color) {\n  --checkbox-background-checked: var(--ion-color-base);\n  --border-color-checked: var(--ion-color-base);\n  --checkmark-color: var(--ion-color-contrast);\n}\n\n.checkbox-wrapper {\n  display: flex;\n  flex-grow: 1;\n  align-items: center;\n  height: inherit;\n  cursor: inherit;\n}\n\n.label-text-wrapper {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n:host(.in-item) .label-text-wrapper {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n:host(.in-item.checkbox-label-placement-stacked) .label-text-wrapper {\n  margin-top: 10px;\n  margin-bottom: 16px;\n}\n\n:host(.in-item.checkbox-label-placement-stacked) .native-wrapper {\n  margin-bottom: 10px;\n}\n\n/**\n * If no label text is placed into the slot\n * then the element should be hidden otherwise\n * there will be additional margins added.\n */\n.label-text-wrapper-hidden {\n  display: none;\n}\n\ninput {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n  opacity: 0;\n  overflow: hidden;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n.native-wrapper {\n  display: flex;\n  align-items: center;\n}\n\n.checkbox-icon {\n  border-radius: var(--border-radius);\n  position: relative;\n  width: var(--size);\n  height: var(--size);\n  transition: var(--transition);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  background: var(--checkbox-background);\n  box-sizing: border-box;\n}\n\n.checkbox-icon path {\n  fill: none;\n  stroke: var(--checkmark-color);\n  stroke-width: var(--checkmark-width);\n  opacity: 0;\n}\n\n:host(.checkbox-justify-space-between) .checkbox-wrapper {\n  justify-content: space-between;\n}\n\n:host(.checkbox-justify-start) .checkbox-wrapper {\n  justify-content: start;\n}\n\n:host(.checkbox-justify-end) .checkbox-wrapper {\n  justify-content: end;\n}\n\n:host(.checkbox-alignment-start) .checkbox-wrapper {\n  align-items: start;\n}\n\n:host(.checkbox-alignment-center) .checkbox-wrapper {\n  align-items: center;\n}\n\n/**\n * Label is on the left of the checkbox in LTR and\n * on the right in RTL.\n */\n:host(.checkbox-label-placement-start) .checkbox-wrapper {\n  flex-direction: row;\n}\n\n:host(.checkbox-label-placement-start) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the checkbox should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n}\n\n/**\n * Label is on the right of the checkbox in LTR and\n * on the left in RTL.\n */\n:host(.checkbox-label-placement-end) .checkbox-wrapper {\n  flex-direction: row-reverse;\n}\n\n/**\n * The margin between the label and\n * the checkbox should be on the start\n * when the label sits at the end.\n */\n:host(.checkbox-label-placement-end) .label-text-wrapper {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 0;\n  margin-inline-end: 0;\n}\n\n:host(.checkbox-label-placement-fixed) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the checkbox should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n}\n\n/**\n * Label is on the left of the checkbox in LTR and\n * on the right in RTL. Label also has a fixed width.\n */\n:host(.checkbox-label-placement-fixed) .label-text-wrapper {\n  flex: 0 0 100px;\n  width: 100px;\n  min-width: 100px;\n  max-width: 200px;\n}\n\n/**\n * Label is on top of the checkbox.\n */\n:host(.checkbox-label-placement-stacked) .checkbox-wrapper {\n  flex-direction: column;\n}\n\n:host(.checkbox-label-placement-stacked) .label-text-wrapper {\n  transform: scale(0.75);\n  /**\n   * The margin between the label and\n   * the checkbox should be on the bottom\n   * when the label sits at the top.\n   */\n  margin-left: 0;\n  margin-right: 0;\n  margin-bottom: 16px;\n  /**\n   * Label text should not extend\n   * beyond the bounds of the checkbox.\n   */\n  max-width: calc(100% / 0.75);\n}\n\n:host(.checkbox-label-placement-stacked.checkbox-alignment-start) .label-text-wrapper {\n  transform-origin: left top;\n}\n:host-context([dir=rtl]):host(.checkbox-label-placement-stacked.checkbox-alignment-start) .label-text-wrapper, :host-context([dir=rtl]).checkbox-label-placement-stacked.checkbox-alignment-start .label-text-wrapper {\n  transform-origin: right top;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.checkbox-label-placement-stacked.checkbox-alignment-start:dir(rtl)) .label-text-wrapper {\n    transform-origin: right top;\n  }\n}\n\n:host(.checkbox-label-placement-stacked.checkbox-alignment-center) .label-text-wrapper {\n  transform-origin: center top;\n}\n:host-context([dir=rtl]):host(.checkbox-label-placement-stacked.checkbox-alignment-center) .label-text-wrapper, :host-context([dir=rtl]).checkbox-label-placement-stacked.checkbox-alignment-center .label-text-wrapper {\n  transform-origin: calc(100% - center) top;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.checkbox-label-placement-stacked.checkbox-alignment-center:dir(rtl)) .label-text-wrapper {\n    transform-origin: calc(100% - center) top;\n  }\n}\n\n:host(.checkbox-checked) .checkbox-icon,\n:host(.checkbox-indeterminate) .checkbox-icon {\n  border-color: var(--border-color-checked);\n  background: var(--checkbox-background-checked);\n}\n\n:host(.checkbox-checked) .checkbox-icon path,\n:host(.checkbox-indeterminate) .checkbox-icon path {\n  opacity: 1;\n}\n\n:host(.checkbox-disabled) {\n  pointer-events: none;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --border-radius: 50%;\n  --border-width: 0.125rem;\n  --border-style: solid;\n  --border-color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.23);\n  --checkbox-background: var(--ion-item-background, var(--ion-background-color, #fff));\n  --size: min(1.375rem, 55.836px);\n  --checkmark-width: 1.5px;\n}\n\n:host(.checkbox-disabled) {\n  opacity: 0.3;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --size: Size of the checkbox icon\n   *\n   * @prop --checkbox-background: Background of the checkbox icon\n   * @prop --checkbox-background-checked: Background of the checkbox icon when checked\n   *\n   * @prop --border-color: Border color of the checkbox icon\n   * @prop --border-radius: Border radius of the checkbox icon\n   * @prop --border-width: Border width of the checkbox icon\n   * @prop --border-style: Border style of the checkbox icon\n   * @prop --border-color-checked: Border color of the checkbox icon when checked\n   *\n   * @prop --transition: Transition of the checkbox icon\n   *\n   * @prop --checkmark-color: Color of the checkbox checkmark when checked\n   * @prop --checkmark-width: Stroke width of the checkbox checkmark\n   */\n  --checkbox-background-checked: var(--ion-color-primary, #0054e9);\n  --border-color-checked: var(--ion-color-primary, #0054e9);\n  --checkmark-color: var(--ion-color-primary-contrast, #fff);\n  --transition: none;\n  display: inline-block;\n  position: relative;\n  cursor: pointer;\n  user-select: none;\n  z-index: 2;\n}\n\n:host(.in-item) {\n  flex: 1 1 0;\n  width: 100%;\n  height: 100%;\n}\n\n/**\n * Checkbox can be slotted\n * in components such as item and\n * toolbar which is why we do not\n * limit the below behavior to just ion-item.\n */\n:host([slot=start]),\n:host([slot=end]) {\n  flex: initial;\n  width: auto;\n}\n\n:host(.ion-color) {\n  --checkbox-background-checked: var(--ion-color-base);\n  --border-color-checked: var(--ion-color-base);\n  --checkmark-color: var(--ion-color-contrast);\n}\n\n.checkbox-wrapper {\n  display: flex;\n  flex-grow: 1;\n  align-items: center;\n  height: inherit;\n  cursor: inherit;\n}\n\n.label-text-wrapper {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n:host(.in-item) .label-text-wrapper {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n:host(.in-item.checkbox-label-placement-stacked) .label-text-wrapper {\n  margin-top: 10px;\n  margin-bottom: 16px;\n}\n\n:host(.in-item.checkbox-label-placement-stacked) .native-wrapper {\n  margin-bottom: 10px;\n}\n\n/**\n * If no label text is placed into the slot\n * then the element should be hidden otherwise\n * there will be additional margins added.\n */\n.label-text-wrapper-hidden {\n  display: none;\n}\n\ninput {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n  opacity: 0;\n  overflow: hidden;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n.native-wrapper {\n  display: flex;\n  align-items: center;\n}\n\n.checkbox-icon {\n  border-radius: var(--border-radius);\n  position: relative;\n  width: var(--size);\n  height: var(--size);\n  transition: var(--transition);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  background: var(--checkbox-background);\n  box-sizing: border-box;\n}\n\n.checkbox-icon path {\n  fill: none;\n  stroke: var(--checkmark-color);\n  stroke-width: var(--checkmark-width);\n  opacity: 0;\n}\n\n:host(.checkbox-justify-space-between) .checkbox-wrapper {\n  justify-content: space-between;\n}\n\n:host(.checkbox-justify-start) .checkbox-wrapper {\n  justify-content: start;\n}\n\n:host(.checkbox-justify-end) .checkbox-wrapper {\n  justify-content: end;\n}\n\n:host(.checkbox-alignment-start) .checkbox-wrapper {\n  align-items: start;\n}\n\n:host(.checkbox-alignment-center) .checkbox-wrapper {\n  align-items: center;\n}\n\n/**\n * Label is on the left of the checkbox in LTR and\n * on the right in RTL.\n */\n:host(.checkbox-label-placement-start) .checkbox-wrapper {\n  flex-direction: row;\n}\n\n:host(.checkbox-label-placement-start) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the checkbox should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n}\n\n/**\n * Label is on the right of the checkbox in LTR and\n * on the left in RTL.\n */\n:host(.checkbox-label-placement-end) .checkbox-wrapper {\n  flex-direction: row-reverse;\n}\n\n/**\n * The margin between the label and\n * the checkbox should be on the start\n * when the label sits at the end.\n */\n:host(.checkbox-label-placement-end) .label-text-wrapper {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 0;\n  margin-inline-end: 0;\n}\n\n:host(.checkbox-label-placement-fixed) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the checkbox should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n}\n\n/**\n * Label is on the left of the checkbox in LTR and\n * on the right in RTL. Label also has a fixed width.\n */\n:host(.checkbox-label-placement-fixed) .label-text-wrapper {\n  flex: 0 0 100px;\n  width: 100px;\n  min-width: 100px;\n  max-width: 200px;\n}\n\n/**\n * Label is on top of the checkbox.\n */\n:host(.checkbox-label-placement-stacked) .checkbox-wrapper {\n  flex-direction: column;\n}\n\n:host(.checkbox-label-placement-stacked) .label-text-wrapper {\n  transform: scale(0.75);\n  /**\n   * The margin between the label and\n   * the checkbox should be on the bottom\n   * when the label sits at the top.\n   */\n  margin-left: 0;\n  margin-right: 0;\n  margin-bottom: 16px;\n  /**\n   * Label text should not extend\n   * beyond the bounds of the checkbox.\n   */\n  max-width: calc(100% / 0.75);\n}\n\n:host(.checkbox-label-placement-stacked.checkbox-alignment-start) .label-text-wrapper {\n  transform-origin: left top;\n}\n:host-context([dir=rtl]):host(.checkbox-label-placement-stacked.checkbox-alignment-start) .label-text-wrapper, :host-context([dir=rtl]).checkbox-label-placement-stacked.checkbox-alignment-start .label-text-wrapper {\n  transform-origin: right top;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.checkbox-label-placement-stacked.checkbox-alignment-start:dir(rtl)) .label-text-wrapper {\n    transform-origin: right top;\n  }\n}\n\n:host(.checkbox-label-placement-stacked.checkbox-alignment-center) .label-text-wrapper {\n  transform-origin: center top;\n}\n:host-context([dir=rtl]):host(.checkbox-label-placement-stacked.checkbox-alignment-center) .label-text-wrapper, :host-context([dir=rtl]).checkbox-label-placement-stacked.checkbox-alignment-center .label-text-wrapper {\n  transform-origin: calc(100% - center) top;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.checkbox-label-placement-stacked.checkbox-alignment-center:dir(rtl)) .label-text-wrapper {\n    transform-origin: calc(100% - center) top;\n  }\n}\n\n:host(.checkbox-checked) .checkbox-icon,\n:host(.checkbox-indeterminate) .checkbox-icon {\n  border-color: var(--border-color-checked);\n  background: var(--checkbox-background-checked);\n}\n\n:host(.checkbox-checked) .checkbox-icon path,\n:host(.checkbox-indeterminate) .checkbox-icon path {\n  opacity: 1;\n}\n\n:host(.checkbox-disabled) {\n  pointer-events: none;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --border-radius: calc(var(--size) * .125);\n  --border-width: 2px;\n  --border-style: solid;\n  --border-color: rgb(var(--ion-text-color-rgb, 0, 0, 0), 0.6);\n  --checkmark-width: 3;\n  --checkbox-background: var(--ion-item-background, var(--ion-background-color, #fff));\n  --transition: background 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  --size: 18px;\n}\n\n.checkbox-icon path {\n  stroke-dasharray: 30;\n  stroke-dashoffset: 30;\n}\n\n:host(.checkbox-checked) .checkbox-icon path,\n:host(.checkbox-indeterminate) .checkbox-icon path {\n  stroke-dashoffset: 0;\n  transition: stroke-dashoffset 90ms linear 90ms;\n}\n\n:host(.checkbox-disabled) .label-text-wrapper {\n  opacity: 0.38;\n}\n\n:host(.checkbox-disabled) .native-wrapper {\n  opacity: 0.63;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { inheritAriaAttributes, renderHiddenInput } from \"../../utils/helpers\";\nimport { createColorClasses, hostContext } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @slot - The label text to associate with the checkbox. Use the \"labelPlacement\" property to control where the label is placed relative to the checkbox.\n *\n * @part container - The container for the checkbox mark.\n * @part label - The label text describing the checkbox.\n * @part mark - The checkmark used to indicate the checked state.\n */\nexport class Checkbox {\n    constructor() {\n        this.inputId = `ion-cb-${checkboxIds++}`;\n        this.inheritedAttributes = {};\n        /**\n         * Sets the checked property and emits\n         * the ionChange event. Use this to update the\n         * checked state in response to user-generated\n         * actions such as a click.\n         */\n        this.setChecked = (state) => {\n            const isChecked = (this.checked = state);\n            this.ionChange.emit({\n                checked: isChecked,\n                value: this.value,\n            });\n        };\n        this.toggleChecked = (ev) => {\n            ev.preventDefault();\n            this.setFocus();\n            this.setChecked(!this.checked);\n            this.indeterminate = false;\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.onClick = (ev) => {\n            if (this.disabled) {\n                return;\n            }\n            this.toggleChecked(ev);\n        };\n        this.color = undefined;\n        this.name = this.inputId;\n        this.checked = false;\n        this.indeterminate = false;\n        this.disabled = false;\n        this.value = 'on';\n        this.labelPlacement = 'start';\n        this.justify = 'space-between';\n        this.alignment = 'center';\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = Object.assign({}, inheritAriaAttributes(this.el));\n    }\n    setFocus() {\n        if (this.focusEl) {\n            this.focusEl.focus();\n        }\n    }\n    render() {\n        const { color, checked, disabled, el, getSVGPath, indeterminate, inheritedAttributes, inputId, justify, labelPlacement, name, value, alignment, } = this;\n        const mode = getIonMode(this);\n        const path = getSVGPath(mode, indeterminate);\n        renderHiddenInput(true, el, name, checked ? value : '', disabled);\n        return (h(Host, { key: '0ac95890562c7f035704c40959c69f8c8ca4bc9f', \"aria-checked\": indeterminate ? 'mixed' : `${checked}`, class: createColorClasses(color, {\n                [mode]: true,\n                'in-item': hostContext('ion-item', el),\n                'checkbox-checked': checked,\n                'checkbox-disabled': disabled,\n                'checkbox-indeterminate': indeterminate,\n                interactive: true,\n                [`checkbox-justify-${justify}`]: true,\n                [`checkbox-alignment-${alignment}`]: true,\n                [`checkbox-label-placement-${labelPlacement}`]: true,\n            }), onClick: this.onClick }, h(\"label\", { key: '3f9f7c8383dded8f7997086b25399d052df76b5c', class: \"checkbox-wrapper\" }, h(\"input\", Object.assign({ key: '6fb11d06c424c289357d5d7c1a4d1b967be231d0', type: \"checkbox\", checked: checked ? true : undefined, disabled: disabled, id: inputId, onChange: this.toggleChecked, onFocus: () => this.onFocus(), onBlur: () => this.onBlur(), ref: (focusEl) => (this.focusEl = focusEl) }, inheritedAttributes)), h(\"div\", { key: 'f577a272e5e3f9f1852fc95e40466c80b76309c7', class: {\n                'label-text-wrapper': true,\n                'label-text-wrapper-hidden': el.textContent === '',\n            }, part: \"label\" }, h(\"slot\", { key: '7c9b0b4513e797a1acdf55a5f286563e5f397e9c' })), h(\"div\", { key: 'e47c50a078b8d761ddc5efcb9a9635281b5818f6', class: \"native-wrapper\" }, h(\"svg\", { key: '4dca47179ae15e9094e01c799ef4ed25fbb0d840', class: \"checkbox-icon\", viewBox: \"0 0 24 24\", part: \"container\" }, path)))));\n    }\n    getSVGPath(mode, indeterminate) {\n        let path = indeterminate ? (h(\"path\", { d: \"M6 12L18 12\", part: \"mark\" })) : (h(\"path\", { d: \"M5.9,12.5l3.8,3.8l8.8-8.8\", part: \"mark\" }));\n        if (mode === 'md') {\n            path = indeterminate ? (h(\"path\", { d: \"M2 12H22\", part: \"mark\" })) : (h(\"path\", { d: \"M1.73,12.91 8.1,19.28 22.79,4.59\", part: \"mark\" }));\n        }\n        return path;\n    }\n    static get is() { return \"ion-checkbox\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"checkbox.ios.scss\"],\n            \"md\": [\"checkbox.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"checkbox.ios.css\"],\n            \"md\": [\"checkbox.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The name of the control, which is submitted with the form data.\"\n                },\n                \"attribute\": \"name\",\n                \"reflect\": false,\n                \"defaultValue\": \"this.inputId\"\n            },\n            \"checked\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the checkbox is selected.\"\n                },\n                \"attribute\": \"checked\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"indeterminate\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the checkbox will visually appear as indeterminate.\"\n                },\n                \"attribute\": \"indeterminate\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the checkbox.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"value\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"any | null\",\n                    \"resolved\": \"any\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The value of the checkbox does not mean if it's checked or not, use the `checked`\\nproperty for that.\\n\\nThe value of a checkbox is analogous to the value of an `<input type=\\\"checkbox\\\">`,\\nit's only used when the checkbox participates in a native `<form>`.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false,\n                \"defaultValue\": \"'on'\"\n            },\n            \"labelPlacement\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'start' | 'end' | 'fixed' | 'stacked'\",\n                    \"resolved\": \"\\\"end\\\" | \\\"fixed\\\" | \\\"stacked\\\" | \\\"start\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Where to place the label relative to the checkbox.\\n`\\\"start\\\"`: The label will appear to the left of the checkbox in LTR and to the right in RTL.\\n`\\\"end\\\"`: The label will appear to the right of the checkbox in LTR and to the left in RTL.\\n`\\\"fixed\\\"`: The label has the same behavior as `\\\"start\\\"` except it also has a fixed width. Long text will be truncated with ellipses (\\\"...\\\").\\n`\\\"stacked\\\"`: The label will appear above the checkbox regardless of the direction. The alignment of the label can be controlled with the `alignment` property.\"\n                },\n                \"attribute\": \"label-placement\",\n                \"reflect\": false,\n                \"defaultValue\": \"'start'\"\n            },\n            \"justify\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'start' | 'end' | 'space-between'\",\n                    \"resolved\": \"\\\"end\\\" | \\\"space-between\\\" | \\\"start\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"How to pack the label and checkbox within a line.\\n`\\\"start\\\"`: The label and checkbox will appear on the left in LTR and\\non the right in RTL.\\n`\\\"end\\\"`: The label and checkbox will appear on the right in LTR and\\non the left in RTL.\\n`\\\"space-between\\\"`: The label and checkbox will appear on opposite\\nends of the line with space between the two elements.\"\n                },\n                \"attribute\": \"justify\",\n                \"reflect\": false,\n                \"defaultValue\": \"'space-between'\"\n            },\n            \"alignment\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'start' | 'center'\",\n                    \"resolved\": \"\\\"center\\\" | \\\"start\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"How to control the alignment of the checkbox and label on the cross axis.\\n`\\\"start\\\"`: The label and control will appear on the left of the cross axis in LTR, and on the right side in RTL.\\n`\\\"center\\\"`: The label and control will appear at the center of the cross axis in both LTR and RTL.\"\n                },\n                \"attribute\": \"alignment\",\n                \"reflect\": false,\n                \"defaultValue\": \"'center'\"\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionChange\",\n                \"name\": \"ionChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the checked property has changed as a result of a user action such as a click.\\n\\nThis event will not emit when programmatically setting the `checked` property.\"\n                },\n                \"complexType\": {\n                    \"original\": \"CheckboxChangeEventDetail\",\n                    \"resolved\": \"CheckboxChangeEventDetail<any>\",\n                    \"references\": {\n                        \"CheckboxChangeEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"./checkbox-interface\",\n                            \"id\": \"src/components/checkbox/checkbox-interface.ts::CheckboxChangeEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"ionFocus\",\n                \"name\": \"ionFocus\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the checkbox has focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionBlur\",\n                \"name\": \"ionBlur\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the checkbox loses focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get elementRef() { return \"el\"; }\n}\nlet checkboxIds = 0;\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nexport const SIZE_TO_MEDIA = {\n    xs: '(min-width: 0px)',\n    sm: '(min-width: 576px)',\n    md: '(min-width: 768px)',\n    lg: '(min-width: 992px)',\n    xl: '(min-width: 1200px)',\n};\n// Check if the window matches the media query\n// at the breakpoint passed\n// e.g. matchBreakpoint('sm') => true if screen width exceeds 576px\nexport const matchBreakpoint = (breakpoint) => {\n    if (breakpoint === undefined || breakpoint === '') {\n        return true;\n    }\n    if (window.matchMedia) {\n        const mediaQuery = SIZE_TO_MEDIA[breakpoint];\n        return window.matchMedia(mediaQuery).matches;\n    }\n    return false;\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --ion-grid-columns: The number of total Columns in the Grid\n   * @prop --ion-grid-column-padding: Padding for the Column\n   * @prop --ion-grid-column-padding-xs: Padding for the Column on xs screens and up\n   * @prop --ion-grid-column-padding-sm: Padding for the Column on sm screens and up\n   * @prop --ion-grid-column-padding-md: Padding for the Column on md screens and up\n   * @prop --ion-grid-column-padding-lg: Padding for the Column on lg screens and up\n   * @prop --ion-grid-column-padding-xl: Padding for the Column on xl screens and up\n   */\n  -webkit-padding-start: var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));\n  padding-inline-start: var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));\n  -webkit-padding-end: var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));\n  padding-inline-end: var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));\n  padding-top: var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));\n  padding-bottom: var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  box-sizing: border-box;\n  position: relative;\n  flex-basis: 0;\n  flex-grow: 1;\n  width: 100%;\n  max-width: 100%;\n  min-height: 1px;\n}\n@media (min-width: 576px) {\n  :host {\n    -webkit-padding-start: var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));\n    padding-inline-start: var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));\n    -webkit-padding-end: var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));\n    padding-inline-end: var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));\n    padding-top: var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));\n    padding-bottom: var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));\n  }\n}\n@media (min-width: 768px) {\n  :host {\n    -webkit-padding-start: var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));\n    padding-inline-start: var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));\n    -webkit-padding-end: var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));\n    padding-inline-end: var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));\n    padding-top: var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));\n    padding-bottom: var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));\n  }\n}\n@media (min-width: 992px) {\n  :host {\n    -webkit-padding-start: var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));\n    padding-inline-start: var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));\n    -webkit-padding-end: var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));\n    padding-inline-end: var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));\n    padding-top: var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));\n    padding-bottom: var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));\n  }\n}\n@media (min-width: 1200px) {\n  :host {\n    -webkit-padding-start: var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));\n    padding-inline-start: var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));\n    -webkit-padding-end: var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));\n    padding-inline-end: var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));\n    padding-top: var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));\n    padding-bottom: var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));\n  }\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, forceUpdate, h } from \"@stencil/core\";\nimport { matchBreakpoint } from \"../../utils/media\";\nimport { getIonMode } from \"../../global/ionic-global\";\nconst win = typeof window !== 'undefined' ? window : undefined;\n// eslint-disable-next-line @typescript-eslint/prefer-optional-chain\nconst SUPPORTS_VARS = win && !!(win.CSS && win.CSS.supports && win.CSS.supports('--a: 0'));\nconst BREAKPOINTS = ['', 'xs', 'sm', 'md', 'lg', 'xl'];\nexport class Col {\n    constructor() {\n        this.offset = undefined;\n        this.offsetXs = undefined;\n        this.offsetSm = undefined;\n        this.offsetMd = undefined;\n        this.offsetLg = undefined;\n        this.offsetXl = undefined;\n        this.pull = undefined;\n        this.pullXs = undefined;\n        this.pullSm = undefined;\n        this.pullMd = undefined;\n        this.pullLg = undefined;\n        this.pullXl = undefined;\n        this.push = undefined;\n        this.pushXs = undefined;\n        this.pushSm = undefined;\n        this.pushMd = undefined;\n        this.pushLg = undefined;\n        this.pushXl = undefined;\n        this.size = undefined;\n        this.sizeXs = undefined;\n        this.sizeSm = undefined;\n        this.sizeMd = undefined;\n        this.sizeLg = undefined;\n        this.sizeXl = undefined;\n    }\n    onResize() {\n        forceUpdate(this);\n    }\n    // Loop through all of the breakpoints to see if the media query\n    // matches and grab the column value from the relevant prop if so\n    getColumns(property) {\n        let matched;\n        for (const breakpoint of BREAKPOINTS) {\n            const matches = matchBreakpoint(breakpoint);\n            // Grab the value of the property, if it exists and our\n            // media query matches we return the value\n            const columns = this[property + breakpoint.charAt(0).toUpperCase() + breakpoint.slice(1)];\n            if (matches && columns !== undefined) {\n                matched = columns;\n            }\n        }\n        // Return the last matched columns since the breakpoints\n        // increase in size and we want to return the largest match\n        return matched;\n    }\n    calculateSize() {\n        const columns = this.getColumns('size');\n        // If size wasn't set for any breakpoint\n        // or if the user set the size without a value\n        // it means we need to stick with the default and return\n        // e.g. <ion-col size-md>\n        if (!columns || columns === '') {\n            return;\n        }\n        // If the size is set to auto then don't calculate a size\n        const colSize = columns === 'auto'\n            ? 'auto'\n            : // If CSS supports variables we should use the grid columns var\n                SUPPORTS_VARS\n                    ? `calc(calc(${columns} / var(--ion-grid-columns, 12)) * 100%)`\n                    : // Convert the columns to a percentage by dividing by the total number\n                        // of columns (12) and then multiplying by 100\n                        (columns / 12) * 100 + '%';\n        return {\n            flex: `0 0 ${colSize}`,\n            width: `${colSize}`,\n            'max-width': `${colSize}`,\n        };\n    }\n    // Called by push, pull, and offset since they use the same calculations\n    calculatePosition(property, modifier) {\n        const columns = this.getColumns(property);\n        if (!columns) {\n            return;\n        }\n        // If the number of columns passed are greater than 0 and less than\n        // 12 we can position the column, else default to auto\n        const amount = SUPPORTS_VARS\n            ? // If CSS supports variables we should use the grid columns var\n                `calc(calc(${columns} / var(--ion-grid-columns, 12)) * 100%)`\n            : // Convert the columns to a percentage by dividing by the total number\n                // of columns (12) and then multiplying by 100\n                columns > 0 && columns < 12\n                    ? (columns / 12) * 100 + '%'\n                    : 'auto';\n        return {\n            [modifier]: amount,\n        };\n    }\n    calculateOffset(isRTL) {\n        return this.calculatePosition('offset', isRTL ? 'margin-right' : 'margin-left');\n    }\n    calculatePull(isRTL) {\n        return this.calculatePosition('pull', isRTL ? 'left' : 'right');\n    }\n    calculatePush(isRTL) {\n        return this.calculatePosition('push', isRTL ? 'right' : 'left');\n    }\n    render() {\n        const isRTL = document.dir === 'rtl';\n        const mode = getIonMode(this);\n        return (h(Host, { key: 'c37fa4c4c993385ccbb6f4e89b2f390b140507a0', class: {\n                [mode]: true,\n            }, style: Object.assign(Object.assign(Object.assign(Object.assign({}, this.calculateOffset(isRTL)), this.calculatePull(isRTL)), this.calculatePush(isRTL)), this.calculateSize()) }, h(\"slot\", { key: '6a5296ff0b9dee6600c2dafe7363a065d053bac2' })));\n    }\n    static get is() { return \"ion-col\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"col.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"col.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"offset\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The amount to offset the column, in terms of how many columns it should shift to the end\\nof the total available.\"\n                },\n                \"attribute\": \"offset\",\n                \"reflect\": false\n            },\n            \"offsetXs\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The amount to offset the column for xs screens, in terms of how many columns it should shift\\nto the end of the total available.\"\n                },\n                \"attribute\": \"offset-xs\",\n                \"reflect\": false\n            },\n            \"offsetSm\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The amount to offset the column for sm screens, in terms of how many columns it should shift\\nto the end of the total available.\"\n                },\n                \"attribute\": \"offset-sm\",\n                \"reflect\": false\n            },\n            \"offsetMd\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The amount to offset the column for md screens, in terms of how many columns it should shift\\nto the end of the total available.\"\n                },\n                \"attribute\": \"offset-md\",\n                \"reflect\": false\n            },\n            \"offsetLg\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The amount to offset the column for lg screens, in terms of how many columns it should shift\\nto the end of the total available.\"\n                },\n                \"attribute\": \"offset-lg\",\n                \"reflect\": false\n            },\n            \"offsetXl\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The amount to offset the column for xl screens, in terms of how many columns it should shift\\nto the end of the total available.\"\n                },\n                \"attribute\": \"offset-xl\",\n                \"reflect\": false\n            },\n            \"pull\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The amount to pull the column, in terms of how many columns it should shift to the start of\\nthe total available.\"\n                },\n                \"attribute\": \"pull\",\n                \"reflect\": false\n            },\n            \"pullXs\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The amount to pull the column for xs screens, in terms of how many columns it should shift\\nto the start of the total available.\"\n                },\n                \"attribute\": \"pull-xs\",\n                \"reflect\": false\n            },\n            \"pullSm\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The amount to pull the column for sm screens, in terms of how many columns it should shift\\nto the start of the total available.\"\n                },\n                \"attribute\": \"pull-sm\",\n                \"reflect\": false\n            },\n            \"pullMd\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The amount to pull the column for md screens, in terms of how many columns it should shift\\nto the start of the total available.\"\n                },\n                \"attribute\": \"pull-md\",\n                \"reflect\": false\n            },\n            \"pullLg\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The amount to pull the column for lg screens, in terms of how many columns it should shift\\nto the start of the total available.\"\n                },\n                \"attribute\": \"pull-lg\",\n                \"reflect\": false\n            },\n            \"pullXl\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The amount to pull the column for xl screens, in terms of how many columns it should shift\\nto the start of the total available.\"\n                },\n                \"attribute\": \"pull-xl\",\n                \"reflect\": false\n            },\n            \"push\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The amount to push the column, in terms of how many columns it should shift to the end\\nof the total available.\"\n                },\n                \"attribute\": \"push\",\n                \"reflect\": false\n            },\n            \"pushXs\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The amount to push the column for xs screens, in terms of how many columns it should shift\\nto the end of the total available.\"\n                },\n                \"attribute\": \"push-xs\",\n                \"reflect\": false\n            },\n            \"pushSm\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The amount to push the column for sm screens, in terms of how many columns it should shift\\nto the end of the total available.\"\n                },\n                \"attribute\": \"push-sm\",\n                \"reflect\": false\n            },\n            \"pushMd\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The amount to push the column for md screens, in terms of how many columns it should shift\\nto the end of the total available.\"\n                },\n                \"attribute\": \"push-md\",\n                \"reflect\": false\n            },\n            \"pushLg\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The amount to push the column for lg screens, in terms of how many columns it should shift\\nto the end of the total available.\"\n                },\n                \"attribute\": \"push-lg\",\n                \"reflect\": false\n            },\n            \"pushXl\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The amount to push the column for xl screens, in terms of how many columns it should shift\\nto the end of the total available.\"\n                },\n                \"attribute\": \"push-xl\",\n                \"reflect\": false\n            },\n            \"size\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The size of the column, in terms of how many columns it should take up out of the total\\navailable. If `\\\"auto\\\"` is passed, the column will be the size of its content.\"\n                },\n                \"attribute\": \"size\",\n                \"reflect\": false\n            },\n            \"sizeXs\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The size of the column for xs screens, in terms of how many columns it should take up out\\nof the total available. If `\\\"auto\\\"` is passed, the column will be the size of its content.\"\n                },\n                \"attribute\": \"size-xs\",\n                \"reflect\": false\n            },\n            \"sizeSm\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The size of the column for sm screens, in terms of how many columns it should take up out\\nof the total available. If `\\\"auto\\\"` is passed, the column will be the size of its content.\"\n                },\n                \"attribute\": \"size-sm\",\n                \"reflect\": false\n            },\n            \"sizeMd\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The size of the column for md screens, in terms of how many columns it should take up out\\nof the total available. If `\\\"auto\\\"` is passed, the column will be the size of its content.\"\n                },\n                \"attribute\": \"size-md\",\n                \"reflect\": false\n            },\n            \"sizeLg\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The size of the column for lg screens, in terms of how many columns it should take up out\\nof the total available. If `\\\"auto\\\"` is passed, the column will be the size of its content.\"\n                },\n                \"attribute\": \"size-lg\",\n                \"reflect\": false\n            },\n            \"sizeXl\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The size of the column for xl screens, in terms of how many columns it should take up out\\nof the total available. If `\\\"auto\\\"` is passed, the column will be the size of its content.\"\n                },\n                \"attribute\": \"size-xl\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"resize\",\n                \"method\": \"onResize\",\n                \"target\": \"window\",\n                \"capture\": false,\n                \"passive\": true\n            }];\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the content\n   *\n   * @prop --color: Color of the content\n   *\n   * @prop --padding-top: Top padding of the content\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the content\n   * @prop --padding-bottom: Bottom padding of the content\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the content\n   *\n   * @prop --keyboard-offset: Keyboard offset of the content\n   *\n   * @prop --offset-top: Offset top of the content\n   * @prop --offset-bottom: Offset bottom of the content\n   */\n  --background: var(--ion-background-color, #fff);\n  --color: var(--ion-text-color, #000);\n  --padding-top: 0px;\n  --padding-bottom: 0px;\n  --padding-start: 0px;\n  --padding-end: 0px;\n  --keyboard-offset: 0px;\n  --offset-top: 0px;\n  --offset-bottom: 0px;\n  --overflow: auto;\n  display: block;\n  position: relative;\n  flex: 1;\n  width: 100%;\n  height: 100%;\n  /* stylelint-disable */\n  margin: 0 !important;\n  padding: 0 !important;\n  /* stylelint-enable */\n  font-family: var(--ion-font-family, inherit);\n  contain: size style;\n}\n\n:host(.ion-color) .inner-scroll {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n#background-content {\n  left: 0px;\n  right: 0px;\n  top: calc(var(--offset-top) * -1);\n  bottom: calc(var(--offset-bottom) * -1);\n  position: absolute;\n  background: var(--background);\n}\n\n.inner-scroll {\n  left: 0px;\n  right: 0px;\n  top: calc(var(--offset-top) * -1);\n  bottom: calc(var(--offset-bottom) * -1);\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: calc(var(--padding-top) + var(--offset-top));\n  padding-bottom: calc(var(--padding-bottom) + var(--keyboard-offset) + var(--offset-bottom));\n  position: absolute;\n  color: var(--color);\n  box-sizing: border-box;\n  overflow: hidden;\n  /**\n   * touch-action: manipulation is an alias\n   * for this, but WebKit has an issue\n   * where pointercancel events are not fired\n   * when scrolling: https://bugs.webkit.org/show_bug.cgi?id=240917\n   * Using the long form below avoids the issue.\n   */\n  touch-action: pan-x pan-y pinch-zoom;\n}\n\n.scroll-y,\n.scroll-x {\n  -webkit-overflow-scrolling: touch;\n  /**\n   * This adds `.inner-scroll` as part of the\n   * stacking context in WebKit. Without it,\n   * children of ion-content are treated as\n   * siblings rather than descendants. This\n   * can result in the children being put\n   * into their own layers, degrading\n   * scrolling performance.\n   *\n   * An optimization called \"layer backing\n   * sharing\" usually kicks in to prevent\n   * this, but having translate3d defeats\n   * this optimization.\n   *\n   * See: https://bugs.webkit.org/show_bug.cgi?id=216701\n   */\n  z-index: 0;\n  will-change: scroll-position;\n}\n\n.scroll-y {\n  overflow-y: var(--overflow);\n  overscroll-behavior-y: contain;\n}\n\n.scroll-x {\n  overflow-x: var(--overflow);\n  overscroll-behavior-x: contain;\n}\n\n.overscroll::before,\n.overscroll::after {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  content: \"\";\n}\n\n.overscroll::before {\n  bottom: -1px;\n}\n\n.overscroll::after {\n  top: -1px;\n}\n\n:host(.content-sizing) {\n  display: flex;\n  flex-direction: column;\n  /**\n   * This resolves a sizing issue in popovers where extra long content\n   * would overflow the popover's height, preventing scrolling. It's a\n   * quirk of flexbox that forces the content to shrink to fit.\n   *\n   * overflow: hidden can't be used here because it prevents the visual\n   * effect from showing on translucent headers.\n   */\n  min-height: 0;\n  contain: none;\n}\n\n:host(.content-sizing) .inner-scroll {\n  position: relative;\n  /**\n   * Because the outer content has display: flex here (to help enable\n   * scrolling in a popover), offsetting via `top` (such as when using\n   * a translucent header) creates white space under the content. Use\n   * a negative margin instead to keep the bottom in place. (A similar\n   * thing happens with `bottom` and footers.)\n   */\n  top: 0;\n  bottom: 0;\n  margin-top: calc(var(--offset-top) * -1);\n  margin-bottom: calc(var(--offset-bottom) * -1);\n}\n\n.transition-effect {\n  display: none;\n  position: absolute;\n  width: 100%;\n  height: 100vh;\n  opacity: 0;\n  pointer-events: none;\n}\n\n:host(.content-ltr) .transition-effect {\n  /* stylelint-disable property-disallowed-list */\n  left: -100%;\n  /* stylelint-enable property-disallowed-list */\n}\n\n:host(.content-rtl) .transition-effect {\n  /* stylelint-disable property-disallowed-list */\n  right: -100%;\n  /* stylelint-enable property-disallowed-list */\n}\n\n.transition-cover {\n  position: absolute;\n  /* stylelint-disable property-disallowed-list */\n  right: 0;\n  /* stylelint-enable property-disallowed-list */\n  width: 100%;\n  height: 100%;\n  background: black;\n  opacity: 0.1;\n}\n\n.transition-shadow {\n  display: block;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  box-shadow: inset -9px 0 9px 0 rgba(0, 0, 100, 0.03);\n}\n\n:host(.content-ltr) .transition-shadow {\n  /* stylelint-disable property-disallowed-list */\n  right: 0;\n  /* stylelint-enable property-disallowed-list */\n}\n\n:host(.content-rtl) .transition-shadow {\n  /* stylelint-disable property-disallowed-list */\n  left: 0;\n  /* stylelint-enable property-disallowed-list */\n  transform: scaleX(-1);\n}\n\n::slotted([slot=fixed]) {\n  position: absolute;\n  /**\n   * When presenting ion-content inside of an ion-modal, the .inner-scroll\n   * element is composited. In WebKit, the fixed content is not composited\n   * causing it to appear under the main scrollable content as a result.\n   * The fixed content is correctly composited in other browsers. Adding\n   * the translateZ forces the fixed content to be composited so it correctly\n   * shows on top of the scrollable content. Setting a negative z-index will\n   * still allow the fixed content to appear under the scroll content if specified.\n   */\n  transform: translateZ(0);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Build, Host, forceUpdate, h, readTask } from \"@stencil/core\";\nimport { componentOnReady, hasLazyBuild, inheritAriaAttributes } from \"../../utils/helpers\";\nimport { isPlatform } from \"../../utils/platform\";\nimport { isRTL } from \"../../utils/rtl/index\";\nimport { createColorClasses, hostContext } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @slot - Content is placed in the scrollable area if provided without a slot.\n * @slot fixed - Should be used for fixed content that should not scroll.\n *\n * @part background - The background of the content.\n * @part scroll - The scrollable container of the content.\n */\nexport class Content {\n    constructor() {\n        this.watchDog = null;\n        this.isScrolling = false;\n        this.lastScroll = 0;\n        this.queued = false;\n        this.cTop = -1;\n        this.cBottom = -1;\n        this.isMainContent = true;\n        this.resizeTimeout = null;\n        this.inheritedAttributes = {};\n        this.tabsElement = null;\n        // Detail is used in a hot loop in the scroll event, by allocating it here\n        // V8 will be able to inline any read/write to it since it's a monomorphic class.\n        // https://mrale.ph/blog/2015/01/11/whats-up-with-monomorphism.html\n        this.detail = {\n            scrollTop: 0,\n            scrollLeft: 0,\n            type: 'scroll',\n            event: undefined,\n            startX: 0,\n            startY: 0,\n            startTime: 0,\n            currentX: 0,\n            currentY: 0,\n            velocityX: 0,\n            velocityY: 0,\n            deltaX: 0,\n            deltaY: 0,\n            currentTime: 0,\n            data: undefined,\n            isScrolling: true,\n        };\n        this.color = undefined;\n        this.fullscreen = false;\n        this.fixedSlotPlacement = 'after';\n        this.forceOverscroll = undefined;\n        this.scrollX = false;\n        this.scrollY = true;\n        this.scrollEvents = false;\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAriaAttributes(this.el);\n    }\n    connectedCallback() {\n        this.isMainContent = this.el.closest('ion-menu, ion-popover, ion-modal') === null;\n        /**\n         * The fullscreen content offsets need to be\n         * computed after the tab bar has loaded. Since\n         * lazy evaluation means components are not hydrated\n         * at the same time, we need to wait for the ionTabBarLoaded\n         * event to fire. This does not impact dist-custom-elements\n         * because there is no hydration there.\n         */\n        if (hasLazyBuild(this.el)) {\n            /**\n             * We need to cache the reference to the tabs.\n             * If just the content is unmounted then we won't\n             * be able to query for the closest tabs on disconnectedCallback\n             * since the content has been removed from the DOM tree.\n             */\n            const closestTabs = (this.tabsElement = this.el.closest('ion-tabs'));\n            if (closestTabs !== null) {\n                /**\n                 * When adding and removing the event listener\n                 * we need to make sure we pass the same function reference\n                 * otherwise the event listener will not be removed properly.\n                 * We can't only pass `this.resize` because \"this\" in the function\n                 * context becomes a reference to IonTabs instead of IonContent.\n                 *\n                 * Additionally, we listen for ionTabBarLoaded on the IonTabs\n                 * instance rather than the IonTabBar instance. It's possible for\n                 * a tab bar to be conditionally rendered/mounted. Since ionTabBarLoaded\n                 * bubbles, we can catch any instances of child tab bars loading by listening\n                 * on IonTabs.\n                 */\n                this.tabsLoadCallback = () => this.resize();\n                closestTabs.addEventListener('ionTabBarLoaded', this.tabsLoadCallback);\n            }\n        }\n    }\n    disconnectedCallback() {\n        this.onScrollEnd();\n        if (hasLazyBuild(this.el)) {\n            /**\n             * The event listener and tabs caches need to\n             * be cleared otherwise this will create a memory\n             * leak where the IonTabs instance can never be\n             * garbage collected.\n             */\n            const { tabsElement, tabsLoadCallback } = this;\n            if (tabsElement !== null && tabsLoadCallback !== undefined) {\n                tabsElement.removeEventListener('ionTabBarLoaded', tabsLoadCallback);\n            }\n            this.tabsElement = null;\n            this.tabsLoadCallback = undefined;\n        }\n    }\n    /**\n     * Rotating certain devices can update\n     * the safe area insets. As a result,\n     * the fullscreen feature on ion-content\n     * needs to be recalculated.\n     *\n     * We listen for \"resize\" because we\n     * do not care what the orientation of\n     * the device is. Other APIs\n     * such as ScreenOrientation or\n     * the deviceorientation event must have\n     * permission from the user first whereas\n     * the \"resize\" event does not.\n     *\n     * We also throttle the callback to minimize\n     * thrashing when quickly resizing a window.\n     */\n    onResize() {\n        if (this.resizeTimeout) {\n            clearTimeout(this.resizeTimeout);\n            this.resizeTimeout = null;\n        }\n        this.resizeTimeout = setTimeout(() => {\n            /**\n             * Resize should only happen\n             * if the content is visible.\n             * When the content is hidden\n             * then offsetParent will be null.\n             */\n            if (this.el.offsetParent === null) {\n                return;\n            }\n            this.resize();\n        }, 100);\n    }\n    shouldForceOverscroll() {\n        const { forceOverscroll } = this;\n        const mode = getIonMode(this);\n        return forceOverscroll === undefined ? mode === 'ios' && isPlatform('ios') : forceOverscroll;\n    }\n    resize() {\n        /**\n         * Only force update if the component is rendered in a browser context.\n         * Using `forceUpdate` in a server context with pre-rendering can lead to an infinite loop.\n         * The `hydrateDocument` function in `@stencil/core` will render the `ion-content`, but\n         * `forceUpdate` will trigger another render, locking up the server.\n         *\n         * TODO: Remove if STENCIL-834 determines Stencil will account for this.\n         */\n        if (Build.isBrowser) {\n            if (this.fullscreen) {\n                readTask(() => this.readDimensions());\n            }\n            else if (this.cTop !== 0 || this.cBottom !== 0) {\n                this.cTop = this.cBottom = 0;\n                forceUpdate(this);\n            }\n        }\n    }\n    readDimensions() {\n        const page = getPageElement(this.el);\n        const top = Math.max(this.el.offsetTop, 0);\n        const bottom = Math.max(page.offsetHeight - top - this.el.offsetHeight, 0);\n        const dirty = top !== this.cTop || bottom !== this.cBottom;\n        if (dirty) {\n            this.cTop = top;\n            this.cBottom = bottom;\n            forceUpdate(this);\n        }\n    }\n    onScroll(ev) {\n        const timeStamp = Date.now();\n        const shouldStart = !this.isScrolling;\n        this.lastScroll = timeStamp;\n        if (shouldStart) {\n            this.onScrollStart();\n        }\n        if (!this.queued && this.scrollEvents) {\n            this.queued = true;\n            readTask((ts) => {\n                this.queued = false;\n                this.detail.event = ev;\n                updateScrollDetail(this.detail, this.scrollEl, ts, shouldStart);\n                this.ionScroll.emit(this.detail);\n            });\n        }\n    }\n    /**\n     * Get the element where the actual scrolling takes place.\n     * This element can be used to subscribe to `scroll` events or manually modify\n     * `scrollTop`. However, it's recommended to use the API provided by `ion-content`:\n     *\n     * i.e. Using `ionScroll`, `ionScrollStart`, `ionScrollEnd` for scrolling events\n     * and `scrollToPoint()` to scroll the content into a certain point.\n     */\n    async getScrollElement() {\n        /**\n         * If this gets called in certain early lifecycle hooks (ex: Vue onMounted),\n         * scrollEl won't be defined yet with the custom elements build, so wait for it to load in.\n         */\n        if (!this.scrollEl) {\n            await new Promise((resolve) => componentOnReady(this.el, resolve));\n        }\n        return Promise.resolve(this.scrollEl);\n    }\n    /**\n     * Returns the background content element.\n     * @internal\n     */\n    async getBackgroundElement() {\n        if (!this.backgroundContentEl) {\n            await new Promise((resolve) => componentOnReady(this.el, resolve));\n        }\n        return Promise.resolve(this.backgroundContentEl);\n    }\n    /**\n     * Scroll to the top of the component.\n     *\n     * @param duration The amount of time to take scrolling to the top. Defaults to `0`.\n     */\n    scrollToTop(duration = 0) {\n        return this.scrollToPoint(undefined, 0, duration);\n    }\n    /**\n     * Scroll to the bottom of the component.\n     *\n     * @param duration The amount of time to take scrolling to the bottom. Defaults to `0`.\n     */\n    async scrollToBottom(duration = 0) {\n        const scrollEl = await this.getScrollElement();\n        const y = scrollEl.scrollHeight - scrollEl.clientHeight;\n        return this.scrollToPoint(undefined, y, duration);\n    }\n    /**\n     * Scroll by a specified X/Y distance in the component.\n     *\n     * @param x The amount to scroll by on the horizontal axis.\n     * @param y The amount to scroll by on the vertical axis.\n     * @param duration The amount of time to take scrolling by that amount.\n     */\n    async scrollByPoint(x, y, duration) {\n        const scrollEl = await this.getScrollElement();\n        return this.scrollToPoint(x + scrollEl.scrollLeft, y + scrollEl.scrollTop, duration);\n    }\n    /**\n     * Scroll to a specified X/Y location in the component.\n     *\n     * @param x The point to scroll to on the horizontal axis.\n     * @param y The point to scroll to on the vertical axis.\n     * @param duration The amount of time to take scrolling to that point. Defaults to `0`.\n     */\n    async scrollToPoint(x, y, duration = 0) {\n        const el = await this.getScrollElement();\n        if (duration < 32) {\n            if (y != null) {\n                el.scrollTop = y;\n            }\n            if (x != null) {\n                el.scrollLeft = x;\n            }\n            return;\n        }\n        let resolve;\n        let startTime = 0;\n        const promise = new Promise((r) => (resolve = r));\n        const fromY = el.scrollTop;\n        const fromX = el.scrollLeft;\n        const deltaY = y != null ? y - fromY : 0;\n        const deltaX = x != null ? x - fromX : 0;\n        // scroll loop\n        const step = (timeStamp) => {\n            const linearTime = Math.min(1, (timeStamp - startTime) / duration) - 1;\n            const easedT = Math.pow(linearTime, 3) + 1;\n            if (deltaY !== 0) {\n                el.scrollTop = Math.floor(easedT * deltaY + fromY);\n            }\n            if (deltaX !== 0) {\n                el.scrollLeft = Math.floor(easedT * deltaX + fromX);\n            }\n            if (easedT < 1) {\n                // do not use DomController here\n                // must use nativeRaf in order to fire in the next frame\n                requestAnimationFrame(step);\n            }\n            else {\n                resolve();\n            }\n        };\n        // chill out for a frame first\n        requestAnimationFrame((ts) => {\n            startTime = ts;\n            step(ts);\n        });\n        return promise;\n    }\n    onScrollStart() {\n        this.isScrolling = true;\n        this.ionScrollStart.emit({\n            isScrolling: true,\n        });\n        if (this.watchDog) {\n            clearInterval(this.watchDog);\n        }\n        // watchdog\n        this.watchDog = setInterval(() => {\n            if (this.lastScroll < Date.now() - 120) {\n                this.onScrollEnd();\n            }\n        }, 100);\n    }\n    onScrollEnd() {\n        if (this.watchDog)\n            clearInterval(this.watchDog);\n        this.watchDog = null;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            this.ionScrollEnd.emit({\n                isScrolling: false,\n            });\n        }\n    }\n    render() {\n        const { fixedSlotPlacement, inheritedAttributes, isMainContent, scrollX, scrollY, el } = this;\n        const rtl = isRTL(el) ? 'rtl' : 'ltr';\n        const mode = getIonMode(this);\n        const forceOverscroll = this.shouldForceOverscroll();\n        const transitionShadow = mode === 'ios';\n        this.resize();\n        return (h(Host, Object.assign({ key: '92a7cbc2e9c812930f4231bd846411933a5dded6', role: isMainContent ? 'main' : undefined, class: createColorClasses(this.color, {\n                [mode]: true,\n                'content-sizing': hostContext('ion-popover', this.el),\n                overscroll: forceOverscroll,\n                [`content-${rtl}`]: true,\n            }), style: {\n                '--offset-top': `${this.cTop}px`,\n                '--offset-bottom': `${this.cBottom}px`,\n            } }, inheritedAttributes), h(\"div\", { key: '52498d8874b9944b8245e448ea9dfc75b3929c2d', ref: (el) => (this.backgroundContentEl = el), id: \"background-content\", part: \"background\" }), fixedSlotPlacement === 'before' ? h(\"slot\", { name: \"fixed\" }) : null, h(\"div\", { key: '00e157a53485b285300404178436276afceb63f5', class: {\n                'inner-scroll': true,\n                'scroll-x': scrollX,\n                'scroll-y': scrollY,\n                overscroll: (scrollX || scrollY) && forceOverscroll,\n            }, ref: (scrollEl) => (this.scrollEl = scrollEl), onScroll: this.scrollEvents ? (ev) => this.onScroll(ev) : undefined, part: \"scroll\" }, h(\"slot\", { key: '8522320514a2e8a63f7dc9ade6c1fb3fb00f454e' })), transitionShadow ? (h(\"div\", { class: \"transition-effect\" }, h(\"div\", { class: \"transition-cover\" }), h(\"div\", { class: \"transition-shadow\" }))) : null, fixedSlotPlacement === 'after' ? h(\"slot\", { name: \"fixed\" }) : null));\n    }\n    static get is() { return \"ion-content\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"content.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"content.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"fullscreen\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the content will scroll behind the headers\\nand footers. This effect can easily be seen by setting the toolbar\\nto transparent.\"\n                },\n                \"attribute\": \"fullscreen\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"fixedSlotPlacement\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'after' | 'before'\",\n                    \"resolved\": \"\\\"after\\\" | \\\"before\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Controls where the fixed content is placed relative to the main content\\nin the DOM. This can be used to control the order in which fixed elements\\nreceive keyboard focus.\\nFor example, if a FAB in the fixed slot should receive keyboard focus before\\nthe main page content, set this property to `'before'`.\"\n                },\n                \"attribute\": \"fixed-slot-placement\",\n                \"reflect\": false,\n                \"defaultValue\": \"'after'\"\n            },\n            \"forceOverscroll\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true` and the content does not cause an overflow scroll, the scroll interaction will cause a bounce.\\nIf the content exceeds the bounds of ionContent, nothing will change.\\nNote, this does not disable the system bounce on iOS. That is an OS level setting.\"\n                },\n                \"attribute\": \"force-overscroll\",\n                \"reflect\": false\n            },\n            \"scrollX\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If you want to enable the content scrolling in the X axis, set this property to `true`.\"\n                },\n                \"attribute\": \"scroll-x\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"scrollY\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If you want to disable the content scrolling in the Y axis, set this property to `false`.\"\n                },\n                \"attribute\": \"scroll-y\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"scrollEvents\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Because of performance reasons, ionScroll events are disabled by default, in order to enable them\\nand start listening from (ionScroll), set this property to `true`.\"\n                },\n                \"attribute\": \"scroll-events\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionScrollStart\",\n                \"name\": \"ionScrollStart\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the scroll has started. This event is disabled by default.\\nSet `scrollEvents` to `true` to enable.\"\n                },\n                \"complexType\": {\n                    \"original\": \"ScrollBaseDetail\",\n                    \"resolved\": \"ScrollBaseDetail\",\n                    \"references\": {\n                        \"ScrollBaseDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"./content-interface\",\n                            \"id\": \"src/components/content/content-interface.ts::ScrollBaseDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"ionScroll\",\n                \"name\": \"ionScroll\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted while scrolling. This event is disabled by default.\\nSet `scrollEvents` to `true` to enable.\"\n                },\n                \"complexType\": {\n                    \"original\": \"ScrollDetail\",\n                    \"resolved\": \"ScrollDetail\",\n                    \"references\": {\n                        \"ScrollDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"./content-interface\",\n                            \"id\": \"src/components/content/content-interface.ts::ScrollDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"ionScrollEnd\",\n                \"name\": \"ionScrollEnd\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the scroll has ended. This event is disabled by default.\\nSet `scrollEvents` to `true` to enable.\"\n                },\n                \"complexType\": {\n                    \"original\": \"ScrollBaseDetail\",\n                    \"resolved\": \"ScrollBaseDetail\",\n                    \"references\": {\n                        \"ScrollBaseDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"./content-interface\",\n                            \"id\": \"src/components/content/content-interface.ts::ScrollBaseDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"getScrollElement\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<HTMLElement>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"HTMLElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLElement\"\n                        }\n                    },\n                    \"return\": \"Promise<HTMLElement>\"\n                },\n                \"docs\": {\n                    \"text\": \"Get the element where the actual scrolling takes place.\\nThis element can be used to subscribe to `scroll` events or manually modify\\n`scrollTop`. However, it's recommended to use the API provided by `ion-content`:\\n\\ni.e. Using `ionScroll`, `ionScrollStart`, `ionScrollEnd` for scrolling events\\nand `scrollToPoint()` to scroll the content into a certain point.\",\n                    \"tags\": []\n                }\n            },\n            \"getBackgroundElement\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<HTMLElement>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"HTMLElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLElement\"\n                        }\n                    },\n                    \"return\": \"Promise<HTMLElement>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns the background content element.\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            },\n            \"scrollToTop\": {\n                \"complexType\": {\n                    \"signature\": \"(duration?: number) => Promise<void>\",\n                    \"parameters\": [{\n                            \"name\": \"duration\",\n                            \"type\": \"number\",\n                            \"docs\": \"The amount of time to take scrolling to the top. Defaults to `0`.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Scroll to the top of the component.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"duration The amount of time to take scrolling to the top. Defaults to `0`.\"\n                        }]\n                }\n            },\n            \"scrollToBottom\": {\n                \"complexType\": {\n                    \"signature\": \"(duration?: number) => Promise<void>\",\n                    \"parameters\": [{\n                            \"name\": \"duration\",\n                            \"type\": \"number\",\n                            \"docs\": \"The amount of time to take scrolling to the bottom. Defaults to `0`.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Scroll to the bottom of the component.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"duration The amount of time to take scrolling to the bottom. Defaults to `0`.\"\n                        }]\n                }\n            },\n            \"scrollByPoint\": {\n                \"complexType\": {\n                    \"signature\": \"(x: number, y: number, duration: number) => Promise<void>\",\n                    \"parameters\": [{\n                            \"name\": \"x\",\n                            \"type\": \"number\",\n                            \"docs\": \"The amount to scroll by on the horizontal axis.\"\n                        }, {\n                            \"name\": \"y\",\n                            \"type\": \"number\",\n                            \"docs\": \"The amount to scroll by on the vertical axis.\"\n                        }, {\n                            \"name\": \"duration\",\n                            \"type\": \"number\",\n                            \"docs\": \"The amount of time to take scrolling by that amount.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Scroll by a specified X/Y distance in the component.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"x The amount to scroll by on the horizontal axis.\"\n                        }, {\n                            \"name\": \"param\",\n                            \"text\": \"y The amount to scroll by on the vertical axis.\"\n                        }, {\n                            \"name\": \"param\",\n                            \"text\": \"duration The amount of time to take scrolling by that amount.\"\n                        }]\n                }\n            },\n            \"scrollToPoint\": {\n                \"complexType\": {\n                    \"signature\": \"(x: number | undefined | null, y: number | undefined | null, duration?: number) => Promise<void>\",\n                    \"parameters\": [{\n                            \"name\": \"x\",\n                            \"type\": \"number | null | undefined\",\n                            \"docs\": \"The point to scroll to on the horizontal axis.\"\n                        }, {\n                            \"name\": \"y\",\n                            \"type\": \"number | null | undefined\",\n                            \"docs\": \"The point to scroll to on the vertical axis.\"\n                        }, {\n                            \"name\": \"duration\",\n                            \"type\": \"number\",\n                            \"docs\": \"The amount of time to take scrolling to that point. Defaults to `0`.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Scroll to a specified X/Y location in the component.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"x The point to scroll to on the horizontal axis.\"\n                        }, {\n                            \"name\": \"param\",\n                            \"text\": \"y The point to scroll to on the vertical axis.\"\n                        }, {\n                            \"name\": \"param\",\n                            \"text\": \"duration The amount of time to take scrolling to that point. Defaults to `0`.\"\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get listeners() {\n        return [{\n                \"name\": \"resize\",\n                \"method\": \"onResize\",\n                \"target\": \"window\",\n                \"capture\": false,\n                \"passive\": true\n            }];\n    }\n}\nconst getParentElement = (el) => {\n    var _a;\n    if (el.parentElement) {\n        // normal element with a parent element\n        return el.parentElement;\n    }\n    if ((_a = el.parentNode) === null || _a === void 0 ? void 0 : _a.host) {\n        // shadow dom's document fragment\n        return el.parentNode.host;\n    }\n    return null;\n};\nconst getPageElement = (el) => {\n    const tabs = el.closest('ion-tabs');\n    if (tabs) {\n        return tabs;\n    }\n    /**\n     * If we're in a popover, we need to use its wrapper so we can account for space\n     * between the popover and the edges of the screen. But if the popover contains\n     * its own page element, we should use that instead.\n     */\n    const page = el.closest('ion-app, ion-page, .ion-page, page-inner, .popover-content');\n    if (page) {\n        return page;\n    }\n    return getParentElement(el);\n};\n// ******** DOM READ ****************\nconst updateScrollDetail = (detail, el, timestamp, shouldStart) => {\n    const prevX = detail.currentX;\n    const prevY = detail.currentY;\n    const prevT = detail.currentTime;\n    const currentX = el.scrollLeft;\n    const currentY = el.scrollTop;\n    const timeDelta = timestamp - prevT;\n    if (shouldStart) {\n        // remember the start positions\n        detail.startTime = timestamp;\n        detail.startX = currentX;\n        detail.startY = currentY;\n        detail.velocityX = detail.velocityY = 0;\n    }\n    detail.currentTime = timestamp;\n    detail.currentX = detail.scrollLeft = currentX;\n    detail.currentY = detail.scrollTop = currentY;\n    detail.deltaX = currentX - detail.startX;\n    detail.deltaY = currentY - detail.startY;\n    if (timeDelta > 0 && timeDelta < 100) {\n        const velocityX = (currentX - prevX) / timeDelta;\n        const velocityY = (currentY - prevY) / timeDelta;\n        detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\n        detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\n    }\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { readTask, writeTask } from \"@stencil/core\";\nimport { clamp } from \"../../utils/helpers\";\nexport const handleFooterFade = (scrollEl, baseEl) => {\n    readTask(() => {\n        const scrollTop = scrollEl.scrollTop;\n        const maxScroll = scrollEl.scrollHeight - scrollEl.clientHeight;\n        /**\n         * Toolbar background will fade\n         * out over fadeDuration in pixels.\n         */\n        const fadeDuration = 10;\n        /**\n         * Begin fading out maxScroll - 30px\n         * from the bottom of the content.\n         * Also determine how close we are\n         * to starting the fade. If we are\n         * before the starting point, the\n         * scale value will get clamped to 0.\n         * If we are after the maxScroll (rubber\n         * band scrolling), the scale value will\n         * get clamped to 1.\n         */\n        const fadeStart = maxScroll - fadeDuration;\n        const distanceToStart = scrollTop - fadeStart;\n        const scale = clamp(0, 1 - distanceToStart / fadeDuration, 1);\n        writeTask(() => {\n            baseEl.style.setProperty('--opacity-scale', scale.toString());\n        });\n    });\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\nion-footer {\n  display: block;\n  position: relative;\n  order: 1;\n  width: 100%;\n  z-index: 10;\n}\n\nion-footer.footer-toolbar-padding ion-toolbar:last-of-type {\n  padding-bottom: var(--ion-safe-area-bottom, 0);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.footer-ios ion-toolbar:first-of-type {\n  --border-width: 0.55px 0 0;\n}\n\n@supports (backdrop-filter: blur(0)) {\n  .footer-background {\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    position: absolute;\n    backdrop-filter: saturate(180%) blur(20px);\n  }\n  .footer-translucent-ios ion-toolbar {\n    --opacity: .8;\n  }\n}\n.footer-ios.ion-no-border ion-toolbar:first-of-type {\n  --border-width: 0;\n}\n\n.footer-collapse-fade ion-toolbar {\n  --opacity-scale: inherit;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\nion-footer {\n  display: block;\n  position: relative;\n  order: 1;\n  width: 100%;\n  z-index: 10;\n}\n\nion-footer.footer-toolbar-padding ion-toolbar:last-of-type {\n  padding-bottom: var(--ion-safe-area-bottom, 0);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.footer-md {\n  box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12);\n}\n\n.footer-md.ion-no-border {\n  box-shadow: none;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { findIonContent, getScrollElement, printIonContentErrorMsg } from \"../../utils/content/index\";\nimport { createKeyboardController } from \"../../utils/keyboard/keyboard-controller\";\nimport { getIonMode } from \"../../global/ionic-global\";\nimport { handleFooterFade } from \"./footer.utils\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class Footer {\n    constructor() {\n        this.keyboardCtrl = null;\n        this.checkCollapsibleFooter = () => {\n            const mode = getIonMode(this);\n            if (mode !== 'ios') {\n                return;\n            }\n            const { collapse } = this;\n            const hasFade = collapse === 'fade';\n            this.destroyCollapsibleFooter();\n            if (hasFade) {\n                const pageEl = this.el.closest('ion-app,ion-page,.ion-page,page-inner');\n                const contentEl = pageEl ? findIonContent(pageEl) : null;\n                if (!contentEl) {\n                    printIonContentErrorMsg(this.el);\n                    return;\n                }\n                this.setupFadeFooter(contentEl);\n            }\n        };\n        this.setupFadeFooter = async (contentEl) => {\n            const scrollEl = (this.scrollEl = await getScrollElement(contentEl));\n            /**\n             * Handle fading of toolbars on scroll\n             */\n            this.contentScrollCallback = () => {\n                handleFooterFade(scrollEl, this.el);\n            };\n            scrollEl.addEventListener('scroll', this.contentScrollCallback);\n            handleFooterFade(scrollEl, this.el);\n        };\n        this.keyboardVisible = false;\n        this.collapse = undefined;\n        this.translucent = false;\n    }\n    componentDidLoad() {\n        this.checkCollapsibleFooter();\n    }\n    componentDidUpdate() {\n        this.checkCollapsibleFooter();\n    }\n    async connectedCallback() {\n        this.keyboardCtrl = await createKeyboardController(async (keyboardOpen, waitForResize) => {\n            /**\n             * If the keyboard is hiding, then we need to wait\n             * for the webview to resize. Otherwise, the footer\n             * will flicker before the webview resizes.\n             */\n            if (keyboardOpen === false && waitForResize !== undefined) {\n                await waitForResize;\n            }\n            this.keyboardVisible = keyboardOpen; // trigger re-render by updating state\n        });\n    }\n    disconnectedCallback() {\n        if (this.keyboardCtrl) {\n            this.keyboardCtrl.destroy();\n        }\n    }\n    destroyCollapsibleFooter() {\n        if (this.scrollEl && this.contentScrollCallback) {\n            this.scrollEl.removeEventListener('scroll', this.contentScrollCallback);\n            this.contentScrollCallback = undefined;\n        }\n    }\n    render() {\n        const { translucent, collapse } = this;\n        const mode = getIonMode(this);\n        const tabs = this.el.closest('ion-tabs');\n        const tabBar = tabs === null || tabs === void 0 ? void 0 : tabs.querySelector(':scope > ion-tab-bar');\n        return (h(Host, { key: '5da19dc38ba73e1ddfd1bef3ebd485105d77c751', role: \"contentinfo\", class: {\n                [mode]: true,\n                // Used internally for styling\n                [`footer-${mode}`]: true,\n                [`footer-translucent`]: translucent,\n                [`footer-translucent-${mode}`]: translucent,\n                ['footer-toolbar-padding']: !this.keyboardVisible && (!tabBar || tabBar.slot !== 'bottom'),\n                [`footer-collapse-${collapse}`]: collapse !== undefined,\n            } }, mode === 'ios' && translucent && h(\"div\", { key: 'fafad08090a33d8c4e8a5b63d61929dcb89aab47', class: \"footer-background\" }), h(\"slot\", { key: 'e0a443d346afa55e4317c0bc1263fdbe3c619559' })));\n    }\n    static get is() { return \"ion-footer\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"footer.ios.scss\"],\n            \"md\": [\"footer.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"footer.ios.css\"],\n            \"md\": [\"footer.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"collapse\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'fade'\",\n                    \"resolved\": \"\\\"fade\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Describes the scroll effect that will be applied to the footer.\\nOnly applies in iOS mode.\"\n                },\n                \"attribute\": \"collapse\",\n                \"reflect\": false\n            },\n            \"translucent\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the footer will be translucent.\\nOnly applies when the mode is `\\\"ios\\\"` and the device supports\\n[`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\\n\\nNote: In order to scroll content behind the footer, the `fullscreen`\\nattribute needs to be set on the content.\"\n                },\n                \"attribute\": \"translucent\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"keyboardVisible\": {}\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { readTask, writeTask } from \"@stencil/core\";\nimport { clamp } from \"../../utils/helpers\";\nconst TRANSITION = 'all 0.2s ease-in-out';\nexport const cloneElement = (tagName) => {\n    const getCachedEl = document.querySelector(`${tagName}.ion-cloned-element`);\n    if (getCachedEl !== null) {\n        return getCachedEl;\n    }\n    const clonedEl = document.createElement(tagName);\n    clonedEl.classList.add('ion-cloned-element');\n    clonedEl.style.setProperty('display', 'none');\n    document.body.appendChild(clonedEl);\n    return clonedEl;\n};\nexport const createHeaderIndex = (headerEl) => {\n    if (!headerEl) {\n        return;\n    }\n    const toolbars = headerEl.querySelectorAll('ion-toolbar');\n    return {\n        el: headerEl,\n        toolbars: Array.from(toolbars).map((toolbar) => {\n            const ionTitleEl = toolbar.querySelector('ion-title');\n            return {\n                el: toolbar,\n                background: toolbar.shadowRoot.querySelector('.toolbar-background'),\n                ionTitleEl,\n                innerTitleEl: ionTitleEl ? ionTitleEl.shadowRoot.querySelector('.toolbar-title') : null,\n                ionButtonsEl: Array.from(toolbar.querySelectorAll('ion-buttons')),\n            };\n        }),\n    };\n};\nexport const handleContentScroll = (scrollEl, scrollHeaderIndex, contentEl) => {\n    readTask(() => {\n        const scrollTop = scrollEl.scrollTop;\n        const scale = clamp(1, 1 + -scrollTop / 500, 1.1);\n        // Native refresher should not cause titles to scale\n        const nativeRefresher = contentEl.querySelector('ion-refresher.refresher-native');\n        if (nativeRefresher === null) {\n            writeTask(() => {\n                scaleLargeTitles(scrollHeaderIndex.toolbars, scale);\n            });\n        }\n    });\n};\nexport const setToolbarBackgroundOpacity = (headerEl, opacity) => {\n    /**\n     * Fading in the backdrop opacity\n     * should happen after the large title\n     * has collapsed, so it is handled\n     * by handleHeaderFade()\n     */\n    if (headerEl.collapse === 'fade') {\n        return;\n    }\n    if (opacity === undefined) {\n        headerEl.style.removeProperty('--opacity-scale');\n    }\n    else {\n        headerEl.style.setProperty('--opacity-scale', opacity.toString());\n    }\n};\nconst handleToolbarBorderIntersection = (ev, mainHeaderIndex, scrollTop) => {\n    if (!ev[0].isIntersecting) {\n        return;\n    }\n    /**\n     * There is a bug in Safari where overflow scrolling on a non-body element\n     * does not always reset the scrollTop position to 0 when letting go. It will\n     * set to 1 once the rubber band effect has ended. This causes the background to\n     * appear slightly on certain app setups.\n     *\n     * Additionally, we check if user is rubber banding (scrolling is negative)\n     * as this can mean they are using pull to refresh. Once the refresher starts,\n     * the content is transformed which can cause the intersection observer to erroneously\n     * fire here as well.\n     */\n    const scale = ev[0].intersectionRatio > 0.9 || scrollTop <= 0 ? 0 : ((1 - ev[0].intersectionRatio) * 100) / 75;\n    setToolbarBackgroundOpacity(mainHeaderIndex.el, scale === 1 ? undefined : scale);\n};\n/**\n * If toolbars are intersecting, hide the scrollable toolbar content\n * and show the primary toolbar content. If the toolbars are not intersecting,\n * hide the primary toolbar content and show the scrollable toolbar content\n */\nexport const handleToolbarIntersection = (ev, // TODO(FW-2832): type (IntersectionObserverEntry[] triggers errors which should be sorted)\nmainHeaderIndex, scrollHeaderIndex, scrollEl) => {\n    writeTask(() => {\n        const scrollTop = scrollEl.scrollTop;\n        handleToolbarBorderIntersection(ev, mainHeaderIndex, scrollTop);\n        const event = ev[0];\n        const intersection = event.intersectionRect;\n        const intersectionArea = intersection.width * intersection.height;\n        const rootArea = event.rootBounds.width * event.rootBounds.height;\n        const isPageHidden = intersectionArea === 0 && rootArea === 0;\n        const leftDiff = Math.abs(intersection.left - event.boundingClientRect.left);\n        const rightDiff = Math.abs(intersection.right - event.boundingClientRect.right);\n        const isPageTransitioning = intersectionArea > 0 && (leftDiff >= 5 || rightDiff >= 5);\n        if (isPageHidden || isPageTransitioning) {\n            return;\n        }\n        if (event.isIntersecting) {\n            setHeaderActive(mainHeaderIndex, false);\n            setHeaderActive(scrollHeaderIndex);\n        }\n        else {\n            /**\n             * There is a bug with IntersectionObserver on Safari\n             * where `event.isIntersecting === false` when cancelling\n             * a swipe to go back gesture. Checking the intersection\n             * x, y, width, and height provides a workaround. This bug\n             * does not happen when using Safari + Web Animations,\n             * only Safari + CSS Animations.\n             */\n            const hasValidIntersection = (intersection.x === 0 && intersection.y === 0) || (intersection.width !== 0 && intersection.height !== 0);\n            if (hasValidIntersection && scrollTop > 0) {\n                setHeaderActive(mainHeaderIndex);\n                setHeaderActive(scrollHeaderIndex, false);\n                setToolbarBackgroundOpacity(mainHeaderIndex.el);\n            }\n        }\n    });\n};\nexport const setHeaderActive = (headerIndex, active = true) => {\n    const headerEl = headerIndex.el;\n    if (active) {\n        headerEl.classList.remove('header-collapse-condense-inactive');\n        headerEl.removeAttribute('aria-hidden');\n    }\n    else {\n        headerEl.classList.add('header-collapse-condense-inactive');\n        headerEl.setAttribute('aria-hidden', 'true');\n    }\n};\nexport const scaleLargeTitles = (toolbars = [], scale = 1, transition = false) => {\n    toolbars.forEach((toolbar) => {\n        const ionTitle = toolbar.ionTitleEl;\n        const titleDiv = toolbar.innerTitleEl;\n        if (!ionTitle || ionTitle.size !== 'large') {\n            return;\n        }\n        titleDiv.style.transition = transition ? TRANSITION : '';\n        titleDiv.style.transform = `scale3d(${scale}, ${scale}, 1)`;\n    });\n};\nexport const handleHeaderFade = (scrollEl, baseEl, condenseHeader) => {\n    readTask(() => {\n        const scrollTop = scrollEl.scrollTop;\n        const baseElHeight = baseEl.clientHeight;\n        const fadeStart = condenseHeader ? condenseHeader.clientHeight : 0;\n        /**\n         * If we are using fade header with a condense\n         * header, then the toolbar backgrounds should\n         * not begin to fade in until the condense\n         * header has fully collapsed.\n         *\n         * Additionally, the main content should not\n         * overflow out of the container until the\n         * condense header has fully collapsed. When\n         * using just the condense header the content\n         * should overflow out of the container.\n         */\n        if (condenseHeader !== null && scrollTop < fadeStart) {\n            baseEl.style.setProperty('--opacity-scale', '0');\n            scrollEl.style.setProperty('clip-path', `inset(${baseElHeight}px 0px 0px 0px)`);\n            return;\n        }\n        const distanceToStart = scrollTop - fadeStart;\n        const fadeDuration = 10;\n        const scale = clamp(0, distanceToStart / fadeDuration, 1);\n        writeTask(() => {\n            scrollEl.style.removeProperty('clip-path');\n            baseEl.style.setProperty('--opacity-scale', scale.toString());\n        });\n    });\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\nion-header {\n  display: block;\n  position: relative;\n  order: -1;\n  width: 100%;\n  z-index: 10;\n}\n\nion-header ion-toolbar:first-of-type {\n  padding-top: var(--ion-safe-area-top, 0);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.header-ios ion-toolbar:last-of-type {\n  --border-width: 0 0 0.55px;\n}\n\n@supports (backdrop-filter: blur(0)) {\n  .header-background {\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    position: absolute;\n    backdrop-filter: saturate(180%) blur(20px);\n  }\n  .header-translucent-ios ion-toolbar {\n    --opacity: .8;\n  }\n  /**\n   * Disable the saturation otherwise it distorts the content\n   * background color when large header is not collapsed\n   */\n  .header-collapse-condense-inactive .header-background {\n    backdrop-filter: blur(20px);\n  }\n}\n.header-ios.ion-no-border ion-toolbar:last-of-type {\n  --border-width: 0;\n}\n\n.header-collapse-fade ion-toolbar {\n  --opacity-scale: inherit;\n}\n\n.header-collapse-condense {\n  z-index: 9;\n}\n\n.header-collapse-condense ion-toolbar {\n  position: sticky;\n  top: 0;\n}\n\n.header-collapse-condense ion-toolbar:first-of-type {\n  /**\n   * The toolbar that contains the collapsible\n   * large title should not have safe area padding applied.\n   */\n  padding-top: 0px;\n  z-index: 1;\n}\n\n/**\n * Large title toolbar should just use the content background\n * since it needs to blend in with the header above it.\n */\n.header-collapse-condense ion-toolbar {\n  --background: var(--ion-background-color, #fff);\n  z-index: 0;\n}\n\n.header-collapse-condense ion-toolbar:last-of-type {\n  --border-width: 0px;\n}\n\n.header-collapse-condense ion-toolbar ion-searchbar {\n  padding-top: 0px;\n  padding-bottom: 13px;\n}\n\n.header-collapse-main {\n  --opacity-scale: 1;\n}\n\n.header-collapse-main ion-toolbar {\n  --opacity-scale: inherit;\n}\n\n.header-collapse-main ion-toolbar.in-toolbar ion-title,\n.header-collapse-main ion-toolbar.in-toolbar ion-buttons {\n  transition: all 0.2s ease-in-out;\n}\n\n.header-collapse-condense-inactive:not(.header-collapse-condense) ion-toolbar.in-toolbar ion-title,\n.header-collapse-condense-inactive:not(.header-collapse-condense) ion-toolbar.in-toolbar ion-buttons.buttons-collapse {\n  opacity: 0;\n  pointer-events: none;\n}\n\n/**\n * There is a bug in Safari where changing\n * the opacity of an element in a scrollable container\n * while rubber-banding causes the scroll position\n * to jump to the top\n */\n.header-collapse-condense-inactive.header-collapse-condense ion-toolbar.in-toolbar ion-title,\n.header-collapse-condense-inactive.header-collapse-condense ion-toolbar.in-toolbar ion-buttons.buttons-collapse {\n  visibility: hidden;\n}\n\n/**\n * The main header is only hidden once the collapsible large\n * title is configured. As a result, if the main header loads\n * before the collapsible large title is configured then the\n * main header will be visible briefly before being hidden\n * by the collapsible large title.\n *\n * The following selector ensures that any main header\n * on a page with a collapsible large title is hidden\n * before the collapsible large title is configured.\n * Once the collapsible large title is configured the main\n * header will have the \".header-collapse-main\" class, and\n * this selector will no longer apply.\n *\n * The :has(...) part of the selector ensures a couple things:\n * 1. This will only apply within a page view since the content\n * must be a subsequent-sibling of the header (~ ion-content).\n * 2. This will only apply when that content has a collapse header (ion-header[collapse=\"condense\"])\n *\n * We use opacity: 0 to avoid a layout shift.\n * We target both the attribute and the class in the event that the attribute\n * is not reflected on the host in some frameworks.\n *\n * Both headers should be scoped to iOS mode otherwise an MD app that uses an\n * iOS header may cause other MD headers to be unexpectedly hidden.\n */\nion-header.header-ios:not(.header-collapse-main):has(~ ion-content ion-header.header-ios[collapse=condense],\n~ ion-content ion-header.header-ios.header-collapse-condense) {\n  opacity: 0;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\nion-header {\n  display: block;\n  position: relative;\n  order: -1;\n  width: 100%;\n  z-index: 10;\n}\n\nion-header ion-toolbar:first-of-type {\n  padding-top: var(--ion-safe-area-top, 0);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.header-md {\n  box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12);\n}\n\n.header-collapse-condense {\n  display: none;\n}\n\n.header-md.ion-no-border {\n  box-shadow: none;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h, writeTask } from \"@stencil/core\";\nimport { findIonContent, getScrollElement, printIonContentErrorMsg } from \"../../utils/content/index\";\nimport { inheritAriaAttributes } from \"../../utils/helpers\";\nimport { hostContext } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\nimport { cloneElement, createHeaderIndex, handleContentScroll, handleHeaderFade, handleToolbarIntersection, setHeaderActive, setToolbarBackgroundOpacity, } from \"./header.utils\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class Header {\n    constructor() {\n        this.inheritedAttributes = {};\n        this.setupFadeHeader = async (contentEl, condenseHeader) => {\n            const scrollEl = (this.scrollEl = await getScrollElement(contentEl));\n            /**\n             * Handle fading of toolbars on scroll\n             */\n            this.contentScrollCallback = () => {\n                handleHeaderFade(this.scrollEl, this.el, condenseHeader);\n            };\n            scrollEl.addEventListener('scroll', this.contentScrollCallback);\n            handleHeaderFade(this.scrollEl, this.el, condenseHeader);\n        };\n        this.collapse = undefined;\n        this.translucent = false;\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAriaAttributes(this.el);\n    }\n    componentDidLoad() {\n        this.checkCollapsibleHeader();\n    }\n    componentDidUpdate() {\n        this.checkCollapsibleHeader();\n    }\n    disconnectedCallback() {\n        this.destroyCollapsibleHeader();\n    }\n    async checkCollapsibleHeader() {\n        const mode = getIonMode(this);\n        if (mode !== 'ios') {\n            return;\n        }\n        const { collapse } = this;\n        const hasCondense = collapse === 'condense';\n        const hasFade = collapse === 'fade';\n        this.destroyCollapsibleHeader();\n        if (hasCondense) {\n            const pageEl = this.el.closest('ion-app,ion-page,.ion-page,page-inner');\n            const contentEl = pageEl ? findIonContent(pageEl) : null;\n            // Cloned elements are always needed in iOS transition\n            writeTask(() => {\n                const title = cloneElement('ion-title');\n                title.size = 'large';\n                cloneElement('ion-back-button');\n            });\n            await this.setupCondenseHeader(contentEl, pageEl);\n        }\n        else if (hasFade) {\n            const pageEl = this.el.closest('ion-app,ion-page,.ion-page,page-inner');\n            const contentEl = pageEl ? findIonContent(pageEl) : null;\n            if (!contentEl) {\n                printIonContentErrorMsg(this.el);\n                return;\n            }\n            const condenseHeader = contentEl.querySelector('ion-header[collapse=\"condense\"]');\n            await this.setupFadeHeader(contentEl, condenseHeader);\n        }\n    }\n    destroyCollapsibleHeader() {\n        if (this.intersectionObserver) {\n            this.intersectionObserver.disconnect();\n            this.intersectionObserver = undefined;\n        }\n        if (this.scrollEl && this.contentScrollCallback) {\n            this.scrollEl.removeEventListener('scroll', this.contentScrollCallback);\n            this.contentScrollCallback = undefined;\n        }\n        if (this.collapsibleMainHeader) {\n            this.collapsibleMainHeader.classList.remove('header-collapse-main');\n            this.collapsibleMainHeader = undefined;\n        }\n    }\n    async setupCondenseHeader(contentEl, pageEl) {\n        if (!contentEl || !pageEl) {\n            printIonContentErrorMsg(this.el);\n            return;\n        }\n        if (typeof IntersectionObserver === 'undefined') {\n            return;\n        }\n        this.scrollEl = await getScrollElement(contentEl);\n        const headers = pageEl.querySelectorAll('ion-header');\n        this.collapsibleMainHeader = Array.from(headers).find((header) => header.collapse !== 'condense');\n        if (!this.collapsibleMainHeader) {\n            return;\n        }\n        const mainHeaderIndex = createHeaderIndex(this.collapsibleMainHeader);\n        const scrollHeaderIndex = createHeaderIndex(this.el);\n        if (!mainHeaderIndex || !scrollHeaderIndex) {\n            return;\n        }\n        setHeaderActive(mainHeaderIndex, false);\n        setToolbarBackgroundOpacity(mainHeaderIndex.el, 0);\n        /**\n         * Handle interaction between toolbar collapse and\n         * showing/hiding content in the primary ion-header\n         * as well as progressively showing/hiding the main header\n         * border as the top-most toolbar collapses or expands.\n         */\n        const toolbarIntersection = (ev) => {\n            handleToolbarIntersection(ev, mainHeaderIndex, scrollHeaderIndex, this.scrollEl);\n        };\n        this.intersectionObserver = new IntersectionObserver(toolbarIntersection, {\n            root: contentEl,\n            threshold: [0.25, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1],\n        });\n        this.intersectionObserver.observe(scrollHeaderIndex.toolbars[scrollHeaderIndex.toolbars.length - 1].el);\n        /**\n         * Handle scaling of large iOS titles and\n         * showing/hiding border on last toolbar\n         * in primary header\n         */\n        this.contentScrollCallback = () => {\n            handleContentScroll(this.scrollEl, scrollHeaderIndex, contentEl);\n        };\n        this.scrollEl.addEventListener('scroll', this.contentScrollCallback);\n        writeTask(() => {\n            if (this.collapsibleMainHeader !== undefined) {\n                this.collapsibleMainHeader.classList.add('header-collapse-main');\n            }\n        });\n    }\n    render() {\n        const { translucent, inheritedAttributes } = this;\n        const mode = getIonMode(this);\n        const collapse = this.collapse || 'none';\n        // banner role must be at top level, so remove role if inside a menu\n        const roleType = hostContext('ion-menu', this.el) ? 'none' : 'banner';\n        return (h(Host, Object.assign({ key: 'c687314ef290793a9d633ad20cfc5eeb47621e31', role: roleType, class: {\n                [mode]: true,\n                // Used internally for styling\n                [`header-${mode}`]: true,\n                [`header-translucent`]: this.translucent,\n                [`header-collapse-${collapse}`]: true,\n                [`header-translucent-${mode}`]: this.translucent,\n            } }, inheritedAttributes), mode === 'ios' && translucent && h(\"div\", { key: 'b429996046082405a91e7c23f95516db0b736f12', class: \"header-background\" }), h(\"slot\", { key: 'e17a8965f8d3a33c1bfcb056c153d8242e5229fa' })));\n    }\n    static get is() { return \"ion-header\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"header.ios.scss\"],\n            \"md\": [\"header.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"header.ios.css\"],\n            \"md\": [\"header.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"collapse\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'condense' | 'fade'\",\n                    \"resolved\": \"\\\"condense\\\" | \\\"fade\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Describes the scroll effect that will be applied to the header.\\nOnly applies in iOS mode.\\n\\nTypically used for [Collapsible Large Titles](https://ionicframework.com/docs/api/title#collapsible-large-titles)\"\n                },\n                \"attribute\": \"collapse\",\n                \"reflect\": false\n            },\n            \"translucent\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the header will be translucent.\\nOnly applies when the mode is `\\\"ios\\\"` and the device supports\\n[`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\\n\\nNote: In order to scroll content behind the header, the `fullscreen`\\nattribute needs to be set on the content.\"\n                },\n                \"attribute\": \"translucent\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\n","import { isStr } from \"./utils\";\nexport const validateContent = (svgContent) => {\n  const div = document.createElement('div');\n  div.innerHTML = svgContent;\n  // setup this way to ensure it works on our buddy IE\n  for (let i = div.childNodes.length - 1; i >= 0; i--) {\n    if (div.childNodes[i].nodeName.toLowerCase() !== 'svg') {\n      div.removeChild(div.childNodes[i]);\n    }\n  }\n  // must only have 1 root element\n  const svgElm = div.firstElementChild;\n  if (svgElm && svgElm.nodeName.toLowerCase() === 'svg') {\n    const svgClass = svgElm.getAttribute('class') || '';\n    svgElm.setAttribute('class', (svgClass + ' s-ion-icon').trim());\n    // root element must be an svg\n    // lets double check we've got valid elements\n    // do not allow scripts\n    if (isValid(svgElm)) {\n      return div.innerHTML;\n    }\n  }\n  return '';\n};\nexport const isValid = (elm) => {\n  if (elm.nodeType === 1) {\n    if (elm.nodeName.toLowerCase() === 'script') {\n      return false;\n    }\n    for (let i = 0; i < elm.attributes.length; i++) {\n      const name = elm.attributes[i].name;\n      if (isStr(name) && name.toLowerCase().indexOf('on') === 0) {\n        return false;\n      }\n    }\n    for (let i = 0; i < elm.childNodes.length; i++) {\n      if (!isValid(elm.childNodes[i])) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\nexport const isSvgDataUrl = (url) => url.startsWith('data:image/svg+xml');\nexport const isEncodedDataUrl = (url) => url.indexOf(';utf8,') !== -1;\n","import { isEncodedDataUrl, isSvgDataUrl, validateContent } from \"./validate\";\nexport const ioniconContent = new Map();\nconst requests = new Map();\nlet parser;\nexport const getSvgContent = (url, sanitize) => {\n  // see if we already have a request for this url\n  let req = requests.get(url);\n  if (!req) {\n    if (typeof fetch !== 'undefined' && typeof document !== 'undefined') {\n      /**\n       * If the url is a data url of an svg, then try to parse it\n       * with the DOMParser. This works with content security policies enabled.\n       */\n      if (isSvgDataUrl(url) && isEncodedDataUrl(url)) {\n        if (!parser) {\n          /**\n           * Create an instance of the DOM parser. This creates a single\n           * parser instance for the entire app, which is more efficient.\n           */\n          parser = new DOMParser();\n        }\n        const doc = parser.parseFromString(url, 'text/html');\n        const svg = doc.querySelector('svg');\n        if (svg) {\n          ioniconContent.set(url, svg.outerHTML);\n        }\n        return Promise.resolve();\n      }\n      else {\n        // we don't already have a request\n        req = fetch(url).then((rsp) => {\n          if (rsp.ok) {\n            return rsp.text().then((svgContent) => {\n              if (svgContent && sanitize !== false) {\n                svgContent = validateContent(svgContent);\n              }\n              ioniconContent.set(url, svgContent || '');\n            });\n          }\n          ioniconContent.set(url, '');\n        });\n        // cache for the same requests\n        requests.set(url, req);\n      }\n    }\n    else {\n      // set to empty for ssr scenarios and resolve promise\n      ioniconContent.set(url, '');\n      return Promise.resolve();\n    }\n  }\n  return req;\n};\n",":host {\n  display: inline-block;\n\n  width: 1em;\n  height: 1em;\n\n  contain: strict;\n\n  fill: currentColor;\n\n  box-sizing: content-box !important;\n\n}\n\n:host .ionicon {\n  stroke: currentColor;\n}\n\n.ionicon-fill-none {\n  fill: none;\n}\n\n.ionicon-stroke-width {\n  stroke-width: 32px;\n  stroke-width: var(--ionicon-stroke-width, 32px);\n}\n\n.icon-inner,\n.ionicon,\nsvg {\n  display: block;\n\n  height: 100%;\n  width: 100%;\n}\n\n/* Icon RTL\n * -----------------------------------------------------------\n */\n\n/**\n * Safari <16.4 incorrectly reports\n * that it supports :dir(rtl) when it does not.\n * This @supports statement lets us target\n * WebKit browsers to apply the RTL fallback.\n * -webkit-named-image only exists on WebKit.\n * For WebKit browsers that do support :dir(rtl)\n * (i.e. Safari >= 16.4) then the :dir(rtl)\n * code farther down on the page will take\n * effect and override this fallback.\n */\n@supports (background: -webkit-named-image(i)) {\n  :host(.icon-rtl) .icon-inner {\n    transform: scaleX(-1);\n  }\n}\n\n/**\n * Fallback for browsers that support\n * neither :host-context nor :dir.\n * The icon will not react to dir\n * changes, but it will at least\n * respect the dir on component load.\n */\n@supports not selector(:dir(rtl)) and selector(:host-context([dir='rtl'])) {\n  :host(.icon-rtl) .icon-inner {\n    transform: scaleX(-1);\n  }\n}\n\n/* :host-context is supported in chromium; :dir is supported in safari & firefox */\n:host(.flip-rtl):host-context([dir='rtl']) .icon-inner {\n  transform: scaleX(-1);\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.flip-rtl:dir(rtl)) .icon-inner {\n    transform: scaleX(-1);\n  }\n  /**\n   * This is needed for WebKit otherwise the fallback\n   * will always cause the icon to be flipped if the document\n   * loads in RTL.\n   */\n  :host(.flip-rtl:dir(ltr)) .icon-inner {\n    transform: scaleX(1);\n  }\n}\n\n/* Icon Sizes\n * -----------------------------------------------------------\n */\n\n:host(.icon-small) {\n  font-size: 1.125rem !important;\n}\n\n:host(.icon-large) {\n  font-size: 2rem !important;\n}\n\n/* Icon Colors\n * -----------------------------------------------------------\n */\n\n:host(.ion-color) {\n  color: var(--ion-color-base) !important;\n}\n\n:host(.ion-color-primary) {\n  --ion-color-base: var(--ion-color-primary, #3880ff);\n}\n\n:host(.ion-color-secondary) {\n  --ion-color-base: var(--ion-color-secondary, #0cd1e8);\n}\n\n:host(.ion-color-tertiary) {\n  --ion-color-base: var(--ion-color-tertiary, #f4a942);\n}\n\n:host(.ion-color-success) {\n  --ion-color-base: var(--ion-color-success, #10dc60);\n}\n\n:host(.ion-color-warning) {\n  --ion-color-base: var(--ion-color-warning, #ffce00);\n}\n\n:host(.ion-color-danger) {\n  --ion-color-base: var(--ion-color-danger, #f14141);\n}\n\n:host(.ion-color-light) {\n  --ion-color-base: var(--ion-color-light, #f4f5f8);\n}\n\n:host(.ion-color-medium) {\n  --ion-color-base: var(--ion-color-medium, #989aa2);\n}\n\n:host(.ion-color-dark) {\n  --ion-color-base: var(--ion-color-dark, #222428);\n}\n","import { Build, Host, h } from \"@stencil/core\";\nimport { getSvgContent, ioniconContent } from \"./request\";\nimport { getName, getUrl, inheritAttributes, isRTL } from \"./utils\";\nexport class Icon {\n  constructor() {\n    this.iconName = null;\n    this.inheritedAttributes = {};\n    this.didLoadIcon = false;\n    this.svgContent = undefined;\n    this.isVisible = false;\n    this.mode = getIonMode();\n    this.color = undefined;\n    this.ios = undefined;\n    this.md = undefined;\n    this.flipRtl = undefined;\n    this.name = undefined;\n    this.src = undefined;\n    this.icon = undefined;\n    this.size = undefined;\n    this.lazy = false;\n    this.sanitize = true;\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAttributes(this.el, ['aria-label']);\n  }\n  connectedCallback() {\n    // purposely do not return the promise here because loading\n    // the svg file should not hold up loading the app\n    // only load the svg if it's visible\n    this.waitUntilVisible(this.el, '50px', () => {\n      this.isVisible = true;\n      this.loadIcon();\n    });\n  }\n  componentDidLoad() {\n    /**\n     * Addresses an Angular issue where property values are assigned after the 'connectedCallback' but prior to the registration of watchers.\n     * This enhancement ensures the loading of an icon when the component has finished rendering and the icon has yet to apply the SVG data.\n     * This modification pertains to the usage of Angular's binding syntax:\n     * `<ion-icon [name]=\"myIconName\"></ion-icon>`\n     */\n    if (!this.didLoadIcon) {\n      this.loadIcon();\n    }\n  }\n  disconnectedCallback() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = undefined;\n    }\n  }\n  waitUntilVisible(el, rootMargin, cb) {\n    if (Build.isBrowser && this.lazy && typeof window !== 'undefined' && window.IntersectionObserver) {\n      const io = (this.io = new window.IntersectionObserver((data) => {\n        if (data[0].isIntersecting) {\n          io.disconnect();\n          this.io = undefined;\n          cb();\n        }\n      }, { rootMargin }));\n      io.observe(el);\n    }\n    else {\n      // browser doesn't support IntersectionObserver\n      // so just fallback to always show it\n      cb();\n    }\n  }\n  loadIcon() {\n    if (Build.isBrowser && this.isVisible) {\n      const url = getUrl(this);\n      if (url) {\n        if (ioniconContent.has(url)) {\n          // sync if it's already loaded\n          this.svgContent = ioniconContent.get(url);\n        }\n        else {\n          // async if it hasn't been loaded\n          getSvgContent(url, this.sanitize).then(() => (this.svgContent = ioniconContent.get(url)));\n        }\n        this.didLoadIcon = true;\n      }\n    }\n    this.iconName = getName(this.name, this.icon, this.mode, this.ios, this.md);\n  }\n  render() {\n    const { flipRtl, iconName, inheritedAttributes, el } = this;\n    const mode = this.mode || 'md';\n    // we have designated that arrows & chevrons should automatically flip (unless flip-rtl is set to false) because \"back\" is left in ltr and right in rtl, and \"forward\" is the opposite\n    const shouldAutoFlip = iconName\n      ? (iconName.includes('arrow') || iconName.includes('chevron')) && flipRtl !== false\n      : false;\n    // if shouldBeFlippable is true, the icon should change direction when `dir` changes\n    const shouldBeFlippable = flipRtl || shouldAutoFlip;\n    return (h(Host, Object.assign({ role: \"img\", class: Object.assign(Object.assign({ [mode]: true }, createColorClasses(this.color)), { [`icon-${this.size}`]: !!this.size, 'flip-rtl': shouldBeFlippable, 'icon-rtl': shouldBeFlippable && isRTL(el) }) }, inheritedAttributes), Build.isBrowser && this.svgContent ? (h(\"div\", { class: \"icon-inner\", innerHTML: this.svgContent })) : (h(\"div\", { class: \"icon-inner\" }))));\n  }\n  static get is() { return \"ion-icon\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"icon.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"icon.css\"]\n    };\n  }\n  static get assetsDirs() { return [\"svg\"]; }\n  static get properties() {\n    return {\n      \"mode\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The mode determines which platform styles to use.\"\n        },\n        \"attribute\": \"mode\",\n        \"reflect\": false,\n        \"defaultValue\": \"getIonMode()\"\n      },\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The color to use for the background of the item.\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": false\n      },\n      \"ios\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies which icon to use on `ios` mode.\"\n        },\n        \"attribute\": \"ios\",\n        \"reflect\": false\n      },\n      \"md\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies which icon to use on `md` mode.\"\n        },\n        \"attribute\": \"md\",\n        \"reflect\": false\n      },\n      \"flipRtl\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies whether the icon should horizontally flip when `dir` is `\\\"rtl\\\"`.\"\n        },\n        \"attribute\": \"flip-rtl\",\n        \"reflect\": false\n      },\n      \"name\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies which icon to use from the built-in set of icons.\"\n        },\n        \"attribute\": \"name\",\n        \"reflect\": true\n      },\n      \"src\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the exact `src` of an SVG file to use.\"\n        },\n        \"attribute\": \"src\",\n        \"reflect\": false\n      },\n      \"icon\": {\n        \"type\": \"any\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"any\",\n          \"resolved\": \"any\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"A combination of both `name` and `src`. If a `src` url is detected\\nit will set the `src` property. Otherwise it assumes it's a built-in named\\nSVG and set the `name` property.\"\n        },\n        \"attribute\": \"icon\",\n        \"reflect\": false\n      },\n      \"size\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The size of the icon.\\nAvailable options are: `\\\"small\\\"` and `\\\"large\\\"`.\"\n        },\n        \"attribute\": \"size\",\n        \"reflect\": false\n      },\n      \"lazy\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If enabled, ion-icon will be loaded lazily when it's visible in the viewport.\\nDefault, `false`.\"\n        },\n        \"attribute\": \"lazy\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"sanitize\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"true\"\n            }],\n          \"text\": \"When set to `false`, SVG content that is HTTP fetched will not be checked\\nif the response SVG content has any `<script>` elements, or any attributes\\nthat start with `on`, such as `onclick`.\"\n        },\n        \"attribute\": \"sanitize\",\n        \"reflect\": false,\n        \"defaultValue\": \"true\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"svgContent\": {},\n      \"isVisible\": {}\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"name\",\n        \"methodName\": \"loadIcon\"\n      }, {\n        \"propName\": \"src\",\n        \"methodName\": \"loadIcon\"\n      }, {\n        \"propName\": \"icon\",\n        \"methodName\": \"loadIcon\"\n      }, {\n        \"propName\": \"ios\",\n        \"methodName\": \"loadIcon\"\n      }, {\n        \"propName\": \"md\",\n        \"methodName\": \"loadIcon\"\n      }];\n  }\n}\nconst getIonMode = () => (Build.isBrowser && typeof document !== 'undefined' && document.documentElement.getAttribute('mode')) || 'md';\nconst createColorClasses = (color) => {\n  return color\n    ? {\n      'ion-color': true,\n      [`ion-color-${color}`]: true,\n    }\n    : null;\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the item\n   * @prop --background-activated: Background of the item when pressed. Note: setting this will interfere with the Material Design ripple.\n   * @prop --background-activated-opacity: Opacity of the item background when pressed\n   * @prop --background-focused: Background of the item when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the item background when focused with the tab key\n   * @prop --background-hover: Background of the item on hover\n   * @prop --background-hover-opacity: Opacity of the background of the item on hover\n   *\n   * @prop --border-color: Color of the item border\n   * @prop --border-radius: Radius of the item border\n   * @prop --border-style: Style of the item border\n   * @prop --border-width: Width of the item border\n   *\n   * @prop --color: Color of the item\n   * @prop --color-activated: Color of the item when pressed\n   * @prop --color-focused: Color of the item when focused with the tab key\n   * @prop --color-hover: Color of the item on hover\n   *\n   * @prop --detail-icon-color: Color of the item detail icon\n   * @prop --detail-icon-opacity: Opacity of the item detail icon\n   * @prop --detail-icon-font-size: Font size of the item detail icon\n   *\n   * @prop --inner-border-width: Width of the item inner border\n   * @prop --inner-box-shadow: Box shadow of the item inner\n   * @prop --inner-padding-top: Top padding of the item inner\n   * @prop --inner-padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item inner\n   * @prop --inner-padding-bottom: Bottom padding of the item inner\n   * @prop --inner-padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item inner\n   *\n   * @prop --min-height: Minimum height of the item\n   *\n   * @prop --padding-bottom: Bottom padding of the item\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item\n   * @prop --padding-top: Top padding of the item\n   *\n   * @prop --transition: Transition of the item\n   *\n   * @prop --ripple-color: Color of the item ripple effect\n   *\n   */\n  --border-radius: 0px;\n  --border-width: 0px;\n  --border-style: solid;\n  --padding-top: 0px;\n  --padding-bottom: 0px;\n  --padding-end: 0px;\n  --padding-start: 0px;\n  --inner-border-width: 0px;\n  --inner-padding-top: 0px;\n  --inner-padding-bottom: 0px;\n  --inner-padding-start: 0px;\n  --inner-padding-end: 0px;\n  --inner-box-shadow: none;\n  --detail-icon-color: initial;\n  --detail-icon-font-size: 1.25em;\n  --detail-icon-opacity: 0.25;\n  --color-activated: var(--color);\n  --color-focused: var(--color);\n  --color-hover: var(--color);\n  --ripple-color: currentColor;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: block;\n  position: relative;\n  align-items: center;\n  justify-content: space-between;\n  outline: none;\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  text-align: initial;\n  text-decoration: none;\n  overflow: hidden;\n  box-sizing: border-box;\n}\n\n:host(.ion-color) .item-native {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n:host(.ion-color) .item-native,\n:host(.ion-color) .item-inner {\n  border-color: var(--ion-color-shade);\n}\n\n:host(.ion-activated) .item-native {\n  color: var(--color-activated);\n}\n:host(.ion-activated) .item-native::after {\n  background: var(--background-activated);\n  opacity: var(--background-activated-opacity);\n}\n\n:host(.ion-color.ion-activated) .item-native {\n  color: var(--ion-color-contrast);\n}\n\n:host(.ion-focused) .item-native {\n  color: var(--color-focused);\n}\n:host(.ion-focused) .item-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n:host(.ion-color.ion-focused) .item-native {\n  color: var(--ion-color-contrast);\n}\n:host(.ion-color.ion-focused) .item-native::after {\n  background: var(--ion-color-contrast);\n}\n\n@media (any-hover: hover) {\n  :host(.ion-activatable:not(.ion-focused):hover) .item-native {\n    color: var(--color-hover);\n  }\n  :host(.ion-activatable:not(.ion-focused):hover) .item-native::after {\n    background: var(--background-hover);\n    opacity: var(--background-hover-opacity);\n  }\n  :host(.ion-color.ion-activatable:not(.ion-focused):hover) .item-native {\n    color: var(--ion-color-contrast);\n  }\n  :host(.ion-color.ion-activatable:not(.ion-focused):hover) .item-native::after {\n    background: var(--ion-color-contrast);\n  }\n}\n:host(.item-control-needs-pointer-cursor) {\n  cursor: pointer;\n}\n\n:host(.item-interactive-disabled:not(.item-multiple-inputs)) {\n  cursor: default;\n  pointer-events: none;\n}\n\n:host(.item-disabled) {\n  cursor: default;\n  opacity: 0.3;\n  pointer-events: none;\n}\n\n.item-native {\n  border-radius: var(--border-radius);\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  /* stylelint-disable */\n  padding-right: var(--padding-end);\n  padding-left: calc(var(--padding-start) + var(--ion-safe-area-left, 0px));\n  /* stylelint-enable */\n  display: flex;\n  position: relative;\n  align-items: inherit;\n  justify-content: inherit;\n  width: 100%;\n  min-height: var(--min-height);\n  transition: var(--transition);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  outline: none;\n  background: var(--background);\n  overflow: inherit;\n  z-index: 1;\n  box-sizing: border-box;\n}\n:host-context([dir=rtl]) .item-native {\n  padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n  padding-left: var(--padding-end);\n}\n\n[dir=rtl] .item-native {\n  padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n  padding-left: var(--padding-end);\n}\n\n@supports selector(:dir(rtl)) {\n  .item-native:dir(rtl) {\n    padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n    padding-left: var(--padding-end);\n  }\n}\n\n.item-native::-moz-focus-inner {\n  border: 0;\n}\n\n.item-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n  transition: var(--transition);\n  z-index: -1;\n}\n\nbutton,\na {\n  cursor: pointer;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\n.item-inner {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-top: var(--inner-padding-top);\n  padding-bottom: var(--inner-padding-bottom);\n  /* stylelint-disable */\n  padding-right: calc(var(--ion-safe-area-right, 0px) + var(--inner-padding-end));\n  padding-left: var(--inner-padding-start);\n  /* stylelint-enable */\n  display: flex;\n  position: relative;\n  flex: 1;\n  flex-direction: inherit;\n  align-items: inherit;\n  align-self: stretch;\n  min-height: inherit;\n  border-width: var(--inner-border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  box-shadow: var(--inner-box-shadow);\n  overflow: inherit;\n  box-sizing: border-box;\n}\n:host-context([dir=rtl]) .item-inner {\n  padding-right: var(--inner-padding-start);\n  padding-left: calc(var(--ion-safe-area-left, 0px) + var(--inner-padding-end));\n}\n\n[dir=rtl] .item-inner {\n  padding-right: var(--inner-padding-start);\n  padding-left: calc(var(--ion-safe-area-left, 0px) + var(--inner-padding-end));\n}\n\n@supports selector(:dir(rtl)) {\n  .item-inner:dir(rtl) {\n    padding-right: var(--inner-padding-start);\n    padding-left: calc(var(--ion-safe-area-left, 0px) + var(--inner-padding-end));\n  }\n}\n\n.item-detail-icon {\n  /**\n   * IonItem applies its own end padding. However,\n   * all IonIcons have the same bounding box meaning\n   * there may be white space for narrow icons. As\n   * a result, the white space gives the appearance\n   * that there is too much end margin. We move the default\n   * chevron icon over to account for this extra whitespace.\n   */\n  -webkit-margin-start: calc(var(--inner-padding-end) / 2);\n  margin-inline-start: calc(var(--inner-padding-end) / 2);\n  -webkit-margin-end: -6px;\n  margin-inline-end: -6px;\n  color: var(--detail-icon-color);\n  font-size: var(--detail-icon-font-size);\n  opacity: var(--detail-icon-opacity);\n}\n\n::slotted(ion-icon) {\n  font-size: 1.6em;\n}\n\n::slotted(ion-button) {\n  --margin-top: 0;\n  --margin-bottom: 0;\n  --margin-start: 0;\n  --margin-end: 0;\n  z-index: 1;\n}\n\n::slotted(ion-label:not([slot=end])) {\n  flex: 1;\n  width: min-content;\n  /**\n   * We allow labels in the default\n   * slot to grow. However, we do not\n   * want them to grow indefinitely.\n   */\n  max-width: 100%;\n}\n\n:host(.item-input) {\n  align-items: center;\n}\n\n.input-wrapper {\n  display: flex;\n  flex: 1;\n  flex-direction: inherit;\n  align-items: inherit;\n  align-self: stretch;\n  text-overflow: ellipsis;\n  overflow: inherit;\n  box-sizing: border-box;\n}\n\n:host(.item-label-stacked),\n:host(.item-label-floating) {\n  align-items: start;\n}\n\n:host(.item-label-stacked) .input-wrapper,\n:host(.item-label-floating) .input-wrapper {\n  flex: 1;\n  flex-direction: column;\n}\n\n:host(.item-multiple-inputs) ::slotted(ion-checkbox),\n:host(.item-multiple-inputs) ::slotted(ion-datetime),\n:host(.item-multiple-inputs) ::slotted(ion-radio) {\n  position: relative;\n}\n\n:host(.item-textarea) {\n  align-items: stretch;\n}\n\n::slotted(ion-reorder[slot]) {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --min-height: 44px;\n  --transition: background-color 200ms linear, opacity 200ms linear;\n  --padding-start: 16px;\n  --inner-padding-end: 16px;\n  --inner-border-width: 0px 0px 0.55px 0px;\n  --background: var(--ion-item-background, var(--ion-background-color, #fff));\n  /**\n   * The active/focus states need\n   * to be the opposite of the background color\n   * so there is enough contrast. The background\n   * defaults to var(--ion-background-color), so we\n   * default to var(--ion-text-color) which will give us\n   * the opposite color.\n   * i.e. if var(--ion-background-color) is #000\n   * then var(--ion-text-color) will be #fff.\n   */\n  --background-activated: var(--ion-text-color, #000);\n  --background-focused: var(--ion-text-color, #000);\n  --background-hover: currentColor;\n  --background-activated-opacity: .12;\n  --background-focused-opacity: .15;\n  --background-hover-opacity: .04;\n  --border-color: var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, var(--ion-background-color-step-250, #c8c7cc))));\n  --color: var(--ion-item-color, var(--ion-text-color, #000));\n  font-size: 1rem;\n}\n\n:host(.ion-activated) {\n  --transition: none;\n}\n\n:host(.ion-color.ion-focused) .item-native::after {\n  background: #000;\n  opacity: 0.15;\n}\n\n:host(.ion-color.ion-activated) .item-native::after {\n  background: #000;\n  opacity: 0.12;\n}\n\n:host(.item-lines-full) {\n  --border-width: 0px 0px 0.55px 0px;\n}\n\n:host(.item-lines-inset) {\n  --inner-border-width: 0px 0px 0.55px 0px;\n}\n\n:host(.item-lines-inset),\n:host(.item-lines-none) {\n  --border-width: 0px;\n}\n\n:host(.item-lines-full),\n:host(.item-lines-none) {\n  --inner-border-width: 0px;\n}\n\n::slotted([slot=start]) {\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\n\n::slotted(ion-icon[slot=start]),\n::slotted(ion-icon[slot=end]) {\n  margin-top: 7px;\n  margin-bottom: 7px;\n}\n\n::slotted(ion-toggle[slot=start]),\n::slotted(ion-toggle[slot=end]) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n:host(.item-label-stacked) ::slotted([slot=end]),\n:host(.item-label-floating) ::slotted([slot=end]) {\n  margin-top: 7px;\n  margin-bottom: 7px;\n}\n\n::slotted(.button-small) {\n  --padding-top: 1px;\n  --padding-bottom: 1px;\n  --padding-start: .5em;\n  --padding-end: .5em;\n  min-height: 24px;\n  font-size: 0.8125rem;\n}\n\n::slotted(ion-avatar) {\n  width: 36px;\n  height: 36px;\n}\n\n::slotted(ion-thumbnail) {\n  --size: 56px;\n}\n\n::slotted(ion-avatar[slot=end]),\n::slotted(ion-thumbnail[slot=end]) {\n  -webkit-margin-start: 8px;\n  margin-inline-start: 8px;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: 8px;\n  margin-bottom: 8px;\n}\n\n:host(.item-radio) ::slotted(ion-label),\n:host(.item-toggle) ::slotted(ion-label) {\n  -webkit-margin-start: 0px;\n  margin-inline-start: 0px;\n}\n\n::slotted(ion-label) {\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n:host(.item-label-floating),\n:host(.item-label-stacked) {\n  --min-height: 68px;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the item\n   * @prop --background-activated: Background of the item when pressed. Note: setting this will interfere with the Material Design ripple.\n   * @prop --background-activated-opacity: Opacity of the item background when pressed\n   * @prop --background-focused: Background of the item when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the item background when focused with the tab key\n   * @prop --background-hover: Background of the item on hover\n   * @prop --background-hover-opacity: Opacity of the background of the item on hover\n   *\n   * @prop --border-color: Color of the item border\n   * @prop --border-radius: Radius of the item border\n   * @prop --border-style: Style of the item border\n   * @prop --border-width: Width of the item border\n   *\n   * @prop --color: Color of the item\n   * @prop --color-activated: Color of the item when pressed\n   * @prop --color-focused: Color of the item when focused with the tab key\n   * @prop --color-hover: Color of the item on hover\n   *\n   * @prop --detail-icon-color: Color of the item detail icon\n   * @prop --detail-icon-opacity: Opacity of the item detail icon\n   * @prop --detail-icon-font-size: Font size of the item detail icon\n   *\n   * @prop --inner-border-width: Width of the item inner border\n   * @prop --inner-box-shadow: Box shadow of the item inner\n   * @prop --inner-padding-top: Top padding of the item inner\n   * @prop --inner-padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item inner\n   * @prop --inner-padding-bottom: Bottom padding of the item inner\n   * @prop --inner-padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item inner\n   *\n   * @prop --min-height: Minimum height of the item\n   *\n   * @prop --padding-bottom: Bottom padding of the item\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item\n   * @prop --padding-top: Top padding of the item\n   *\n   * @prop --transition: Transition of the item\n   *\n   * @prop --ripple-color: Color of the item ripple effect\n   *\n   */\n  --border-radius: 0px;\n  --border-width: 0px;\n  --border-style: solid;\n  --padding-top: 0px;\n  --padding-bottom: 0px;\n  --padding-end: 0px;\n  --padding-start: 0px;\n  --inner-border-width: 0px;\n  --inner-padding-top: 0px;\n  --inner-padding-bottom: 0px;\n  --inner-padding-start: 0px;\n  --inner-padding-end: 0px;\n  --inner-box-shadow: none;\n  --detail-icon-color: initial;\n  --detail-icon-font-size: 1.25em;\n  --detail-icon-opacity: 0.25;\n  --color-activated: var(--color);\n  --color-focused: var(--color);\n  --color-hover: var(--color);\n  --ripple-color: currentColor;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: block;\n  position: relative;\n  align-items: center;\n  justify-content: space-between;\n  outline: none;\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  text-align: initial;\n  text-decoration: none;\n  overflow: hidden;\n  box-sizing: border-box;\n}\n\n:host(.ion-color) .item-native {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n:host(.ion-color) .item-native,\n:host(.ion-color) .item-inner {\n  border-color: var(--ion-color-shade);\n}\n\n:host(.ion-activated) .item-native {\n  color: var(--color-activated);\n}\n:host(.ion-activated) .item-native::after {\n  background: var(--background-activated);\n  opacity: var(--background-activated-opacity);\n}\n\n:host(.ion-color.ion-activated) .item-native {\n  color: var(--ion-color-contrast);\n}\n\n:host(.ion-focused) .item-native {\n  color: var(--color-focused);\n}\n:host(.ion-focused) .item-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n:host(.ion-color.ion-focused) .item-native {\n  color: var(--ion-color-contrast);\n}\n:host(.ion-color.ion-focused) .item-native::after {\n  background: var(--ion-color-contrast);\n}\n\n@media (any-hover: hover) {\n  :host(.ion-activatable:not(.ion-focused):hover) .item-native {\n    color: var(--color-hover);\n  }\n  :host(.ion-activatable:not(.ion-focused):hover) .item-native::after {\n    background: var(--background-hover);\n    opacity: var(--background-hover-opacity);\n  }\n  :host(.ion-color.ion-activatable:not(.ion-focused):hover) .item-native {\n    color: var(--ion-color-contrast);\n  }\n  :host(.ion-color.ion-activatable:not(.ion-focused):hover) .item-native::after {\n    background: var(--ion-color-contrast);\n  }\n}\n:host(.item-control-needs-pointer-cursor) {\n  cursor: pointer;\n}\n\n:host(.item-interactive-disabled:not(.item-multiple-inputs)) {\n  cursor: default;\n  pointer-events: none;\n}\n\n:host(.item-disabled) {\n  cursor: default;\n  opacity: 0.3;\n  pointer-events: none;\n}\n\n.item-native {\n  border-radius: var(--border-radius);\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  /* stylelint-disable */\n  padding-right: var(--padding-end);\n  padding-left: calc(var(--padding-start) + var(--ion-safe-area-left, 0px));\n  /* stylelint-enable */\n  display: flex;\n  position: relative;\n  align-items: inherit;\n  justify-content: inherit;\n  width: 100%;\n  min-height: var(--min-height);\n  transition: var(--transition);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  outline: none;\n  background: var(--background);\n  overflow: inherit;\n  z-index: 1;\n  box-sizing: border-box;\n}\n:host-context([dir=rtl]) .item-native {\n  padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n  padding-left: var(--padding-end);\n}\n\n[dir=rtl] .item-native {\n  padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n  padding-left: var(--padding-end);\n}\n\n@supports selector(:dir(rtl)) {\n  .item-native:dir(rtl) {\n    padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n    padding-left: var(--padding-end);\n  }\n}\n\n.item-native::-moz-focus-inner {\n  border: 0;\n}\n\n.item-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n  transition: var(--transition);\n  z-index: -1;\n}\n\nbutton,\na {\n  cursor: pointer;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\n.item-inner {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-top: var(--inner-padding-top);\n  padding-bottom: var(--inner-padding-bottom);\n  /* stylelint-disable */\n  padding-right: calc(var(--ion-safe-area-right, 0px) + var(--inner-padding-end));\n  padding-left: var(--inner-padding-start);\n  /* stylelint-enable */\n  display: flex;\n  position: relative;\n  flex: 1;\n  flex-direction: inherit;\n  align-items: inherit;\n  align-self: stretch;\n  min-height: inherit;\n  border-width: var(--inner-border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  box-shadow: var(--inner-box-shadow);\n  overflow: inherit;\n  box-sizing: border-box;\n}\n:host-context([dir=rtl]) .item-inner {\n  padding-right: var(--inner-padding-start);\n  padding-left: calc(var(--ion-safe-area-left, 0px) + var(--inner-padding-end));\n}\n\n[dir=rtl] .item-inner {\n  padding-right: var(--inner-padding-start);\n  padding-left: calc(var(--ion-safe-area-left, 0px) + var(--inner-padding-end));\n}\n\n@supports selector(:dir(rtl)) {\n  .item-inner:dir(rtl) {\n    padding-right: var(--inner-padding-start);\n    padding-left: calc(var(--ion-safe-area-left, 0px) + var(--inner-padding-end));\n  }\n}\n\n.item-detail-icon {\n  /**\n   * IonItem applies its own end padding. However,\n   * all IonIcons have the same bounding box meaning\n   * there may be white space for narrow icons. As\n   * a result, the white space gives the appearance\n   * that there is too much end margin. We move the default\n   * chevron icon over to account for this extra whitespace.\n   */\n  -webkit-margin-start: calc(var(--inner-padding-end) / 2);\n  margin-inline-start: calc(var(--inner-padding-end) / 2);\n  -webkit-margin-end: -6px;\n  margin-inline-end: -6px;\n  color: var(--detail-icon-color);\n  font-size: var(--detail-icon-font-size);\n  opacity: var(--detail-icon-opacity);\n}\n\n::slotted(ion-icon) {\n  font-size: 1.6em;\n}\n\n::slotted(ion-button) {\n  --margin-top: 0;\n  --margin-bottom: 0;\n  --margin-start: 0;\n  --margin-end: 0;\n  z-index: 1;\n}\n\n::slotted(ion-label:not([slot=end])) {\n  flex: 1;\n  width: min-content;\n  /**\n   * We allow labels in the default\n   * slot to grow. However, we do not\n   * want them to grow indefinitely.\n   */\n  max-width: 100%;\n}\n\n:host(.item-input) {\n  align-items: center;\n}\n\n.input-wrapper {\n  display: flex;\n  flex: 1;\n  flex-direction: inherit;\n  align-items: inherit;\n  align-self: stretch;\n  text-overflow: ellipsis;\n  overflow: inherit;\n  box-sizing: border-box;\n}\n\n:host(.item-label-stacked),\n:host(.item-label-floating) {\n  align-items: start;\n}\n\n:host(.item-label-stacked) .input-wrapper,\n:host(.item-label-floating) .input-wrapper {\n  flex: 1;\n  flex-direction: column;\n}\n\n:host(.item-multiple-inputs) ::slotted(ion-checkbox),\n:host(.item-multiple-inputs) ::slotted(ion-datetime),\n:host(.item-multiple-inputs) ::slotted(ion-radio) {\n  position: relative;\n}\n\n:host(.item-textarea) {\n  align-items: stretch;\n}\n\n::slotted(ion-reorder[slot]) {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --min-height: 48px;\n  --background: var(--ion-item-background, var(--ion-background-color, #fff));\n  --background-activated: transparent;\n  --background-focused: currentColor;\n  --background-hover: currentColor;\n  --background-activated-opacity: 0;\n  --background-focused-opacity: .12;\n  --background-hover-opacity: .04;\n  --border-color: var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, var(--ion-background-color-step-150, rgba(0, 0, 0, 0.13)))));\n  --color: var(--ion-item-color, var(--ion-text-color, #000));\n  --transition: opacity 15ms linear, background-color 15ms linear;\n  --padding-start: 16px;\n  --inner-padding-end: 16px;\n  --inner-border-width: 0 0 1px 0;\n  font-size: 1rem;\n  font-weight: normal;\n  text-transform: none;\n}\n\n:host(.ion-color.ion-activated) .item-native::after {\n  background: transparent;\n}\n\n:host(.item-interactive) {\n  --border-width: 0 0 1px 0;\n  --inner-border-width: 0;\n}\n\n:host(.item-lines-full) {\n  --border-width: 0 0 1px 0;\n}\n\n:host(.item-lines-inset) {\n  --inner-border-width: 0 0 1px 0;\n}\n\n:host(.item-lines-inset),\n:host(.item-lines-none) {\n  --border-width: 0;\n}\n\n:host(.item-lines-full),\n:host(.item-lines-none) {\n  --inner-border-width: 0;\n}\n\n:host(.item-multi-line) ::slotted([slot=start]),\n:host(.item-multi-line) ::slotted([slot=end]) {\n  margin-top: 16px;\n  margin-bottom: 16px;\n  align-self: flex-start;\n}\n\n::slotted([slot=start]) {\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n}\n\n::slotted([slot=end]) {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n}\n\n::slotted(ion-icon) {\n  color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.54);\n  font-size: 1.5em;\n}\n\n:host(.ion-color) ::slotted(ion-icon) {\n  color: var(--ion-color-contrast);\n}\n\n::slotted(ion-icon[slot]) {\n  margin-top: 12px;\n  margin-bottom: 12px;\n}\n\n::slotted(ion-icon[slot=start]) {\n  -webkit-margin-end: 32px;\n  margin-inline-end: 32px;\n}\n\n::slotted(ion-icon[slot=end]) {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n}\n\n::slotted(ion-toggle[slot=start]),\n::slotted(ion-toggle[slot=end]) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n::slotted(ion-note) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  align-self: flex-start;\n  font-size: 0.6875rem;\n}\n\n::slotted(ion-note[slot]) {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 18px;\n  padding-bottom: 10px;\n}\n\n::slotted(ion-avatar) {\n  width: 40px;\n  height: 40px;\n}\n\n::slotted(ion-thumbnail) {\n  --size: 56px;\n}\n\n::slotted(ion-avatar),\n::slotted(ion-thumbnail) {\n  margin-top: 8px;\n  margin-bottom: 8px;\n}\n\n::slotted(ion-avatar[slot=start]),\n::slotted(ion-thumbnail[slot=start]) {\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n}\n\n::slotted(ion-avatar[slot=end]),\n::slotted(ion-thumbnail[slot=end]) {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n}\n\n::slotted(ion-label) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n:host(.item-label-stacked) ::slotted([slot=end]),\n:host(.item-label-floating) ::slotted([slot=end]) {\n  margin-top: 7px;\n  margin-bottom: 7px;\n}\n\n:host(.item-toggle) ::slotted(ion-label),\n:host(.item-radio) ::slotted(ion-label) {\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n}\n\n::slotted(.button-small) {\n  --padding-top: 2px;\n  --padding-bottom: 2px;\n  --padding-start: .6em;\n  --padding-end: .6em;\n  min-height: 25px;\n  font-size: 0.75rem;\n}\n\n:host(.item-label-floating),\n:host(.item-label-stacked) {\n  --min-height: 55px;\n}\n\n:host(.ion-focused:not(.ion-color)) ::slotted(.label-stacked),\n:host(.ion-focused:not(.ion-color)) ::slotted(.label-floating),\n:host(.item-has-focus:not(.ion-color)) ::slotted(.label-stacked),\n:host(.item-has-focus:not(.ion-color)) ::slotted(.label-floating) {\n  color: var(--ion-color-primary, #0054e9);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, forceUpdate, h } from \"@stencil/core\";\nimport { inheritAttributes, raf } from \"../../utils/helpers\";\nimport { createColorClasses, hostContext, openURL } from \"../../utils/theme\";\nimport { chevronForward } from \"ionicons/icons\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @slot - Content is placed between the named slots if provided without a slot.\n * @slot start - Content is placed to the left of the item text in LTR, and to the right in RTL.\n * @slot end - Content is placed to the right of the item text in LTR, and to the left in RTL.\n *\n * @part native - The native HTML button, anchor or div element that wraps all child elements.\n * @part detail-icon - The chevron icon for the item. Only applies when `detail=\"true\"`.\n */\nexport class Item {\n    constructor() {\n        this.labelColorStyles = {};\n        this.itemStyles = new Map();\n        this.inheritedAriaAttributes = {};\n        this.multipleInputs = false;\n        this.focusable = true;\n        this.color = undefined;\n        this.button = false;\n        this.detail = undefined;\n        this.detailIcon = chevronForward;\n        this.disabled = false;\n        this.download = undefined;\n        this.href = undefined;\n        this.rel = undefined;\n        this.lines = undefined;\n        this.routerAnimation = undefined;\n        this.routerDirection = 'forward';\n        this.target = undefined;\n        this.type = 'button';\n    }\n    buttonChanged() {\n        // Update the focusable option when the button option is changed\n        this.focusable = this.isFocusable();\n    }\n    labelColorChanged(ev) {\n        const { color } = this;\n        // There will be a conflict with item color if\n        // we apply the label color to item, so we ignore\n        // the label color if the user sets a color on item\n        if (color === undefined) {\n            this.labelColorStyles = ev.detail;\n        }\n    }\n    itemStyle(ev) {\n        ev.stopPropagation();\n        const tagName = ev.target.tagName;\n        const updatedStyles = ev.detail;\n        const newStyles = {};\n        const childStyles = this.itemStyles.get(tagName) || {};\n        let hasStyleChange = false;\n        Object.keys(updatedStyles).forEach((key) => {\n            if (updatedStyles[key]) {\n                const itemKey = `item-${key}`;\n                if (!childStyles[itemKey]) {\n                    hasStyleChange = true;\n                }\n                newStyles[itemKey] = true;\n            }\n        });\n        if (!hasStyleChange && Object.keys(newStyles).length !== Object.keys(childStyles).length) {\n            hasStyleChange = true;\n        }\n        if (hasStyleChange) {\n            this.itemStyles.set(tagName, newStyles);\n            forceUpdate(this);\n        }\n    }\n    connectedCallback() {\n        this.hasStartEl();\n    }\n    componentWillLoad() {\n        this.inheritedAriaAttributes = inheritAttributes(this.el, ['aria-label']);\n    }\n    componentDidLoad() {\n        raf(() => {\n            this.setMultipleInputs();\n            this.focusable = this.isFocusable();\n        });\n    }\n    // If the item contains multiple clickable elements and/or inputs, then the item\n    // should not have a clickable input cover over the entire item to prevent\n    // interfering with their individual click events\n    setMultipleInputs() {\n        // The following elements have a clickable cover that is relative to the entire item\n        const covers = this.el.querySelectorAll('ion-checkbox, ion-datetime, ion-select, ion-radio');\n        // The following elements can accept focus alongside the previous elements\n        // therefore if these elements are also a child of item, we don't want the\n        // input cover on top of those interfering with their clicks\n        const inputs = this.el.querySelectorAll('ion-input, ion-range, ion-searchbar, ion-segment, ion-textarea, ion-toggle');\n        // The following elements should also stay clickable when an input with cover is present\n        const clickables = this.el.querySelectorAll('ion-router-link, ion-button, a, button');\n        // Check for multiple inputs to change the position of the input cover to relative\n        // for all of the covered inputs above\n        this.multipleInputs =\n            covers.length + inputs.length > 1 ||\n                covers.length + clickables.length > 1 ||\n                (covers.length > 0 && this.isClickable());\n    }\n    // If the item contains an input including a checkbox, datetime, select, or radio\n    // then the item will have a clickable input cover that covers the item\n    // that should get the hover, focused and activated states UNLESS it has multiple\n    // inputs, then those need to individually get each click\n    hasCover() {\n        const inputs = this.el.querySelectorAll('ion-checkbox, ion-datetime, ion-select, ion-radio');\n        return inputs.length === 1 && !this.multipleInputs;\n    }\n    // If the item has an href or button property it will render a native\n    // anchor or button that is clickable\n    isClickable() {\n        return this.href !== undefined || this.button;\n    }\n    canActivate() {\n        return this.isClickable() || this.hasCover();\n    }\n    isFocusable() {\n        const focusableChild = this.el.querySelector('.ion-focusable');\n        return this.canActivate() || focusableChild !== null;\n    }\n    hasStartEl() {\n        const startEl = this.el.querySelector('[slot=\"start\"]');\n        if (startEl !== null) {\n            this.el.classList.add('item-has-start-slot');\n        }\n    }\n    getFirstInteractive() {\n        const controls = this.el.querySelectorAll('ion-toggle:not([disabled]), ion-checkbox:not([disabled]), ion-radio:not([disabled]), ion-select:not([disabled]), ion-input:not([disabled]), ion-textarea:not([disabled])');\n        return controls[0];\n    }\n    render() {\n        const { detail, detailIcon, download, labelColorStyles, lines, disabled, href, rel, target, routerAnimation, routerDirection, inheritedAriaAttributes, multipleInputs, } = this;\n        const childStyles = {};\n        const mode = getIonMode(this);\n        const clickable = this.isClickable();\n        const canActivate = this.canActivate();\n        const TagType = clickable ? (href === undefined ? 'button' : 'a') : 'div';\n        const attrs = TagType === 'button'\n            ? { type: this.type }\n            : {\n                download,\n                href,\n                rel,\n                target,\n            };\n        let clickFn = {};\n        const firstInteractive = this.getFirstInteractive();\n        // Only set onClick if the item is clickable to prevent screen\n        // readers from reading all items as clickable\n        if (clickable || (firstInteractive !== undefined && !multipleInputs)) {\n            clickFn = {\n                onClick: (ev) => {\n                    if (clickable) {\n                        openURL(href, ev, routerDirection, routerAnimation);\n                    }\n                    if (firstInteractive !== undefined && !multipleInputs) {\n                        const path = ev.composedPath();\n                        const target = path[0];\n                        if (ev.isTrusted) {\n                            /**\n                             * Dispatches a click event to the first interactive element,\n                             * when it is the result of a user clicking on the item.\n                             *\n                             * We check if the click target is in the shadow root,\n                             * which means the user clicked on the .item-native or\n                             * .item-inner padding.\n                             */\n                            const clickedWithinShadowRoot = this.el.shadowRoot.contains(target);\n                            if (clickedWithinShadowRoot) {\n                                /**\n                                 * For input/textarea clicking the padding should focus the\n                                 * text field (thus making it editable). For everything else,\n                                 * we want to click the control so it activates.\n                                 */\n                                if (firstInteractive.tagName === 'ION-INPUT' || firstInteractive.tagName === 'ION-TEXTAREA') {\n                                    firstInteractive.setFocus();\n                                }\n                                else {\n                                    firstInteractive.click();\n                                }\n                            }\n                        }\n                    }\n                },\n            };\n        }\n        const showDetail = detail !== undefined ? detail : mode === 'ios' && clickable;\n        this.itemStyles.forEach((value) => {\n            Object.assign(childStyles, value);\n        });\n        const ariaDisabled = disabled || childStyles['item-interactive-disabled'] ? 'true' : null;\n        const inList = hostContext('ion-list', this.el) && !hostContext('ion-radio-group', this.el);\n        /**\n         * Inputs and textareas do not need to show a cursor pointer.\n         * However, other form controls such as checkboxes and radios do.\n         */\n        const firstInteractiveNeedsPointerCursor = firstInteractive !== undefined && !['ION-INPUT', 'ION-TEXTAREA'].includes(firstInteractive.tagName);\n        return (h(Host, { key: '02f540d8666146b5f2665ba6b39dfe774c65d5e6', \"aria-disabled\": ariaDisabled, class: Object.assign(Object.assign(Object.assign({}, childStyles), labelColorStyles), createColorClasses(this.color, {\n                item: true,\n                [mode]: true,\n                'item-lines-default': lines === undefined,\n                [`item-lines-${lines}`]: lines !== undefined,\n                'item-control-needs-pointer-cursor': firstInteractiveNeedsPointerCursor,\n                'item-disabled': disabled,\n                'in-list': inList,\n                'item-multiple-inputs': this.multipleInputs,\n                'ion-activatable': canActivate,\n                'ion-focusable': this.focusable,\n                'item-rtl': document.dir === 'rtl',\n            })), role: inList ? 'listitem' : null }, h(TagType, Object.assign({ key: '91cf3eedc2d7eca40a45fc3b0aaae5a87d387eb7' }, attrs, inheritedAriaAttributes, { class: \"item-native\", part: \"native\", disabled: disabled }, clickFn), h(\"slot\", { key: 'ae4c679ca903a78a7c933c1d02f21f5d677b6388', name: \"start\" }), h(\"div\", { key: 'a61de72dce135b6dce18e6fa19680524958924dd', class: \"item-inner\" }, h(\"div\", { key: 'd5b09966b6de8d6b4da8e139875edec4eeb1ae27', class: \"input-wrapper\" }, h(\"slot\", { key: '79077e5708a1783b135fab6f8caff9fb2f6f387a' })), h(\"slot\", { key: 'cdcc71689a87e985d32170ab98538ef25227f384', name: \"end\" }), showDetail && (h(\"ion-icon\", { key: '1e82f2d0e2d2fc18bd3429a7c72e4e57447cad7a', icon: detailIcon, lazy: false, class: \"item-detail-icon\", part: \"detail-icon\", \"aria-hidden\": \"true\", \"flip-rtl\": detailIcon === chevronForward }))), canActivate && mode === 'md' && h(\"ion-ripple-effect\", { key: 'ab9842d0d9c64408573f07323e10f9ed29fbe6e2' }))));\n    }\n    static get is() { return \"ion-item\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"item.ios.scss\"],\n            \"md\": [\"item.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"item.ios.css\"],\n            \"md\": [\"item.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"button\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, a button tag will be rendered and the item will be tappable.\"\n                },\n                \"attribute\": \"button\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"detail\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, a detail arrow will appear on the item. Defaults to `false` unless the `mode`\\nis `ios` and an `href` or `button` property is present.\"\n                },\n                \"attribute\": \"detail\",\n                \"reflect\": false\n            },\n            \"detailIcon\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The icon to use when `detail` is set to `true`.\"\n                },\n                \"attribute\": \"detail-icon\",\n                \"reflect\": false,\n                \"defaultValue\": \"chevronForward\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the item.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"download\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"This attribute instructs browsers to download a URL instead of navigating to\\nit, so the user will be prompted to save it as a local file. If the attribute\\nhas a value, it is used as the pre-filled file name in the Save prompt\\n(the user can still change the file name if they want).\"\n                },\n                \"attribute\": \"download\",\n                \"reflect\": false\n            },\n            \"href\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Contains a URL or a URL fragment that the hyperlink points to.\\nIf this property is set, an anchor tag will be rendered.\"\n                },\n                \"attribute\": \"href\",\n                \"reflect\": false\n            },\n            \"rel\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the relationship of the target object to the link object.\\nThe value is a space-separated list of [link types](https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types).\"\n                },\n                \"attribute\": \"rel\",\n                \"reflect\": false\n            },\n            \"lines\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'full' | 'inset' | 'none'\",\n                    \"resolved\": \"\\\"full\\\" | \\\"inset\\\" | \\\"none\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"How the bottom border should be displayed on the item.\"\n                },\n                \"attribute\": \"lines\",\n                \"reflect\": false\n            },\n            \"routerAnimation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder | undefined\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When using a router, it specifies the transition animation when navigating to\\nanother page using `href`.\"\n                }\n            },\n            \"routerDirection\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"RouterDirection\",\n                    \"resolved\": \"\\\"back\\\" | \\\"forward\\\" | \\\"root\\\"\",\n                    \"references\": {\n                        \"RouterDirection\": {\n                            \"location\": \"import\",\n                            \"path\": \"../router/utils/interface\",\n                            \"id\": \"src/components/router/utils/interface.ts::RouterDirection\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When using a router, it specifies the transition direction when navigating to\\nanother page using `href`.\"\n                },\n                \"attribute\": \"router-direction\",\n                \"reflect\": false,\n                \"defaultValue\": \"'forward'\"\n            },\n            \"target\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies where to display the linked URL.\\nOnly applies when an `href` is provided.\\nSpecial keywords: `\\\"_blank\\\"`, `\\\"_self\\\"`, `\\\"_parent\\\"`, `\\\"_top\\\"`.\"\n                },\n                \"attribute\": \"target\",\n                \"reflect\": false\n            },\n            \"type\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'submit' | 'reset' | 'button'\",\n                    \"resolved\": \"\\\"button\\\" | \\\"reset\\\" | \\\"submit\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The type of the button. Only used when an `onclick` or `button` property is present.\"\n                },\n                \"attribute\": \"type\",\n                \"reflect\": false,\n                \"defaultValue\": \"'button'\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"multipleInputs\": {},\n            \"focusable\": {}\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"button\",\n                \"methodName\": \"buttonChanged\"\n            }];\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"ionColor\",\n                \"method\": \"labelColorChanged\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"ionStyle\",\n                \"method\": \"itemStyle\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host-context(.item) {\n  /**\n   * @prop --color: Color of the label. This property is only available when using `ion-label` inside of an `ion-item`.\n   */\n  --color: initial;\n  display: block;\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  font-size: inherit;\n  text-overflow: ellipsis;\n  box-sizing: border-box;\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-base);\n}\n\n:host(.ion-text-nowrap) {\n  overflow: hidden;\n}\n\n:host-context(.item-interactive-disabled:not(.item-multiple-inputs)) {\n  cursor: default;\n  opacity: 0.3;\n  pointer-events: none;\n}\n\n:host-context(.item-input) {\n  flex: initial;\n  max-width: 200px;\n  pointer-events: none;\n}\n\n:host-context(.item-textarea) {\n  align-self: baseline;\n}\n\n:host-context(.item-skeleton-text) {\n  overflow: hidden;\n}\n\n:host(.label-fixed) {\n  flex: 0 0 100px;\n  width: 100px;\n  min-width: 100px;\n  max-width: 200px;\n}\n\n:host(.label-stacked),\n:host(.label-floating) {\n  margin-bottom: 0;\n  align-self: stretch;\n  width: auto;\n  max-width: 100%;\n}\n\n:host(.label-no-animate.label-floating) {\n  transition: none;\n}\n\n::slotted(*) h1,\n::slotted(*) h2,\n::slotted(*) h3,\n::slotted(*) h4,\n::slotted(*) h5,\n::slotted(*) h6 {\n  text-overflow: inherit;\n  overflow: inherit;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host(.ion-text-wrap) {\n  font-size: 0.875rem;\n  line-height: 1.5;\n}\n\n:host(.label-stacked) {\n  margin-bottom: 4px;\n  font-size: 0.875rem;\n}\n\n:host(.label-floating) {\n  margin-bottom: 0;\n  transform: translate(0, 29px);\n  transform-origin: left top;\n  transition: transform 150ms ease-in-out;\n}\n:host-context([dir=rtl]):host(.label-floating), :host-context([dir=rtl]).label-floating {\n  transform-origin: right top;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.label-floating:dir(rtl)) {\n    transform-origin: right top;\n  }\n}\n\n:host-context(.item-textarea).label-floating {\n  transform: translate(0, 28px);\n}\n\n:host-context(.item-has-focus).label-floating,\n:host-context(.item-has-placeholder:not(.item-input)).label-floating,\n:host-context(.item-has-value).label-floating {\n  transform: scale(0.82);\n}\n\n::slotted(*) h1 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 3px;\n  margin-bottom: 2px;\n  font-size: 1.375rem;\n  font-weight: normal;\n}\n\n::slotted(*) h2 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 2px;\n  font-size: 1.0625rem;\n  font-weight: normal;\n}\n\n::slotted(*) h3,\n::slotted(*) h4,\n::slotted(*) h5,\n::slotted(*) h6 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 3px;\n  font-size: 0.875rem;\n  font-weight: normal;\n  line-height: normal;\n}\n\n::slotted(*) p {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 2px;\n  font-size: 0.875rem;\n  line-height: normal;\n  text-overflow: inherit;\n  overflow: inherit;\n}\n\n::slotted(p) {\n  color: var(--ion-color-step-400, var(--ion-text-color-step-600, #999999));\n}\n\n:host(.in-item-color)::slotted(p) {\n  color: inherit;\n}\n\n::slotted(*) h2:last-child,\n::slotted(*) h3:last-child,\n::slotted(*) h4:last-child,\n::slotted(*) h5:last-child,\n::slotted(*) h6:last-child,\n::slotted(*) p:last-child {\n  margin-bottom: 0;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host-context(.item) {\n  /**\n   * @prop --color: Color of the label. This property is only available when using `ion-label` inside of an `ion-item`.\n   */\n  --color: initial;\n  display: block;\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  font-size: inherit;\n  text-overflow: ellipsis;\n  box-sizing: border-box;\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-base);\n}\n\n:host(.ion-text-nowrap) {\n  overflow: hidden;\n}\n\n:host-context(.item-interactive-disabled:not(.item-multiple-inputs)) {\n  cursor: default;\n  opacity: 0.3;\n  pointer-events: none;\n}\n\n:host-context(.item-input) {\n  flex: initial;\n  max-width: 200px;\n  pointer-events: none;\n}\n\n:host-context(.item-textarea) {\n  align-self: baseline;\n}\n\n:host-context(.item-skeleton-text) {\n  overflow: hidden;\n}\n\n:host(.label-fixed) {\n  flex: 0 0 100px;\n  width: 100px;\n  min-width: 100px;\n  max-width: 200px;\n}\n\n:host(.label-stacked),\n:host(.label-floating) {\n  margin-bottom: 0;\n  align-self: stretch;\n  width: auto;\n  max-width: 100%;\n}\n\n:host(.label-no-animate.label-floating) {\n  transition: none;\n}\n\n::slotted(*) h1,\n::slotted(*) h2,\n::slotted(*) h3,\n::slotted(*) h4,\n::slotted(*) h5,\n::slotted(*) h6 {\n  text-overflow: inherit;\n  overflow: inherit;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host(.ion-text-wrap) {\n  line-height: 1.5;\n}\n\n/**\n * When translating the label, we need to use translateY\n * instead of translate3d due to a WebKit bug: https://bugs.webkit.org/show_bug.cgi?id=215731\n */\n:host(.label-stacked),\n:host(.label-floating) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  /* stylelint-disable property-disallowed-list */\n  transform-origin: top left;\n  /* stylelint-enable property-disallowed-list */\n}\n\n:host(.label-stacked.label-rtl),\n:host(.label-floating.label-rtl) {\n  /* stylelint-disable property-disallowed-list */\n  transform-origin: top right;\n  /* stylelint-enable property-disallowed-list */\n}\n\n:host(.label-stacked) {\n  transform: translateY(50%) scale(0.75);\n  transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n:host(.label-floating) {\n  transform: translateY(96%);\n  transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1), transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n:host-context(.ion-focused).label-floating,\n:host-context(.item-has-focus).label-floating,\n:host-context(.item-has-placeholder:not(.item-input)).label-floating,\n:host-context(.item-has-value).label-floating {\n  transform: translateY(50%) scale(0.75);\n}\n\n:host-context(.ion-focused).label-stacked:not(.ion-color),\n:host-context(.ion-focused).label-floating:not(.ion-color),\n:host-context(.item-has-focus).label-stacked:not(.ion-color),\n:host-context(.item-has-focus).label-floating:not(.ion-color) {\n  color: var(--ion-color-primary, #0054e9);\n}\n\n:host-context(.ion-focused.ion-color).label-stacked:not(.ion-color),\n:host-context(.ion-focused.ion-color).label-floating:not(.ion-color),\n:host-context(.item-has-focus.ion-color).label-stacked:not(.ion-color),\n:host-context(.item-has-focus.ion-color).label-floating:not(.ion-color) {\n  color: var(--ion-color-contrast);\n}\n\n:host-context(.ion-invalid.ion-touched).label-stacked:not(.ion-color),\n:host-context(.ion-invalid.ion-touched).label-floating:not(.ion-color) {\n  color: var(--highlight-color-invalid);\n}\n\n::slotted(*) h1 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 2px;\n  font-size: 1.5rem;\n  font-weight: normal;\n}\n\n::slotted(*) h2 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  font-size: 1rem;\n  font-weight: normal;\n}\n\n::slotted(*) h3,\n::slotted(*) h4,\n::slotted(*) h5,\n::slotted(*) h6 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  font-size: 0.875rem;\n  font-weight: normal;\n  line-height: normal;\n}\n\n::slotted(*) p {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 2px;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  text-overflow: inherit;\n  overflow: inherit;\n}\n\n::slotted(p) {\n  color: var(--ion-color-step-600, var(--ion-text-color-step-400, #666666));\n}\n\n:host(.in-item-color)::slotted(p) {\n  color: inherit;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { createColorClasses, hostContext } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class Label {\n    constructor() {\n        this.inRange = false;\n        this.color = undefined;\n        this.position = undefined;\n        this.noAnimate = false;\n    }\n    componentWillLoad() {\n        this.inRange = !!this.el.closest('ion-range');\n        this.noAnimate = this.position === 'floating';\n        this.emitStyle();\n        this.emitColor();\n    }\n    componentDidLoad() {\n        if (this.noAnimate) {\n            setTimeout(() => {\n                this.noAnimate = false;\n            }, 1000);\n        }\n    }\n    colorChanged() {\n        this.emitColor();\n    }\n    positionChanged() {\n        this.emitStyle();\n    }\n    emitColor() {\n        const { color } = this;\n        this.ionColor.emit({\n            'item-label-color': color !== undefined,\n            [`ion-color-${color}`]: color !== undefined,\n        });\n    }\n    emitStyle() {\n        const { inRange, position } = this;\n        // If the label is inside of a range we don't want\n        // to override the classes added by the label that\n        // is a direct child of the item\n        if (!inRange) {\n            this.ionStyle.emit({\n                label: true,\n                [`label-${position}`]: position !== undefined,\n            });\n        }\n    }\n    render() {\n        const position = this.position;\n        const mode = getIonMode(this);\n        return (h(Host, { key: 'c2c0f388dab910d294efb9fbb409ee4ef829c1ed', class: createColorClasses(this.color, {\n                [mode]: true,\n                'in-item-color': hostContext('ion-item.ion-color', this.el),\n                [`label-${position}`]: position !== undefined,\n                [`label-no-animate`]: this.noAnimate,\n                'label-rtl': document.dir === 'rtl',\n            }) }, h(\"slot\", { key: '4de6b69950f417873a13c851018ec31ea2686f0a' })));\n    }\n    static get is() { return \"ion-label\"; }\n    static get encapsulation() { return \"scoped\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"label.ios.scss\"],\n            \"md\": [\"label.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"label.ios.css\"],\n            \"md\": [\"label.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"position\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'fixed' | 'stacked' | 'floating'\",\n                    \"resolved\": \"\\\"fixed\\\" | \\\"floating\\\" | \\\"stacked\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The position determines where and how the label behaves inside an item.\"\n                },\n                \"attribute\": \"position\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"noAnimate\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionColor\",\n                \"name\": \"ionColor\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted when the color changes.\"\n                },\n                \"complexType\": {\n                    \"original\": \"StyleEventDetail\",\n                    \"resolved\": \"StyleEventDetail\",\n                    \"references\": {\n                        \"StyleEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::StyleEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"ionStyle\",\n                \"name\": \"ionStyle\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted when the styles change.\"\n                },\n                \"complexType\": {\n                    \"original\": \"StyleEventDetail\",\n                    \"resolved\": \"StyleEventDetail\",\n                    \"references\": {\n                        \"StyleEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::StyleEventDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"color\",\n                \"methodName\": \"colorChanged\"\n            }, {\n                \"propName\": \"position\",\n                \"methodName\": \"positionChanged\"\n            }];\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\nion-list {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  display: block;\n  contain: content;\n  list-style-type: none;\n}\n\nion-list.list-inset {\n  transform: translateZ(0);\n  overflow: hidden;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.list-ios {\n  background: var(--ion-item-background, var(--ion-background-color, #fff));\n}\n\n.list-ios.list-inset {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 16px;\n  margin-bottom: 16px;\n  border-radius: 10px;\n}\n\n/**\n * These selectors ensure the last item in the list\n * has the correct border.\n * We need to consider the following scenarios:\n 1. The only item in a list.\n 2. The last item in a list as long as it is not the only item.\n 3. The item in the last item-sliding in a list.\n * Note that we do not select ion-item:last-of-type\n * because that will cause the borders to disappear on\n * items in an item-sliding when the item is the last\n * element in the item-sliding container.\n */\n.list-ios.list-inset ion-item:only-child,\n.list-ios.list-inset ion-item:not(:only-of-type):last-of-type,\n.list-ios.list-inset ion-item-sliding:last-of-type ion-item {\n  --border-width: 0;\n  --inner-border-width: 0;\n}\n\n.list-ios.list-inset + ion-list.list-inset {\n  margin-top: 0;\n}\n\n.list-ios-lines-none .item-lines-default {\n  --inner-border-width: 0px;\n  --border-width: 0px;\n}\n\n.list-ios-lines-full .item-lines-default {\n  --inner-border-width: 0px;\n  --border-width: 0 0 0.55px 0;\n}\n\n.list-ios-lines-inset .item-lines-default {\n  --inner-border-width: 0 0 0.55px 0;\n  --border-width: 0px;\n}\n\nion-card .list-ios {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\nion-list {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  display: block;\n  contain: content;\n  list-style-type: none;\n}\n\nion-list.list-inset {\n  transform: translateZ(0);\n  overflow: hidden;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.list-md {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  background: var(--ion-item-background, var(--ion-background-color, #fff));\n}\n\n.list-md > .input:last-child::after {\n  inset-inline-start: 0;\n}\n\n.list-md.list-inset {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 16px;\n  margin-bottom: 16px;\n  border-radius: 2px;\n}\n\n/**\n * These selectors ensure the last item in the list\n * has the correct border.\n * We need to consider the following scenarios:\n 1. The last item in a list as long as it is not the only item.\n 2. The item in the last item-sliding in a list.\n * Note that we do not select \"ion-item-sliding ion-item:last-of-type\"\n * because that will cause the borders to disappear on\n * items in an item-sliding when the item is the last\n * element in the item-sliding container.\n */\n.list-md.list-inset ion-item:not(:only-of-type):last-of-type,\n.list-md.list-inset ion-item-sliding:last-of-type ion-item {\n  --border-width: 0;\n  --inner-border-width: 0;\n}\n\n/**\n * We target :only-child instead of :only-of-type\n * otherwise borders will disappear on items inside of\n * ion-item-sliding because the item will be the only\n * one of its type inside of the ion-item-sliding group.\n */\n.list-md.list-inset ion-item:only-child {\n  --border-width: 0;\n  --inner-border-width: 0;\n}\n\n.list-md.list-inset + ion-list.list-inset {\n  margin-top: 0;\n}\n\n.list-md-lines-none .item-lines-default {\n  --inner-border-width: 0px;\n  --border-width: 0px;\n}\n\n.list-md-lines-full .item-lines-default {\n  --inner-border-width: 0px;\n  --border-width: 0 0 1px 0;\n}\n\n.list-md-lines-inset .item-lines-default {\n  --inner-border-width: 0 0 1px 0;\n  --border-width: 0px;\n}\n\nion-card .list-md {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class List {\n    constructor() {\n        this.lines = undefined;\n        this.inset = false;\n    }\n    /**\n     * If `ion-item-sliding` are used inside the list, this method closes\n     * any open sliding item.\n     *\n     * Returns `true` if an actual `ion-item-sliding` is closed.\n     */\n    async closeSlidingItems() {\n        const item = this.el.querySelector('ion-item-sliding');\n        if (item === null || item === void 0 ? void 0 : item.closeOpened) {\n            return item.closeOpened();\n        }\n        return false;\n    }\n    render() {\n        const mode = getIonMode(this);\n        const { lines, inset } = this;\n        return (h(Host, { key: '8bde220025a7eeca6da075379c6487c4c9bdddc1', role: \"list\", class: {\n                [mode]: true,\n                // Used internally for styling\n                [`list-${mode}`]: true,\n                'list-inset': inset,\n                [`list-lines-${lines}`]: lines !== undefined,\n                [`list-${mode}-lines-${lines}`]: lines !== undefined,\n            } }));\n    }\n    static get is() { return \"ion-list\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"list.ios.scss\"],\n            \"md\": [\"list.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"list.ios.css\"],\n            \"md\": [\"list.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"lines\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'full' | 'inset' | 'none'\",\n                    \"resolved\": \"\\\"full\\\" | \\\"inset\\\" | \\\"none\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"How the bottom border should be displayed on all items.\"\n                },\n                \"attribute\": \"lines\",\n                \"reflect\": false\n            },\n            \"inset\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the list will have margin around it and rounded corners.\"\n                },\n                \"attribute\": \"inset\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n    static get methods() {\n        return {\n            \"closeSlidingItems\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<boolean>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"If `ion-item-sliding` are used inside the list, this method closes\\nany open sliding item.\\n\\nReturns `true` if an actual `ion-item-sliding` is closed.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the list header\n   * @prop --color: Color of the list header text\n   *\n   * @prop --border-color: Color of the list header border\n   * @prop --border-width: Width of the list header border\n   * @prop --border-style: Style of the list header border\n   *\n   * @prop --inner-border-width: Width of the inner list header border\n   */\n  --border-style: solid;\n  --border-width: 0;\n  --inner-border-width: 0;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  min-height: 40px;\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  background: var(--background);\n  color: var(--color);\n  overflow: hidden;\n}\n\n:host(.ion-color) {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n.list-header-inner {\n  display: flex;\n  position: relative;\n  flex: 1;\n  flex-direction: inherit;\n  align-items: inherit;\n  align-self: stretch;\n  min-height: inherit;\n  border-width: var(--inner-border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  overflow: inherit;\n  box-sizing: border-box;\n}\n\n::slotted(ion-label) {\n  flex: 1 1 auto;\n}\n\n:host(.list-header-lines-inset),\n:host(.list-header-lines-none) {\n  --border-width: 0;\n}\n\n:host(.list-header-lines-full),\n:host(.list-header-lines-none) {\n  --inner-border-width: 0;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: transparent;\n  --color: var(--ion-color-step-850, var(--ion-text-color-step-150, #262626));\n  --border-color: var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, var(--ion-background-color-step-250, #c8c7cc))));\n  /* stylelint-disable */\n  padding-right: var(--ion-safe-area-right);\n  padding-left: calc(var(--ion-safe-area-left, 0px) + 16px);\n  /* stylelint-enable */\n  position: relative;\n  align-items: flex-end;\n  font-size: min(1.375rem, 56.1px);\n  font-weight: 700;\n  letter-spacing: 0;\n}\n:host-context([dir=rtl]) {\n  padding-right: calc(var(--ion-safe-area-right, 0px) + 16px);\n  padding-left: var(--ion-safe-area-left);\n}\n\n@supports selector(:dir(rtl)) {\n  :host(:dir(rtl)) {\n    padding-right: calc(var(--ion-safe-area-right, 0px) + 16px);\n    padding-left: var(--ion-safe-area-left);\n  }\n}\n\n::slotted(ion-button),\n::slotted(ion-label) {\n  margin-top: 29px;\n  margin-bottom: 6px;\n}\n\n::slotted(ion-button) {\n  --padding-top: 0;\n  --padding-bottom: 0;\n  -webkit-margin-start: 3px;\n  margin-inline-start: 3px;\n  -webkit-margin-end: 3px;\n  margin-inline-end: 3px;\n  min-height: 1.4em;\n}\n\n:host(.list-header-lines-full) {\n  --border-width: 0 0 0.55px 0;\n}\n\n:host(.list-header-lines-inset) {\n  --inner-border-width: 0 0 0.55px 0;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the list header\n   * @prop --color: Color of the list header text\n   *\n   * @prop --border-color: Color of the list header border\n   * @prop --border-width: Width of the list header border\n   * @prop --border-style: Style of the list header border\n   *\n   * @prop --inner-border-width: Width of the inner list header border\n   */\n  --border-style: solid;\n  --border-width: 0;\n  --inner-border-width: 0;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  min-height: 40px;\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  background: var(--background);\n  color: var(--color);\n  overflow: hidden;\n}\n\n:host(.ion-color) {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n.list-header-inner {\n  display: flex;\n  position: relative;\n  flex: 1;\n  flex-direction: inherit;\n  align-items: inherit;\n  align-self: stretch;\n  min-height: inherit;\n  border-width: var(--inner-border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  overflow: inherit;\n  box-sizing: border-box;\n}\n\n::slotted(ion-label) {\n  flex: 1 1 auto;\n}\n\n:host(.list-header-lines-inset),\n:host(.list-header-lines-none) {\n  --border-width: 0;\n}\n\n:host(.list-header-lines-full),\n:host(.list-header-lines-none) {\n  --inner-border-width: 0;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: transparent;\n  --color: var(--ion-text-color, #000);\n  --border-color: var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, var(--ion-background-color-step-150, rgba(0, 0, 0, 0.13)))));\n  /* stylelint-disable */\n  padding-right: var(--ion-safe-area-right);\n  padding-left: calc(var(--ion-safe-area-left, 0px) + 16px);\n  /* stylelint-enable */\n  min-height: 45px;\n  font-size: 0.875rem;\n}\n:host-context([dir=rtl]) {\n  padding-right: calc(var(--ion-safe-area-right, 0px) + 16px);\n  padding-left: var(--ion-safe-area-left);\n}\n\n@supports selector(:dir(rtl)) {\n  :host(:dir(rtl)) {\n    padding-right: calc(var(--ion-safe-area-right, 0px) + 16px);\n    padding-left: var(--ion-safe-area-left);\n  }\n}\n\n:host(.list-header-lines-full) {\n  --border-width: 0 0 1px 0;\n}\n\n:host(.list-header-lines-inset) {\n  --inner-border-width: 0 0 1px 0;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { createColorClasses } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class ListHeader {\n    constructor() {\n        this.color = undefined;\n        this.lines = undefined;\n    }\n    render() {\n        const { lines } = this;\n        const mode = getIonMode(this);\n        return (h(Host, { key: '7e2e050f13722f2b870a2415d99a9e631e9ca267', class: createColorClasses(this.color, {\n                [mode]: true,\n                [`list-header-lines-${lines}`]: lines !== undefined,\n            }) }, h(\"div\", { key: '6117bebc45800d874e9b75355476fbced5cc8398', class: \"list-header-inner\" }, h(\"slot\", { key: '9165fb274cd2c45a5a65c271d8b1f30e8a00c890' }))));\n    }\n    static get is() { return \"ion-list-header\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"list-header.ios.scss\"],\n            \"md\": [\"list-header.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"list-header.ios.css\"],\n            \"md\": [\"list-header.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"lines\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'full' | 'inset' | 'none'\",\n                    \"resolved\": \"\\\"full\\\" | \\\"inset\\\" | \\\"none\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"How the bottom border should be displayed on the list header.\"\n                },\n                \"attribute\": \"lines\",\n                \"reflect\": false\n            }\n        };\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the menu\n   *\n   * @prop --min-width: Minimum width of the menu\n   * @prop --width: Width of the menu\n   * @prop --max-width: Maximum width of the menu\n   *\n   * @prop --min-height: Minimum height of the menu\n   * @prop --height: Height of the menu\n   * @prop --max-height: Maximum height of the menu\n   */\n  --width: 304px;\n  --min-width: auto;\n  --max-width: auto;\n  --height: 100%;\n  --min-height: auto;\n  --max-height: auto;\n  --background: var(--ion-background-color, #fff);\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: none;\n  position: absolute;\n  contain: strict;\n}\n\n:host(.show-menu) {\n  display: block;\n}\n\n.menu-inner {\n  transform: translateX(-9999px);\n  display: flex;\n  position: absolute;\n  flex-direction: column;\n  justify-content: space-between;\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  background: var(--background);\n  contain: strict;\n}\n\n:host(.menu-side-start) .menu-inner {\n  /**\n    * Menu does not cover the whole screen so we need to set the safe area for the\n    * side that touches the screen edge only. Since safe area is not logical, it\n    * needs to be applied to the correct side depending on the language direction.\n    * Otherwise, the content will have less space on both sides.\n    *\n    * LTR:\n    * The left side of the menu touches the screen edge. The safe area padding has\n    * already been set in the core styles, so there's no need to set it again.\n    * The right side of the menu is not touching the screen edge. Padding is not\n    * applied to the right side of the menu. A value of 0 is set.\n    */\n  --ion-safe-area-right: 0px;\n  top: 0;\n  bottom: 0;\n}\n:host(.menu-side-start) .menu-inner {\n  inset-inline-start: 0;\n  inset-inline-end: auto;\n}\n\n:host-context([dir=rtl]):host(.menu-side-start) .menu-inner, :host-context([dir=rtl]).menu-side-start .menu-inner {\n  /**\n    * Menu does not cover the whole screen so we need to set the safe area for the\n    * side that touches the screen edge only. Since safe area is not logical, it\n    * needs to be applied to the correct side depending on the language direction.\n    * Otherwise, the content will have less space on both sides.\n    *\n    * RTL:\n    * The right side of the menu touches the screen edge.\n    * The right side needs to revert back to the default value that was set in the core styles, so we unset it here.\n    * This would keep the variable consistent with the core styles.\n    * Additionally, it would continue to allow users to override the variable if they choose to.\n    * The left side of the menu is not touching the screen edge. Padding is not\n    * applied to the left side of the menu. A value of 0 is set.\n    */\n  --ion-safe-area-right: unset;\n  --ion-safe-area-left: 0px;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.menu-side-start:dir(rtl)) .menu-inner {\n    /**\n      * Menu does not cover the whole screen so we need to set the safe area for the\n      * side that touches the screen edge only. Since safe area is not logical, it\n      * needs to be applied to the correct side depending on the language direction.\n      * Otherwise, the content will have less space on both sides.\n      *\n      * RTL:\n      * The right side of the menu touches the screen edge.\n      * The right side needs to revert back to the default value that was set in the core styles, so we unset it here.\n      * This would keep the variable consistent with the core styles.\n      * Additionally, it would continue to allow users to override the variable if they choose to.\n      * The left side of the menu is not touching the screen edge. Padding is not\n      * applied to the left side of the menu. A value of 0 is set.\n      */\n    --ion-safe-area-right: unset;\n    --ion-safe-area-left: 0px;\n  }\n}\n\n:host(.menu-side-end) .menu-inner {\n  /**\n    * Menu does not cover the whole screen so we need to set the safe area for the\n    * side that touches the screen edge only. Since safe area is not logical, it\n    * needs to be applied to the correct side depending on the language direction.\n    * Otherwise, the content will have less space on both sides.\n    *\n    * LTR:\n    * The right side of the menu touches the screen edge. The safe area padding has\n    * already been set in the core styles, so there's no need to set it again.\n    * The left side of the menu is not touching the screen edge. Padding is not\n    * applied to the left side of the menu. A value of 0 is set.\n    */\n  --ion-safe-area-left: 0px;\n  top: 0;\n  bottom: 0;\n}\n:host(.menu-side-end) .menu-inner {\n  inset-inline-start: auto;\n  inset-inline-end: 0;\n}\n\n:host-context([dir=rtl]):host(.menu-side-end) .menu-inner, :host-context([dir=rtl]).menu-side-end .menu-inner {\n  /**\n    * Menu does not cover the whole screen so we need to set the safe area for the\n    * side that touches the screen edge only. Since safe area is not logical, it\n    * needs to be applied to the correct side depending on the language direction.\n    * Otherwise, the content will have less space on both sides.\n    *\n    * RTL:\n    * The left side of the menu touches the screen edge.\n    * The left side needs to revert back to the default value that was set in the core styles, so we unset it here.\n    * This would keep the variable consistent with the core styles.\n    * Additionally, it would continue to allow users to override the variable if they choose to.\n    * The right side of the menu is not touching the screen edge. Padding is not\n    * applied to the right side of the menu. A value of 0 is set.\n    */\n  --ion-safe-area-left: unset;\n  --ion-safe-area-right: 0px;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.menu-side-end:dir(rtl)) .menu-inner {\n    /**\n      * Menu does not cover the whole screen so we need to set the safe area for the\n      * side that touches the screen edge only. Since safe area is not logical, it\n      * needs to be applied to the correct side depending on the language direction.\n      * Otherwise, the content will have less space on both sides.\n      *\n      * RTL:\n      * The left side of the menu touches the screen edge.\n      * The left side needs to revert back to the default value that was set in the core styles, so we unset it here.\n      * This would keep the variable consistent with the core styles.\n      * Additionally, it would continue to allow users to override the variable if they choose to.\n      * The right side of the menu is not touching the screen edge. Padding is not\n      * applied to the right side of the menu. A value of 0 is set.\n      */\n    --ion-safe-area-left: unset;\n    --ion-safe-area-right: 0px;\n  }\n}\n\nion-backdrop {\n  display: none;\n  opacity: 0.01;\n  z-index: -1;\n}\n\n@media (max-width: 340px) {\n  .menu-inner {\n    --width: 264px;\n  }\n}\n:host(.menu-type-reveal) {\n  z-index: 0;\n}\n\n:host(.menu-type-reveal.show-menu) .menu-inner {\n  transform: translate3d(0,  0,  0);\n}\n\n:host(.menu-type-overlay) {\n  z-index: 1000;\n}\n\n:host(.menu-type-overlay) .show-backdrop {\n  display: block;\n  cursor: pointer;\n}\n\n/**\n * The split pane styles for menu are defined\n * in the menu stylesheets instead in the split pane\n * stylesheets with ::slotted to allow for menus\n * to be wrapped in custom components.\n * If we used ::slotted to target the menu\n * then menus wrapped in components would never\n * receive these styles because they are not\n * children of the split pane.\n */\n/**\n * Do not pass CSS Variables down on larger\n * screens as we want them to affect the outer\n * `ion-menu` rather than the inner content\n */\n:host(.menu-pane-visible) {\n  flex: 0 1 auto;\n  width: var(--side-width, var(--width));\n  min-width: var(--side-min-width, var(--min-width));\n  max-width: var(--side-max-width, var(--max-width));\n}\n\n:host(.menu-pane-visible.split-pane-side) {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: relative;\n  box-shadow: none;\n  z-index: 0;\n}\n\n:host(.menu-pane-visible.split-pane-side.menu-enabled) {\n  display: flex;\n  flex-shrink: 0;\n}\n\n:host(.menu-pane-visible.split-pane-side) {\n  order: -1;\n}\n\n:host(.menu-pane-visible.split-pane-side[side=end]) {\n  order: 1;\n}\n\n:host(.menu-pane-visible) .menu-inner {\n  left: 0;\n  right: 0;\n  width: auto;\n  transform: none;\n  box-shadow: none;\n}\n\n:host(.menu-pane-visible) ion-backdrop {\n  /* stylelint-disable-next-line declaration-no-important */\n  display: hidden !important;\n}\n\n:host(.menu-pane-visible.split-pane-side) {\n  -webkit-border-start: 0;\n  border-inline-start: 0;\n  -webkit-border-end: var(--border);\n  border-inline-end: var(--border);\n  border-top: 0;\n  border-bottom: 0;\n  min-width: var(--side-min-width);\n  max-width: var(--side-max-width);\n}\n\n:host(.menu-pane-visible.split-pane-side[side=end]) {\n  -webkit-border-start: var(--border);\n  border-inline-start: var(--border);\n  -webkit-border-end: 0;\n  border-inline-end: 0;\n  border-top: 0;\n  border-bottom: 0;\n  min-width: var(--side-min-width);\n  max-width: var(--side-max-width);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host(.menu-type-push) {\n  z-index: 1000;\n}\n\n:host(.menu-type-push) .show-backdrop {\n  display: block;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the menu\n   *\n   * @prop --min-width: Minimum width of the menu\n   * @prop --width: Width of the menu\n   * @prop --max-width: Maximum width of the menu\n   *\n   * @prop --min-height: Minimum height of the menu\n   * @prop --height: Height of the menu\n   * @prop --max-height: Maximum height of the menu\n   */\n  --width: 304px;\n  --min-width: auto;\n  --max-width: auto;\n  --height: 100%;\n  --min-height: auto;\n  --max-height: auto;\n  --background: var(--ion-background-color, #fff);\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: none;\n  position: absolute;\n  contain: strict;\n}\n\n:host(.show-menu) {\n  display: block;\n}\n\n.menu-inner {\n  transform: translateX(-9999px);\n  display: flex;\n  position: absolute;\n  flex-direction: column;\n  justify-content: space-between;\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  background: var(--background);\n  contain: strict;\n}\n\n:host(.menu-side-start) .menu-inner {\n  /**\n    * Menu does not cover the whole screen so we need to set the safe area for the\n    * side that touches the screen edge only. Since safe area is not logical, it\n    * needs to be applied to the correct side depending on the language direction.\n    * Otherwise, the content will have less space on both sides.\n    *\n    * LTR:\n    * The left side of the menu touches the screen edge. The safe area padding has\n    * already been set in the core styles, so there's no need to set it again.\n    * The right side of the menu is not touching the screen edge. Padding is not\n    * applied to the right side of the menu. A value of 0 is set.\n    */\n  --ion-safe-area-right: 0px;\n  top: 0;\n  bottom: 0;\n}\n:host(.menu-side-start) .menu-inner {\n  inset-inline-start: 0;\n  inset-inline-end: auto;\n}\n\n:host-context([dir=rtl]):host(.menu-side-start) .menu-inner, :host-context([dir=rtl]).menu-side-start .menu-inner {\n  /**\n    * Menu does not cover the whole screen so we need to set the safe area for the\n    * side that touches the screen edge only. Since safe area is not logical, it\n    * needs to be applied to the correct side depending on the language direction.\n    * Otherwise, the content will have less space on both sides.\n    *\n    * RTL:\n    * The right side of the menu touches the screen edge.\n    * The right side needs to revert back to the default value that was set in the core styles, so we unset it here.\n    * This would keep the variable consistent with the core styles.\n    * Additionally, it would continue to allow users to override the variable if they choose to.\n    * The left side of the menu is not touching the screen edge. Padding is not\n    * applied to the left side of the menu. A value of 0 is set.\n    */\n  --ion-safe-area-right: unset;\n  --ion-safe-area-left: 0px;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.menu-side-start:dir(rtl)) .menu-inner {\n    /**\n      * Menu does not cover the whole screen so we need to set the safe area for the\n      * side that touches the screen edge only. Since safe area is not logical, it\n      * needs to be applied to the correct side depending on the language direction.\n      * Otherwise, the content will have less space on both sides.\n      *\n      * RTL:\n      * The right side of the menu touches the screen edge.\n      * The right side needs to revert back to the default value that was set in the core styles, so we unset it here.\n      * This would keep the variable consistent with the core styles.\n      * Additionally, it would continue to allow users to override the variable if they choose to.\n      * The left side of the menu is not touching the screen edge. Padding is not\n      * applied to the left side of the menu. A value of 0 is set.\n      */\n    --ion-safe-area-right: unset;\n    --ion-safe-area-left: 0px;\n  }\n}\n\n:host(.menu-side-end) .menu-inner {\n  /**\n    * Menu does not cover the whole screen so we need to set the safe area for the\n    * side that touches the screen edge only. Since safe area is not logical, it\n    * needs to be applied to the correct side depending on the language direction.\n    * Otherwise, the content will have less space on both sides.\n    *\n    * LTR:\n    * The right side of the menu touches the screen edge. The safe area padding has\n    * already been set in the core styles, so there's no need to set it again.\n    * The left side of the menu is not touching the screen edge. Padding is not\n    * applied to the left side of the menu. A value of 0 is set.\n    */\n  --ion-safe-area-left: 0px;\n  top: 0;\n  bottom: 0;\n}\n:host(.menu-side-end) .menu-inner {\n  inset-inline-start: auto;\n  inset-inline-end: 0;\n}\n\n:host-context([dir=rtl]):host(.menu-side-end) .menu-inner, :host-context([dir=rtl]).menu-side-end .menu-inner {\n  /**\n    * Menu does not cover the whole screen so we need to set the safe area for the\n    * side that touches the screen edge only. Since safe area is not logical, it\n    * needs to be applied to the correct side depending on the language direction.\n    * Otherwise, the content will have less space on both sides.\n    *\n    * RTL:\n    * The left side of the menu touches the screen edge.\n    * The left side needs to revert back to the default value that was set in the core styles, so we unset it here.\n    * This would keep the variable consistent with the core styles.\n    * Additionally, it would continue to allow users to override the variable if they choose to.\n    * The right side of the menu is not touching the screen edge. Padding is not\n    * applied to the right side of the menu. A value of 0 is set.\n    */\n  --ion-safe-area-left: unset;\n  --ion-safe-area-right: 0px;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.menu-side-end:dir(rtl)) .menu-inner {\n    /**\n      * Menu does not cover the whole screen so we need to set the safe area for the\n      * side that touches the screen edge only. Since safe area is not logical, it\n      * needs to be applied to the correct side depending on the language direction.\n      * Otherwise, the content will have less space on both sides.\n      *\n      * RTL:\n      * The left side of the menu touches the screen edge.\n      * The left side needs to revert back to the default value that was set in the core styles, so we unset it here.\n      * This would keep the variable consistent with the core styles.\n      * Additionally, it would continue to allow users to override the variable if they choose to.\n      * The right side of the menu is not touching the screen edge. Padding is not\n      * applied to the right side of the menu. A value of 0 is set.\n      */\n    --ion-safe-area-left: unset;\n    --ion-safe-area-right: 0px;\n  }\n}\n\nion-backdrop {\n  display: none;\n  opacity: 0.01;\n  z-index: -1;\n}\n\n@media (max-width: 340px) {\n  .menu-inner {\n    --width: 264px;\n  }\n}\n:host(.menu-type-reveal) {\n  z-index: 0;\n}\n\n:host(.menu-type-reveal.show-menu) .menu-inner {\n  transform: translate3d(0,  0,  0);\n}\n\n:host(.menu-type-overlay) {\n  z-index: 1000;\n}\n\n:host(.menu-type-overlay) .show-backdrop {\n  display: block;\n  cursor: pointer;\n}\n\n/**\n * The split pane styles for menu are defined\n * in the menu stylesheets instead in the split pane\n * stylesheets with ::slotted to allow for menus\n * to be wrapped in custom components.\n * If we used ::slotted to target the menu\n * then menus wrapped in components would never\n * receive these styles because they are not\n * children of the split pane.\n */\n/**\n * Do not pass CSS Variables down on larger\n * screens as we want them to affect the outer\n * `ion-menu` rather than the inner content\n */\n:host(.menu-pane-visible) {\n  flex: 0 1 auto;\n  width: var(--side-width, var(--width));\n  min-width: var(--side-min-width, var(--min-width));\n  max-width: var(--side-max-width, var(--max-width));\n}\n\n:host(.menu-pane-visible.split-pane-side) {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: relative;\n  box-shadow: none;\n  z-index: 0;\n}\n\n:host(.menu-pane-visible.split-pane-side.menu-enabled) {\n  display: flex;\n  flex-shrink: 0;\n}\n\n:host(.menu-pane-visible.split-pane-side) {\n  order: -1;\n}\n\n:host(.menu-pane-visible.split-pane-side[side=end]) {\n  order: 1;\n}\n\n:host(.menu-pane-visible) .menu-inner {\n  left: 0;\n  right: 0;\n  width: auto;\n  transform: none;\n  box-shadow: none;\n}\n\n:host(.menu-pane-visible) ion-backdrop {\n  /* stylelint-disable-next-line declaration-no-important */\n  display: hidden !important;\n}\n\n:host(.menu-pane-visible.split-pane-side) {\n  -webkit-border-start: 0;\n  border-inline-start: 0;\n  -webkit-border-end: var(--border);\n  border-inline-end: var(--border);\n  border-top: 0;\n  border-bottom: 0;\n  min-width: var(--side-min-width);\n  max-width: var(--side-max-width);\n}\n\n:host(.menu-pane-visible.split-pane-side[side=end]) {\n  -webkit-border-start: var(--border);\n  border-inline-start: var(--border);\n  -webkit-border-end: 0;\n  border-inline-end: 0;\n  border-top: 0;\n  border-bottom: 0;\n  min-width: var(--side-min-width);\n  max-width: var(--side-max-width);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host(.menu-type-overlay) .menu-inner {\n  box-shadow: 4px 0px 16px rgba(0, 0, 0, 0.18);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Build, Host, h } from \"@stencil/core\";\nimport { getTimeGivenProgression } from \"../../utils/animation/cubic-bezier\";\nimport { focusFirstDescendant, focusLastDescendant } from \"../../utils/focus-trap\";\nimport { GESTURE_CONTROLLER } from \"../../utils/gesture/index\";\nimport { shouldUseCloseWatcher } from \"../../utils/hardware-back-button\";\nimport { inheritAriaAttributes, assert, clamp, isEndSide as isEnd } from \"../../utils/helpers\";\nimport { menuController } from \"../../utils/menu-controller/index\";\nimport { getPresentedOverlay } from \"../../utils/overlays\";\nimport { hostContext } from \"../../utils/theme\";\nimport { config } from \"../../global/config\";\nimport { getIonMode } from \"../../global/ionic-global\";\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\n/**\n * @part container - The container for the menu content.\n * @part backdrop - The backdrop that appears over the main content when the menu is open.\n */\nexport class Menu {\n    constructor() {\n        this.lastOnEnd = 0;\n        this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\n        this.didLoad = false;\n        /**\n         * Flag used to determine if an open/close\n         * operation was cancelled. For example, if\n         * an app calls \"menu.open\" then disables the menu\n         * part way through the animation, then this would\n         * be considered a cancelled operation.\n         */\n        this.operationCancelled = false;\n        this.isAnimating = false;\n        this._isOpen = false;\n        this.inheritedAttributes = {};\n        this.handleFocus = (ev) => {\n            /**\n             * Overlays have their own focus trapping listener\n             * so we do not want the two listeners to conflict\n             * with each other. If the top-most overlay that is\n             * open does not contain this ion-menu, then ion-menu's\n             * focus trapping should not run.\n             */\n            const lastOverlay = getPresentedOverlay(document);\n            if (lastOverlay && !lastOverlay.contains(this.el)) {\n                return;\n            }\n            this.trapKeyboardFocus(ev, document);\n        };\n        this.isPaneVisible = false;\n        this.isEndSide = false;\n        this.contentId = undefined;\n        this.menuId = undefined;\n        this.type = undefined;\n        this.disabled = false;\n        this.side = 'start';\n        this.swipeGesture = true;\n        this.maxEdgeStart = 50;\n    }\n    typeChanged(type, oldType) {\n        const contentEl = this.contentEl;\n        if (contentEl) {\n            if (oldType !== undefined) {\n                contentEl.classList.remove(`menu-content-${oldType}`);\n            }\n            contentEl.classList.add(`menu-content-${type}`);\n            contentEl.removeAttribute('style');\n        }\n        if (this.menuInnerEl) {\n            // Remove effects of previous animations\n            this.menuInnerEl.removeAttribute('style');\n        }\n        this.animation = undefined;\n    }\n    disabledChanged() {\n        this.updateState();\n        this.ionMenuChange.emit({\n            disabled: this.disabled,\n            open: this._isOpen,\n        });\n    }\n    sideChanged() {\n        this.isEndSide = isEnd(this.side);\n        /**\n         * Menu direction animation is calculated based on the document direction.\n         * If the document direction changes, we need to create a new animation.\n         */\n        this.animation = undefined;\n    }\n    swipeGestureChanged() {\n        this.updateState();\n    }\n    async connectedCallback() {\n        // TODO: connectedCallback is fired in CE build\n        // before WC is defined. This needs to be fixed in Stencil.\n        if (typeof customElements !== 'undefined' && customElements != null) {\n            await customElements.whenDefined('ion-menu');\n        }\n        if (this.type === undefined) {\n            this.type = config.get('menuType', 'overlay');\n        }\n        if (!Build.isBrowser) {\n            return;\n        }\n        const content = this.contentId !== undefined ? document.getElementById(this.contentId) : null;\n        if (content === null) {\n            console.error('Menu: must have a \"content\" element to listen for drag events on.');\n            return;\n        }\n        if (this.el.contains(content)) {\n            console.error(`Menu: \"contentId\" should refer to the main view's ion-content, not the ion-content inside of the ion-menu.`);\n        }\n        this.contentEl = content;\n        // add menu's content classes\n        content.classList.add('menu-content');\n        this.typeChanged(this.type, undefined);\n        this.sideChanged();\n        // register this menu with the app's menu controller\n        menuController._register(this);\n        this.menuChanged();\n        this.gesture = (await import('../../utils/gesture')).createGesture({\n            el: document,\n            gestureName: 'menu-swipe',\n            gesturePriority: 30,\n            threshold: 10,\n            blurOnStart: true,\n            canStart: (ev) => this.canStart(ev),\n            onWillStart: () => this.onWillStart(),\n            onStart: () => this.onStart(),\n            onMove: (ev) => this.onMove(ev),\n            onEnd: (ev) => this.onEnd(ev),\n        });\n        this.updateState();\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAriaAttributes(this.el);\n    }\n    async componentDidLoad() {\n        this.didLoad = true;\n        /**\n         * A menu inside of a split pane is assumed\n         * to be a side pane.\n         *\n         * When the menu is loaded it needs to\n         * see if it should be considered visible inside\n         * of the split pane. If the split pane is\n         * hidden then the menu should be too.\n         */\n        const splitPane = this.el.closest('ion-split-pane');\n        if (splitPane !== null) {\n            this.isPaneVisible = await splitPane.isVisible();\n        }\n        this.menuChanged();\n        this.updateState();\n    }\n    menuChanged() {\n        /**\n         * Inform dependent components such as ion-menu-button\n         * that the menu is ready. Note that we only want to do this\n         * once the menu has been rendered which is why we check for didLoad.\n         */\n        if (this.didLoad) {\n            this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\n        }\n    }\n    async disconnectedCallback() {\n        /**\n         * The menu should be closed when it is\n         * unmounted from the DOM.\n         * This is an async call, so we need to wait for\n         * this to finish otherwise contentEl\n         * will not have MENU_CONTENT_OPEN removed.\n         */\n        await this.close(false);\n        this.blocker.destroy();\n        menuController._unregister(this);\n        if (this.animation) {\n            this.animation.destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        this.animation = undefined;\n        this.contentEl = undefined;\n    }\n    onSplitPaneChanged(ev) {\n        const closestSplitPane = this.el.closest('ion-split-pane');\n        if (closestSplitPane !== null && closestSplitPane === ev.target) {\n            this.isPaneVisible = ev.detail.visible;\n            this.updateState();\n        }\n    }\n    onBackdropClick(ev) {\n        // TODO(FW-2832): type (CustomEvent triggers errors which should be sorted)\n        if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n            const shouldClose = ev.composedPath ? !ev.composedPath().includes(this.menuInnerEl) : false;\n            if (shouldClose) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                this.close();\n            }\n        }\n    }\n    onKeydown(ev) {\n        if (ev.key === 'Escape') {\n            this.close();\n        }\n    }\n    /**\n     * Returns `true` is the menu is open.\n     */\n    isOpen() {\n        return Promise.resolve(this._isOpen);\n    }\n    /**\n     * Returns `true` is the menu is active.\n     *\n     * A menu is active when it can be opened or closed, meaning it's enabled\n     * and it's not part of a `ion-split-pane`.\n     */\n    isActive() {\n        return Promise.resolve(this._isActive());\n    }\n    /**\n     * Opens the menu. If the menu is already open or it can't be opened,\n     * it returns `false`.\n     */\n    open(animated = true) {\n        return this.setOpen(true, animated);\n    }\n    /**\n     * Closes the menu. If the menu is already closed or it can't be closed,\n     * it returns `false`.\n     */\n    close(animated = true) {\n        return this.setOpen(false, animated);\n    }\n    /**\n     * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    toggle(animated = true) {\n        return this.setOpen(!this._isOpen, animated);\n    }\n    /**\n     * Opens or closes the button.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    setOpen(shouldOpen, animated = true) {\n        return menuController._setOpen(this, shouldOpen, animated);\n    }\n    trapKeyboardFocus(ev, doc) {\n        const target = ev.target;\n        if (!target) {\n            return;\n        }\n        /**\n         * If the target is inside the menu contents, let the browser\n         * focus as normal and keep a log of the last focused element.\n         */\n        if (this.el.contains(target)) {\n            this.lastFocus = target;\n        }\n        else {\n            /**\n             * Otherwise, we are about to have focus go out of the menu.\n             * Wrap the focus to either the first or last element.\n             */\n            const { el } = this;\n            /**\n             * Once we call `focusFirstDescendant`, another focus event\n             * will fire, which will cause `lastFocus` to be updated\n             * before we can run the code after that. We cache the value\n             * here to avoid that.\n             */\n            focusFirstDescendant(el);\n            /**\n             * If the cached last focused element is the same as the now-\n             * active element, that means the user was on the first element\n             * already and pressed Shift + Tab, so we need to wrap to the\n             * last descendant.\n             */\n            if (this.lastFocus === doc.activeElement) {\n                focusLastDescendant(el);\n            }\n        }\n    }\n    async _setOpen(shouldOpen, animated = true) {\n        // If the menu is disabled or it is currently being animated, let's do nothing\n        if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n            return false;\n        }\n        this.beforeAnimation(shouldOpen);\n        await this.loadAnimation();\n        await this.startAnimation(shouldOpen, animated);\n        /**\n         * If the animation was cancelled then\n         * return false because the operation\n         * did not succeed.\n         */\n        if (this.operationCancelled) {\n            this.operationCancelled = false;\n            return false;\n        }\n        this.afterAnimation(shouldOpen);\n        return true;\n    }\n    async loadAnimation() {\n        // Menu swipe animation takes the menu's inner width as parameter,\n        // If `offsetWidth` changes, we need to create a new animation.\n        const width = this.menuInnerEl.offsetWidth;\n        /**\n         * Menu direction animation is calculated based on the document direction.\n         * If the document direction changes, we need to create a new animation.\n         */\n        const isEndSide = isEnd(this.side);\n        if (width === this.width && this.animation !== undefined && isEndSide === this.isEndSide) {\n            return;\n        }\n        this.width = width;\n        this.isEndSide = isEndSide;\n        // Destroy existing animation\n        if (this.animation) {\n            this.animation.destroy();\n            this.animation = undefined;\n        }\n        // Create new animation\n        const animation = (this.animation = await menuController._createAnimation(this.type, this));\n        if (!config.getBoolean('animated', true)) {\n            animation.duration(0);\n        }\n        animation.fill('both');\n    }\n    async startAnimation(shouldOpen, animated) {\n        const isReversed = !shouldOpen;\n        const mode = getIonMode(this);\n        const easing = mode === 'ios' ? iosEasing : mdEasing;\n        const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\n        const ani = this.animation\n            .direction(isReversed ? 'reverse' : 'normal')\n            .easing(isReversed ? easingReverse : easing);\n        if (animated) {\n            await ani.play();\n        }\n        else {\n            ani.play({ sync: true });\n        }\n        /**\n         * We run this after the play invocation\n         * instead of using ani.onFinish so that\n         * multiple onFinish callbacks do not get\n         * run if an animation is played, stopped,\n         * and then played again.\n         */\n        if (ani.getDirection() === 'reverse') {\n            ani.direction('normal');\n        }\n    }\n    _isActive() {\n        return !this.disabled && !this.isPaneVisible;\n    }\n    canSwipe() {\n        return this.swipeGesture && !this.isAnimating && this._isActive();\n    }\n    canStart(detail) {\n        // Do not allow swipe gesture if a modal is open\n        const isModalPresented = !!document.querySelector('ion-modal.show-modal');\n        if (isModalPresented || !this.canSwipe()) {\n            return false;\n        }\n        if (this._isOpen) {\n            return true;\n        }\n        else if (menuController._getOpenSync()) {\n            return false;\n        }\n        return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n    }\n    onWillStart() {\n        this.beforeAnimation(!this._isOpen);\n        return this.loadAnimation();\n    }\n    onStart() {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        // the cloned animation should not use an easing curve during seek\n        this.animation.progressStart(true, this._isOpen ? 1 : 0);\n    }\n    onMove(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n        const stepValue = delta / this.width;\n        this.animation.progressStep(this._isOpen ? 1 - stepValue : stepValue);\n    }\n    onEnd(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const isOpen = this._isOpen;\n        const isEndSide = this.isEndSide;\n        const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n        const width = this.width;\n        const stepValue = delta / width;\n        const velocity = detail.velocityX;\n        const z = width / 2.0;\n        const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n        const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n        const shouldComplete = isOpen\n            ? isEndSide\n                ? shouldCompleteRight\n                : shouldCompleteLeft\n            : isEndSide\n                ? shouldCompleteLeft\n                : shouldCompleteRight;\n        let shouldOpen = !isOpen && shouldComplete;\n        if (isOpen && !shouldComplete) {\n            shouldOpen = true;\n        }\n        this.lastOnEnd = detail.currentTime;\n        // Account for rounding errors in JS\n        let newStepValue = shouldComplete ? 0.001 : -0.001;\n        /**\n         * stepValue can sometimes return a negative\n         * value, but you can't have a negative time value\n         * for the cubic bezier curve (at least with web animations)\n         */\n        const adjustedStepValue = stepValue < 0 ? 0.01 : stepValue;\n        /**\n         * Animation will be reversed here, so need to\n         * reverse the easing curve as well\n         *\n         * Additionally, we need to account for the time relative\n         * to the new easing curve, as `stepValue` is going to be given\n         * in terms of a linear curve.\n         */\n        newStepValue +=\n            getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\n        const playTo = this._isOpen ? !shouldComplete : shouldComplete;\n        this.animation\n            .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\n            .onFinish(() => this.afterAnimation(shouldOpen), { oneTimeCallback: true })\n            .progressEnd(playTo ? 1 : 0, this._isOpen ? 1 - newStepValue : newStepValue, 300);\n    }\n    beforeAnimation(shouldOpen) {\n        assert(!this.isAnimating, '_before() should not be called while animating');\n        // this places the menu into the correct location before it animates in\n        // this css class doesn't actually kick off any animations\n        this.el.classList.add(SHOW_MENU);\n        /**\n         * We add a tabindex here so that focus trapping\n         * still works even if the menu does not have\n         * any focusable elements slotted inside. The\n         * focus trapping utility will fallback to focusing\n         * the menu so focus does not leave when the menu\n         * is open.\n         */\n        this.el.setAttribute('tabindex', '0');\n        if (this.backdropEl) {\n            this.backdropEl.classList.add(SHOW_BACKDROP);\n        }\n        // add css class and hide content behind menu from screen readers\n        if (this.contentEl) {\n            this.contentEl.classList.add(MENU_CONTENT_OPEN);\n            /**\n             * When the menu is open and overlaying the main\n             * content, the main content should not be announced\n             * by the screenreader as the menu is the main\n             * focus. This is useful with screenreaders that have\n             * \"read from top\" gestures that read the entire\n             * page from top to bottom when activated.\n             * This should be done before the animation starts\n             * so that users cannot accidentally scroll\n             * the content while dragging a menu open.\n             */\n            this.contentEl.setAttribute('aria-hidden', 'true');\n        }\n        this.blocker.block();\n        this.isAnimating = true;\n        if (shouldOpen) {\n            this.ionWillOpen.emit();\n        }\n        else {\n            this.ionWillClose.emit();\n        }\n    }\n    afterAnimation(isOpen) {\n        var _a;\n        // keep opening/closing the menu disabled for a touch more yet\n        // only add listeners/css if it's enabled and isOpen\n        // and only remove listeners/css if it's not open\n        // emit opened/closed events\n        this._isOpen = isOpen;\n        this.isAnimating = false;\n        if (!this._isOpen) {\n            this.blocker.unblock();\n        }\n        if (isOpen) {\n            // emit open event\n            this.ionDidOpen.emit();\n            /**\n             * Move focus to the menu to prepare focus trapping, as long as\n             * it isn't already focused. Use the host element instead of the\n             * first descendant to avoid the scroll position jumping around.\n             */\n            const focusedMenu = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.closest('ion-menu');\n            if (focusedMenu !== this.el) {\n                this.el.focus();\n            }\n            // start focus trapping\n            document.addEventListener('focus', this.handleFocus, true);\n        }\n        else {\n            // remove css classes and unhide content from screen readers\n            this.el.classList.remove(SHOW_MENU);\n            /**\n             * Remove tabindex from the menu component\n             * so that is cannot be tabbed to.\n             */\n            this.el.removeAttribute('tabindex');\n            if (this.contentEl) {\n                this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n                /**\n                 * Remove aria-hidden so screen readers\n                 * can announce the main content again\n                 * now that the menu is not the main focus.\n                 */\n                this.contentEl.removeAttribute('aria-hidden');\n            }\n            if (this.backdropEl) {\n                this.backdropEl.classList.remove(SHOW_BACKDROP);\n            }\n            if (this.animation) {\n                this.animation.stop();\n            }\n            // emit close event\n            this.ionDidClose.emit();\n            // undo focus trapping so multiple menus don't collide\n            document.removeEventListener('focus', this.handleFocus, true);\n        }\n    }\n    updateState() {\n        const isActive = this._isActive();\n        if (this.gesture) {\n            this.gesture.enable(isActive && this.swipeGesture);\n        }\n        /**\n         * If the menu is disabled but it is still open\n         * then we should close the menu immediately.\n         * Additionally, if the menu is in the process\n         * of animating {open, close} and the menu is disabled\n         * then it should still be closed immediately.\n         */\n        if (!isActive) {\n            /**\n             * It is possible to disable the menu while\n             * it is mid-animation. When this happens, we\n             * need to set the operationCancelled flag\n             * so that this._setOpen knows to return false\n             * and not run the \"afterAnimation\" callback.\n             */\n            if (this.isAnimating) {\n                this.operationCancelled = true;\n            }\n            /**\n             * If the menu is disabled then we should\n             * forcibly close the menu even if it is open.\n             */\n            this.afterAnimation(false);\n        }\n    }\n    render() {\n        const { type, disabled, el, isPaneVisible, inheritedAttributes, side } = this;\n        const mode = getIonMode(this);\n        /**\n         * If the Close Watcher is enabled then\n         * the ionBackButton listener in the menu controller\n         * will handle closing the menu when Escape is pressed.\n         */\n        return (h(Host, { key: '30c0c9bfb8973e4a6feb658f8c4ee8e362f464ed', onKeyDown: shouldUseCloseWatcher() ? null : this.onKeydown, role: \"navigation\", \"aria-label\": inheritedAttributes['aria-label'] || 'menu', class: {\n                [mode]: true,\n                [`menu-type-${type}`]: true,\n                'menu-enabled': !disabled,\n                [`menu-side-${side}`]: true,\n                'menu-pane-visible': isPaneVisible,\n                'split-pane-side': hostContext('ion-split-pane', el),\n            } }, h(\"div\", { key: '34b0e5840906862cf1bc27207e089004b0402c56', class: \"menu-inner\", part: \"container\", ref: (el) => (this.menuInnerEl = el) }, h(\"slot\", { key: '2cd7e61a8c0987ca4b3f1f8b33cba7152f1275fe' })), h(\"ion-backdrop\", { key: 'd190b1f9b66c76e276f27bfe074d3aab796180fb', ref: (el) => (this.backdropEl = el), class: \"menu-backdrop\", tappable: false, stopPropagation: false, part: \"backdrop\" })));\n    }\n    static get is() { return \"ion-menu\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"menu.ios.scss\"],\n            \"md\": [\"menu.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"menu.ios.css\"],\n            \"md\": [\"menu.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"contentId\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The `id` of the main content. When using\\na router this is typically `ion-router-outlet`.\\nWhen not using a router, this is typically\\nyour main view's `ion-content`. This is not the\\nid of the `ion-content` inside of your `ion-menu`.\"\n                },\n                \"attribute\": \"content-id\",\n                \"reflect\": true\n            },\n            \"menuId\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"An id for the menu.\"\n                },\n                \"attribute\": \"menu-id\",\n                \"reflect\": true\n            },\n            \"type\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"MenuType\",\n                    \"resolved\": \"\\\"overlay\\\" | \\\"push\\\" | \\\"reveal\\\" | undefined\",\n                    \"references\": {\n                        \"MenuType\": {\n                            \"location\": \"import\",\n                            \"path\": \"./menu-interface\",\n                            \"id\": \"src/components/menu/menu-interface.ts::MenuType\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The display type of the menu.\\nAvailable options: `\\\"overlay\\\"`, `\\\"reveal\\\"`, `\\\"push\\\"`.\"\n                },\n                \"attribute\": \"type\",\n                \"reflect\": false\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the menu is disabled.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"side\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Side\",\n                    \"resolved\": \"\\\"end\\\" | \\\"start\\\"\",\n                    \"references\": {\n                        \"Side\": {\n                            \"location\": \"import\",\n                            \"path\": \"./menu-interface\",\n                            \"id\": \"src/components/menu/menu-interface.ts::Side\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Which side of the view the menu should be placed.\"\n                },\n                \"attribute\": \"side\",\n                \"reflect\": true,\n                \"defaultValue\": \"'start'\"\n            },\n            \"swipeGesture\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, swiping the menu is enabled.\"\n                },\n                \"attribute\": \"swipe-gesture\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"maxEdgeStart\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The edge threshold for dragging the menu open.\\nIf a drag/swipe happens over this value, the menu is not triggered.\"\n                },\n                \"attribute\": \"max-edge-start\",\n                \"reflect\": false,\n                \"defaultValue\": \"50\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"isPaneVisible\": {},\n            \"isEndSide\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionWillOpen\",\n                \"name\": \"ionWillOpen\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the menu is about to be opened.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionWillClose\",\n                \"name\": \"ionWillClose\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the menu is about to be closed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionDidOpen\",\n                \"name\": \"ionDidOpen\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the menu is open.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionDidClose\",\n                \"name\": \"ionDidClose\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the menu is closed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionMenuChange\",\n                \"name\": \"ionMenuChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted when the menu state is changed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"MenuChangeEventDetail\",\n                    \"resolved\": \"MenuChangeEventDetail\",\n                    \"references\": {\n                        \"MenuChangeEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"./menu-interface\",\n                            \"id\": \"src/components/menu/menu-interface.ts::MenuChangeEventDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"isOpen\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<boolean>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns `true` is the menu is open.\",\n                    \"tags\": []\n                }\n            },\n            \"isActive\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<boolean>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns `true` is the menu is active.\\n\\nA menu is active when it can be opened or closed, meaning it's enabled\\nand it's not part of a `ion-split-pane`.\",\n                    \"tags\": []\n                }\n            },\n            \"open\": {\n                \"complexType\": {\n                    \"signature\": \"(animated?: boolean) => Promise<boolean>\",\n                    \"parameters\": [{\n                            \"name\": \"animated\",\n                            \"type\": \"boolean\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Opens the menu. If the menu is already open or it can't be opened,\\nit returns `false`.\",\n                    \"tags\": []\n                }\n            },\n            \"close\": {\n                \"complexType\": {\n                    \"signature\": \"(animated?: boolean) => Promise<boolean>\",\n                    \"parameters\": [{\n                            \"name\": \"animated\",\n                            \"type\": \"boolean\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Closes the menu. If the menu is already closed or it can't be closed,\\nit returns `false`.\",\n                    \"tags\": []\n                }\n            },\n            \"toggle\": {\n                \"complexType\": {\n                    \"signature\": \"(animated?: boolean) => Promise<boolean>\",\n                    \"parameters\": [{\n                            \"name\": \"animated\",\n                            \"type\": \"boolean\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\\nIf the operation can't be completed successfully, it returns `false`.\",\n                    \"tags\": []\n                }\n            },\n            \"setOpen\": {\n                \"complexType\": {\n                    \"signature\": \"(shouldOpen: boolean, animated?: boolean) => Promise<boolean>\",\n                    \"parameters\": [{\n                            \"name\": \"shouldOpen\",\n                            \"type\": \"boolean\",\n                            \"docs\": \"\"\n                        }, {\n                            \"name\": \"animated\",\n                            \"type\": \"boolean\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Opens or closes the button.\\nIf the operation can't be completed successfully, it returns `false`.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"type\",\n                \"methodName\": \"typeChanged\"\n            }, {\n                \"propName\": \"disabled\",\n                \"methodName\": \"disabledChanged\"\n            }, {\n                \"propName\": \"side\",\n                \"methodName\": \"sideChanged\"\n            }, {\n                \"propName\": \"swipeGesture\",\n                \"methodName\": \"swipeGestureChanged\"\n            }];\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"ionSplitPaneVisible\",\n                \"method\": \"onSplitPaneChanged\",\n                \"target\": \"body\",\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"click\",\n                \"method\": \"onBackdropClick\",\n                \"target\": undefined,\n                \"capture\": true,\n                \"passive\": false\n            }];\n    }\n}\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n    return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n    if (isEndSide) {\n        return posX >= win.innerWidth - maxEdgeStart;\n    }\n    else {\n        return posX <= maxEdgeStart;\n    }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\n",":host(.menu-toggle-hidden) {\n  display: none;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { menuController } from \"../../utils/menu-controller/index\";\nimport { getIonMode } from \"../../global/ionic-global\";\nimport { updateVisibility } from \"./menu-toggle-util\";\n/**\n * @slot - Content is placed inside the toggle to act as the click target.\n */\nexport class MenuToggle {\n    constructor() {\n        this.onClick = () => {\n            return menuController.toggle(this.menu);\n        };\n        this.visible = false;\n        this.menu = undefined;\n        this.autoHide = true;\n    }\n    connectedCallback() {\n        this.visibilityChanged();\n    }\n    async visibilityChanged() {\n        this.visible = await updateVisibility(this.menu);\n    }\n    render() {\n        const mode = getIonMode(this);\n        const hidden = this.autoHide && !this.visible;\n        return (h(Host, { key: '90e621f09792383f1badcc1b402b1ac7d08c5f98', onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\n                [mode]: true,\n                'menu-toggle-hidden': hidden,\n            } }, h(\"slot\", { key: 'c0abdd1d91e9d80ee3704e3e374ebe1f29078460' })));\n    }\n    static get is() { return \"ion-menu-toggle\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"menu-toggle.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"menu-toggle.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"menu\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Optional property that maps to a Menu's `menuId` prop.\\nCan also be `start` or `end` for the menu side.\\nThis is used to find the correct menu to toggle.\\n\\nIf this property is not used, `ion-menu-toggle` will toggle the\\nfirst menu that is active.\"\n                },\n                \"attribute\": \"menu\",\n                \"reflect\": false\n            },\n            \"autoHide\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Automatically hides the content when the corresponding menu is not active.\\n\\nBy default, it's `true`. Change it to `false` in order to\\nkeep `ion-menu-toggle` always visible regardless the state of the menu.\"\n                },\n                \"attribute\": \"auto-hide\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"visible\": {}\n        };\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"ionMenuChange\",\n                \"method\": \"visibilityChanged\",\n                \"target\": \"body\",\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"ionSplitPaneVisible\",\n                \"method\": \"visibilityChanged\",\n                \"target\": \"body\",\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { getElementRoot, raf } from \"../../utils/helpers\";\n/**\n * Returns the dimensions of the popover\n * arrow on `ios` mode. If arrow is disabled\n * returns (0, 0).\n */\nexport const getArrowDimensions = (arrowEl) => {\n    if (!arrowEl) {\n        return { arrowWidth: 0, arrowHeight: 0 };\n    }\n    const { width, height } = arrowEl.getBoundingClientRect();\n    return { arrowWidth: width, arrowHeight: height };\n};\n/**\n * Returns the recommended dimensions of the popover\n * that takes into account whether or not the width\n * should match the trigger width.\n */\nexport const getPopoverDimensions = (size, contentEl, triggerEl) => {\n    const contentDimentions = contentEl.getBoundingClientRect();\n    const contentHeight = contentDimentions.height;\n    let contentWidth = contentDimentions.width;\n    if (size === 'cover' && triggerEl) {\n        const triggerDimensions = triggerEl.getBoundingClientRect();\n        contentWidth = triggerDimensions.width;\n    }\n    return {\n        contentWidth,\n        contentHeight,\n    };\n};\nexport const configureDismissInteraction = (triggerEl, triggerAction, popoverEl, parentPopoverEl) => {\n    let dismissCallbacks = [];\n    const root = getElementRoot(parentPopoverEl);\n    const parentContentEl = root.querySelector('.popover-content');\n    switch (triggerAction) {\n        case 'hover':\n            dismissCallbacks = [\n                {\n                    /**\n                     * Do not use mouseover here\n                     * as this will causes the event to\n                     * be dispatched on each underlying\n                     * element rather than on the popover\n                     * content as a whole.\n                     */\n                    eventName: 'mouseenter',\n                    callback: (ev) => {\n                        /**\n                         * Do not dismiss the popover is we\n                         * are hovering over its trigger.\n                         * This would be easier if we used mouseover\n                         * but this would cause the event to be dispatched\n                         * more often than we would like, potentially\n                         * causing performance issues.\n                         */\n                        const element = document.elementFromPoint(ev.clientX, ev.clientY);\n                        if (element === triggerEl) {\n                            return;\n                        }\n                        popoverEl.dismiss(undefined, undefined, false);\n                    },\n                },\n            ];\n            break;\n        case 'context-menu':\n        case 'click':\n        default:\n            dismissCallbacks = [\n                {\n                    eventName: 'click',\n                    callback: (ev) => {\n                        /**\n                         * Do not dismiss the popover is we\n                         * are hovering over its trigger.\n                         */\n                        const target = ev.target;\n                        const closestTrigger = target.closest('[data-ion-popover-trigger]');\n                        if (closestTrigger === triggerEl) {\n                            /**\n                             * stopPropagation here so if the\n                             * popover has dismissOnSelect=\"true\"\n                             * the popover does not dismiss since\n                             * we just clicked a trigger element.\n                             */\n                            ev.stopPropagation();\n                            return;\n                        }\n                        popoverEl.dismiss(undefined, undefined, false);\n                    },\n                },\n            ];\n            break;\n    }\n    dismissCallbacks.forEach(({ eventName, callback }) => parentContentEl.addEventListener(eventName, callback));\n    return () => {\n        dismissCallbacks.forEach(({ eventName, callback }) => parentContentEl.removeEventListener(eventName, callback));\n    };\n};\n/**\n * Configures the triggerEl to respond\n * to user interaction based upon the triggerAction\n * prop that devs have defined.\n */\nexport const configureTriggerInteraction = (triggerEl, triggerAction, popoverEl) => {\n    let triggerCallbacks = [];\n    /**\n     * Based upon the kind of trigger interaction\n     * the user wants, we setup the correct event\n     * listeners.\n     */\n    switch (triggerAction) {\n        case 'hover':\n            let hoverTimeout;\n            triggerCallbacks = [\n                {\n                    eventName: 'mouseenter',\n                    callback: async (ev) => {\n                        ev.stopPropagation();\n                        if (hoverTimeout) {\n                            clearTimeout(hoverTimeout);\n                        }\n                        /**\n                         * Hovering over a trigger should not\n                         * immediately open the next popover.\n                         */\n                        hoverTimeout = setTimeout(() => {\n                            raf(() => {\n                                popoverEl.presentFromTrigger(ev);\n                                hoverTimeout = undefined;\n                            });\n                        }, 100);\n                    },\n                },\n                {\n                    eventName: 'mouseleave',\n                    callback: (ev) => {\n                        if (hoverTimeout) {\n                            clearTimeout(hoverTimeout);\n                        }\n                        /**\n                         * If mouse is over another popover\n                         * that is not this popover then we should\n                         * close this popover.\n                         */\n                        const target = ev.relatedTarget;\n                        if (!target) {\n                            return;\n                        }\n                        if (target.closest('ion-popover') !== popoverEl) {\n                            popoverEl.dismiss(undefined, undefined, false);\n                        }\n                    },\n                },\n                {\n                    /**\n                     * stopPropagation here prevents the popover\n                     * from dismissing when dismiss-on-select=\"true\".\n                     */\n                    eventName: 'click',\n                    callback: (ev) => ev.stopPropagation(),\n                },\n                {\n                    eventName: 'ionPopoverActivateTrigger',\n                    callback: (ev) => popoverEl.presentFromTrigger(ev, true),\n                },\n            ];\n            break;\n        case 'context-menu':\n            triggerCallbacks = [\n                {\n                    eventName: 'contextmenu',\n                    callback: (ev) => {\n                        /**\n                         * Prevents the platform context\n                         * menu from appearing.\n                         */\n                        ev.preventDefault();\n                        popoverEl.presentFromTrigger(ev);\n                    },\n                },\n                {\n                    eventName: 'click',\n                    callback: (ev) => ev.stopPropagation(),\n                },\n                {\n                    eventName: 'ionPopoverActivateTrigger',\n                    callback: (ev) => popoverEl.presentFromTrigger(ev, true),\n                },\n            ];\n            break;\n        case 'click':\n        default:\n            triggerCallbacks = [\n                {\n                    /**\n                     * Do not do a stopPropagation() here\n                     * because if you had two click triggers\n                     * then clicking the first trigger and then\n                     * clicking the second trigger would not cause\n                     * the first popover to dismiss.\n                     */\n                    eventName: 'click',\n                    callback: (ev) => popoverEl.presentFromTrigger(ev),\n                },\n                {\n                    eventName: 'ionPopoverActivateTrigger',\n                    callback: (ev) => popoverEl.presentFromTrigger(ev, true),\n                },\n            ];\n            break;\n    }\n    triggerCallbacks.forEach(({ eventName, callback }) => triggerEl.addEventListener(eventName, callback));\n    triggerEl.setAttribute('data-ion-popover-trigger', 'true');\n    return () => {\n        triggerCallbacks.forEach(({ eventName, callback }) => triggerEl.removeEventListener(eventName, callback));\n        triggerEl.removeAttribute('data-ion-popover-trigger');\n    };\n};\n/**\n * Returns the index of an ion-item in an array of ion-items.\n */\nexport const getIndexOfItem = (items, item) => {\n    if (!item || item.tagName !== 'ION-ITEM') {\n        return -1;\n    }\n    return items.findIndex((el) => el === item);\n};\n/**\n * Given an array of elements and a currently focused ion-item\n * returns the next ion-item relative to the focused one or\n * undefined.\n */\nexport const getNextItem = (items, currentItem) => {\n    const currentItemIndex = getIndexOfItem(items, currentItem);\n    return items[currentItemIndex + 1];\n};\n/**\n * Given an array of elements and a currently focused ion-item\n * returns the previous ion-item relative to the focused one or\n * undefined.\n */\nexport const getPrevItem = (items, currentItem) => {\n    const currentItemIndex = getIndexOfItem(items, currentItem);\n    return items[currentItemIndex - 1];\n};\n/** Focus the internal button of the ion-item */\nconst focusItem = (item) => {\n    const root = getElementRoot(item);\n    const button = root.querySelector('button');\n    if (button) {\n        raf(() => button.focus());\n    }\n};\n/**\n * Returns `true` if `el` has been designated\n * as a trigger element for an ion-popover.\n */\nexport const isTriggerElement = (el) => el.hasAttribute('data-ion-popover-trigger');\nexport const configureKeyboardInteraction = (popoverEl) => {\n    const callback = async (ev) => {\n        var _a;\n        const activeElement = document.activeElement;\n        let items = [];\n        const targetTagName = (_a = ev.target) === null || _a === void 0 ? void 0 : _a.tagName;\n        /**\n         * Only handle custom keyboard interactions for the host popover element\n         * and children ion-item elements.\n         */\n        if (targetTagName !== 'ION-POPOVER' && targetTagName !== 'ION-ITEM') {\n            return;\n        }\n        /**\n         * Complex selectors with :not() are :not supported\n         * in older versions of Chromium so we need to do a\n         * try/catch here so errors are not thrown.\n         */\n        try {\n            /**\n             * Select all ion-items that are not children of child popovers.\n             * i.e. only select ion-item elements that are part of this popover\n             */\n            items = Array.from(popoverEl.querySelectorAll('ion-item:not(ion-popover ion-popover *):not([disabled])'));\n            /* eslint-disable-next-line */\n        }\n        catch (_b) { }\n        switch (ev.key) {\n            /**\n             * If we are in a child popover\n             * then pressing the left arrow key\n             * should close this popover and move\n             * focus to the popover that presented\n             * this one.\n             */\n            case 'ArrowLeft':\n                const parentPopover = await popoverEl.getParentPopover();\n                if (parentPopover) {\n                    popoverEl.dismiss(undefined, undefined, false);\n                }\n                break;\n            /**\n             * ArrowDown should move focus to the next focusable ion-item.\n             */\n            case 'ArrowDown':\n                // Disable movement/scroll with keyboard\n                ev.preventDefault();\n                const nextItem = getNextItem(items, activeElement);\n                if (nextItem !== undefined) {\n                    focusItem(nextItem);\n                }\n                break;\n            /**\n             * ArrowUp should move focus to the previous focusable ion-item.\n             */\n            case 'ArrowUp':\n                // Disable movement/scroll with keyboard\n                ev.preventDefault();\n                const prevItem = getPrevItem(items, activeElement);\n                if (prevItem !== undefined) {\n                    focusItem(prevItem);\n                }\n                break;\n            /**\n             * Home should move focus to the first focusable ion-item.\n             */\n            case 'Home':\n                ev.preventDefault();\n                const firstItem = items[0];\n                if (firstItem !== undefined) {\n                    focusItem(firstItem);\n                }\n                break;\n            /**\n             * End should move focus to the last focusable ion-item.\n             */\n            case 'End':\n                ev.preventDefault();\n                const lastItem = items[items.length - 1];\n                if (lastItem !== undefined) {\n                    focusItem(lastItem);\n                }\n                break;\n            /**\n             * ArrowRight, Spacebar, or Enter should activate\n             * the currently focused trigger item to open a\n             * popover if the element is a trigger item.\n             */\n            case 'ArrowRight':\n            case ' ':\n            case 'Enter':\n                if (activeElement && isTriggerElement(activeElement)) {\n                    const rightEvent = new CustomEvent('ionPopoverActivateTrigger');\n                    activeElement.dispatchEvent(rightEvent);\n                }\n                break;\n            default:\n                break;\n        }\n    };\n    popoverEl.addEventListener('keydown', callback);\n    return () => popoverEl.removeEventListener('keydown', callback);\n};\n/**\n * Positions a popover by taking into account\n * the reference point, preferred side, alignment\n * and viewport dimensions.\n */\nexport const getPopoverPosition = (isRTL, contentWidth, contentHeight, arrowWidth, arrowHeight, reference, side, align, defaultPosition, triggerEl, event) => {\n    var _a;\n    let referenceCoordinates = {\n        top: 0,\n        left: 0,\n        width: 0,\n        height: 0,\n    };\n    /**\n     * Calculate position relative to the\n     * x-y coordinates in the event that\n     * was passed in\n     */\n    switch (reference) {\n        case 'event':\n            if (!event) {\n                return defaultPosition;\n            }\n            const mouseEv = event;\n            referenceCoordinates = {\n                top: mouseEv.clientY,\n                left: mouseEv.clientX,\n                width: 1,\n                height: 1,\n            };\n            break;\n        /**\n         * Calculate position relative to the bounding\n         * box on either the trigger element\n         * specified via the `trigger` prop or\n         * the target specified on the event\n         * that was passed in.\n         */\n        case 'trigger':\n        default:\n            const customEv = event;\n            /**\n             * ionShadowTarget is used when we need to align the\n             * popover with an element inside of the shadow root\n             * of an Ionic component. Ex: Presenting a popover\n             * by clicking on the collapsed indicator inside\n             * of `ion-breadcrumb` and centering it relative\n             * to the indicator rather than `ion-breadcrumb`\n             * as a whole.\n             */\n            const actualTriggerEl = (triggerEl ||\n                ((_a = customEv === null || customEv === void 0 ? void 0 : customEv.detail) === null || _a === void 0 ? void 0 : _a.ionShadowTarget) ||\n                (customEv === null || customEv === void 0 ? void 0 : customEv.target));\n            if (!actualTriggerEl) {\n                return defaultPosition;\n            }\n            const triggerBoundingBox = actualTriggerEl.getBoundingClientRect();\n            referenceCoordinates = {\n                top: triggerBoundingBox.top,\n                left: triggerBoundingBox.left,\n                width: triggerBoundingBox.width,\n                height: triggerBoundingBox.height,\n            };\n            break;\n    }\n    /**\n     * Get top/left offset that would allow\n     * popover to be positioned on the\n     * preferred side of the reference.\n     */\n    const coordinates = calculatePopoverSide(side, referenceCoordinates, contentWidth, contentHeight, arrowWidth, arrowHeight, isRTL);\n    /**\n     * Get the top/left adjustments that\n     * would allow the popover content\n     * to have the correct alignment.\n     */\n    const alignedCoordinates = calculatePopoverAlign(align, side, referenceCoordinates, contentWidth, contentHeight);\n    const top = coordinates.top + alignedCoordinates.top;\n    const left = coordinates.left + alignedCoordinates.left;\n    const { arrowTop, arrowLeft } = calculateArrowPosition(side, arrowWidth, arrowHeight, top, left, contentWidth, contentHeight, isRTL);\n    const { originX, originY } = calculatePopoverOrigin(side, align, isRTL);\n    return { top, left, referenceCoordinates, arrowTop, arrowLeft, originX, originY };\n};\n/**\n * Determines the transform-origin\n * of the popover animation so that it\n * is in line with what the side and alignment\n * prop values are. Currently only used\n * with the MD animation.\n */\nconst calculatePopoverOrigin = (side, align, isRTL) => {\n    switch (side) {\n        case 'top':\n            return { originX: getOriginXAlignment(align), originY: 'bottom' };\n        case 'bottom':\n            return { originX: getOriginXAlignment(align), originY: 'top' };\n        case 'left':\n            return { originX: 'right', originY: getOriginYAlignment(align) };\n        case 'right':\n            return { originX: 'left', originY: getOriginYAlignment(align) };\n        case 'start':\n            return { originX: isRTL ? 'left' : 'right', originY: getOriginYAlignment(align) };\n        case 'end':\n            return { originX: isRTL ? 'right' : 'left', originY: getOriginYAlignment(align) };\n    }\n};\nconst getOriginXAlignment = (align) => {\n    switch (align) {\n        case 'start':\n            return 'left';\n        case 'center':\n            return 'center';\n        case 'end':\n            return 'right';\n    }\n};\nconst getOriginYAlignment = (align) => {\n    switch (align) {\n        case 'start':\n            return 'top';\n        case 'center':\n            return 'center';\n        case 'end':\n            return 'bottom';\n    }\n};\n/**\n * Calculates where the arrow positioning\n * should be relative to the popover content.\n */\nconst calculateArrowPosition = (side, arrowWidth, arrowHeight, top, left, contentWidth, contentHeight, isRTL) => {\n    /**\n     * Note: When side is left, right, start, or end, the arrow is\n     * been rotated using a `transform`, so to move the arrow up or down\n     * by its dimension, you need to use `arrowWidth`.\n     */\n    const leftPosition = {\n        arrowTop: top + contentHeight / 2 - arrowWidth / 2,\n        arrowLeft: left + contentWidth - arrowWidth / 2,\n    };\n    /**\n     * Move the arrow to the left by arrowWidth and then\n     * again by half of its width because we have rotated\n     * the arrow using a transform.\n     */\n    const rightPosition = { arrowTop: top + contentHeight / 2 - arrowWidth / 2, arrowLeft: left - arrowWidth * 1.5 };\n    switch (side) {\n        case 'top':\n            return { arrowTop: top + contentHeight, arrowLeft: left + contentWidth / 2 - arrowWidth / 2 };\n        case 'bottom':\n            return { arrowTop: top - arrowHeight, arrowLeft: left + contentWidth / 2 - arrowWidth / 2 };\n        case 'left':\n            return leftPosition;\n        case 'right':\n            return rightPosition;\n        case 'start':\n            return isRTL ? rightPosition : leftPosition;\n        case 'end':\n            return isRTL ? leftPosition : rightPosition;\n        default:\n            return { arrowTop: 0, arrowLeft: 0 };\n    }\n};\n/**\n * Calculates the required top/left\n * values needed to position the popover\n * content on the side specified in the\n * `side` prop.\n */\nconst calculatePopoverSide = (side, triggerBoundingBox, contentWidth, contentHeight, arrowWidth, arrowHeight, isRTL) => {\n    const sideLeft = {\n        top: triggerBoundingBox.top,\n        left: triggerBoundingBox.left - contentWidth - arrowWidth,\n    };\n    const sideRight = {\n        top: triggerBoundingBox.top,\n        left: triggerBoundingBox.left + triggerBoundingBox.width + arrowWidth,\n    };\n    switch (side) {\n        case 'top':\n            return {\n                top: triggerBoundingBox.top - contentHeight - arrowHeight,\n                left: triggerBoundingBox.left,\n            };\n        case 'right':\n            return sideRight;\n        case 'bottom':\n            return {\n                top: triggerBoundingBox.top + triggerBoundingBox.height + arrowHeight,\n                left: triggerBoundingBox.left,\n            };\n        case 'left':\n            return sideLeft;\n        case 'start':\n            return isRTL ? sideRight : sideLeft;\n        case 'end':\n            return isRTL ? sideLeft : sideRight;\n    }\n};\n/**\n * Calculates the required top/left\n * offset values needed to provide the\n * correct alignment regardless while taking\n * into account the side the popover is on.\n */\nconst calculatePopoverAlign = (align, side, triggerBoundingBox, contentWidth, contentHeight) => {\n    switch (align) {\n        case 'center':\n            return calculatePopoverCenterAlign(side, triggerBoundingBox, contentWidth, contentHeight);\n        case 'end':\n            return calculatePopoverEndAlign(side, triggerBoundingBox, contentWidth, contentHeight);\n        case 'start':\n        default:\n            return { top: 0, left: 0 };\n    }\n};\n/**\n * Calculate the end alignment for\n * the popover. If side is on the x-axis\n * then the align values refer to the top\n * and bottom margins of the content.\n * If side is on the y-axis then the\n * align values refer to the left and right\n * margins of the content.\n */\nconst calculatePopoverEndAlign = (side, triggerBoundingBox, contentWidth, contentHeight) => {\n    switch (side) {\n        case 'start':\n        case 'end':\n        case 'left':\n        case 'right':\n            return {\n                top: -(contentHeight - triggerBoundingBox.height),\n                left: 0,\n            };\n        case 'top':\n        case 'bottom':\n        default:\n            return {\n                top: 0,\n                left: -(contentWidth - triggerBoundingBox.width),\n            };\n    }\n};\n/**\n * Calculate the center alignment for\n * the popover. If side is on the x-axis\n * then the align values refer to the top\n * and bottom margins of the content.\n * If side is on the y-axis then the\n * align values refer to the left and right\n * margins of the content.\n */\nconst calculatePopoverCenterAlign = (side, triggerBoundingBox, contentWidth, contentHeight) => {\n    switch (side) {\n        case 'start':\n        case 'end':\n        case 'left':\n        case 'right':\n            return {\n                top: -(contentHeight / 2 - triggerBoundingBox.height / 2),\n                left: 0,\n            };\n        case 'top':\n        case 'bottom':\n        default:\n            return {\n                top: 0,\n                left: -(contentWidth / 2 - triggerBoundingBox.width / 2),\n            };\n    }\n};\n/**\n * Adjusts popover positioning coordinates\n * such that popover does not appear offscreen\n * or overlapping safe area bounds.\n */\nexport const calculateWindowAdjustment = (side, coordTop, coordLeft, bodyPadding, bodyWidth, bodyHeight, contentWidth, contentHeight, safeAreaMargin, contentOriginX, contentOriginY, triggerCoordinates, coordArrowTop = 0, coordArrowLeft = 0, arrowHeight = 0) => {\n    let arrowTop = coordArrowTop;\n    const arrowLeft = coordArrowLeft;\n    let left = coordLeft;\n    let top = coordTop;\n    let bottom;\n    let originX = contentOriginX;\n    let originY = contentOriginY;\n    let checkSafeAreaLeft = false;\n    let checkSafeAreaRight = false;\n    const triggerTop = triggerCoordinates\n        ? triggerCoordinates.top + triggerCoordinates.height\n        : bodyHeight / 2 - contentHeight / 2;\n    const triggerHeight = triggerCoordinates ? triggerCoordinates.height : 0;\n    let addPopoverBottomClass = false;\n    /**\n     * Adjust popover so it does not\n     * go off the left of the screen.\n     */\n    if (left < bodyPadding + safeAreaMargin) {\n        left = bodyPadding;\n        checkSafeAreaLeft = true;\n        originX = 'left';\n        /**\n         * Adjust popover so it does not\n         * go off the right of the screen.\n         */\n    }\n    else if (contentWidth + bodyPadding + left + safeAreaMargin > bodyWidth) {\n        checkSafeAreaRight = true;\n        left = bodyWidth - contentWidth - bodyPadding;\n        originX = 'right';\n    }\n    /**\n     * Adjust popover so it does not\n     * go off the top of the screen.\n     * If popover is on the left or the right of\n     * the trigger, then we should not adjust top\n     * margins.\n     */\n    if (triggerTop + triggerHeight + contentHeight > bodyHeight && (side === 'top' || side === 'bottom')) {\n        if (triggerTop - contentHeight > 0) {\n            /**\n             * While we strive to align the popover with the trigger\n             * on smaller screens this is not always possible. As a result,\n             * we adjust the popover up so that it does not hang\n             * off the bottom of the screen. However, we do not want to move\n             * the popover up so much that it goes off the top of the screen.\n             *\n             * We chose 12 here so that the popover position looks a bit nicer as\n             * it is not right up against the edge of the screen.\n             */\n            top = Math.max(12, triggerTop - contentHeight - triggerHeight - (arrowHeight - 1));\n            arrowTop = top + contentHeight;\n            originY = 'bottom';\n            addPopoverBottomClass = true;\n            /**\n             * If not enough room for popover to appear\n             * above trigger, then cut it off.\n             */\n        }\n        else {\n            bottom = bodyPadding;\n        }\n    }\n    return {\n        top,\n        left,\n        bottom,\n        originX,\n        originY,\n        checkSafeAreaLeft,\n        checkSafeAreaRight,\n        arrowTop,\n        arrowLeft,\n        addPopoverBottomClass,\n    };\n};\nexport const shouldShowArrow = (side, didAdjustBounds = false, ev, trigger) => {\n    /**\n     * If no event provided and\n     * we do not have a trigger,\n     * then this popover was likely\n     * presented via the popoverController\n     * or users called `present` manually.\n     * In this case, the arrow should not be\n     * shown as we do not have a reference.\n     */\n    if (!ev && !trigger) {\n        return false;\n    }\n    /**\n     * If popover is on the left or the right\n     * of a trigger, but we needed to adjust the\n     * popover due to screen bounds, then we should\n     * hide the arrow as it will never be pointing\n     * at the trigger.\n     */\n    if (side !== 'top' && side !== 'bottom' && didAdjustBounds) {\n        return false;\n    }\n    return true;\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\nimport { getElementRoot } from \"../../../utils/helpers\";\nimport { calculateWindowAdjustment, getArrowDimensions, getPopoverDimensions, getPopoverPosition, shouldShowArrow, } from \"../utils\";\nconst POPOVER_IOS_BODY_PADDING = 5;\n/**\n * iOS Popover Enter Animation\n */\n// TODO(FW-2832): types\nexport const iosEnterAnimation = (baseEl, opts) => {\n    var _a;\n    const { event: ev, size, trigger, reference, side, align } = opts;\n    const doc = baseEl.ownerDocument;\n    const isRTL = doc.dir === 'rtl';\n    const bodyWidth = doc.defaultView.innerWidth;\n    const bodyHeight = doc.defaultView.innerHeight;\n    const root = getElementRoot(baseEl);\n    const contentEl = root.querySelector('.popover-content');\n    const arrowEl = root.querySelector('.popover-arrow');\n    const referenceSizeEl = trigger || ((_a = ev === null || ev === void 0 ? void 0 : ev.detail) === null || _a === void 0 ? void 0 : _a.ionShadowTarget) || (ev === null || ev === void 0 ? void 0 : ev.target);\n    const { contentWidth, contentHeight } = getPopoverDimensions(size, contentEl, referenceSizeEl);\n    const { arrowWidth, arrowHeight } = getArrowDimensions(arrowEl);\n    const defaultPosition = {\n        top: bodyHeight / 2 - contentHeight / 2,\n        left: bodyWidth / 2 - contentWidth / 2,\n        originX: isRTL ? 'right' : 'left',\n        originY: 'top',\n    };\n    const results = getPopoverPosition(isRTL, contentWidth, contentHeight, arrowWidth, arrowHeight, reference, side, align, defaultPosition, trigger, ev);\n    const padding = size === 'cover' ? 0 : POPOVER_IOS_BODY_PADDING;\n    const margin = size === 'cover' ? 0 : 25;\n    const { originX, originY, top, left, bottom, checkSafeAreaLeft, checkSafeAreaRight, arrowTop, arrowLeft, addPopoverBottomClass, } = calculateWindowAdjustment(side, results.top, results.left, padding, bodyWidth, bodyHeight, contentWidth, contentHeight, margin, results.originX, results.originY, results.referenceCoordinates, results.arrowTop, results.arrowLeft, arrowHeight);\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const contentAnimation = createAnimation();\n    backdropAnimation\n        .addElement(root.querySelector('ion-backdrop'))\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    // In Chromium, if the wrapper animates, the backdrop filter doesn't work.\n    // The Chromium team stated that this behavior is expected and not a bug. The element animating opacity creates a backdrop root for the backdrop-filter.\n    // To get around this, instead of animating the wrapper, animate both the arrow and content.\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1148826\n    contentAnimation\n        .addElement(root.querySelector('.popover-arrow'))\n        .addElement(root.querySelector('.popover-content'))\n        .fromTo('opacity', 0.01, 1);\n    // TODO(FW-4376) Ensure that arrow also blurs when translucent\n    return baseAnimation\n        .easing('ease')\n        .duration(100)\n        .beforeAddWrite(() => {\n        if (size === 'cover') {\n            baseEl.style.setProperty('--width', `${contentWidth}px`);\n        }\n        if (addPopoverBottomClass) {\n            baseEl.classList.add('popover-bottom');\n        }\n        if (bottom !== undefined) {\n            contentEl.style.setProperty('bottom', `${bottom}px`);\n        }\n        const safeAreaLeft = ' + var(--ion-safe-area-left, 0)';\n        const safeAreaRight = ' - var(--ion-safe-area-right, 0)';\n        let leftValue = `${left}px`;\n        if (checkSafeAreaLeft) {\n            leftValue = `${left}px${safeAreaLeft}`;\n        }\n        if (checkSafeAreaRight) {\n            leftValue = `${left}px${safeAreaRight}`;\n        }\n        contentEl.style.setProperty('top', `calc(${top}px + var(--offset-y, 0))`);\n        contentEl.style.setProperty('left', `calc(${leftValue} + var(--offset-x, 0))`);\n        contentEl.style.setProperty('transform-origin', `${originY} ${originX}`);\n        if (arrowEl !== null) {\n            const didAdjustBounds = results.top !== top || results.left !== left;\n            const showArrow = shouldShowArrow(side, didAdjustBounds, ev, trigger);\n            if (showArrow) {\n                arrowEl.style.setProperty('top', `calc(${arrowTop}px + var(--offset-y, 0))`);\n                arrowEl.style.setProperty('left', `calc(${arrowLeft}px + var(--offset-x, 0))`);\n            }\n            else {\n                arrowEl.style.setProperty('display', 'none');\n            }\n        }\n    })\n        .addAnimation([backdropAnimation, contentAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\nimport { getElementRoot } from \"../../../utils/helpers\";\n/**\n * iOS Popover Leave Animation\n */\nexport const iosLeaveAnimation = (baseEl) => {\n    const root = getElementRoot(baseEl);\n    const contentEl = root.querySelector('.popover-content');\n    const arrowEl = root.querySelector('.popover-arrow');\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const contentAnimation = createAnimation();\n    backdropAnimation.addElement(root.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    contentAnimation\n        .addElement(root.querySelector('.popover-arrow'))\n        .addElement(root.querySelector('.popover-content'))\n        .fromTo('opacity', 0.99, 0);\n    return baseAnimation\n        .easing('ease')\n        .afterAddWrite(() => {\n        baseEl.style.removeProperty('--width');\n        baseEl.classList.remove('popover-bottom');\n        contentEl.style.removeProperty('top');\n        contentEl.style.removeProperty('left');\n        contentEl.style.removeProperty('bottom');\n        contentEl.style.removeProperty('transform-origin');\n        if (arrowEl) {\n            arrowEl.style.removeProperty('top');\n            arrowEl.style.removeProperty('left');\n            arrowEl.style.removeProperty('display');\n        }\n    })\n        .duration(300)\n        .addAnimation([backdropAnimation, contentAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\nimport { getElementRoot } from \"../../../utils/helpers\";\nimport { calculateWindowAdjustment, getPopoverDimensions, getPopoverPosition } from \"../utils\";\nconst POPOVER_MD_BODY_PADDING = 12;\n/**\n * Md Popover Enter Animation\n */\n// TODO(FW-2832): types\nexport const mdEnterAnimation = (baseEl, opts) => {\n    var _a;\n    const { event: ev, size, trigger, reference, side, align } = opts;\n    const doc = baseEl.ownerDocument;\n    const isRTL = doc.dir === 'rtl';\n    const bodyWidth = doc.defaultView.innerWidth;\n    const bodyHeight = doc.defaultView.innerHeight;\n    const root = getElementRoot(baseEl);\n    const contentEl = root.querySelector('.popover-content');\n    const referenceSizeEl = trigger || ((_a = ev === null || ev === void 0 ? void 0 : ev.detail) === null || _a === void 0 ? void 0 : _a.ionShadowTarget) || (ev === null || ev === void 0 ? void 0 : ev.target);\n    const { contentWidth, contentHeight } = getPopoverDimensions(size, contentEl, referenceSizeEl);\n    const defaultPosition = {\n        top: bodyHeight / 2 - contentHeight / 2,\n        left: bodyWidth / 2 - contentWidth / 2,\n        originX: isRTL ? 'right' : 'left',\n        originY: 'top',\n    };\n    const results = getPopoverPosition(isRTL, contentWidth, contentHeight, 0, 0, reference, side, align, defaultPosition, trigger, ev);\n    const padding = size === 'cover' ? 0 : POPOVER_MD_BODY_PADDING;\n    const { originX, originY, top, left, bottom } = calculateWindowAdjustment(side, results.top, results.left, padding, bodyWidth, bodyHeight, contentWidth, contentHeight, 0, results.originX, results.originY, results.referenceCoordinates);\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    const contentAnimation = createAnimation();\n    const viewportAnimation = createAnimation();\n    backdropAnimation\n        .addElement(root.querySelector('ion-backdrop'))\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    wrapperAnimation.addElement(root.querySelector('.popover-wrapper')).duration(150).fromTo('opacity', 0.01, 1);\n    contentAnimation\n        .addElement(contentEl)\n        .beforeStyles({\n        top: `calc(${top}px + var(--offset-y, 0px))`,\n        left: `calc(${left}px + var(--offset-x, 0px))`,\n        'transform-origin': `${originY} ${originX}`,\n    })\n        .beforeAddWrite(() => {\n        if (bottom !== undefined) {\n            contentEl.style.setProperty('bottom', `${bottom}px`);\n        }\n    })\n        .fromTo('transform', 'scale(0.8)', 'scale(1)');\n    viewportAnimation.addElement(root.querySelector('.popover-viewport')).fromTo('opacity', 0.01, 1);\n    return baseAnimation\n        .easing('cubic-bezier(0.36,0.66,0.04,1)')\n        .duration(300)\n        .beforeAddWrite(() => {\n        if (size === 'cover') {\n            baseEl.style.setProperty('--width', `${contentWidth}px`);\n        }\n        if (originY === 'bottom') {\n            baseEl.classList.add('popover-bottom');\n        }\n    })\n        .addAnimation([backdropAnimation, wrapperAnimation, contentAnimation, viewportAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\nimport { getElementRoot } from \"../../../utils/helpers\";\n/**\n * Md Popover Leave Animation\n */\nexport const mdLeaveAnimation = (baseEl) => {\n    const root = getElementRoot(baseEl);\n    const contentEl = root.querySelector('.popover-content');\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation.addElement(root.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    wrapperAnimation.addElement(root.querySelector('.popover-wrapper')).fromTo('opacity', 0.99, 0);\n    return baseAnimation\n        .easing('ease')\n        .afterAddWrite(() => {\n        baseEl.style.removeProperty('--width');\n        baseEl.classList.remove('popover-bottom');\n        contentEl.style.removeProperty('top');\n        contentEl.style.removeProperty('left');\n        contentEl.style.removeProperty('bottom');\n        contentEl.style.removeProperty('transform-origin');\n    })\n        .duration(150)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the popover\n   * @prop --box-shadow: Box shadow of the popover\n   *\n   * @prop --min-width: Minimum width of the popover\n   * @prop --width: Width of the popover\n   * @prop --max-width: Maximum width of the popover\n   *\n   * @prop --min-height: Minimum height of the popover\n   * @prop --height: Height of the popover\n   * @prop --max-height: Maximum height of the popover\n   *\n   * @prop --backdrop-opacity: Opacity of the backdrop\n   *\n   * @prop --offset-x: The amount to move the popover by on the x-axis\n   * @prop --offset-y: The amount to move the popover by on the y-axis\n   */\n  --background: var(--ion-background-color, #fff);\n  --min-width: 0;\n  --min-height: 0;\n  --max-width: auto;\n  --height: auto;\n  --offset-x: 0px;\n  --offset-y: 0px;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: fixed;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  color: var(--ion-text-color, #000);\n  z-index: 1001;\n}\n\n/**\n * With nested popovers, only the popover that\n * was first presented has a popover. This is the\n * parent popover and allows us to easily\n * track all nested popovers from a single backdrop.\n * As a result, nested popovers do not have backdrops\n * and their container should not be clickable.\n * This ensures that users can click the parent backdrop\n * while still interacting with the nested popover inner\n * content.\n */\n:host(.popover-nested) {\n  pointer-events: none;\n}\n\n:host(.popover-nested) .popover-wrapper {\n  pointer-events: auto;\n}\n\n:host(.overlay-hidden) {\n  display: none;\n}\n\n.popover-wrapper {\n  z-index: 10;\n}\n\n.popover-content {\n  display: flex;\n  position: absolute;\n  flex-direction: column;\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  background: var(--background);\n  box-shadow: var(--box-shadow);\n  overflow: auto;\n  z-index: 10;\n}\n\n::slotted(.popover-viewport) {\n  --ion-safe-area-top: 0px;\n  --ion-safe-area-right: 0px;\n  --ion-safe-area-bottom: 0px;\n  --ion-safe-area-left: 0px;\n  display: flex;\n  flex-direction: column;\n}\n\n:host(.popover-nested.popover-side-left) {\n  --offset-x: 5px;\n}\n\n:host(.popover-nested.popover-side-right) {\n  --offset-x: -5px;\n}\n\n:host(.popover-nested.popover-side-start) {\n  --offset-x: 5px;\n}\n:host-context([dir=rtl]):host(.popover-nested.popover-side-start), :host-context([dir=rtl]).popover-nested.popover-side-start {\n  --offset-x: -5px;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.popover-nested.popover-side-start:dir(rtl)) {\n    --offset-x: -5px;\n  }\n}\n\n:host(.popover-nested.popover-side-end) {\n  --offset-x: -5px;\n}\n:host-context([dir=rtl]):host(.popover-nested.popover-side-end), :host-context([dir=rtl]).popover-nested.popover-side-end {\n  --offset-x: 5px;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.popover-nested.popover-side-end:dir(rtl)) {\n    --offset-x: 5px;\n  }\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --width: 200px;\n  --max-height: 90%;\n  --box-shadow: none;\n  --backdrop-opacity: var(--ion-backdrop-opacity, 0.08);\n}\n\n:host(.popover-desktop) {\n  --box-shadow: 0px 4px 16px 0px rgba(0, 0, 0, 0.12);\n}\n\n.popover-content {\n  border-radius: 10px;\n}\n\n:host(.popover-desktop) .popover-content {\n  border: 0.5px solid var(--ion-color-step-100, var(--ion-background-color-step-100, #e6e6e6));\n}\n\n.popover-arrow {\n  display: block;\n  position: absolute;\n  width: 20px;\n  height: 10px;\n  overflow: hidden;\n  /*\n   * Required for the arrow to render above the backdrop.\n   * Otherwise, the arrow will appear slightly transparent.\n   * The value is set to 11 since it's the minimum value that\n   * will allow the arrow to render above the backdrop.\n   */\n  z-index: 11;\n}\n\n.popover-arrow::after {\n  top: 3px;\n  border-radius: 3px;\n  position: absolute;\n  width: 14px;\n  height: 14px;\n  transform: rotate(45deg);\n  background: var(--background);\n  content: \"\";\n  z-index: 10;\n}\n.popover-arrow::after {\n  inset-inline-start: 3px;\n}\n\n:host(.popover-bottom) .popover-arrow {\n  top: auto;\n  bottom: -10px;\n}\n\n:host(.popover-bottom) .popover-arrow::after {\n  top: -6px;\n}\n\n:host(.popover-side-left) .popover-arrow {\n  transform: rotate(90deg);\n}\n\n:host(.popover-side-right) .popover-arrow {\n  transform: rotate(-90deg);\n}\n\n:host(.popover-side-top) .popover-arrow {\n  transform: rotate(180deg);\n}\n\n:host(.popover-side-start) .popover-arrow {\n  transform: rotate(90deg);\n}\n:host-context([dir=rtl]):host(.popover-side-start) .popover-arrow, :host-context([dir=rtl]).popover-side-start .popover-arrow {\n  transform: rotate(-90deg);\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.popover-side-start:dir(rtl)) .popover-arrow {\n    transform: rotate(-90deg);\n  }\n}\n\n:host(.popover-side-end) .popover-arrow {\n  transform: rotate(-90deg);\n}\n:host-context([dir=rtl]):host(.popover-side-end) .popover-arrow, :host-context([dir=rtl]).popover-side-end .popover-arrow {\n  transform: rotate(90deg);\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.popover-side-end:dir(rtl)) .popover-arrow {\n    transform: rotate(90deg);\n  }\n}\n\n.popover-arrow,\n.popover-content {\n  opacity: 0;\n}\n\n@supports (backdrop-filter: blur(0)) {\n  :host(.popover-translucent) .popover-content,\n  :host(.popover-translucent) .popover-arrow::after {\n    background: rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8);\n    backdrop-filter: saturate(180%) blur(20px);\n  }\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the popover\n   * @prop --box-shadow: Box shadow of the popover\n   *\n   * @prop --min-width: Minimum width of the popover\n   * @prop --width: Width of the popover\n   * @prop --max-width: Maximum width of the popover\n   *\n   * @prop --min-height: Minimum height of the popover\n   * @prop --height: Height of the popover\n   * @prop --max-height: Maximum height of the popover\n   *\n   * @prop --backdrop-opacity: Opacity of the backdrop\n   *\n   * @prop --offset-x: The amount to move the popover by on the x-axis\n   * @prop --offset-y: The amount to move the popover by on the y-axis\n   */\n  --background: var(--ion-background-color, #fff);\n  --min-width: 0;\n  --min-height: 0;\n  --max-width: auto;\n  --height: auto;\n  --offset-x: 0px;\n  --offset-y: 0px;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: fixed;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  color: var(--ion-text-color, #000);\n  z-index: 1001;\n}\n\n/**\n * With nested popovers, only the popover that\n * was first presented has a popover. This is the\n * parent popover and allows us to easily\n * track all nested popovers from a single backdrop.\n * As a result, nested popovers do not have backdrops\n * and their container should not be clickable.\n * This ensures that users can click the parent backdrop\n * while still interacting with the nested popover inner\n * content.\n */\n:host(.popover-nested) {\n  pointer-events: none;\n}\n\n:host(.popover-nested) .popover-wrapper {\n  pointer-events: auto;\n}\n\n:host(.overlay-hidden) {\n  display: none;\n}\n\n.popover-wrapper {\n  z-index: 10;\n}\n\n.popover-content {\n  display: flex;\n  position: absolute;\n  flex-direction: column;\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  background: var(--background);\n  box-shadow: var(--box-shadow);\n  overflow: auto;\n  z-index: 10;\n}\n\n::slotted(.popover-viewport) {\n  --ion-safe-area-top: 0px;\n  --ion-safe-area-right: 0px;\n  --ion-safe-area-bottom: 0px;\n  --ion-safe-area-left: 0px;\n  display: flex;\n  flex-direction: column;\n}\n\n:host(.popover-nested.popover-side-left) {\n  --offset-x: 5px;\n}\n\n:host(.popover-nested.popover-side-right) {\n  --offset-x: -5px;\n}\n\n:host(.popover-nested.popover-side-start) {\n  --offset-x: 5px;\n}\n:host-context([dir=rtl]):host(.popover-nested.popover-side-start), :host-context([dir=rtl]).popover-nested.popover-side-start {\n  --offset-x: -5px;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.popover-nested.popover-side-start:dir(rtl)) {\n    --offset-x: -5px;\n  }\n}\n\n:host(.popover-nested.popover-side-end) {\n  --offset-x: -5px;\n}\n:host-context([dir=rtl]):host(.popover-nested.popover-side-end), :host-context([dir=rtl]).popover-nested.popover-side-end {\n  --offset-x: 5px;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.popover-nested.popover-side-end:dir(rtl)) {\n    --offset-x: 5px;\n  }\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --width: 250px;\n  --max-height: 90%;\n  --box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);\n  --backdrop-opacity: var(--ion-backdrop-opacity, 0.32);\n}\n\n.popover-content {\n  border-radius: 4px;\n  transform-origin: left top;\n}\n:host-context([dir=rtl]) .popover-content {\n  transform-origin: right top;\n}\n\n[dir=rtl] .popover-content {\n  transform-origin: right top;\n}\n\n@supports selector(:dir(rtl)) {\n  .popover-content:dir(rtl) {\n    transform-origin: right top;\n  }\n}\n\n.popover-viewport {\n  transition-delay: 100ms;\n}\n\n.popover-wrapper {\n  opacity: 0;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { focusFirstDescendant } from \"../../utils/focus-trap\";\nimport { CoreDelegate, attachComponent, detachComponent } from \"../../utils/framework-delegate\";\nimport { addEventListener, raf, hasLazyBuild } from \"../../utils/helpers\";\nimport { createLockController } from \"../../utils/lock-controller\";\nimport { printIonWarning } from \"../../utils/logging/index\";\nimport { BACKDROP, dismiss, eventMethod, prepareOverlay, present, setOverlayId, FOCUS_TRAP_DISABLE_CLASS, } from \"../../utils/overlays\";\nimport { isPlatform } from \"../../utils/platform\";\nimport { getClassMap } from \"../../utils/theme\";\nimport { deepReady, waitForMount } from \"../../utils/transition/index\";\nimport { getIonMode } from \"../../global/ionic-global\";\nimport { iosEnterAnimation } from \"./animations/ios.enter\";\nimport { iosLeaveAnimation } from \"./animations/ios.leave\";\nimport { mdEnterAnimation } from \"./animations/md.enter\";\nimport { mdLeaveAnimation } from \"./animations/md.leave\";\nimport { configureDismissInteraction, configureKeyboardInteraction, configureTriggerInteraction } from \"./utils\";\n// TODO(FW-2832): types\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @slot - Content is placed inside of the `.popover-content` element.\n *\n * @part backdrop - The `ion-backdrop` element.\n * @part arrow - The arrow that points to the reference element. Only applies on `ios` mode.\n * @part content - The wrapper element for the default slot.\n */\nexport class Popover {\n    constructor() {\n        this.parentPopover = null;\n        this.coreDelegate = CoreDelegate();\n        this.lockController = createLockController();\n        this.inline = false;\n        this.focusDescendantOnPresent = false;\n        this.onBackdropTap = () => {\n            this.dismiss(undefined, BACKDROP);\n        };\n        this.onLifecycle = (modalEvent) => {\n            const el = this.usersElement;\n            const name = LIFECYCLE_MAP[modalEvent.type];\n            if (el && name) {\n                const event = new CustomEvent(name, {\n                    bubbles: false,\n                    cancelable: false,\n                    detail: modalEvent.detail,\n                });\n                el.dispatchEvent(event);\n            }\n        };\n        this.configureTriggerInteraction = () => {\n            const { trigger, triggerAction, el, destroyTriggerInteraction } = this;\n            if (destroyTriggerInteraction) {\n                destroyTriggerInteraction();\n            }\n            if (trigger === undefined) {\n                return;\n            }\n            const triggerEl = (this.triggerEl = trigger !== undefined ? document.getElementById(trigger) : null);\n            if (!triggerEl) {\n                printIonWarning(`A trigger element with the ID \"${trigger}\" was not found in the DOM. The trigger element must be in the DOM when the \"trigger\" property is set on ion-popover.`, this.el);\n                return;\n            }\n            this.destroyTriggerInteraction = configureTriggerInteraction(triggerEl, triggerAction, el);\n        };\n        this.configureKeyboardInteraction = () => {\n            const { destroyKeyboardInteraction, el } = this;\n            if (destroyKeyboardInteraction) {\n                destroyKeyboardInteraction();\n            }\n            this.destroyKeyboardInteraction = configureKeyboardInteraction(el);\n        };\n        this.configureDismissInteraction = () => {\n            const { destroyDismissInteraction, parentPopover, triggerAction, triggerEl, el } = this;\n            if (!parentPopover || !triggerEl) {\n                return;\n            }\n            if (destroyDismissInteraction) {\n                destroyDismissInteraction();\n            }\n            this.destroyDismissInteraction = configureDismissInteraction(triggerEl, triggerAction, el, parentPopover);\n        };\n        this.presented = false;\n        this.hasController = false;\n        this.delegate = undefined;\n        this.overlayIndex = undefined;\n        this.enterAnimation = undefined;\n        this.leaveAnimation = undefined;\n        this.component = undefined;\n        this.componentProps = undefined;\n        this.keyboardClose = true;\n        this.cssClass = undefined;\n        this.backdropDismiss = true;\n        this.event = undefined;\n        this.showBackdrop = true;\n        this.translucent = false;\n        this.animated = true;\n        this.htmlAttributes = undefined;\n        this.triggerAction = 'click';\n        this.trigger = undefined;\n        this.size = 'auto';\n        this.dismissOnSelect = false;\n        this.reference = 'trigger';\n        this.side = 'bottom';\n        this.alignment = undefined;\n        this.arrow = true;\n        this.isOpen = false;\n        this.keyboardEvents = false;\n        this.focusTrap = true;\n        this.keepContentsMounted = false;\n    }\n    onTriggerChange() {\n        this.configureTriggerInteraction();\n    }\n    onIsOpenChange(newValue, oldValue) {\n        if (newValue === true && oldValue === false) {\n            this.present();\n        }\n        else if (newValue === false && oldValue === true) {\n            this.dismiss();\n        }\n    }\n    connectedCallback() {\n        const { configureTriggerInteraction, el } = this;\n        prepareOverlay(el);\n        configureTriggerInteraction();\n    }\n    disconnectedCallback() {\n        const { destroyTriggerInteraction } = this;\n        if (destroyTriggerInteraction) {\n            destroyTriggerInteraction();\n        }\n    }\n    componentWillLoad() {\n        var _a, _b;\n        const { el } = this;\n        const popoverId = (_b = (_a = this.htmlAttributes) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : setOverlayId(el);\n        this.parentPopover = el.closest(`ion-popover:not(#${popoverId})`);\n        if (this.alignment === undefined) {\n            this.alignment = getIonMode(this) === 'ios' ? 'center' : 'start';\n        }\n    }\n    componentDidLoad() {\n        const { parentPopover, isOpen } = this;\n        /**\n         * If popover was rendered with isOpen=\"true\"\n         * then we should open popover immediately.\n         */\n        if (isOpen === true) {\n            raf(() => this.present());\n        }\n        if (parentPopover) {\n            addEventListener(parentPopover, 'ionPopoverWillDismiss', () => {\n                this.dismiss(undefined, undefined, false);\n            });\n        }\n        /**\n         * When binding values in frameworks such as Angular\n         * it is possible for the value to be set after the Web Component\n         * initializes but before the value watcher is set up in Stencil.\n         * As a result, the watcher callback may not be fired.\n         * We work around this by manually calling the watcher\n         * callback when the component has loaded and the watcher\n         * is configured.\n         */\n        this.configureTriggerInteraction();\n    }\n    /**\n     * When opening a popover from a trigger, we should not be\n     * modifying the `event` prop from inside the component.\n     * Additionally, when pressing the \"Right\" arrow key, we need\n     * to shift focus to the first descendant in the newly presented\n     * popover.\n     *\n     * @internal\n     */\n    async presentFromTrigger(event, focusDescendant = false) {\n        this.focusDescendantOnPresent = focusDescendant;\n        await this.present(event);\n        this.focusDescendantOnPresent = false;\n    }\n    /**\n     * Determines whether or not an overlay\n     * is being used inline or via a controller/JS\n     * and returns the correct delegate.\n     * By default, subsequent calls to getDelegate\n     * will use a cached version of the delegate.\n     * This is useful for calling dismiss after\n     * present so that the correct delegate is given.\n     */\n    getDelegate(force = false) {\n        if (this.workingDelegate && !force) {\n            return {\n                delegate: this.workingDelegate,\n                inline: this.inline,\n            };\n        }\n        /**\n         * If using overlay inline\n         * we potentially need to use the coreDelegate\n         * so that this works in vanilla JS apps.\n         * If a developer has presented this component\n         * via a controller, then we can assume\n         * the component is already in the\n         * correct place.\n         */\n        const parentEl = this.el.parentNode;\n        const inline = (this.inline = parentEl !== null && !this.hasController);\n        const delegate = (this.workingDelegate = inline ? this.delegate || this.coreDelegate : this.delegate);\n        return { inline, delegate };\n    }\n    /**\n     * Present the popover overlay after it has been created.\n     * Developers can pass a mouse, touch, or pointer event\n     * to position the popover relative to where that event\n     * was dispatched.\n     */\n    async present(event) {\n        const unlock = await this.lockController.lock();\n        if (this.presented) {\n            unlock();\n            return;\n        }\n        const { el } = this;\n        const { inline, delegate } = this.getDelegate(true);\n        /**\n         * Emit ionMount so JS Frameworks have an opportunity\n         * to add the child component to the DOM. The child\n         * component will be assigned to this.usersElement below.\n         */\n        this.ionMount.emit();\n        this.usersElement = await attachComponent(delegate, el, this.component, ['popover-viewport'], this.componentProps, inline);\n        if (!this.keyboardEvents) {\n            this.configureKeyboardInteraction();\n        }\n        this.configureDismissInteraction();\n        /**\n         * When using the lazy loaded build of Stencil, we need to wait\n         * for every Stencil component instance to be ready before presenting\n         * otherwise there can be a flash of unstyled content. With the\n         * custom elements bundle we need to wait for the JS framework\n         * mount the inner contents of the overlay otherwise WebKit may\n         * get the transition incorrect.\n         */\n        if (hasLazyBuild(el)) {\n            await deepReady(this.usersElement);\n            /**\n             * If keepContentsMounted=\"true\" then the\n             * JS Framework has already mounted the inner\n             * contents so there is no need to wait.\n             * Otherwise, we need to wait for the JS\n             * Framework to mount the inner contents\n             * of this component.\n             */\n        }\n        else if (!this.keepContentsMounted) {\n            await waitForMount();\n        }\n        await present(this, 'popoverEnter', iosEnterAnimation, mdEnterAnimation, {\n            event: event || this.event,\n            size: this.size,\n            trigger: this.triggerEl,\n            reference: this.reference,\n            side: this.side,\n            align: this.alignment,\n        });\n        /**\n         * If popover is nested and was\n         * presented using the \"Right\" arrow key,\n         * we need to move focus to the first\n         * descendant inside of the popover.\n         */\n        if (this.focusDescendantOnPresent) {\n            focusFirstDescendant(el);\n        }\n        unlock();\n    }\n    /**\n     * Dismiss the popover overlay after it has been presented.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the popover. For example, 'cancel' or 'backdrop'.\n     * @param dismissParentPopover If `true`, dismissing this popover will also dismiss\n     * a parent popover if this popover is nested. Defaults to `true`.\n     *\n     * This is a no-op if the overlay has not been presented yet. If you want\n     * to remove an overlay from the DOM that was never presented, use the\n     * [remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\n     */\n    async dismiss(data, role, dismissParentPopover = true) {\n        const unlock = await this.lockController.lock();\n        const { destroyKeyboardInteraction, destroyDismissInteraction } = this;\n        if (dismissParentPopover && this.parentPopover) {\n            this.parentPopover.dismiss(data, role, dismissParentPopover);\n        }\n        const shouldDismiss = await dismiss(this, data, role, 'popoverLeave', iosLeaveAnimation, mdLeaveAnimation, this.event);\n        if (shouldDismiss) {\n            if (destroyKeyboardInteraction) {\n                destroyKeyboardInteraction();\n                this.destroyKeyboardInteraction = undefined;\n            }\n            if (destroyDismissInteraction) {\n                destroyDismissInteraction();\n                this.destroyDismissInteraction = undefined;\n            }\n            /**\n             * If using popover inline\n             * we potentially need to use the coreDelegate\n             * so that this works in vanilla JS apps\n             */\n            const { delegate } = this.getDelegate();\n            await detachComponent(delegate, this.usersElement);\n        }\n        unlock();\n        return shouldDismiss;\n    }\n    /**\n     * @internal\n     */\n    async getParentPopover() {\n        return this.parentPopover;\n    }\n    /**\n     * Returns a promise that resolves when the popover did dismiss.\n     */\n    onDidDismiss() {\n        return eventMethod(this.el, 'ionPopoverDidDismiss');\n    }\n    /**\n     * Returns a promise that resolves when the popover will dismiss.\n     */\n    onWillDismiss() {\n        return eventMethod(this.el, 'ionPopoverWillDismiss');\n    }\n    render() {\n        const mode = getIonMode(this);\n        const { onLifecycle, parentPopover, dismissOnSelect, side, arrow, htmlAttributes, focusTrap } = this;\n        const desktop = isPlatform('desktop');\n        const enableArrow = arrow && !parentPopover;\n        return (h(Host, Object.assign({ key: '3a7c4c39384bab1447c4bd6b9b06d7837a09353b', \"aria-modal\": \"true\", \"no-router\": true, tabindex: \"-1\" }, htmlAttributes, { style: {\n                zIndex: `${20000 + this.overlayIndex}`,\n            }, class: Object.assign(Object.assign({}, getClassMap(this.cssClass)), { [mode]: true, 'popover-translucent': this.translucent, 'overlay-hidden': true, 'popover-desktop': desktop, [`popover-side-${side}`]: true, [FOCUS_TRAP_DISABLE_CLASS]: focusTrap === false, 'popover-nested': !!parentPopover }), onIonPopoverDidPresent: onLifecycle, onIonPopoverWillPresent: onLifecycle, onIonPopoverWillDismiss: onLifecycle, onIonPopoverDidDismiss: onLifecycle, onIonBackdropTap: this.onBackdropTap }), !parentPopover && h(\"ion-backdrop\", { key: '38a1c4ad29238d1e81cab407f099121fa4947cce', tappable: this.backdropDismiss, visible: this.showBackdrop, part: \"backdrop\" }), h(\"div\", { key: 'f825494c5e3be89d7fcf0229e29b405bccb13edb', class: \"popover-wrapper ion-overlay-wrapper\", onClick: dismissOnSelect ? () => this.dismiss() : undefined }, enableArrow && h(\"div\", { key: '3acae5a0106389c776c8ffe5bf10f3ff006e0346', class: \"popover-arrow\", part: \"arrow\" }), h(\"div\", { key: '2aa73e9f06b1d2ac4c0d36c23186b9164f395079', class: \"popover-content\", part: \"content\" }, h(\"slot\", { key: '62f5713414aae47dde6a8aef1f9b69af287534ae' })))));\n    }\n    static get is() { return \"ion-popover\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"popover.ios.scss\"],\n            \"md\": [\"popover.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"popover.ios.css\"],\n            \"md\": [\"popover.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"hasController\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"has-controller\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"delegate\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"FrameworkDelegate\",\n                    \"resolved\": \"FrameworkDelegate | undefined\",\n                    \"references\": {\n                        \"FrameworkDelegate\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::FrameworkDelegate\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                }\n            },\n            \"overlayIndex\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"overlay-index\",\n                \"reflect\": false\n            },\n            \"enterAnimation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Animation to use when the popover is presented.\"\n                }\n            },\n            \"leaveAnimation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Animation to use when the popover is dismissed.\"\n                }\n            },\n            \"component\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"ComponentRef\",\n                    \"resolved\": \"Function | HTMLElement | null | string | undefined\",\n                    \"references\": {\n                        \"ComponentRef\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::ComponentRef\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The component to display inside of the popover.\\nYou only need to use this if you are not using\\na JavaScript framework. Otherwise, you can just\\nslot your component inside of `ion-popover`.\"\n                },\n                \"attribute\": \"component\",\n                \"reflect\": false\n            },\n            \"componentProps\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"ComponentProps\",\n                    \"resolved\": \"undefined | { [key: string]: any; }\",\n                    \"references\": {\n                        \"ComponentProps\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::ComponentProps\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The data to pass to the popover component.\\nYou only need to use this if you are not using\\na JavaScript framework. Otherwise, you can just\\nset the props directly on your component.\"\n                }\n            },\n            \"keyboardClose\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the keyboard will be automatically dismissed when the overlay is presented.\"\n                },\n                \"attribute\": \"keyboard-close\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"cssClass\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | string[]\",\n                    \"resolved\": \"string | string[] | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Additional classes to apply for custom CSS. If multiple classes are\\nprovided they should be separated by spaces.\"\n                },\n                \"attribute\": \"css-class\",\n                \"reflect\": false\n            },\n            \"backdropDismiss\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the popover will be dismissed when the backdrop is clicked.\"\n                },\n                \"attribute\": \"backdrop-dismiss\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"event\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"any\",\n                    \"resolved\": \"any\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The event to pass to the popover animation.\"\n                },\n                \"attribute\": \"event\",\n                \"reflect\": false\n            },\n            \"showBackdrop\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, a backdrop will be displayed behind the popover.\\nThis property controls whether or not the backdrop\\ndarkens the screen when the popover is presented.\\nIt does not control whether or not the backdrop\\nis active or present in the DOM.\"\n                },\n                \"attribute\": \"show-backdrop\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"translucent\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the popover will be translucent.\\nOnly applies when the mode is `\\\"ios\\\"` and the device supports\\n[`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\"\n                },\n                \"attribute\": \"translucent\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"animated\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the popover will animate.\"\n                },\n                \"attribute\": \"animated\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"htmlAttributes\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"{ [key: string]: any }\",\n                    \"resolved\": \"undefined | { [key: string]: any; }\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Additional attributes to pass to the popover.\"\n                }\n            },\n            \"triggerAction\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"TriggerAction\",\n                    \"resolved\": \"\\\"click\\\" | \\\"context-menu\\\" | \\\"hover\\\"\",\n                    \"references\": {\n                        \"TriggerAction\": {\n                            \"location\": \"import\",\n                            \"path\": \"./popover-interface\",\n                            \"id\": \"src/components/popover/popover-interface.ts::TriggerAction\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Describes what kind of interaction with the trigger that\\nshould cause the popover to open. Does not apply when the `trigger`\\nproperty is `undefined`.\\nIf `\\\"click\\\"`, the popover will be presented when the trigger is left clicked.\\nIf `\\\"hover\\\"`, the popover will be presented when a pointer hovers over the trigger.\\nIf `\\\"context-menu\\\"`, the popover will be presented when the trigger is right\\nclicked on desktop and long pressed on mobile. This will also prevent your\\ndevice's normal context menu from appearing.\"\n                },\n                \"attribute\": \"trigger-action\",\n                \"reflect\": false,\n                \"defaultValue\": \"'click'\"\n            },\n            \"trigger\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"An ID corresponding to the trigger element that\\ncauses the popover to open. Use the `trigger-action`\\nproperty to customize the interaction that results in\\nthe popover opening.\"\n                },\n                \"attribute\": \"trigger\",\n                \"reflect\": false\n            },\n            \"size\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"PopoverSize\",\n                    \"resolved\": \"\\\"auto\\\" | \\\"cover\\\"\",\n                    \"references\": {\n                        \"PopoverSize\": {\n                            \"location\": \"import\",\n                            \"path\": \"./popover-interface\",\n                            \"id\": \"src/components/popover/popover-interface.ts::PopoverSize\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Describes how to calculate the popover width.\\nIf `\\\"cover\\\"`, the popover width will match the width of the trigger.\\nIf `\\\"auto\\\"`, the popover width will be set to a static default value.\"\n                },\n                \"attribute\": \"size\",\n                \"reflect\": false,\n                \"defaultValue\": \"'auto'\"\n            },\n            \"dismissOnSelect\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the popover will be automatically\\ndismissed when the content has been clicked.\"\n                },\n                \"attribute\": \"dismiss-on-select\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"reference\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"PositionReference\",\n                    \"resolved\": \"\\\"event\\\" | \\\"trigger\\\"\",\n                    \"references\": {\n                        \"PositionReference\": {\n                            \"location\": \"import\",\n                            \"path\": \"./popover-interface\",\n                            \"id\": \"src/components/popover/popover-interface.ts::PositionReference\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Describes what to position the popover relative to.\\nIf `\\\"trigger\\\"`, the popover will be positioned relative\\nto the trigger button. If passing in an event, this is\\ndetermined via event.target.\\nIf `\\\"event\\\"`, the popover will be positioned relative\\nto the x/y coordinates of the trigger action. If passing\\nin an event, this is determined via event.clientX and event.clientY.\"\n                },\n                \"attribute\": \"reference\",\n                \"reflect\": false,\n                \"defaultValue\": \"'trigger'\"\n            },\n            \"side\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"PositionSide\",\n                    \"resolved\": \"\\\"bottom\\\" | \\\"end\\\" | \\\"left\\\" | \\\"right\\\" | \\\"start\\\" | \\\"top\\\"\",\n                    \"references\": {\n                        \"PositionSide\": {\n                            \"location\": \"import\",\n                            \"path\": \"./popover-interface\",\n                            \"id\": \"src/components/popover/popover-interface.ts::PositionSide\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Describes which side of the `reference` point to position\\nthe popover on. The `\\\"start\\\"` and `\\\"end\\\"` values are RTL-aware,\\nand the `\\\"left\\\"` and `\\\"right\\\"` values are not.\"\n                },\n                \"attribute\": \"side\",\n                \"reflect\": false,\n                \"defaultValue\": \"'bottom'\"\n            },\n            \"alignment\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"PositionAlign\",\n                    \"resolved\": \"\\\"center\\\" | \\\"end\\\" | \\\"start\\\" | undefined\",\n                    \"references\": {\n                        \"PositionAlign\": {\n                            \"location\": \"import\",\n                            \"path\": \"./popover-interface\",\n                            \"id\": \"src/components/popover/popover-interface.ts::PositionAlign\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Describes how to align the popover content with the `reference` point.\\nDefaults to `\\\"center\\\"` for `ios` mode, and `\\\"start\\\"` for `md` mode.\"\n                },\n                \"attribute\": \"alignment\",\n                \"reflect\": false\n            },\n            \"arrow\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the popover will display an arrow that points at the\\n`reference` when running in `ios` mode. Does not apply in `md` mode.\"\n                },\n                \"attribute\": \"arrow\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"isOpen\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the popover will open. If `false`, the popover will close.\\nUse this if you need finer grained control over presentation, otherwise\\njust use the popoverController or the `trigger` property.\\nNote: `isOpen` will not automatically be set back to `false` when\\nthe popover dismisses. You will need to do that in your code.\"\n                },\n                \"attribute\": \"is-open\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"keyboardEvents\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": \"If `true` the popover will not register its own keyboard event handlers.\\nThis allows the contents of the popover to handle their own keyboard interactions.\\n\\nIf `false`, the popover will register its own keyboard event handlers for\\nnavigating `ion-list` items within a popover (up/down/home/end/etc.).\\nThis will also cancel browser keyboard event bindings to prevent scroll\\nbehavior in a popover using a list of items.\"\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"keyboard-events\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"focusTrap\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, focus will not be allowed to move outside of this overlay.\\nIf `false`, focus will be allowed to move outside of the overlay.\\n\\nIn most scenarios this property should remain set to `true`. Setting\\nthis property to `false` can cause severe accessibility issues as users\\nrelying on assistive technologies may be able to move focus into\\na confusing state. We recommend only setting this to `false` when\\nabsolutely necessary.\\n\\nDevelopers may want to consider disabling focus trapping if this\\noverlay presents a non-Ionic overlay from a 3rd party library.\\nDevelopers would disable focus trapping on the Ionic overlay\\nwhen presenting the 3rd party overlay and then re-enable\\nfocus trapping when dismissing the 3rd party overlay and moving\\nfocus back to the Ionic overlay.\"\n                },\n                \"attribute\": \"focus-trap\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"keepContentsMounted\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the component passed into `ion-popover` will\\nautomatically be mounted when the popover is created. The\\ncomponent will remain mounted even when the popover is dismissed.\\nHowever, the component will be destroyed when the popover is\\ndestroyed. This property is not reactive and should only be\\nused when initially creating a popover.\\n\\nNote: This feature only applies to inline popovers in JavaScript\\nframeworks such as Angular, React, and Vue.\"\n                },\n                \"attribute\": \"keep-contents-mounted\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"presented\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"didPresent\",\n                \"name\": \"ionPopoverDidPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the popover has presented.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willPresent\",\n                \"name\": \"ionPopoverWillPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the popover has presented.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willDismiss\",\n                \"name\": \"ionPopoverWillDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the popover has dismissed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"didDismiss\",\n                \"name\": \"ionPopoverDidDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the popover has dismissed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"didPresentShorthand\",\n                \"name\": \"didPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the popover has presented.\\nShorthand for ionPopoverWillDismiss.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willPresentShorthand\",\n                \"name\": \"willPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the popover has presented.\\nShorthand for ionPopoverWillPresent.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willDismissShorthand\",\n                \"name\": \"willDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the popover has dismissed.\\nShorthand for ionPopoverWillDismiss.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"didDismissShorthand\",\n                \"name\": \"didDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the popover has dismissed.\\nShorthand for ionPopoverDidDismiss.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"ionMount\",\n                \"name\": \"ionMount\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted before the popover has presented, but after the component\\nhas been mounted in the DOM.\\nThis event exists for ion-popover to resolve an issue with the\\npopover and the lazy build, that the transition is unable to get\\nthe correct dimensions of the popover with auto sizing.\\nThis is not required for other overlays, since the existing\\noverlay transitions are not effected by auto sizing content.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"presentFromTrigger\": {\n                \"complexType\": {\n                    \"signature\": \"(event?: any, focusDescendant?: boolean) => Promise<void>\",\n                    \"parameters\": [{\n                            \"name\": \"event\",\n                            \"type\": \"any\",\n                            \"docs\": \"\"\n                        }, {\n                            \"name\": \"focusDescendant\",\n                            \"type\": \"boolean\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"When opening a popover from a trigger, we should not be\\nmodifying the `event` prop from inside the component.\\nAdditionally, when pressing the \\\"Right\\\" arrow key, we need\\nto shift focus to the first descendant in the newly presented\\npopover.\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            },\n            \"present\": {\n                \"complexType\": {\n                    \"signature\": \"(event?: MouseEvent | TouchEvent | PointerEvent | CustomEvent) => Promise<void>\",\n                    \"parameters\": [{\n                            \"name\": \"event\",\n                            \"type\": \"MouseEvent | TouchEvent | PointerEvent | CustomEvent<any> | undefined\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"MouseEvent\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::MouseEvent\"\n                        },\n                        \"TouchEvent\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::TouchEvent\"\n                        },\n                        \"PointerEvent\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::PointerEvent\"\n                        },\n                        \"CustomEvent\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::CustomEvent\"\n                        },\n                        \"PopoverPresentOptions\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::PopoverPresentOptions\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Present the popover overlay after it has been created.\\nDevelopers can pass a mouse, touch, or pointer event\\nto position the popover relative to where that event\\nwas dispatched.\",\n                    \"tags\": []\n                }\n            },\n            \"dismiss\": {\n                \"complexType\": {\n                    \"signature\": \"(data?: any, role?: string, dismissParentPopover?: boolean) => Promise<boolean>\",\n                    \"parameters\": [{\n                            \"name\": \"data\",\n                            \"type\": \"any\",\n                            \"docs\": \"Any data to emit in the dismiss events.\"\n                        }, {\n                            \"name\": \"role\",\n                            \"type\": \"string | undefined\",\n                            \"docs\": \"The role of the element that is dismissing the popover. For example, 'cancel' or 'backdrop'.\"\n                        }, {\n                            \"name\": \"dismissParentPopover\",\n                            \"type\": \"boolean\",\n                            \"docs\": \"If `true`, dismissing this popover will also dismiss\\na parent popover if this popover is nested. Defaults to `true`.\\n\\nThis is a no-op if the overlay has not been presented yet. If you want\\nto remove an overlay from the DOM that was never presented, use the\\n[remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"PopoverDismissOptions\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::PopoverDismissOptions\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Dismiss the popover overlay after it has been presented.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"data Any data to emit in the dismiss events.\"\n                        }, {\n                            \"name\": \"param\",\n                            \"text\": \"role The role of the element that is dismissing the popover. For example, 'cancel' or 'backdrop'.\"\n                        }, {\n                            \"name\": \"param\",\n                            \"text\": \"dismissParentPopover If `true`, dismissing this popover will also dismiss\\na parent popover if this popover is nested. Defaults to `true`.\\n\\nThis is a no-op if the overlay has not been presented yet. If you want\\nto remove an overlay from the DOM that was never presented, use the\\n[remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\"\n                        }]\n                }\n            },\n            \"getParentPopover\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<HTMLIonPopoverElement | null>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"HTMLIonPopoverElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLIonPopoverElement\"\n                        }\n                    },\n                    \"return\": \"Promise<HTMLIonPopoverElement | null>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            },\n            \"onDidDismiss\": {\n                \"complexType\": {\n                    \"signature\": \"<T = any>() => Promise<OverlayEventDetail<T>>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        },\n                        \"T\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::T\"\n                        }\n                    },\n                    \"return\": \"Promise<OverlayEventDetail<T>>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns a promise that resolves when the popover did dismiss.\",\n                    \"tags\": []\n                }\n            },\n            \"onWillDismiss\": {\n                \"complexType\": {\n                    \"signature\": \"<T = any>() => Promise<OverlayEventDetail<T>>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        },\n                        \"T\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::T\"\n                        }\n                    },\n                    \"return\": \"Promise<OverlayEventDetail<T>>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns a promise that resolves when the popover will dismiss.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"trigger\",\n                \"methodName\": \"onTriggerChange\"\n            }, {\n                \"propName\": \"triggerAction\",\n                \"methodName\": \"onTriggerChange\"\n            }, {\n                \"propName\": \"isOpen\",\n                \"methodName\": \"onIsOpenChange\"\n            }];\n    }\n}\nconst LIFECYCLE_MAP = {\n    ionPopoverDidPresent: 'ionViewDidEnter',\n    ionPopoverWillPresent: 'ionViewWillEnter',\n    ionPopoverWillDismiss: 'ionViewWillLeave',\n    ionPopoverDidDismiss: 'ionViewDidLeave',\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * Uses the compareWith param to compare two values to determine if they are equal.\n *\n * @param currentValue The current value of the control.\n * @param compareValue The value to compare against.\n * @param compareWith The function or property name to use to compare values.\n */\nexport const compareOptions = (currentValue, compareValue, compareWith) => {\n    if (typeof compareWith === 'function') {\n        return compareWith(currentValue, compareValue);\n    }\n    else if (typeof compareWith === 'string') {\n        return currentValue[compareWith] === compareValue[compareWith];\n    }\n    else {\n        return Array.isArray(compareValue) ? compareValue.includes(currentValue) : currentValue === compareValue;\n    }\n};\n/**\n * Compares a value against the current value(s) to determine if it is selected.\n *\n * @param currentValue The current value of the control.\n * @param compareValue The value to compare against.\n * @param compareWith The function or property name to use to compare values.\n */\nexport const isOptionSelected = (currentValue, compareValue, compareWith) => {\n    if (currentValue === undefined) {\n        return false;\n    }\n    if (Array.isArray(currentValue)) {\n        return currentValue.some((val) => compareOptions(val, compareValue, compareWith));\n    }\n    else {\n        return compareOptions(currentValue, compareValue, compareWith);\n    }\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --color: Color of the radio\n   * @prop --color-checked: Color of the checked radio\n   * @prop --border-radius: Border radius of the radio\n   * @prop --inner-border-radius: Border radius of the inner checked radio\n   */\n  --inner-border-radius: 50%;\n  display: inline-block;\n  position: relative;\n  max-width: 100%;\n  min-height: inherit;\n  cursor: pointer;\n  user-select: none;\n  z-index: 2;\n  box-sizing: border-box;\n}\n\n:host(.radio-disabled) {\n  pointer-events: none;\n}\n\n.radio-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  contain: layout size style;\n}\n\n.radio-icon,\n.radio-inner {\n  box-sizing: border-box;\n}\n\ninput {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n  opacity: 0;\n  overflow: hidden;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n:host(:focus) {\n  outline: none;\n}\n\n:host(.in-item) {\n  flex: 1 1 0;\n  width: 100%;\n  height: 100%;\n}\n\n/**\n * Radio can be slotted\n * in components such as item and\n * toolbar which is why we do not\n * limit the below behavior to just ion-item.\n */\n:host([slot=start]),\n:host([slot=end]) {\n  flex: initial;\n  width: auto;\n}\n\n.radio-wrapper {\n  display: flex;\n  position: relative;\n  flex-grow: 1;\n  align-items: center;\n  height: inherit;\n  min-height: inherit;\n  cursor: inherit;\n}\n\n.label-text-wrapper {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n:host(.in-item) .label-text-wrapper {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n:host(.in-item.radio-label-placement-stacked) .label-text-wrapper {\n  margin-top: 10px;\n  margin-bottom: 16px;\n}\n\n:host(.in-item.radio-label-placement-stacked) .native-wrapper {\n  margin-bottom: 10px;\n}\n\n/**\n * If no label text is placed into the slot\n * then the element should be hidden otherwise\n * there will be additional margins added.\n */\n.label-text-wrapper-hidden {\n  display: none;\n}\n\n.native-wrapper {\n  display: flex;\n  align-items: center;\n}\n\n:host(.radio-justify-space-between) .radio-wrapper {\n  justify-content: space-between;\n}\n\n:host(.radio-justify-start) .radio-wrapper {\n  justify-content: start;\n}\n\n:host(.radio-justify-end) .radio-wrapper {\n  justify-content: end;\n}\n\n:host(.radio-alignment-start) .radio-wrapper {\n  align-items: start;\n}\n\n:host(.radio-alignment-center) .radio-wrapper {\n  align-items: center;\n}\n\n/**\n * Label is on the left of the radio in LTR and\n * on the right in RTL.\n */\n:host(.radio-label-placement-start) .radio-wrapper {\n  flex-direction: row;\n}\n\n:host(.radio-label-placement-start) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the radio should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n}\n\n/**\n * Label is on the right of the radio in LTR and\n * on the left in RTL.\n */\n:host(.radio-label-placement-end) .radio-wrapper {\n  flex-direction: row-reverse;\n}\n\n/**\n * The margin between the label and\n * the radio should be on the start\n * when the label sits at the end.\n */\n:host(.radio-label-placement-end) .label-text-wrapper {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 0;\n  margin-inline-end: 0;\n}\n\n:host(.radio-label-placement-fixed) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the radio should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n}\n\n/**\n * Label is on the left of the radio in LTR and\n * on the right in RTL. Label also has a fixed width.\n */\n:host(.radio-label-placement-fixed) .label-text-wrapper {\n  flex: 0 0 100px;\n  width: 100px;\n  min-width: 100px;\n}\n\n/**\n * Label is on top of the radio.\n */\n:host(.radio-label-placement-stacked) .radio-wrapper {\n  flex-direction: column;\n}\n\n:host(.radio-label-placement-stacked) .label-text-wrapper {\n  transform: scale(0.75);\n  /**\n   * The margin between the label and\n   * the radio should be on the bottom\n   * when the label sits on top.\n   */\n  margin-left: 0;\n  margin-right: 0;\n  margin-bottom: 16px;\n  /**\n   * Label text should not extend\n   * beyond the bounds of the radio.\n   */\n  max-width: calc(100% / 0.75);\n}\n\n:host(.radio-label-placement-stacked.radio-alignment-start) .label-text-wrapper {\n  transform-origin: left top;\n}\n:host-context([dir=rtl]):host(.radio-label-placement-stacked.radio-alignment-start) .label-text-wrapper, :host-context([dir=rtl]).radio-label-placement-stacked.radio-alignment-start .label-text-wrapper {\n  transform-origin: right top;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.radio-label-placement-stacked.radio-alignment-start:dir(rtl)) .label-text-wrapper {\n    transform-origin: right top;\n  }\n}\n\n:host(.radio-label-placement-stacked.radio-alignment-center) .label-text-wrapper {\n  transform-origin: center top;\n}\n:host-context([dir=rtl]):host(.radio-label-placement-stacked.radio-alignment-center) .label-text-wrapper, :host-context([dir=rtl]).radio-label-placement-stacked.radio-alignment-center .label-text-wrapper {\n  transform-origin: calc(100% - center) top;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.radio-label-placement-stacked.radio-alignment-center:dir(rtl)) .label-text-wrapper {\n    transform-origin: calc(100% - center) top;\n  }\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --color-checked: var(--ion-color-primary, #0054e9);\n}\n\n:host(.ion-color.radio-checked) .radio-inner {\n  border-color: var(--ion-color-base);\n}\n\n.item-radio.item-ios ion-label {\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n}\n\n.radio-inner {\n  width: 33%;\n  height: 50%;\n}\n\n:host(.radio-checked) .radio-inner {\n  transform: rotate(45deg);\n  border-width: 0.125rem;\n  border-top-width: 0;\n  border-left-width: 0;\n  border-style: solid;\n  border-color: var(--color-checked);\n}\n\n:host(.radio-disabled) {\n  opacity: 0.3;\n}\n\n:host(.ion-focused) .radio-icon::after {\n  border-radius: var(--inner-border-radius);\n  top: -8px;\n  display: block;\n  position: absolute;\n  width: 36px;\n  height: 36px;\n  background: var(--ion-color-primary-tint, #1a65eb);\n  content: \"\";\n  opacity: 0.2;\n}\n:host(.ion-focused) .radio-icon::after {\n  inset-inline-start: -9px;\n}\n\n.native-wrapper .radio-icon {\n  width: 0.9375rem;\n  height: 1.5rem;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --color: Color of the radio\n   * @prop --color-checked: Color of the checked radio\n   * @prop --border-radius: Border radius of the radio\n   * @prop --inner-border-radius: Border radius of the inner checked radio\n   */\n  --inner-border-radius: 50%;\n  display: inline-block;\n  position: relative;\n  max-width: 100%;\n  min-height: inherit;\n  cursor: pointer;\n  user-select: none;\n  z-index: 2;\n  box-sizing: border-box;\n}\n\n:host(.radio-disabled) {\n  pointer-events: none;\n}\n\n.radio-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  contain: layout size style;\n}\n\n.radio-icon,\n.radio-inner {\n  box-sizing: border-box;\n}\n\ninput {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n  opacity: 0;\n  overflow: hidden;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n:host(:focus) {\n  outline: none;\n}\n\n:host(.in-item) {\n  flex: 1 1 0;\n  width: 100%;\n  height: 100%;\n}\n\n/**\n * Radio can be slotted\n * in components such as item and\n * toolbar which is why we do not\n * limit the below behavior to just ion-item.\n */\n:host([slot=start]),\n:host([slot=end]) {\n  flex: initial;\n  width: auto;\n}\n\n.radio-wrapper {\n  display: flex;\n  position: relative;\n  flex-grow: 1;\n  align-items: center;\n  height: inherit;\n  min-height: inherit;\n  cursor: inherit;\n}\n\n.label-text-wrapper {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n:host(.in-item) .label-text-wrapper {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n:host(.in-item.radio-label-placement-stacked) .label-text-wrapper {\n  margin-top: 10px;\n  margin-bottom: 16px;\n}\n\n:host(.in-item.radio-label-placement-stacked) .native-wrapper {\n  margin-bottom: 10px;\n}\n\n/**\n * If no label text is placed into the slot\n * then the element should be hidden otherwise\n * there will be additional margins added.\n */\n.label-text-wrapper-hidden {\n  display: none;\n}\n\n.native-wrapper {\n  display: flex;\n  align-items: center;\n}\n\n:host(.radio-justify-space-between) .radio-wrapper {\n  justify-content: space-between;\n}\n\n:host(.radio-justify-start) .radio-wrapper {\n  justify-content: start;\n}\n\n:host(.radio-justify-end) .radio-wrapper {\n  justify-content: end;\n}\n\n:host(.radio-alignment-start) .radio-wrapper {\n  align-items: start;\n}\n\n:host(.radio-alignment-center) .radio-wrapper {\n  align-items: center;\n}\n\n/**\n * Label is on the left of the radio in LTR and\n * on the right in RTL.\n */\n:host(.radio-label-placement-start) .radio-wrapper {\n  flex-direction: row;\n}\n\n:host(.radio-label-placement-start) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the radio should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n}\n\n/**\n * Label is on the right of the radio in LTR and\n * on the left in RTL.\n */\n:host(.radio-label-placement-end) .radio-wrapper {\n  flex-direction: row-reverse;\n}\n\n/**\n * The margin between the label and\n * the radio should be on the start\n * when the label sits at the end.\n */\n:host(.radio-label-placement-end) .label-text-wrapper {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 0;\n  margin-inline-end: 0;\n}\n\n:host(.radio-label-placement-fixed) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the radio should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n}\n\n/**\n * Label is on the left of the radio in LTR and\n * on the right in RTL. Label also has a fixed width.\n */\n:host(.radio-label-placement-fixed) .label-text-wrapper {\n  flex: 0 0 100px;\n  width: 100px;\n  min-width: 100px;\n}\n\n/**\n * Label is on top of the radio.\n */\n:host(.radio-label-placement-stacked) .radio-wrapper {\n  flex-direction: column;\n}\n\n:host(.radio-label-placement-stacked) .label-text-wrapper {\n  transform: scale(0.75);\n  /**\n   * The margin between the label and\n   * the radio should be on the bottom\n   * when the label sits on top.\n   */\n  margin-left: 0;\n  margin-right: 0;\n  margin-bottom: 16px;\n  /**\n   * Label text should not extend\n   * beyond the bounds of the radio.\n   */\n  max-width: calc(100% / 0.75);\n}\n\n:host(.radio-label-placement-stacked.radio-alignment-start) .label-text-wrapper {\n  transform-origin: left top;\n}\n:host-context([dir=rtl]):host(.radio-label-placement-stacked.radio-alignment-start) .label-text-wrapper, :host-context([dir=rtl]).radio-label-placement-stacked.radio-alignment-start .label-text-wrapper {\n  transform-origin: right top;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.radio-label-placement-stacked.radio-alignment-start:dir(rtl)) .label-text-wrapper {\n    transform-origin: right top;\n  }\n}\n\n:host(.radio-label-placement-stacked.radio-alignment-center) .label-text-wrapper {\n  transform-origin: center top;\n}\n:host-context([dir=rtl]):host(.radio-label-placement-stacked.radio-alignment-center) .label-text-wrapper, :host-context([dir=rtl]).radio-label-placement-stacked.radio-alignment-center .label-text-wrapper {\n  transform-origin: calc(100% - center) top;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.radio-label-placement-stacked.radio-alignment-center:dir(rtl)) .label-text-wrapper {\n    transform-origin: calc(100% - center) top;\n  }\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --color: rgb(var(--ion-text-color-rgb, 0, 0, 0), 0.6);\n  --color-checked: var(--ion-color-primary, #0054e9);\n  --border-width: 0.125rem;\n  --border-style: solid;\n  --border-radius: 50%;\n}\n\n:host(.ion-color) .radio-inner {\n  background: var(--ion-color-base);\n}\n\n:host(.ion-color.radio-checked) .radio-icon {\n  border-color: var(--ion-color-base);\n}\n\n.radio-icon {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  border-radius: var(--border-radius);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--color);\n}\n\n.radio-inner {\n  border-radius: var(--inner-border-radius);\n  width: calc(50% + var(--border-width));\n  height: calc(50% + var(--border-width));\n  transform: scale3d(0, 0, 0);\n  transition: transform 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  background: var(--color-checked);\n}\n\n:host(.radio-checked) .radio-icon {\n  border-color: var(--color-checked);\n}\n\n:host(.radio-checked) .radio-inner {\n  transform: scale3d(1, 1, 1);\n}\n\n:host(.radio-disabled) .label-text-wrapper {\n  opacity: 0.38;\n}\n\n:host(.radio-disabled) .native-wrapper {\n  opacity: 0.63;\n}\n\n:host(.ion-focused) .radio-icon::after {\n  border-radius: var(--inner-border-radius);\n  display: block;\n  position: absolute;\n  width: 36px;\n  height: 36px;\n  background: var(--ion-color-primary-tint, #1a65eb);\n  content: \"\";\n  opacity: 0.2;\n}\n\n.native-wrapper .radio-icon {\n  width: 1.25rem;\n  height: 1.25rem;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { isOptionSelected } from \"../../utils/forms/index\";\nimport { addEventListener, removeEventListener } from \"../../utils/helpers\";\nimport { createColorClasses, hostContext } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @slot - The label text to associate with the radio. Use the \"labelPlacement\" property to control where the label is placed relative to the radio.\n *\n * @part container - The container for the radio mark.\n * @part label - The label text describing the radio.\n * @part mark - The checkmark or dot used to indicate the checked state.\n */\nexport class Radio {\n    constructor() {\n        this.inputId = `ion-rb-${radioButtonIds++}`;\n        this.radioGroup = null;\n        this.updateState = () => {\n            if (this.radioGroup) {\n                const { compareWith, value: radioGroupValue } = this.radioGroup;\n                this.checked = isOptionSelected(radioGroupValue, this.value, compareWith);\n            }\n        };\n        this.onClick = () => {\n            const { radioGroup, checked, disabled } = this;\n            if (disabled) {\n                return;\n            }\n            /**\n             * The modern control does not use a native input\n             * inside of the radio host, so we cannot rely on the\n             * ev.preventDefault() behavior above. If the radio\n             * is checked and the parent radio group allows for empty\n             * selection, then we can set the checked state to false.\n             * Otherwise, the checked state should always be set\n             * to true because the checked state cannot be toggled.\n             */\n            if (checked && (radioGroup === null || radioGroup === void 0 ? void 0 : radioGroup.allowEmptySelection)) {\n                this.checked = false;\n            }\n            else {\n                this.checked = true;\n            }\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.checked = false;\n        this.buttonTabindex = -1;\n        this.color = undefined;\n        this.name = this.inputId;\n        this.disabled = false;\n        this.value = undefined;\n        this.labelPlacement = 'start';\n        this.justify = 'space-between';\n        this.alignment = 'center';\n    }\n    valueChanged() {\n        /**\n         * The new value of the radio may\n         * match the radio group's value,\n         * so we see if it should be checked.\n         */\n        this.updateState();\n    }\n    componentDidLoad() {\n        /**\n         * The value may be `undefined` if it\n         * gets set before the radio is\n         * rendered. This ensures that the radio\n         * is checked if the value matches. This\n         * happens most often when Angular is\n         * rendering the radio.\n         */\n        this.updateState();\n    }\n    /** @internal */\n    async setFocus(ev) {\n        ev.stopPropagation();\n        ev.preventDefault();\n        this.el.focus();\n    }\n    /** @internal */\n    async setButtonTabindex(value) {\n        this.buttonTabindex = value;\n    }\n    connectedCallback() {\n        if (this.value === undefined) {\n            this.value = this.inputId;\n        }\n        const radioGroup = (this.radioGroup = this.el.closest('ion-radio-group'));\n        if (radioGroup) {\n            this.updateState();\n            addEventListener(radioGroup, 'ionValueChange', this.updateState);\n        }\n    }\n    disconnectedCallback() {\n        const radioGroup = this.radioGroup;\n        if (radioGroup) {\n            removeEventListener(radioGroup, 'ionValueChange', this.updateState);\n            this.radioGroup = null;\n        }\n    }\n    get hasLabel() {\n        return this.el.textContent !== '';\n    }\n    renderRadioControl() {\n        return (h(\"div\", { class: \"radio-icon\", part: \"container\" }, h(\"div\", { class: \"radio-inner\", part: \"mark\" }), h(\"div\", { class: \"radio-ripple\" })));\n    }\n    render() {\n        const { checked, disabled, color, el, justify, labelPlacement, hasLabel, buttonTabindex, alignment } = this;\n        const mode = getIonMode(this);\n        const inItem = hostContext('ion-item', el);\n        return (h(Host, { key: '43c95effb6acb119733270e8a5e02fe18b47ee4b', onFocus: this.onFocus, onBlur: this.onBlur, onClick: this.onClick, class: createColorClasses(color, {\n                [mode]: true,\n                'in-item': inItem,\n                'radio-checked': checked,\n                'radio-disabled': disabled,\n                [`radio-justify-${justify}`]: true,\n                [`radio-alignment-${alignment}`]: true,\n                [`radio-label-placement-${labelPlacement}`]: true,\n                // Focus and active styling should not apply when the radio is in an item\n                'ion-activatable': !inItem,\n                'ion-focusable': !inItem,\n            }), role: \"radio\", \"aria-checked\": checked ? 'true' : 'false', \"aria-disabled\": disabled ? 'true' : null, tabindex: buttonTabindex }, h(\"label\", { key: '168ea77c08fde9832077d617662b93dc9986b544', class: \"radio-wrapper\" }, h(\"div\", { key: 'ce1e6eee63fbab1e5a66b18f767f4eecc2a227f1', class: {\n                'label-text-wrapper': true,\n                'label-text-wrapper-hidden': !hasLabel,\n            }, part: \"label\" }, h(\"slot\", { key: '7d849e43d4356b5c3978c2bba9a6fba5d21ca69d' })), h(\"div\", { key: 'e741f7822364958b050a232bdfccdc413095c244', class: \"native-wrapper\" }, this.renderRadioControl()))));\n    }\n    static get is() { return \"ion-radio\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"radio.ios.scss\"],\n            \"md\": [\"radio.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"radio.ios.css\"],\n            \"md\": [\"radio.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The name of the control, which is submitted with the form data.\"\n                },\n                \"attribute\": \"name\",\n                \"reflect\": false,\n                \"defaultValue\": \"this.inputId\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the radio.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"value\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"any | null\",\n                    \"resolved\": \"any\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"the value of the radio.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false\n            },\n            \"labelPlacement\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'start' | 'end' | 'fixed' | 'stacked'\",\n                    \"resolved\": \"\\\"end\\\" | \\\"fixed\\\" | \\\"stacked\\\" | \\\"start\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Where to place the label relative to the radio.\\n`\\\"start\\\"`: The label will appear to the left of the radio in LTR and to the right in RTL.\\n`\\\"end\\\"`: The label will appear to the right of the radio in LTR and to the left in RTL.\\n`\\\"fixed\\\"`: The label has the same behavior as `\\\"start\\\"` except it also has a fixed width. Long text will be truncated with ellipses (\\\"...\\\").\\n`\\\"stacked\\\"`: The label will appear above the radio regardless of the direction. The alignment of the label can be controlled with the `alignment` property.\"\n                },\n                \"attribute\": \"label-placement\",\n                \"reflect\": false,\n                \"defaultValue\": \"'start'\"\n            },\n            \"justify\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'start' | 'end' | 'space-between'\",\n                    \"resolved\": \"\\\"end\\\" | \\\"space-between\\\" | \\\"start\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"How to pack the label and radio within a line.\\n`\\\"start\\\"`: The label and radio will appear on the left in LTR and\\non the right in RTL.\\n`\\\"end\\\"`: The label and radio will appear on the right in LTR and\\non the left in RTL.\\n`\\\"space-between\\\"`: The label and radio will appear on opposite\\nends of the line with space between the two elements.\"\n                },\n                \"attribute\": \"justify\",\n                \"reflect\": false,\n                \"defaultValue\": \"'space-between'\"\n            },\n            \"alignment\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'start' | 'center'\",\n                    \"resolved\": \"\\\"center\\\" | \\\"start\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"How to control the alignment of the radio and label on the cross axis.\\n`\\\"start\\\"`: The label and control will appear on the left of the cross axis in LTR, and on the right side in RTL.\\n`\\\"center\\\"`: The label and control will appear at the center of the cross axis in both LTR and RTL.\"\n                },\n                \"attribute\": \"alignment\",\n                \"reflect\": false,\n                \"defaultValue\": \"'center'\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"checked\": {},\n            \"buttonTabindex\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionFocus\",\n                \"name\": \"ionFocus\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the radio button has focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionBlur\",\n                \"name\": \"ionBlur\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the radio button loses focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"(ev: globalThis.Event) => Promise<void>\",\n                    \"parameters\": [{\n                            \"name\": \"ev\",\n                            \"type\": \"Event\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"globalThis\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::globalThis\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            },\n            \"setButtonTabindex\": {\n                \"complexType\": {\n                    \"signature\": \"(value: number) => Promise<void>\",\n                    \"parameters\": [{\n                            \"name\": \"value\",\n                            \"type\": \"number\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"value\",\n                \"methodName\": \"valueChanged\"\n            }];\n    }\n}\nlet radioButtonIds = 0;\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { renderHiddenInput } from \"../../utils/helpers\";\nimport { getIonMode } from \"../../global/ionic-global\";\nexport class RadioGroup {\n    constructor() {\n        this.inputId = `ion-rg-${radioGroupIds++}`;\n        this.labelId = `${this.inputId}-lbl`;\n        this.setRadioTabindex = (value) => {\n            const radios = this.getRadios();\n            // Get the first radio that is not disabled and the checked one\n            const first = radios.find((radio) => !radio.disabled);\n            const checked = radios.find((radio) => radio.value === value && !radio.disabled);\n            if (!first && !checked) {\n                return;\n            }\n            // If an enabled checked radio exists, set it to be the focusable radio\n            // otherwise we default to focus the first radio\n            const focusable = checked || first;\n            for (const radio of radios) {\n                const tabindex = radio === focusable ? 0 : -1;\n                radio.setButtonTabindex(tabindex);\n            }\n        };\n        this.onClick = (ev) => {\n            ev.preventDefault();\n            /**\n             * The Radio Group component mandates that only one radio button\n             * within the group can be selected at any given time. Since `ion-radio`\n             * is a shadow DOM component, it cannot natively perform this behavior\n             * using the `name` attribute.\n             */\n            const selectedRadio = ev.target && ev.target.closest('ion-radio');\n            /**\n             * Our current disabled prop definition causes Stencil to mark it\n             * as optional. While this is not desired, fixing this behavior\n             * in Stencil is a significant breaking change, so this effort is\n             * being de-risked in STENCIL-917. Until then, we compromise\n             * here by checking for falsy `disabled` values instead of strictly\n             * checking `disabled === false`.\n             */\n            if (selectedRadio && !selectedRadio.disabled) {\n                const currentValue = this.value;\n                const newValue = selectedRadio.value;\n                if (newValue !== currentValue) {\n                    this.value = newValue;\n                    this.emitValueChange(ev);\n                }\n                else if (this.allowEmptySelection) {\n                    this.value = undefined;\n                    this.emitValueChange(ev);\n                }\n            }\n        };\n        this.allowEmptySelection = false;\n        this.compareWith = undefined;\n        this.name = this.inputId;\n        this.value = undefined;\n    }\n    valueChanged(value) {\n        this.setRadioTabindex(value);\n        this.ionValueChange.emit({ value });\n    }\n    componentDidLoad() {\n        /**\n         * There's an issue when assigning a value to the radio group\n         * within the Angular primary content (rendering within the\n         * app component template). When the template is isolated to a route,\n         * the value is assigned correctly.\n         * To address this issue, we need to ensure that the watcher is\n         * called after the component has finished loading,\n         * allowing the emit to be dispatched correctly.\n         */\n        this.valueChanged(this.value);\n    }\n    async connectedCallback() {\n        // Get the list header if it exists and set the id\n        // this is used to set aria-labelledby\n        const header = this.el.querySelector('ion-list-header') || this.el.querySelector('ion-item-divider');\n        if (header) {\n            const label = (this.label = header.querySelector('ion-label'));\n            if (label) {\n                this.labelId = label.id = this.name + '-lbl';\n            }\n        }\n    }\n    getRadios() {\n        return Array.from(this.el.querySelectorAll('ion-radio'));\n    }\n    /**\n     * Emits an `ionChange` event.\n     *\n     * This API should be called for user committed changes.\n     * This API should not be used for external value changes.\n     */\n    emitValueChange(event) {\n        const { value } = this;\n        this.ionChange.emit({ value, event });\n    }\n    onKeydown(ev) {\n        const inSelectPopover = !!this.el.closest('ion-select-popover');\n        if (ev.target && !this.el.contains(ev.target)) {\n            return;\n        }\n        // Get all radios inside of the radio group and then\n        // filter out disabled radios since we need to skip those\n        const radios = this.getRadios().filter((radio) => !radio.disabled);\n        // Only move the radio if the current focus is in the radio group\n        if (ev.target && radios.includes(ev.target)) {\n            const index = radios.findIndex((radio) => radio === ev.target);\n            const current = radios[index];\n            let next;\n            // If hitting arrow down or arrow right, move to the next radio\n            // If we're on the last radio, move to the first radio\n            if (['ArrowDown', 'ArrowRight'].includes(ev.key)) {\n                next = index === radios.length - 1 ? radios[0] : radios[index + 1];\n            }\n            // If hitting arrow up or arrow left, move to the previous radio\n            // If we're on the first radio, move to the last radio\n            if (['ArrowUp', 'ArrowLeft'].includes(ev.key)) {\n                next = index === 0 ? radios[radios.length - 1] : radios[index - 1];\n            }\n            if (next && radios.includes(next)) {\n                next.setFocus(ev);\n                if (!inSelectPopover) {\n                    this.value = next.value;\n                    this.emitValueChange(ev);\n                }\n            }\n            // Update the radio group value when a user presses the\n            // space bar on top of a selected radio\n            if ([' '].includes(ev.key)) {\n                const previousValue = this.value;\n                this.value = this.allowEmptySelection && this.value !== undefined ? undefined : current.value;\n                if (previousValue !== this.value || this.allowEmptySelection) {\n                    /**\n                     * Value change should only be emitted if the value is different,\n                     * such as selecting a new radio with the space bar or if\n                     * the radio group allows for empty selection and the user\n                     * is deselecting a checked radio.\n                     */\n                    this.emitValueChange(ev);\n                }\n                // Prevent browsers from jumping\n                // to the bottom of the screen\n                ev.preventDefault();\n            }\n        }\n    }\n    render() {\n        const { label, labelId, el, name, value } = this;\n        const mode = getIonMode(this);\n        renderHiddenInput(true, el, name, value, false);\n        return h(Host, { key: '7a8ad7eb6a05c6f96a348dcf30fd0c610a95688c', role: \"radiogroup\", \"aria-labelledby\": label ? labelId : null, onClick: this.onClick, class: mode });\n    }\n    static get is() { return \"ion-radio-group\"; }\n    static get properties() {\n        return {\n            \"allowEmptySelection\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the radios can be deselected.\"\n                },\n                \"attribute\": \"allow-empty-selection\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"compareWith\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | RadioGroupCompareFn | null\",\n                    \"resolved\": \"((currentValue: any, compareValue: any) => boolean) | null | string | undefined\",\n                    \"references\": {\n                        \"RadioGroupCompareFn\": {\n                            \"location\": \"import\",\n                            \"path\": \"./radio-group-interface\",\n                            \"id\": \"src/components/radio-group/radio-group-interface.ts::RadioGroupCompareFn\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"This property allows developers to specify a custom function or property\\nname for comparing objects when determining the selected option in the\\nion-radio-group. When not specified, the default behavior will use strict\\nequality (===) for comparison.\"\n                },\n                \"attribute\": \"compare-with\",\n                \"reflect\": false\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The name of the control, which is submitted with the form data.\"\n                },\n                \"attribute\": \"name\",\n                \"reflect\": false,\n                \"defaultValue\": \"this.inputId\"\n            },\n            \"value\": {\n                \"type\": \"any\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"any | null\",\n                    \"resolved\": \"any\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"the value of the radio group.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionChange\",\n                \"name\": \"ionChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the value has changed.\\n\\nThis event will not emit when programmatically setting the `value` property.\"\n                },\n                \"complexType\": {\n                    \"original\": \"RadioGroupChangeEventDetail\",\n                    \"resolved\": \"RadioGroupChangeEventDetail<any>\",\n                    \"references\": {\n                        \"RadioGroupChangeEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"./radio-group-interface\",\n                            \"id\": \"src/components/radio-group/radio-group-interface.ts::RadioGroupChangeEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"ionValueChange\",\n                \"name\": \"ionValueChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted when the `value` property has changed.\\nThis is used to ensure that `ion-radio` can respond\\nto any value property changes from the group.\"\n                },\n                \"complexType\": {\n                    \"original\": \"RadioGroupChangeEventDetail\",\n                    \"resolved\": \"RadioGroupChangeEventDetail<any>\",\n                    \"references\": {\n                        \"RadioGroupChangeEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"./radio-group-interface\",\n                            \"id\": \"src/components/radio-group/radio-group-interface.ts::RadioGroupChangeEventDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"value\",\n                \"methodName\": \"valueChanged\"\n            }];\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"keydown\",\n                \"method\": \"onKeydown\",\n                \"target\": \"document\",\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\nlet radioGroupIds = 0;\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  contain: strict;\n  pointer-events: none;\n}\n\n:host(.unbounded) {\n  contain: layout size style;\n}\n\n.ripple-effect {\n  border-radius: 50%;\n  position: absolute;\n  background-color: currentColor;\n  color: inherit;\n  contain: strict;\n  opacity: 0;\n  animation: 225ms rippleAnimation forwards, 75ms fadeInAnimation forwards;\n  will-change: transform, opacity;\n  pointer-events: none;\n}\n\n.fade-out {\n  transform: translate(var(--translate-end)) scale(var(--final-scale, 1));\n  animation: 150ms fadeOutAnimation forwards;\n}\n\n@keyframes rippleAnimation {\n  from {\n    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    transform: scale(1);\n  }\n  to {\n    transform: translate(var(--translate-end)) scale(var(--final-scale, 1));\n  }\n}\n@keyframes fadeInAnimation {\n  from {\n    animation-timing-function: linear;\n    opacity: 0;\n  }\n  to {\n    opacity: 0.16;\n  }\n}\n@keyframes fadeOutAnimation {\n  from {\n    animation-timing-function: linear;\n    opacity: 0.16;\n  }\n  to {\n    opacity: 0;\n  }\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h, readTask, writeTask } from \"@stencil/core\";\nimport { getIonMode } from \"../../global/ionic-global\";\nexport class RippleEffect {\n    constructor() {\n        this.type = 'bounded';\n    }\n    /**\n     * Adds the ripple effect to the parent element.\n     *\n     * @param x The horizontal coordinate of where the ripple should start.\n     * @param y The vertical coordinate of where the ripple should start.\n     */\n    async addRipple(x, y) {\n        return new Promise((resolve) => {\n            readTask(() => {\n                const rect = this.el.getBoundingClientRect();\n                const width = rect.width;\n                const height = rect.height;\n                const hypotenuse = Math.sqrt(width * width + height * height);\n                const maxDim = Math.max(height, width);\n                const maxRadius = this.unbounded ? maxDim : hypotenuse + PADDING;\n                const initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);\n                const finalScale = maxRadius / initialSize;\n                let posX = x - rect.left;\n                let posY = y - rect.top;\n                if (this.unbounded) {\n                    posX = width * 0.5;\n                    posY = height * 0.5;\n                }\n                const styleX = posX - initialSize * 0.5;\n                const styleY = posY - initialSize * 0.5;\n                const moveX = width * 0.5 - posX;\n                const moveY = height * 0.5 - posY;\n                writeTask(() => {\n                    const div = document.createElement('div');\n                    div.classList.add('ripple-effect');\n                    const style = div.style;\n                    style.top = styleY + 'px';\n                    style.left = styleX + 'px';\n                    style.width = style.height = initialSize + 'px';\n                    style.setProperty('--final-scale', `${finalScale}`);\n                    style.setProperty('--translate-end', `${moveX}px, ${moveY}px`);\n                    const container = this.el.shadowRoot || this.el;\n                    container.appendChild(div);\n                    setTimeout(() => {\n                        resolve(() => {\n                            removeRipple(div);\n                        });\n                    }, 225 + 100);\n                });\n            });\n        });\n    }\n    get unbounded() {\n        return this.type === 'unbounded';\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: '2302f087ab1c6755355736e4ca77309c5fdcf185', role: \"presentation\", class: {\n                [mode]: true,\n                unbounded: this.unbounded,\n            } }));\n    }\n    static get is() { return \"ion-ripple-effect\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"ripple-effect.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"ripple-effect.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"type\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'bounded' | 'unbounded'\",\n                    \"resolved\": \"\\\"bounded\\\" | \\\"unbounded\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Sets the type of ripple-effect:\\n\\n- `bounded`: the ripple effect expands from the user's click position\\n- `unbounded`: the ripple effect expands from the center of the button and overflows the container.\\n\\nNOTE: Surfaces for bounded ripples should have the overflow property set to hidden,\\nwhile surfaces for unbounded ripples should have it set to visible.\"\n                },\n                \"attribute\": \"type\",\n                \"reflect\": false,\n                \"defaultValue\": \"'bounded'\"\n            }\n        };\n    }\n    static get methods() {\n        return {\n            \"addRipple\": {\n                \"complexType\": {\n                    \"signature\": \"(x: number, y: number) => Promise<() => void>\",\n                    \"parameters\": [{\n                            \"name\": \"x\",\n                            \"type\": \"number\",\n                            \"docs\": \"The horizontal coordinate of where the ripple should start.\"\n                        }, {\n                            \"name\": \"y\",\n                            \"type\": \"number\",\n                            \"docs\": \"The vertical coordinate of where the ripple should start.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<() => void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Adds the ripple effect to the parent element.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"x The horizontal coordinate of where the ripple should start.\"\n                        }, {\n                            \"name\": \"param\",\n                            \"text\": \"y The vertical coordinate of where the ripple should start.\"\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\nconst removeRipple = (ripple) => {\n    ripple.classList.add('fade-out');\n    setTimeout(() => {\n        ripple.remove();\n    }, 200);\n};\nconst PADDING = 10;\nconst INITIAL_ORIGIN_SCALE = 0.5;\n","// TODO(FW-2832): types\nexport class Route {\n    constructor() {\n        this.url = '';\n        this.component = undefined;\n        this.componentProps = undefined;\n        this.beforeLeave = undefined;\n        this.beforeEnter = undefined;\n    }\n    onUpdate(newValue) {\n        this.ionRouteDataChanged.emit(newValue);\n    }\n    onComponentProps(newValue, oldValue) {\n        if (newValue === oldValue) {\n            return;\n        }\n        const keys1 = newValue ? Object.keys(newValue) : [];\n        const keys2 = oldValue ? Object.keys(oldValue) : [];\n        if (keys1.length !== keys2.length) {\n            this.onUpdate(newValue);\n            return;\n        }\n        for (const key of keys1) {\n            if (newValue[key] !== oldValue[key]) {\n                this.onUpdate(newValue);\n                return;\n            }\n        }\n    }\n    connectedCallback() {\n        this.ionRouteDataChanged.emit();\n    }\n    static get is() { return \"ion-route\"; }\n    static get properties() {\n        return {\n            \"url\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Relative path that needs to match in order for this route to apply.\\n\\nAccepts paths similar to expressjs so that you can define parameters\\nin the url /foo/:bar where bar would be available in incoming props.\"\n                },\n                \"attribute\": \"url\",\n                \"reflect\": false,\n                \"defaultValue\": \"''\"\n            },\n            \"component\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Name of the component to load/select in the navigation outlet (`ion-tabs`, `ion-nav`)\\nwhen the route matches.\\n\\nThe value of this property is not always the tagname of the component to load,\\nin `ion-tabs` it actually refers to the name of the `ion-tab` to select.\"\n                },\n                \"attribute\": \"component\",\n                \"reflect\": false\n            },\n            \"componentProps\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"{ [key: string]: any }\",\n                    \"resolved\": \"undefined | { [key: string]: any; }\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"A key value `{ 'red': true, 'blue': 'white'}` containing props that should be passed\\nto the defined component when rendered.\"\n                }\n            },\n            \"beforeLeave\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"NavigationHookCallback\",\n                    \"resolved\": \"(() => NavigationHookResult | Promise<NavigationHookResult>) | undefined\",\n                    \"references\": {\n                        \"NavigationHookCallback\": {\n                            \"location\": \"import\",\n                            \"path\": \"./route-interface\",\n                            \"id\": \"src/components/route/route-interface.ts::NavigationHookCallback\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"A navigation hook that is fired when the route tries to leave.\\nReturning `true` allows the navigation to proceed, while returning\\n`false` causes it to be cancelled. Returning a `NavigationHookOptions`\\nobject causes the router to redirect to the path specified.\"\n                }\n            },\n            \"beforeEnter\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"NavigationHookCallback\",\n                    \"resolved\": \"(() => NavigationHookResult | Promise<NavigationHookResult>) | undefined\",\n                    \"references\": {\n                        \"NavigationHookCallback\": {\n                            \"location\": \"import\",\n                            \"path\": \"./route-interface\",\n                            \"id\": \"src/components/route/route-interface.ts::NavigationHookCallback\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"A navigation hook that is fired when the route tries to enter.\\nReturning `true` allows the navigation to proceed, while returning\\n`false` causes it to be cancelled. Returning a `NavigationHookOptions`\\nobject causes the router to redirect to the path specified.\"\n                }\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionRouteDataChanged\",\n                \"name\": \"ionRouteDataChanged\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Used internally by `ion-router` to know when this route did change.\"\n                },\n                \"complexType\": {\n                    \"original\": \"any\",\n                    \"resolved\": \"any\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get watchers() {\n        return [{\n                \"propName\": \"url\",\n                \"methodName\": \"onUpdate\"\n            }, {\n                \"propName\": \"component\",\n                \"methodName\": \"onUpdate\"\n            }, {\n                \"propName\": \"componentProps\",\n                \"methodName\": \"onComponentProps\"\n            }];\n    }\n}\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nexport const ROUTER_INTENT_NONE = 'root';\nexport const ROUTER_INTENT_FORWARD = 'forward';\nexport const ROUTER_INTENT_BACK = 'back';\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { ROUTER_INTENT_FORWARD } from \"./constants\";\n/** Join the non empty segments with \"/\". */\nexport const generatePath = (segments) => {\n    const path = segments.filter((s) => s.length > 0).join('/');\n    return '/' + path;\n};\nconst generateUrl = (segments, useHash, queryString) => {\n    let url = generatePath(segments);\n    if (useHash) {\n        url = '#' + url;\n    }\n    if (queryString !== undefined) {\n        url += '?' + queryString;\n    }\n    return url;\n};\nexport const writeSegments = (history, root, useHash, segments, direction, state, queryString) => {\n    const url = generateUrl([...parsePath(root).segments, ...segments], useHash, queryString);\n    if (direction === ROUTER_INTENT_FORWARD) {\n        history.pushState(state, '', url);\n    }\n    else {\n        history.replaceState(state, '', url);\n    }\n};\n/**\n * Transforms a chain to a list of segments.\n *\n * Notes:\n * - parameter segments of the form :param are replaced with their value,\n * - null is returned when a value is missing for any parameter segment.\n */\nexport const chainToSegments = (chain) => {\n    const segments = [];\n    for (const route of chain) {\n        for (const segment of route.segments) {\n            if (segment[0] === ':') {\n                // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n                const param = route.params && route.params[segment.slice(1)];\n                if (!param) {\n                    return null;\n                }\n                segments.push(param);\n            }\n            else if (segment !== '') {\n                segments.push(segment);\n            }\n        }\n    }\n    return segments;\n};\n/**\n * Removes the prefix segments from the path segments.\n *\n * Return:\n * - null when the path segments do not start with the passed prefix,\n * - the path segments after the prefix otherwise.\n */\nconst removePrefix = (prefix, segments) => {\n    if (prefix.length > segments.length) {\n        return null;\n    }\n    if (prefix.length <= 1 && prefix[0] === '') {\n        return segments;\n    }\n    for (let i = 0; i < prefix.length; i++) {\n        if (prefix[i] !== segments[i]) {\n            return null;\n        }\n    }\n    if (segments.length === prefix.length) {\n        return [''];\n    }\n    return segments.slice(prefix.length);\n};\nexport const readSegments = (loc, root, useHash) => {\n    const prefix = parsePath(root).segments;\n    const pathname = useHash ? loc.hash.slice(1) : loc.pathname;\n    const segments = parsePath(pathname).segments;\n    return removePrefix(prefix, segments);\n};\n/**\n * Parses the path to:\n * - segments an array of '/' separated parts,\n * - queryString (undefined when no query string).\n */\nexport const parsePath = (path) => {\n    let segments = [''];\n    let queryString;\n    if (path != null) {\n        const qsStart = path.indexOf('?');\n        if (qsStart > -1) {\n            queryString = path.substring(qsStart + 1);\n            path = path.substring(0, qsStart);\n        }\n        segments = path\n            .split('/')\n            .map((s) => s.trim())\n            .filter((s) => s.length > 0);\n        if (segments.length === 0) {\n            segments = [''];\n        }\n    }\n    return { segments, queryString };\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { generatePath } from \"./path\";\nexport const printRoutes = (routes) => {\n    console.group(`[ion-core] ROUTES[${routes.length}]`);\n    for (const chain of routes) {\n        const segments = [];\n        chain.forEach((r) => segments.push(...r.segments));\n        const ids = chain.map((r) => r.id);\n        console.debug(`%c ${generatePath(segments)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\n    }\n    console.groupEnd();\n};\nexport const printRedirects = (redirects) => {\n    console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\n    for (const redirect of redirects) {\n        if (redirect.to) {\n            console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to.segments)}`, 'font-weight: bold');\n        }\n    }\n    console.groupEnd();\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { componentOnReady } from \"../../../utils/helpers\";\nimport { ROUTER_INTENT_NONE } from \"./constants\";\n/**\n * Activates the passed route chain.\n *\n * There must be exactly one outlet per route entry in the chain.\n *\n * The methods calls setRouteId on each of the outlet with the corresponding route entry in the chain.\n * setRouteId will create or select the view in the outlet.\n */\nexport const writeNavState = async (root, chain, direction, index, changed = false, animation) => {\n    try {\n        // find next navigation outlet in the DOM\n        const outlet = searchNavNode(root);\n        // make sure we can continue interacting the DOM, otherwise abort\n        if (index >= chain.length || !outlet) {\n            return changed;\n        }\n        await new Promise((resolve) => componentOnReady(outlet, resolve));\n        const route = chain[index];\n        const result = await outlet.setRouteId(route.id, route.params, direction, animation);\n        // if the outlet changed the page, reset navigation to neutral (no direction)\n        // this means nested outlets will not animate\n        if (result.changed) {\n            direction = ROUTER_INTENT_NONE;\n            changed = true;\n        }\n        // recursively set nested outlets\n        changed = await writeNavState(result.element, chain, direction, index + 1, changed, animation);\n        // once all nested outlets are visible let's make the parent visible too,\n        // using markVisible prevents flickering\n        if (result.markVisible) {\n            await result.markVisible();\n        }\n        return changed;\n    }\n    catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n/**\n * Recursively walks the outlet in the DOM.\n *\n * The function returns a list of RouteID corresponding to each of the outlet and the last outlet without a RouteID.\n */\nexport const readNavState = async (root) => {\n    const ids = [];\n    let outlet;\n    let node = root;\n    // eslint-disable-next-line no-cond-assign\n    while ((outlet = searchNavNode(node))) {\n        const id = await outlet.getRouteId();\n        if (id) {\n            node = id.element;\n            id.element = undefined;\n            ids.push(id);\n        }\n        else {\n            break;\n        }\n    }\n    return { ids, outlet };\n};\nexport const waitUntilNavNode = () => {\n    if (searchNavNode(document.body)) {\n        return Promise.resolve();\n    }\n    return new Promise((resolve) => {\n        window.addEventListener('ionNavWillLoad', () => resolve(), { once: true });\n    });\n};\n/** Selector for all the outlets supported by the router. */\nconst OUTLET_SELECTOR = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\nconst searchNavNode = (root) => {\n    if (!root) {\n        return undefined;\n    }\n    if (root.matches(OUTLET_SELECTOR)) {\n        return root;\n    }\n    const outlet = root.querySelector(OUTLET_SELECTOR);\n    return outlet !== null && outlet !== void 0 ? outlet : undefined;\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * Returns whether the given redirect matches the given path segments.\n *\n * A redirect matches when the segments of the path and redirect.from are equal.\n * Note that segments are only checked until redirect.from contains a '*' which matches any path segment.\n * The path ['some', 'path', 'to', 'page'] matches both ['some', 'path', 'to', 'page'] and ['some', 'path', '*'].\n */\nexport const matchesRedirect = (segments, redirect) => {\n    const { from, to } = redirect;\n    if (to === undefined) {\n        return false;\n    }\n    if (from.length > segments.length) {\n        return false;\n    }\n    for (let i = 0; i < from.length; i++) {\n        const expected = from[i];\n        if (expected === '*') {\n            return true;\n        }\n        if (expected !== segments[i]) {\n            return false;\n        }\n    }\n    return from.length === segments.length;\n};\n/** Returns the first redirect matching the path segments or undefined when no match found. */\nexport const findRouteRedirect = (segments, redirects) => {\n    return redirects.find((redirect) => matchesRedirect(segments, redirect));\n};\nexport const matchesIDs = (ids, chain) => {\n    const len = Math.min(ids.length, chain.length);\n    let score = 0;\n    for (let i = 0; i < len; i++) {\n        const routeId = ids[i];\n        const routeChain = chain[i];\n        // Skip results where the route id does not match the chain at the same index\n        if (routeId.id.toLowerCase() !== routeChain.id) {\n            break;\n        }\n        if (routeId.params) {\n            const routeIdParams = Object.keys(routeId.params);\n            // Only compare routes with the chain that have the same number of parameters.\n            if (routeIdParams.length === routeChain.segments.length) {\n                // Maps the route's params into a path based on the path variable names,\n                // to compare against the route chain format.\n                //\n                // Before:\n                // ```ts\n                // {\n                //  params: {\n                //    s1: 'a',\n                //    s2: 'b'\n                //  }\n                // }\n                // ```\n                //\n                // After:\n                // ```ts\n                // [':s1',':s2']\n                // ```\n                //\n                const pathWithParams = routeIdParams.map((key) => `:${key}`);\n                for (let j = 0; j < pathWithParams.length; j++) {\n                    // Skip results where the path variable is not a match\n                    if (pathWithParams[j].toLowerCase() !== routeChain.segments[j]) {\n                        break;\n                    }\n                    // Weight path matches for the same index higher.\n                    score++;\n                }\n            }\n        }\n        // Weight id matches\n        score++;\n    }\n    return score;\n};\n/**\n * Matches the segments against the chain.\n *\n * Returns:\n * - null when there is no match,\n * - a chain with the params properties updated with the parameter segments on match.\n */\nexport const matchesSegments = (segments, chain) => {\n    const inputSegments = new RouterSegments(segments);\n    let matchesDefault = false;\n    let allparams;\n    for (let i = 0; i < chain.length; i++) {\n        const chainSegments = chain[i].segments;\n        if (chainSegments[0] === '') {\n            matchesDefault = true;\n        }\n        else {\n            for (const segment of chainSegments) {\n                const data = inputSegments.next();\n                // data param\n                if (segment[0] === ':') {\n                    if (data === '') {\n                        return null;\n                    }\n                    allparams = allparams || [];\n                    const params = allparams[i] || (allparams[i] = {});\n                    params[segment.slice(1)] = data;\n                }\n                else if (data !== segment) {\n                    return null;\n                }\n            }\n            matchesDefault = false;\n        }\n    }\n    const matches = matchesDefault ? matchesDefault === (inputSegments.next() === '') : true;\n    if (!matches) {\n        return null;\n    }\n    if (allparams) {\n        return chain.map((route, i) => ({\n            id: route.id,\n            segments: route.segments,\n            params: mergeParams(route.params, allparams[i]),\n            beforeEnter: route.beforeEnter,\n            beforeLeave: route.beforeLeave,\n        }));\n    }\n    return chain;\n};\n/**\n * Merges the route parameter objects.\n * Returns undefined when both parameters are undefined.\n */\nexport const mergeParams = (a, b) => {\n    return a || b ? Object.assign(Object.assign({}, a), b) : undefined;\n};\n/**\n * Finds the best match for the ids in the chains.\n *\n * Returns the best match or null when no match is found.\n * When a chain is returned the parameters are updated from the RouteIDs.\n * That is they contain both the componentProps of the <ion-route> and the parameter segment.\n */\nexport const findChainForIDs = (ids, chains) => {\n    let match = null;\n    let maxMatches = 0;\n    for (const chain of chains) {\n        const score = matchesIDs(ids, chain);\n        if (score > maxMatches) {\n            match = chain;\n            maxMatches = score;\n        }\n    }\n    if (match) {\n        return match.map((route, i) => {\n            var _a;\n            return ({\n                id: route.id,\n                segments: route.segments,\n                params: mergeParams(route.params, (_a = ids[i]) === null || _a === void 0 ? void 0 : _a.params),\n            });\n        });\n    }\n    return null;\n};\n/**\n * Finds the best match for the segments in the chains.\n *\n * Returns the best match or null when no match is found.\n * When a chain is returned the parameters are updated from the segments.\n * That is they contain both the componentProps of the <ion-route> and the parameter segments.\n */\nexport const findChainForSegments = (segments, chains) => {\n    let match = null;\n    let bestScore = 0;\n    for (const chain of chains) {\n        const matchedChain = matchesSegments(segments, chain);\n        if (matchedChain !== null) {\n            const score = computePriority(matchedChain);\n            if (score > bestScore) {\n                bestScore = score;\n                match = matchedChain;\n            }\n        }\n    }\n    return match;\n};\n/**\n * Computes the priority of a chain.\n *\n * Parameter segments are given a lower priority over fixed segments.\n *\n * Considering the following 2 chains matching the path /path/to/page:\n * - /path/to/:where\n * - /path/to/page\n *\n * The second one will be given a higher priority because \"page\" is a fixed segment (vs \":where\", a parameter segment).\n */\nexport const computePriority = (chain) => {\n    let score = 1;\n    let level = 1;\n    for (const route of chain) {\n        for (const segment of route.segments) {\n            if (segment[0] === ':') {\n                score += Math.pow(1, level);\n            }\n            else if (segment !== '') {\n                score += Math.pow(2, level);\n            }\n            level++;\n        }\n    }\n    return score;\n};\nexport class RouterSegments {\n    constructor(segments) {\n        this.segments = segments.slice();\n    }\n    next() {\n        if (this.segments.length > 0) {\n            return this.segments.shift();\n        }\n        return '';\n    }\n}\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { parsePath } from \"./path\";\nconst readProp = (el, prop) => {\n    if (prop in el) {\n        return el[prop];\n    }\n    if (el.hasAttribute(prop)) {\n        return el.getAttribute(prop);\n    }\n    return null;\n};\n/**\n * Extracts the redirects (that is <ion-route-redirect> elements inside the root).\n *\n * The redirects are returned as a list of RouteRedirect.\n */\nexport const readRedirects = (root) => {\n    return Array.from(root.children)\n        .filter((el) => el.tagName === 'ION-ROUTE-REDIRECT')\n        .map((el) => {\n        const to = readProp(el, 'to');\n        return {\n            from: parsePath(readProp(el, 'from')).segments,\n            to: to == null ? undefined : parsePath(to),\n        };\n    });\n};\n/**\n * Extracts all the routes (that is <ion-route> elements inside the root).\n *\n * The routes are returned as a list of chains - the flattened tree.\n */\nexport const readRoutes = (root) => {\n    return flattenRouterTree(readRouteNodes(root));\n};\n/**\n * Reads the route nodes as a tree modeled after the DOM tree of <ion-route> elements.\n *\n * Note: routes without a component are ignored together with their children.\n */\nexport const readRouteNodes = (node) => {\n    return Array.from(node.children)\n        .filter((el) => el.tagName === 'ION-ROUTE' && el.component)\n        .map((el) => {\n        const component = readProp(el, 'component');\n        return {\n            segments: parsePath(readProp(el, 'url')).segments,\n            id: component.toLowerCase(),\n            params: el.componentProps,\n            beforeLeave: el.beforeLeave,\n            beforeEnter: el.beforeEnter,\n            children: readRouteNodes(el),\n        };\n    });\n};\n/**\n * Flattens a RouterTree in a list of chains.\n *\n * Each chain represents a path from the root node to a terminal node.\n */\nexport const flattenRouterTree = (nodes) => {\n    const chains = [];\n    for (const node of nodes) {\n        flattenNode([], chains, node);\n    }\n    return chains;\n};\n/** Flattens a route node recursively and push each branch to the chains list. */\nconst flattenNode = (chain, chains, node) => {\n    chain = [\n        ...chain,\n        {\n            id: node.id,\n            segments: node.segments,\n            params: node.params,\n            beforeLeave: node.beforeLeave,\n            beforeEnter: node.beforeEnter,\n        },\n    ];\n    if (node.children.length === 0) {\n        chains.push(chain);\n        return;\n    }\n    for (const child of node.children) {\n        flattenNode(chain, chains, child);\n    }\n};\n","import { debounce } from \"../../utils/helpers\";\nimport { ROUTER_INTENT_BACK, ROUTER_INTENT_FORWARD, ROUTER_INTENT_NONE } from \"./utils/constants\";\nimport { printRedirects, printRoutes } from \"./utils/debug\";\nimport { readNavState, waitUntilNavNode, writeNavState } from \"./utils/dom\";\nimport { findChainForIDs, findChainForSegments, findRouteRedirect } from \"./utils/matching\";\nimport { readRedirects, readRoutes } from \"./utils/parser\";\nimport { chainToSegments, generatePath, parsePath, readSegments, writeSegments } from \"./utils/path\";\nexport class Router {\n    constructor() {\n        this.previousPath = null;\n        this.busy = false;\n        this.state = 0;\n        this.lastState = 0;\n        this.root = '/';\n        this.useHash = true;\n    }\n    async componentWillLoad() {\n        await waitUntilNavNode();\n        const canProceed = await this.runGuards(this.getSegments());\n        if (canProceed !== true) {\n            if (typeof canProceed === 'object') {\n                const { redirect } = canProceed;\n                const path = parsePath(redirect);\n                this.setSegments(path.segments, ROUTER_INTENT_NONE, path.queryString);\n                await this.writeNavStateRoot(path.segments, ROUTER_INTENT_NONE);\n            }\n        }\n        else {\n            await this.onRoutesChanged();\n        }\n    }\n    componentDidLoad() {\n        window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n        window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n    }\n    async onPopState() {\n        const direction = this.historyDirection();\n        let segments = this.getSegments();\n        const canProceed = await this.runGuards(segments);\n        if (canProceed !== true) {\n            if (typeof canProceed === 'object') {\n                segments = parsePath(canProceed.redirect).segments;\n            }\n            else {\n                return false;\n            }\n        }\n        return this.writeNavStateRoot(segments, direction);\n    }\n    onBackButton(ev) {\n        ev.detail.register(0, (processNextHandler) => {\n            this.back();\n            processNextHandler();\n        });\n    }\n    /** @internal */\n    async canTransition() {\n        const canProceed = await this.runGuards();\n        if (canProceed !== true) {\n            if (typeof canProceed === 'object') {\n                return canProceed.redirect;\n            }\n            else {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Navigate to the specified path.\n     *\n     * @param path The path to navigate to.\n     * @param direction The direction of the animation. Defaults to `\"forward\"`.\n     */\n    async push(path, direction = 'forward', animation) {\n        var _a;\n        if (path.startsWith('.')) {\n            const currentPath = (_a = this.previousPath) !== null && _a !== void 0 ? _a : '/';\n            // Convert currentPath to an URL by pre-pending a protocol and a host to resolve the relative path.\n            const url = new URL(path, `https://host/${currentPath}`);\n            path = url.pathname + url.search;\n        }\n        let parsedPath = parsePath(path);\n        const canProceed = await this.runGuards(parsedPath.segments);\n        if (canProceed !== true) {\n            if (typeof canProceed === 'object') {\n                parsedPath = parsePath(canProceed.redirect);\n            }\n            else {\n                return false;\n            }\n        }\n        this.setSegments(parsedPath.segments, direction, parsedPath.queryString);\n        return this.writeNavStateRoot(parsedPath.segments, direction, animation);\n    }\n    /** Go back to previous page in the window.history. */\n    back() {\n        window.history.back();\n        return Promise.resolve(this.waitPromise);\n    }\n    /** @internal */\n    async printDebug() {\n        printRoutes(readRoutes(this.el));\n        printRedirects(readRedirects(this.el));\n    }\n    /** @internal */\n    async navChanged(direction) {\n        if (this.busy) {\n            console.warn('[ion-router] router is busy, navChanged was cancelled');\n            return false;\n        }\n        const { ids, outlet } = await readNavState(window.document.body);\n        const routes = readRoutes(this.el);\n        const chain = findChainForIDs(ids, routes);\n        if (!chain) {\n            console.warn('[ion-router] no matching URL for ', ids.map((i) => i.id));\n            return false;\n        }\n        const segments = chainToSegments(chain);\n        if (!segments) {\n            console.warn('[ion-router] router could not match path because some required param is missing');\n            return false;\n        }\n        this.setSegments(segments, direction);\n        await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, segments, null, ids.length);\n        return true;\n    }\n    /** This handler gets called when a `ion-route-redirect` component is added to the DOM or if the from or to property of such node changes. */\n    onRedirectChanged() {\n        const segments = this.getSegments();\n        if (segments && findRouteRedirect(segments, readRedirects(this.el))) {\n            this.writeNavStateRoot(segments, ROUTER_INTENT_NONE);\n        }\n    }\n    /** This handler gets called when a `ion-route` component is added to the DOM or if the from or to property of such node changes. */\n    onRoutesChanged() {\n        return this.writeNavStateRoot(this.getSegments(), ROUTER_INTENT_NONE);\n    }\n    historyDirection() {\n        var _a;\n        const win = window;\n        if (win.history.state === null) {\n            this.state++;\n            win.history.replaceState(this.state, win.document.title, (_a = win.document.location) === null || _a === void 0 ? void 0 : _a.href);\n        }\n        const state = win.history.state;\n        const lastState = this.lastState;\n        this.lastState = state;\n        if (state > lastState || (state >= lastState && lastState > 0)) {\n            return ROUTER_INTENT_FORWARD;\n        }\n        if (state < lastState) {\n            return ROUTER_INTENT_BACK;\n        }\n        return ROUTER_INTENT_NONE;\n    }\n    async writeNavStateRoot(segments, direction, animation) {\n        if (!segments) {\n            console.error('[ion-router] URL is not part of the routing set');\n            return false;\n        }\n        // lookup redirect rule\n        const redirects = readRedirects(this.el);\n        const redirect = findRouteRedirect(segments, redirects);\n        let redirectFrom = null;\n        if (redirect) {\n            const { segments: toSegments, queryString } = redirect.to;\n            this.setSegments(toSegments, direction, queryString);\n            redirectFrom = redirect.from;\n            segments = toSegments;\n        }\n        // lookup route chain\n        const routes = readRoutes(this.el);\n        const chain = findChainForSegments(segments, routes);\n        if (!chain) {\n            console.error('[ion-router] the path does not match any route');\n            return false;\n        }\n        // write DOM give\n        return this.safeWriteNavState(document.body, chain, direction, segments, redirectFrom, 0, animation);\n    }\n    async safeWriteNavState(node, chain, direction, segments, redirectFrom, index = 0, animation) {\n        const unlock = await this.lock();\n        let changed = false;\n        try {\n            changed = await this.writeNavState(node, chain, direction, segments, redirectFrom, index, animation);\n        }\n        catch (e) {\n            console.error(e);\n        }\n        unlock();\n        return changed;\n    }\n    async lock() {\n        const p = this.waitPromise;\n        let resolve;\n        this.waitPromise = new Promise((r) => (resolve = r));\n        if (p !== undefined) {\n            await p;\n        }\n        return resolve;\n    }\n    /**\n     * Executes the beforeLeave hook of the source route and the beforeEnter hook of the target route if they exist.\n     *\n     * When the beforeLeave hook does not return true (to allow navigating) then that value is returned early and the beforeEnter is executed.\n     * Otherwise the beforeEnterHook hook of the target route is executed.\n     */\n    async runGuards(to = this.getSegments(), from) {\n        if (from === undefined) {\n            from = parsePath(this.previousPath).segments;\n        }\n        if (!to || !from) {\n            return true;\n        }\n        const routes = readRoutes(this.el);\n        const fromChain = findChainForSegments(from, routes);\n        // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n        const beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\n        const canLeave = beforeLeaveHook ? await beforeLeaveHook() : true;\n        if (canLeave === false || typeof canLeave === 'object') {\n            return canLeave;\n        }\n        const toChain = findChainForSegments(to, routes);\n        // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n        const beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\n        return beforeEnterHook ? beforeEnterHook() : true;\n    }\n    async writeNavState(node, chain, direction, segments, redirectFrom, index = 0, animation) {\n        if (this.busy) {\n            console.warn('[ion-router] router is busy, transition was cancelled');\n            return false;\n        }\n        this.busy = true;\n        // generate route event and emit will change\n        const routeEvent = this.routeChangeEvent(segments, redirectFrom);\n        if (routeEvent) {\n            this.ionRouteWillChange.emit(routeEvent);\n        }\n        const changed = await writeNavState(node, chain, direction, index, false, animation);\n        this.busy = false;\n        // emit did change\n        if (routeEvent) {\n            this.ionRouteDidChange.emit(routeEvent);\n        }\n        return changed;\n    }\n    setSegments(segments, direction, queryString) {\n        this.state++;\n        writeSegments(window.history, this.root, this.useHash, segments, direction, this.state, queryString);\n    }\n    getSegments() {\n        return readSegments(window.location, this.root, this.useHash);\n    }\n    routeChangeEvent(toSegments, redirectFromSegments) {\n        const from = this.previousPath;\n        const to = generatePath(toSegments);\n        this.previousPath = to;\n        if (to === from) {\n            return null;\n        }\n        const redirectedFrom = redirectFromSegments ? generatePath(redirectFromSegments) : null;\n        return {\n            from,\n            redirectedFrom,\n            to,\n        };\n    }\n    static get is() { return \"ion-router\"; }\n    static get properties() {\n        return {\n            \"root\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The root path to use when matching URLs. By default, this is set to \\\"/\\\", but you can specify\\nan alternate prefix for all URL paths.\"\n                },\n                \"attribute\": \"root\",\n                \"reflect\": false,\n                \"defaultValue\": \"'/'\"\n            },\n            \"useHash\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The router can work in two \\\"modes\\\":\\n- With hash: `/index.html#/path/to/page`\\n- Without hash: `/path/to/page`\\n\\nUsing one or another might depend in the requirements of your app and/or where it's deployed.\\n\\nUsually \\\"hash-less\\\" navigation works better for SEO and it's more user friendly too, but it might\\nrequires additional server-side configuration in order to properly work.\\n\\nOn the other side hash-navigation is much easier to deploy, it even works over the file protocol.\\n\\nBy default, this property is `true`, change to `false` to allow hash-less URLs.\"\n                },\n                \"attribute\": \"use-hash\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionRouteWillChange\",\n                \"name\": \"ionRouteWillChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Event emitted when the route is about to change\"\n                },\n                \"complexType\": {\n                    \"original\": \"RouterEventDetail\",\n                    \"resolved\": \"RouterEventDetail\",\n                    \"references\": {\n                        \"RouterEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"./utils/interface\",\n                            \"id\": \"src/components/router/utils/interface.ts::RouterEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"ionRouteDidChange\",\n                \"name\": \"ionRouteDidChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the route had changed\"\n                },\n                \"complexType\": {\n                    \"original\": \"RouterEventDetail\",\n                    \"resolved\": \"RouterEventDetail\",\n                    \"references\": {\n                        \"RouterEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"./utils/interface\",\n                            \"id\": \"src/components/router/utils/interface.ts::RouterEventDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"canTransition\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<string | boolean>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<string | boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            },\n            \"push\": {\n                \"complexType\": {\n                    \"signature\": \"(path: string, direction?: RouterDirection, animation?: AnimationBuilder) => Promise<boolean>\",\n                    \"parameters\": [{\n                            \"name\": \"path\",\n                            \"type\": \"string\",\n                            \"docs\": \"The path to navigate to.\"\n                        }, {\n                            \"name\": \"direction\",\n                            \"type\": \"\\\"root\\\" | \\\"back\\\" | \\\"forward\\\"\",\n                            \"docs\": \"The direction of the animation. Defaults to `\\\"forward\\\"`.\"\n                        }, {\n                            \"name\": \"animation\",\n                            \"type\": \"AnimationBuilder | undefined\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"RouterDirection\": {\n                            \"location\": \"import\",\n                            \"path\": \"./utils/interface\",\n                            \"id\": \"src/components/router/utils/interface.ts::RouterDirection\"\n                        },\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Navigate to the specified path.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"path The path to navigate to.\"\n                        }, {\n                            \"name\": \"param\",\n                            \"text\": \"direction The direction of the animation. Defaults to `\\\"forward\\\"`.\"\n                        }]\n                }\n            },\n            \"back\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Go back to previous page in the window.history.\",\n                    \"tags\": []\n                }\n            },\n            \"printDebug\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            },\n            \"navChanged\": {\n                \"complexType\": {\n                    \"signature\": \"(direction: RouterDirection) => Promise<boolean>\",\n                    \"parameters\": [{\n                            \"name\": \"direction\",\n                            \"type\": \"\\\"root\\\" | \\\"back\\\" | \\\"forward\\\"\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"RouterDirection\": {\n                            \"location\": \"import\",\n                            \"path\": \"./utils/interface\",\n                            \"id\": \"src/components/router/utils/interface.ts::RouterDirection\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get listeners() {\n        return [{\n                \"name\": \"popstate\",\n                \"method\": \"onPopState\",\n                \"target\": \"window\",\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"ionBackButton\",\n                \"method\": \"onBackButton\",\n                \"target\": \"document\",\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  contain: layout size style;\n  z-index: 0;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { h } from \"@stencil/core\";\nimport { getTimeGivenProgression } from \"../../utils/animation/cubic-bezier\";\nimport { attachComponent, detachComponent } from \"../../utils/framework-delegate\";\nimport { shallowEqualStringMap, hasLazyBuild } from \"../../utils/helpers\";\nimport { createLockController } from \"../../utils/lock-controller\";\nimport { transition } from \"../../utils/transition/index\";\nimport { config } from \"../../global/config\";\nimport { getIonMode } from \"../../global/ionic-global\";\nexport class RouterOutlet {\n    constructor() {\n        this.lockController = createLockController();\n        this.gestureOrAnimationInProgress = false;\n        this.mode = getIonMode(this);\n        this.delegate = undefined;\n        this.animated = true;\n        this.animation = undefined;\n        this.swipeHandler = undefined;\n    }\n    swipeHandlerChanged() {\n        if (this.gesture) {\n            this.gesture.enable(this.swipeHandler !== undefined);\n        }\n    }\n    async connectedCallback() {\n        const onStart = () => {\n            this.gestureOrAnimationInProgress = true;\n            if (this.swipeHandler) {\n                this.swipeHandler.onStart();\n            }\n        };\n        this.gesture = (await import('../../utils/gesture/swipe-back')).createSwipeBackGesture(this.el, () => !this.gestureOrAnimationInProgress && !!this.swipeHandler && this.swipeHandler.canStart(), () => onStart(), (step) => { var _a; return (_a = this.ani) === null || _a === void 0 ? void 0 : _a.progressStep(step); }, (shouldComplete, step, dur) => {\n            if (this.ani) {\n                this.ani.onFinish(() => {\n                    this.gestureOrAnimationInProgress = false;\n                    if (this.swipeHandler) {\n                        this.swipeHandler.onEnd(shouldComplete);\n                    }\n                }, { oneTimeCallback: true });\n                // Account for rounding errors in JS\n                let newStepValue = shouldComplete ? -0.001 : 0.001;\n                /**\n                 * Animation will be reversed here, so need to\n                 * reverse the easing curve as well\n                 *\n                 * Additionally, we need to account for the time relative\n                 * to the new easing curve, as `stepValue` is going to be given\n                 * in terms of a linear curve.\n                 */\n                if (!shouldComplete) {\n                    this.ani.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n                    newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], step)[0];\n                }\n                else {\n                    newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], step)[0];\n                }\n                this.ani.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n            }\n            else {\n                this.gestureOrAnimationInProgress = false;\n            }\n        });\n        this.swipeHandlerChanged();\n    }\n    componentWillLoad() {\n        this.ionNavWillLoad.emit();\n    }\n    disconnectedCallback() {\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    /** @internal */\n    async commit(enteringEl, leavingEl, opts) {\n        const unlock = await this.lockController.lock();\n        let changed = false;\n        try {\n            changed = await this.transition(enteringEl, leavingEl, opts);\n        }\n        catch (e) {\n            console.error(e);\n        }\n        unlock();\n        return changed;\n    }\n    /** @internal */\n    async setRouteId(id, params, direction, animation) {\n        const changed = await this.setRoot(id, params, {\n            duration: direction === 'root' ? 0 : undefined,\n            direction: direction === 'back' ? 'back' : 'forward',\n            animationBuilder: animation,\n        });\n        return {\n            changed,\n            element: this.activeEl,\n        };\n    }\n    /** @internal */\n    async getRouteId() {\n        const active = this.activeEl;\n        return active\n            ? {\n                id: active.tagName,\n                element: active,\n                params: this.activeParams,\n            }\n            : undefined;\n    }\n    async setRoot(component, params, opts) {\n        if (this.activeComponent === component && shallowEqualStringMap(params, this.activeParams)) {\n            return false;\n        }\n        // attach entering view to DOM\n        const leavingEl = this.activeEl;\n        const enteringEl = await attachComponent(this.delegate, this.el, component, ['ion-page', 'ion-page-invisible'], params);\n        this.activeComponent = component;\n        this.activeEl = enteringEl;\n        this.activeParams = params;\n        // commit animation\n        await this.commit(enteringEl, leavingEl, opts);\n        await detachComponent(this.delegate, leavingEl);\n        return true;\n    }\n    async transition(enteringEl, leavingEl, opts = {}) {\n        if (leavingEl === enteringEl) {\n            return false;\n        }\n        // emit nav will change event\n        this.ionNavWillChange.emit();\n        const { el, mode } = this;\n        const animated = this.animated && config.getBoolean('animated', true);\n        const animationBuilder = opts.animationBuilder || this.animation || config.get('navAnimation');\n        await transition(Object.assign(Object.assign({ mode,\n            animated,\n            enteringEl,\n            leavingEl, baseEl: el,\n            /**\n             * We need to wait for all Stencil components\n             * to be ready only when using the lazy\n             * loaded bundle.\n             */\n            deepWait: hasLazyBuild(el), progressCallback: opts.progressAnimation\n                ? (ani) => {\n                    /**\n                     * Because this progress callback is called asynchronously\n                     * it is possible for the gesture to start and end before\n                     * the animation is ever set. In that scenario, we should\n                     * immediately call progressEnd so that the transition promise\n                     * resolves and the gesture does not get locked up.\n                     */\n                    if (ani !== undefined && !this.gestureOrAnimationInProgress) {\n                        this.gestureOrAnimationInProgress = true;\n                        ani.onFinish(() => {\n                            this.gestureOrAnimationInProgress = false;\n                            if (this.swipeHandler) {\n                                this.swipeHandler.onEnd(false);\n                            }\n                        }, { oneTimeCallback: true });\n                        /**\n                         * Playing animation to beginning\n                         * with a duration of 0 prevents\n                         * any flickering when the animation\n                         * is later cleaned up.\n                         */\n                        ani.progressEnd(0, 0, 0);\n                    }\n                    else {\n                        this.ani = ani;\n                    }\n                }\n                : undefined }, opts), { animationBuilder }));\n        // emit nav changed event\n        this.ionNavDidChange.emit();\n        return true;\n    }\n    render() {\n        return h(\"slot\", { key: '8279a453c66a766e6e383ff59842b4ae070c13a9' });\n    }\n    static get is() { return \"ion-router-outlet\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"router-outlet.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"router-outlet.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"mode\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"\\\"ios\\\" | \\\"md\\\"\",\n                    \"resolved\": \"\\\"ios\\\" | \\\"md\\\"\",\n                    \"references\": {\n                        \"Mode\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Mode\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The mode determines which platform styles to use.\"\n                },\n                \"attribute\": \"mode\",\n                \"reflect\": false,\n                \"defaultValue\": \"getIonMode(this)\"\n            },\n            \"delegate\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"FrameworkDelegate\",\n                    \"resolved\": \"FrameworkDelegate | undefined\",\n                    \"references\": {\n                        \"FrameworkDelegate\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::FrameworkDelegate\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                }\n            },\n            \"animated\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the router-outlet should animate the transition of components.\"\n                },\n                \"attribute\": \"animated\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"animation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"This property allows to create custom transition using AnimationBuilder functions.\"\n                }\n            },\n            \"swipeHandler\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"SwipeGestureHandler\",\n                    \"resolved\": \"SwipeGestureHandler | undefined\",\n                    \"references\": {\n                        \"SwipeGestureHandler\": {\n                            \"location\": \"import\",\n                            \"path\": \"../nav/nav-interface\",\n                            \"id\": \"src/components/nav/nav-interface.ts::SwipeGestureHandler\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                }\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionNavWillLoad\",\n                \"name\": \"ionNavWillLoad\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionNavWillChange\",\n                \"name\": \"ionNavWillChange\",\n                \"bubbles\": false,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionNavDidChange\",\n                \"name\": \"ionNavDidChange\",\n                \"bubbles\": false,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"commit\": {\n                \"complexType\": {\n                    \"signature\": \"(enteringEl: HTMLElement, leavingEl: HTMLElement | undefined, opts?: RouterOutletOptions) => Promise<boolean>\",\n                    \"parameters\": [{\n                            \"name\": \"enteringEl\",\n                            \"type\": \"HTMLElement\",\n                            \"docs\": \"\"\n                        }, {\n                            \"name\": \"leavingEl\",\n                            \"type\": \"HTMLElement | undefined\",\n                            \"docs\": \"\"\n                        }, {\n                            \"name\": \"opts\",\n                            \"type\": \"RouterOutletOptions | undefined\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"HTMLElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLElement\"\n                        },\n                        \"RouterOutletOptions\": {\n                            \"location\": \"import\",\n                            \"path\": \"../nav/nav-interface\",\n                            \"id\": \"src/components/nav/nav-interface.ts::RouterOutletOptions\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            },\n            \"setRouteId\": {\n                \"complexType\": {\n                    \"signature\": \"(id: string, params: ComponentProps | undefined, direction: RouterDirection, animation?: AnimationBuilder) => Promise<RouteWrite>\",\n                    \"parameters\": [{\n                            \"name\": \"id\",\n                            \"type\": \"string\",\n                            \"docs\": \"\"\n                        }, {\n                            \"name\": \"params\",\n                            \"type\": \"ComponentProps | undefined\",\n                            \"docs\": \"\"\n                        }, {\n                            \"name\": \"direction\",\n                            \"type\": \"\\\"root\\\" | \\\"back\\\" | \\\"forward\\\"\",\n                            \"docs\": \"\"\n                        }, {\n                            \"name\": \"animation\",\n                            \"type\": \"AnimationBuilder | undefined\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"RouteWrite\": {\n                            \"location\": \"import\",\n                            \"path\": \"../router/utils/interface\",\n                            \"id\": \"src/components/router/utils/interface.ts::RouteWrite\"\n                        },\n                        \"ComponentProps\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::ComponentProps\"\n                        },\n                        \"RouterDirection\": {\n                            \"location\": \"import\",\n                            \"path\": \"../router/utils/interface\",\n                            \"id\": \"src/components/router/utils/interface.ts::RouterDirection\"\n                        },\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    },\n                    \"return\": \"Promise<RouteWrite>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            },\n            \"getRouteId\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<RouteID | undefined>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"RouteID\": {\n                            \"location\": \"import\",\n                            \"path\": \"../router/utils/interface\",\n                            \"id\": \"src/components/router/utils/interface.ts::RouteID\"\n                        }\n                    },\n                    \"return\": \"Promise<RouteID | undefined>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"swipeHandler\",\n                \"methodName\": \"swipeHandlerChanged\"\n            }];\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  display: flex;\n  flex-wrap: wrap;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { getIonMode } from \"../../global/ionic-global\";\nexport class Row {\n    render() {\n        return (h(Host, { key: '813c9a7f6782d2cf8eb27f30d3ab28e6f3122868', class: getIonMode(this) }, h(\"slot\", { key: '356bec4d4d408ea63d6b431b06465d5b7bcbff71' })));\n    }\n    static get is() { return \"ion-row\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"row.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"row.css\"]\n        };\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the select\n   * @prop --padding-top: Top padding of the select\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the select\n   * @prop --padding-bottom: Bottom padding of the select\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the select\n   *\n   * @prop --placeholder-color: Color of the select placeholder text\n   * @prop --placeholder-opacity: Opacity of the select placeholder text\n   *\n   * @prop --highlight-height: The height of the highlight on the select. Only applies to md mode.\n   * @prop --highlight-color-focused: The color of the highlight on the select when focused\n   * @prop --highlight-color-invalid: The color of the highlight on the select when invalid\n   * @prop --highlight-color-valid: The color of the highlight on the select when valid\n   *\n   * @prop --border-color: Color of the select border\n   * @prop --border-radius: Radius of the select border. A large radius may display unevenly when using fill=\"outline\"; if needed, use shape=\"round\" instead or increase --padding-start.\n   * @prop --border-style: Style of the select border\n   * @prop --border-width: Width of the select border\n   *\n   * @prop --ripple-color: The color of the ripple effect on MD mode.\n   */\n  --padding-top: 0px;\n  --padding-end: 0px;\n  --padding-bottom: 0px;\n  --padding-start: 0px;\n  --placeholder-color: currentColor;\n  --placeholder-opacity: var(--ion-placeholder-opacity, 0.6);\n  --background: transparent;\n  --border-style: solid;\n  --highlight-color-focused: var(--ion-color-primary, #0054e9);\n  --highlight-color-valid: var(--ion-color-success, #2dd55b);\n  --highlight-color-invalid: var(--ion-color-danger, #c5000f);\n  /**\n   * This is a private API that is used to switch\n   * out the highlight color based on the state\n   * of the component without having to write\n   * different selectors for different fill variants.\n   */\n  --highlight-color: var(--highlight-color-focused);\n  display: block;\n  position: relative;\n  width: 100%;\n  min-height: 44px;\n  font-family: var(--ion-font-family, inherit);\n  white-space: nowrap;\n  cursor: pointer;\n  z-index: 2;\n}\n\n/**\n * Since the label sits on top of the element,\n * the component needs to be taller otherwise the\n * label will appear too close to the select text.\n */\n:host(.select-label-placement-floating),\n:host(.select-label-placement-stacked) {\n  min-height: 56px;\n}\n\n:host(.ion-color) {\n  --highlight-color-focused: var(--ion-color-base);\n}\n\n:host(.in-item) {\n  flex: 1 1 0;\n}\n\n:host(.select-disabled) {\n  pointer-events: none;\n}\n\n:host(.ion-focused) button {\n  border: 2px solid #5e9ed6;\n}\n\n/**\n * Select can be slotted\n * in components such as item and\n * toolbar which is why we do not\n * limit the below behavior to just ion-item.\n */\n:host([slot=start]),\n:host([slot=end]) {\n  flex: initial;\n  width: auto;\n}\n\n.select-placeholder {\n  color: var(--placeholder-color);\n  opacity: var(--placeholder-opacity);\n}\n\nbutton {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n  opacity: 0;\n  overflow: hidden;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n.select-icon {\n  -webkit-margin-start: 4px;\n  margin-inline-start: 4px;\n  -webkit-margin-end: 0;\n  margin-inline-end: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  position: relative;\n  /**\n   * Prevent the icon from shrinking when the label and/or\n   * selected item text is long enough to fill the rest of\n   * the container.\n   */\n  flex-shrink: 0;\n}\n\n/**\n * Ensure that the select icon has\n * the correct color contrast when\n * used inside of an item.\n */\n:host(.in-item-color) .select-icon {\n  color: inherit;\n}\n\n/**\n * The select icon should be centered with\n * the entire container not just the control\n * with floating/stacked labels.\n */\n:host(.select-label-placement-stacked) .select-icon,\n:host(.select-label-placement-floating) .select-icon {\n  position: absolute;\n  height: 100%;\n}\n\n/**\n * This positions the icon at the correct\n * edge of the component with LTR and RTL\n * text directions. The position mixin cannot be\n * used here because the icon is in the Shadow DOM.\n */\n:host(.select-ltr.select-label-placement-stacked) .select-icon,\n:host(.select-ltr.select-label-placement-floating) .select-icon {\n  right: var(--padding-end, 0);\n}\n\n:host(.select-rtl.select-label-placement-stacked) .select-icon,\n:host(.select-rtl.select-label-placement-floating) .select-icon {\n  left: var(--padding-start, 0);\n}\n\n.select-text {\n  flex: 1;\n  min-width: 16px;\n  font-size: inherit;\n  text-overflow: ellipsis;\n  white-space: inherit;\n  overflow: hidden;\n}\n\n.select-wrapper {\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  border-radius: var(--border-radius);\n  display: flex;\n  position: relative;\n  flex-grow: 1;\n  align-items: center;\n  height: inherit;\n  /**\n   * This allows developers to set the height\n   * on the host of the element but still have\n   * the label take up the full height\n   * of the parent.\n   */\n  min-height: inherit;\n  transition: background-color 15ms linear;\n  background: var(--background);\n  line-height: normal;\n  cursor: inherit;\n  box-sizing: border-box;\n}\n\n.select-wrapper .select-placeholder {\n  /**\n   * When the floating label appears on top of the\n   * select, we need to fade the text out so that the\n   * label does not overlap with the placeholder.\n   */\n  transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.select-wrapper-inner {\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n}\n\n:host(.select-label-placement-stacked) .select-wrapper-inner,\n:host(.select-label-placement-floating) .select-wrapper-inner {\n  /**\n   * When using a stacked/floating label, the inner wrapper is\n   * stacked vertically under the label container. This line\n   * ensures that the inner wrapper fills all the remaining height\n   * of the component.\n   */\n  flex-grow: 1;\n}\n\n:host(.ion-touched.ion-invalid) {\n  --highlight-color: var(--highlight-color-invalid);\n}\n\n/**\n * The component highlight is only shown\n * on focus, so we can safely set the valid\n * color state when touched/valid. If we\n * set it when .has-focus is present then\n * the highlight color would change\n * from the valid color to the component's\n * color during the transition after the\n * component loses focus.\n */\n:host(.ion-valid) {\n  --highlight-color: var(--highlight-color-valid);\n}\n\n.label-text-wrapper {\n  /**\n   * This causes the label to take up\n   * the entire height of its container\n   * while still keeping the text centered.\n   */\n  display: flex;\n  align-items: center;\n  /**\n   * Label text should not extend\n   * beyond the bounds of the select.\n   * However, we do not set the max\n   * width to 100% because then\n   * only the label would show and users\n   * would not be able to see what they are typing.\n   */\n  max-width: 200px;\n  transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1), transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  /**\n   * This ensures that double tapping this text\n   * clicks the <label> and focuses the input\n   * when a screen reader is enabled.\n   */\n  pointer-events: none;\n}\n\n/**\n * We need to use two elements instead of\n * one. The .label-text-wrapper is responsible\n * for centering the label text vertically regardless\n * of the input height using flexbox.\n *\n * The .label-text element is responsible for controlling\n * overflow when label-placement=\"fixed\".\n * We want the ellipses to show up when the\n * fixed label overflows, but text-overflow: ellipsis only\n * works on block-level elements. A flex item is\n * considered blockified (https://www.w3.org/TR/css-display-3/#blockify).\n */\n.label-text,\n::slotted([slot=label]) {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n/**\n * If no label text is placed into the slot\n * then the element should be hidden otherwise\n * there will be additional margins added.\n */\n.label-text-wrapper-hidden,\n.select-outline-notch-hidden {\n  display: none;\n}\n\n.native-wrapper {\n  display: flex;\n  align-items: center;\n  /**\n   * When the floating label appears on top of the\n   * input, we need to fade the input out so that the\n   * label does not overlap with the placeholder.\n   */\n  transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  /**\n   * This ensures that the .select-text gets\n   * truncated with ellipses when the text is\n   * too long for the screen.\n   */\n  overflow: hidden;\n}\n\n:host(.select-justify-space-between) .select-wrapper {\n  justify-content: space-between;\n}\n\n:host(.select-justify-start) .select-wrapper {\n  justify-content: start;\n}\n\n:host(.select-justify-end) .select-wrapper {\n  justify-content: end;\n}\n\n/**\n * Label is on the left of the input in LTR and\n * on the right in RTL.\n */\n:host(.select-label-placement-start) .select-wrapper {\n  flex-direction: row;\n}\n\n:host(.select-label-placement-start) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the select should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n/**\n * Label is on the right of the select in LTR and\n * on the left in RTL.\n */\n:host(.select-label-placement-end) .select-wrapper {\n  flex-direction: row-reverse;\n}\n\n/**\n * The margin between the label and\n * the select should be on the start\n * when the label sits at the end.\n */\n:host(.select-label-placement-end) .label-text-wrapper {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 0;\n  margin-inline-end: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n:host(.select-label-placement-fixed) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the select should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n/**\n * Label is on the left of the select in LTR and\n * on the right in RTL. Label also has a fixed width.\n */\n:host(.select-label-placement-fixed) .label-text-wrapper {\n  flex: 0 0 100px;\n  width: 100px;\n  min-width: 100px;\n  max-width: 200px;\n}\n\n/**\n * Stacked: Label sits above the select and is scaled down.\n * Floating: Label sits over the select when the select has no\n * value and is blurred. Label sits above the input and is scaled\n * down when the select is focused or has a value.\n *\n */\n:host(.select-label-placement-stacked) .select-wrapper,\n:host(.select-label-placement-floating) .select-wrapper {\n  flex-direction: column;\n  align-items: start;\n}\n\n/**\n * Ensures that the label animates\n * up and to the left in LTR or\n * up and to the right in RTL.\n */\n:host(.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-label-placement-floating) .label-text-wrapper {\n  max-width: 100%;\n}\n\n:host(.select-ltr.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-ltr.select-label-placement-floating) .label-text-wrapper {\n  transform-origin: left top;\n}\n\n:host(.select-rtl.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-rtl.select-label-placement-floating) .label-text-wrapper {\n  transform-origin: right top;\n}\n\n/**\n * Ensures the select does not\n * overlap the label.\n * Also ensure that the native wrapper\n * takes up the remaining available height and width.\n */\n:host(.select-label-placement-stacked) .native-wrapper,\n:host(.select-label-placement-floating) .native-wrapper {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 1px;\n  margin-bottom: 0;\n  flex-grow: 1;\n  width: 100%;\n}\n\n/**\n * This makes the label sit over the select\n * when the select is blurred and has no value.\n * The label should not sit over the select if the\n * select has a placeholder.\n * Note: This is different from what ion-input does\n * because the activating the select causes an overlay\n * to appear. This makes it hard to read the placeholder.\n * With ion-input, the input just focuses and the placeholder\n * is still easy to read.\n */\n:host(.select-label-placement-floating) .label-text-wrapper {\n  transform: translateY(100%) scale(1);\n}\n\n/**\n * The placeholder should be hidden when the label\n * is on top of the select. This prevents the label\n * from overlapping any placeholder value.\n *\n * TODO(FW-5592): Remove :not(.label-floating) piece\n */\n:host(.select-label-placement-floating:not(.label-floating)) .native-wrapper .select-placeholder {\n  opacity: 0;\n}\n\n/**\n * We don't use .label-floating here because that would\n * also include the case where the label is floating due\n * to content in the start/end slot. We want the opacity\n * to remain at the default in this case, since the select\n * isn't being actively interacted with.\n *\n * TODO(FW-5592): Change entire selector to:\n * :host(.label-floating.select-label-placement-floating) .native-wrapper .select-placeholder\n */\n:host(.select-expanded.select-label-placement-floating) .native-wrapper .select-placeholder,\n:host(.ion-focused.select-label-placement-floating) .native-wrapper .select-placeholder,\n:host(.has-value.select-label-placement-floating) .native-wrapper .select-placeholder {\n  opacity: 1;\n}\n\n/**\n * This makes the label sit above the input.\n */\n:host(.label-floating) .label-text-wrapper {\n  transform: translateY(50%) scale(0.75);\n  /**\n   * Label text should not extend\n   * beyond the bounds of the input.\n   */\n  max-width: calc(100% / 0.75);\n}\n\n::slotted([slot=start]), ::slotted([slot=end]) {\n  /**\n   * Prevent the slots from shrinking when the label and/or\n   * selected item text is long enough to fill the rest of\n   * the container.\n   */\n  flex-shrink: 0;\n}\n\n::slotted([slot=start]:last-of-type) {\n  margin-inline-end: 16px;\n  margin-inline-start: 0;\n}\n\n::slotted([slot=end]:first-of-type) {\n  margin-inline-start: 16px;\n  margin-inline-end: 0;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --highlight-height: 0px;\n}\n\n.select-icon {\n  width: 1.125rem;\n  height: 1.125rem;\n  color: var(--ion-color-step-650, var(--ion-text-color-step-350, #595959));\n}\n\n:host(.select-label-placement-stacked) .select-wrapper-inner,\n:host(.select-label-placement-floating) .select-wrapper-inner {\n  width: calc(100% - 1.125rem - 4px);\n}\n\n:host(.select-disabled) {\n  opacity: 0.3;\n}\n\n/**\n * Slotted buttons have a lot of default padding that can\n * cause them to look misaligned from other pieces such\n * as the control's label, especially when using a clear\n * fill. We also make them circular to ensure that non-\n * clear buttons and the focus/hover state on clear ones\n * don't look too crowded.\n */\n::slotted(ion-button[slot=start].button-has-icon-only),\n::slotted(ion-button[slot=end].button-has-icon-only) {\n  --border-radius: 50%;\n  --padding-start: 0;\n  --padding-end: 0;\n  --padding-top: 0;\n  --padding-bottom: 0;\n  aspect-ratio: 1;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the select\n   * @prop --padding-top: Top padding of the select\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the select\n   * @prop --padding-bottom: Bottom padding of the select\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the select\n   *\n   * @prop --placeholder-color: Color of the select placeholder text\n   * @prop --placeholder-opacity: Opacity of the select placeholder text\n   *\n   * @prop --highlight-height: The height of the highlight on the select. Only applies to md mode.\n   * @prop --highlight-color-focused: The color of the highlight on the select when focused\n   * @prop --highlight-color-invalid: The color of the highlight on the select when invalid\n   * @prop --highlight-color-valid: The color of the highlight on the select when valid\n   *\n   * @prop --border-color: Color of the select border\n   * @prop --border-radius: Radius of the select border. A large radius may display unevenly when using fill=\"outline\"; if needed, use shape=\"round\" instead or increase --padding-start.\n   * @prop --border-style: Style of the select border\n   * @prop --border-width: Width of the select border\n   *\n   * @prop --ripple-color: The color of the ripple effect on MD mode.\n   */\n  --padding-top: 0px;\n  --padding-end: 0px;\n  --padding-bottom: 0px;\n  --padding-start: 0px;\n  --placeholder-color: currentColor;\n  --placeholder-opacity: var(--ion-placeholder-opacity, 0.6);\n  --background: transparent;\n  --border-style: solid;\n  --highlight-color-focused: var(--ion-color-primary, #0054e9);\n  --highlight-color-valid: var(--ion-color-success, #2dd55b);\n  --highlight-color-invalid: var(--ion-color-danger, #c5000f);\n  /**\n   * This is a private API that is used to switch\n   * out the highlight color based on the state\n   * of the component without having to write\n   * different selectors for different fill variants.\n   */\n  --highlight-color: var(--highlight-color-focused);\n  display: block;\n  position: relative;\n  width: 100%;\n  min-height: 44px;\n  font-family: var(--ion-font-family, inherit);\n  white-space: nowrap;\n  cursor: pointer;\n  z-index: 2;\n}\n\n/**\n * Since the label sits on top of the element,\n * the component needs to be taller otherwise the\n * label will appear too close to the select text.\n */\n:host(.select-label-placement-floating),\n:host(.select-label-placement-stacked) {\n  min-height: 56px;\n}\n\n:host(.ion-color) {\n  --highlight-color-focused: var(--ion-color-base);\n}\n\n:host(.in-item) {\n  flex: 1 1 0;\n}\n\n:host(.select-disabled) {\n  pointer-events: none;\n}\n\n:host(.ion-focused) button {\n  border: 2px solid #5e9ed6;\n}\n\n/**\n * Select can be slotted\n * in components such as item and\n * toolbar which is why we do not\n * limit the below behavior to just ion-item.\n */\n:host([slot=start]),\n:host([slot=end]) {\n  flex: initial;\n  width: auto;\n}\n\n.select-placeholder {\n  color: var(--placeholder-color);\n  opacity: var(--placeholder-opacity);\n}\n\nbutton {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n  opacity: 0;\n  overflow: hidden;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n.select-icon {\n  -webkit-margin-start: 4px;\n  margin-inline-start: 4px;\n  -webkit-margin-end: 0;\n  margin-inline-end: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  position: relative;\n  /**\n   * Prevent the icon from shrinking when the label and/or\n   * selected item text is long enough to fill the rest of\n   * the container.\n   */\n  flex-shrink: 0;\n}\n\n/**\n * Ensure that the select icon has\n * the correct color contrast when\n * used inside of an item.\n */\n:host(.in-item-color) .select-icon {\n  color: inherit;\n}\n\n/**\n * The select icon should be centered with\n * the entire container not just the control\n * with floating/stacked labels.\n */\n:host(.select-label-placement-stacked) .select-icon,\n:host(.select-label-placement-floating) .select-icon {\n  position: absolute;\n  height: 100%;\n}\n\n/**\n * This positions the icon at the correct\n * edge of the component with LTR and RTL\n * text directions. The position mixin cannot be\n * used here because the icon is in the Shadow DOM.\n */\n:host(.select-ltr.select-label-placement-stacked) .select-icon,\n:host(.select-ltr.select-label-placement-floating) .select-icon {\n  right: var(--padding-end, 0);\n}\n\n:host(.select-rtl.select-label-placement-stacked) .select-icon,\n:host(.select-rtl.select-label-placement-floating) .select-icon {\n  left: var(--padding-start, 0);\n}\n\n.select-text {\n  flex: 1;\n  min-width: 16px;\n  font-size: inherit;\n  text-overflow: ellipsis;\n  white-space: inherit;\n  overflow: hidden;\n}\n\n.select-wrapper {\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  border-radius: var(--border-radius);\n  display: flex;\n  position: relative;\n  flex-grow: 1;\n  align-items: center;\n  height: inherit;\n  /**\n   * This allows developers to set the height\n   * on the host of the element but still have\n   * the label take up the full height\n   * of the parent.\n   */\n  min-height: inherit;\n  transition: background-color 15ms linear;\n  background: var(--background);\n  line-height: normal;\n  cursor: inherit;\n  box-sizing: border-box;\n}\n\n.select-wrapper .select-placeholder {\n  /**\n   * When the floating label appears on top of the\n   * select, we need to fade the text out so that the\n   * label does not overlap with the placeholder.\n   */\n  transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.select-wrapper-inner {\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n}\n\n:host(.select-label-placement-stacked) .select-wrapper-inner,\n:host(.select-label-placement-floating) .select-wrapper-inner {\n  /**\n   * When using a stacked/floating label, the inner wrapper is\n   * stacked vertically under the label container. This line\n   * ensures that the inner wrapper fills all the remaining height\n   * of the component.\n   */\n  flex-grow: 1;\n}\n\n:host(.ion-touched.ion-invalid) {\n  --highlight-color: var(--highlight-color-invalid);\n}\n\n/**\n * The component highlight is only shown\n * on focus, so we can safely set the valid\n * color state when touched/valid. If we\n * set it when .has-focus is present then\n * the highlight color would change\n * from the valid color to the component's\n * color during the transition after the\n * component loses focus.\n */\n:host(.ion-valid) {\n  --highlight-color: var(--highlight-color-valid);\n}\n\n.label-text-wrapper {\n  /**\n   * This causes the label to take up\n   * the entire height of its container\n   * while still keeping the text centered.\n   */\n  display: flex;\n  align-items: center;\n  /**\n   * Label text should not extend\n   * beyond the bounds of the select.\n   * However, we do not set the max\n   * width to 100% because then\n   * only the label would show and users\n   * would not be able to see what they are typing.\n   */\n  max-width: 200px;\n  transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1), transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  /**\n   * This ensures that double tapping this text\n   * clicks the <label> and focuses the input\n   * when a screen reader is enabled.\n   */\n  pointer-events: none;\n}\n\n/**\n * We need to use two elements instead of\n * one. The .label-text-wrapper is responsible\n * for centering the label text vertically regardless\n * of the input height using flexbox.\n *\n * The .label-text element is responsible for controlling\n * overflow when label-placement=\"fixed\".\n * We want the ellipses to show up when the\n * fixed label overflows, but text-overflow: ellipsis only\n * works on block-level elements. A flex item is\n * considered blockified (https://www.w3.org/TR/css-display-3/#blockify).\n */\n.label-text,\n::slotted([slot=label]) {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n/**\n * If no label text is placed into the slot\n * then the element should be hidden otherwise\n * there will be additional margins added.\n */\n.label-text-wrapper-hidden,\n.select-outline-notch-hidden {\n  display: none;\n}\n\n.native-wrapper {\n  display: flex;\n  align-items: center;\n  /**\n   * When the floating label appears on top of the\n   * input, we need to fade the input out so that the\n   * label does not overlap with the placeholder.\n   */\n  transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  /**\n   * This ensures that the .select-text gets\n   * truncated with ellipses when the text is\n   * too long for the screen.\n   */\n  overflow: hidden;\n}\n\n:host(.select-justify-space-between) .select-wrapper {\n  justify-content: space-between;\n}\n\n:host(.select-justify-start) .select-wrapper {\n  justify-content: start;\n}\n\n:host(.select-justify-end) .select-wrapper {\n  justify-content: end;\n}\n\n/**\n * Label is on the left of the input in LTR and\n * on the right in RTL.\n */\n:host(.select-label-placement-start) .select-wrapper {\n  flex-direction: row;\n}\n\n:host(.select-label-placement-start) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the select should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n/**\n * Label is on the right of the select in LTR and\n * on the left in RTL.\n */\n:host(.select-label-placement-end) .select-wrapper {\n  flex-direction: row-reverse;\n}\n\n/**\n * The margin between the label and\n * the select should be on the start\n * when the label sits at the end.\n */\n:host(.select-label-placement-end) .label-text-wrapper {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 0;\n  margin-inline-end: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n:host(.select-label-placement-fixed) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the select should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n/**\n * Label is on the left of the select in LTR and\n * on the right in RTL. Label also has a fixed width.\n */\n:host(.select-label-placement-fixed) .label-text-wrapper {\n  flex: 0 0 100px;\n  width: 100px;\n  min-width: 100px;\n  max-width: 200px;\n}\n\n/**\n * Stacked: Label sits above the select and is scaled down.\n * Floating: Label sits over the select when the select has no\n * value and is blurred. Label sits above the input and is scaled\n * down when the select is focused or has a value.\n *\n */\n:host(.select-label-placement-stacked) .select-wrapper,\n:host(.select-label-placement-floating) .select-wrapper {\n  flex-direction: column;\n  align-items: start;\n}\n\n/**\n * Ensures that the label animates\n * up and to the left in LTR or\n * up and to the right in RTL.\n */\n:host(.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-label-placement-floating) .label-text-wrapper {\n  max-width: 100%;\n}\n\n:host(.select-ltr.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-ltr.select-label-placement-floating) .label-text-wrapper {\n  transform-origin: left top;\n}\n\n:host(.select-rtl.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-rtl.select-label-placement-floating) .label-text-wrapper {\n  transform-origin: right top;\n}\n\n/**\n * Ensures the select does not\n * overlap the label.\n * Also ensure that the native wrapper\n * takes up the remaining available height and width.\n */\n:host(.select-label-placement-stacked) .native-wrapper,\n:host(.select-label-placement-floating) .native-wrapper {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 1px;\n  margin-bottom: 0;\n  flex-grow: 1;\n  width: 100%;\n}\n\n/**\n * This makes the label sit over the select\n * when the select is blurred and has no value.\n * The label should not sit over the select if the\n * select has a placeholder.\n * Note: This is different from what ion-input does\n * because the activating the select causes an overlay\n * to appear. This makes it hard to read the placeholder.\n * With ion-input, the input just focuses and the placeholder\n * is still easy to read.\n */\n:host(.select-label-placement-floating) .label-text-wrapper {\n  transform: translateY(100%) scale(1);\n}\n\n/**\n * The placeholder should be hidden when the label\n * is on top of the select. This prevents the label\n * from overlapping any placeholder value.\n *\n * TODO(FW-5592): Remove :not(.label-floating) piece\n */\n:host(.select-label-placement-floating:not(.label-floating)) .native-wrapper .select-placeholder {\n  opacity: 0;\n}\n\n/**\n * We don't use .label-floating here because that would\n * also include the case where the label is floating due\n * to content in the start/end slot. We want the opacity\n * to remain at the default in this case, since the select\n * isn't being actively interacted with.\n *\n * TODO(FW-5592): Change entire selector to:\n * :host(.label-floating.select-label-placement-floating) .native-wrapper .select-placeholder\n */\n:host(.select-expanded.select-label-placement-floating) .native-wrapper .select-placeholder,\n:host(.ion-focused.select-label-placement-floating) .native-wrapper .select-placeholder,\n:host(.has-value.select-label-placement-floating) .native-wrapper .select-placeholder {\n  opacity: 1;\n}\n\n/**\n * This makes the label sit above the input.\n */\n:host(.label-floating) .label-text-wrapper {\n  transform: translateY(50%) scale(0.75);\n  /**\n   * Label text should not extend\n   * beyond the bounds of the input.\n   */\n  max-width: calc(100% / 0.75);\n}\n\n::slotted([slot=start]), ::slotted([slot=end]) {\n  /**\n   * Prevent the slots from shrinking when the label and/or\n   * selected item text is long enough to fill the rest of\n   * the container.\n   */\n  flex-shrink: 0;\n}\n\n::slotted([slot=start]:last-of-type) {\n  margin-inline-end: 16px;\n  margin-inline-start: 0;\n}\n\n::slotted([slot=end]:first-of-type) {\n  margin-inline-start: 16px;\n  margin-inline-end: 0;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host(.select-fill-solid) {\n  --background: var(--ion-color-step-50, var(--ion-background-color-step-50, #f2f2f2));\n  --border-color: var(--ion-color-step-500, var(--ion-background-color-step-500, gray));\n  --border-radius: 4px;\n  --padding-start: 16px;\n  --padding-end: 16px;\n  min-height: 56px;\n}\n\n/**\n * The solid fill style has a border\n * at the bottom of the select wrapper.\n * As a result, the border on the \"bottom\n * content\" is not needed.\n */\n:host(.select-fill-solid) .select-wrapper {\n  border-bottom: var(--border-width) var(--border-style) var(--border-color);\n}\n\n/**\n * If the select has a validity state, the\n * border should reflect that as a color.\n */\n:host(.has-focus.select-fill-solid.ion-valid),\n:host(.select-fill-solid.ion-touched.ion-invalid) {\n  --border-color: var(--highlight-color);\n}\n\n:host(.select-fill-solid) .select-bottom {\n  border-top: none;\n}\n\n/**\n * Background and border should be\n * slightly darker on hover.\n */\n@media (any-hover: hover) {\n  :host(.select-fill-solid:hover) {\n    --background: var(--ion-color-step-100, var(--ion-background-color-step-100, #e6e6e6));\n    --border-color: var(--ion-color-step-750, var(--ion-background-color-step-750, #404040));\n  }\n}\n/**\n * Background and border should be\n * much darker on focus.\n */\n:host(.select-fill-solid.select-expanded),\n:host(.select-fill-solid.ion-focused) {\n  --background: var(--ion-color-step-150, var(--ion-background-color-step-150, #d9d9d9));\n  --border-color: var(--ion-color-step-750, var(--ion-background-color-step-750, #404040));\n}\n\n:host(.select-fill-solid) .select-wrapper {\n  /**\n   * Only the top left and top right borders should.\n   * have a radius when using a solid fill.\n   */\n  border-start-start-radius: var(--border-radius);\n  border-start-end-radius: var(--border-radius);\n  border-end-end-radius: 0px;\n  border-end-start-radius: 0px;\n}\n\n:host(.label-floating.select-fill-solid) .label-text-wrapper {\n  /**\n   * Label text should not extend\n   * beyond the bounds of the select.\n   */\n  max-width: calc(100% / 0.75);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host(.select-fill-outline) {\n  --border-color: var(--ion-color-step-300, var(--ion-background-color-step-300, #b3b3b3));\n  --border-radius: 4px;\n  --padding-start: 16px;\n  --padding-end: 16px;\n  min-height: 56px;\n}\n\n:host(.select-fill-outline.select-shape-round) {\n  --border-radius: 28px;\n  --padding-start: 32px;\n  --padding-end: 32px;\n}\n\n/**\n * If the select has a validity state, the\n * border should reflect that as a color.\n */\n:host(.has-focus.select-fill-outline.ion-valid),\n:host(.select-fill-outline.ion-touched.ion-invalid) {\n  --border-color: var(--highlight-color);\n}\n\n/**\n * Border should be\n * slightly darker on hover.\n */\n@media (any-hover: hover) {\n  :host(.select-fill-outline:hover) {\n    --border-color: var(--ion-color-step-750, var(--ion-background-color-step-750, #404040));\n  }\n}\n/**\n * The border should get thicker\n * and take on component color when\n * the select is focused.\n */\n:host(.select-fill-outline.select-expanded),\n:host(.select-fill-outline.ion-focused) {\n  --border-width: var(--highlight-height);\n  --border-color: var(--highlight-color);\n}\n\n/**\n * The bottom content should never have\n * a border with the outline style.\n */\n:host(.select-fill-outline) .select-bottom {\n  border-top: none;\n}\n\n/**\n * Outline selects do not have a bottom border.\n * Instead, they have a border that wraps the\n * select + label.\n */\n:host(.select-fill-outline) .select-wrapper {\n  border-bottom: none;\n}\n\n:host(.select-ltr.select-fill-outline.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-ltr.select-fill-outline.select-label-placement-floating) .label-text-wrapper {\n  transform-origin: left top;\n}\n\n:host(.select-rtl.select-fill-outline.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-rtl.select-fill-outline.select-label-placement-floating) .label-text-wrapper {\n  transform-origin: right top;\n}\n\n:host(.select-fill-outline.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-fill-outline.select-label-placement-floating) .label-text-wrapper {\n  position: absolute;\n  /**\n   * Label text should not extend\n   * beyond the bounds of the select.\n   */\n  max-width: calc(100% - var(--padding-start) - var(--padding-end));\n}\n\n/**\n * The label should appear on top of an outline\n * container that overlaps it so it is always clickable.\n */\n:host(.select-fill-outline) .label-text-wrapper,\n:host(.select-fill-outline) .label-text-wrapper {\n  position: relative;\n  z-index: 1;\n}\n\n/**\n * This makes the label sit above the select.\n */\n:host(.label-floating.select-fill-outline) .label-text-wrapper {\n  transform: translateY(-32%) scale(0.75);\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  /**\n   * Label text should not extend\n   * beyond the bounds of the select.\n   */\n  max-width: calc((100% - var(--padding-start) - var(--padding-end) - 8px) / 0.75);\n}\n\n/**\n * This ensures that the select does not\n * overlap the floating label while still\n * remaining visually centered.\n */\n:host(.select-fill-outline.select-label-placement-stacked) select,\n:host(.select-fill-outline.select-label-placement-floating) select {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\n\n:host(.select-fill-outline) .select-outline-container {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n\n:host(.select-fill-outline) .select-outline-start,\n:host(.select-fill-outline) .select-outline-end {\n  pointer-events: none;\n}\n\n/**\n * By default, each piece of the container should have\n * a top and bottom border. This gives the appearance\n * of a unified container with a border.\n */\n:host(.select-fill-outline) .select-outline-start,\n:host(.select-fill-outline) .select-outline-notch,\n:host(.select-fill-outline) .select-outline-end {\n  border-top: var(--border-width) var(--border-style) var(--border-color);\n  border-bottom: var(--border-width) var(--border-style) var(--border-color);\n  /**\n   * `border-box` is applied in the global\n   * Ionic stylesheet, but since this is in\n   * the Shadow DOM, these elements do not\n   * receive the global style. The outline\n   * pieces for `ion-input` do because that\n   * component is in the Light DOM.\n   */\n  box-sizing: border-box;\n}\n\n/**\n * Ensures long labels do not cause the notch to flow\n * out of bounds.\n */\n:host(.select-fill-outline) .select-outline-notch {\n  max-width: calc(100% - var(--padding-start) - var(--padding-end));\n}\n\n/**\n * This element ensures that the notch used\n * the size of the scaled text so that the\n * border cut out is the correct width.\n * The text in this element should not\n * be interactive.\n */\n:host(.select-fill-outline) .notch-spacer {\n  /**\n   * We need $select-md-floating-label-padding of padding on the right.\n   * However, we also subtracted $select-md-floating-label-padding from\n   * the width of .select-outline-start\n   * to create space, so we need to take\n   * that into consideration here.\n   */\n  -webkit-padding-end: 8px;\n  padding-inline-end: 8px;\n  font-size: calc(1em * 0.75);\n  opacity: 0;\n  pointer-events: none;\n}\n\n:host(.select-fill-outline) .select-outline-start {\n  -webkit-border-start: var(--border-width) var(--border-style) var(--border-color);\n  border-inline-start: var(--border-width) var(--border-style) var(--border-color);\n}\n\n:host(.select-fill-outline) .select-outline-start {\n  border-start-start-radius: var(--border-radius);\n  border-start-end-radius: 0px;\n  border-end-end-radius: 0px;\n  border-end-start-radius: var(--border-radius);\n}\n\n:host(.select-fill-outline) .select-outline-start {\n  /**\n   * There should be spacing between the translated text\n   * and .select-outline-start. However, we can't add this\n   * spacing onto the notch because it would cause the\n   * label to look like it is not aligned with the\n   * text select. Instead, we subtract a few pixels from\n   * this element.\n   */\n  width: calc(var(--padding-start) - 4px);\n}\n\n:host(.select-fill-outline) .select-outline-end {\n  -webkit-border-end: var(--border-width) var(--border-style) var(--border-color);\n  border-inline-end: var(--border-width) var(--border-style) var(--border-color);\n}\n\n:host(.select-fill-outline) .select-outline-end {\n  border-start-start-radius: 0px;\n  border-start-end-radius: var(--border-radius);\n  border-end-end-radius: var(--border-radius);\n  border-end-start-radius: 0px;\n}\n\n:host(.select-fill-outline) .select-outline-end {\n  /**\n   * The ending outline fragment\n   * should take up the remaining free space.\n   */\n  flex-grow: 1;\n}\n\n/**\n * When the select either has focus or a value,\n * there should be a \"cut out\" at the top for\n * the floating/stacked label. We simulate this \"cut out\"\n * by removing the top border from the notch fragment.\n */\n:host(.label-floating.select-fill-outline) .select-outline-notch {\n  border-top: none;\n}\n\n:host {\n  --border-width: 1px;\n  --border-color: var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, var(--ion-background-color-step-150, rgba(0, 0, 0, 0.13)))));\n  --highlight-height: 2px;\n}\n\n.select-icon {\n  width: 0.8125rem;\n  transition: transform 0.15s cubic-bezier(0.4, 0, 0.2, 1);\n  color: var(--ion-color-step-500, var(--ion-text-color-step-500, gray));\n}\n\n/**\n * When the select is focused the label should\n * take on the highlight color. This should\n * only apply to floating or stacked labels.\n */\n:host(.select-label-placement-floating.select-expanded) .label-text-wrapper,\n:host(.select-label-placement-floating.ion-focused) .label-text-wrapper,\n:host(.select-label-placement-stacked.select-expanded) .label-text-wrapper,\n:host(.select-label-placement-stacked.ion-focused) .label-text-wrapper {\n  color: var(--highlight-color);\n}\n\n:host(.has-focus.select-label-placement-floating.ion-valid) .label-text-wrapper,\n:host(.select-label-placement-floating.ion-touched.ion-invalid) .label-text-wrapper,\n:host(.has-focus.select-label-placement-stacked.ion-valid) .label-text-wrapper,\n:host(.select-label-placement-stacked.ion-touched.ion-invalid) .label-text-wrapper {\n  color: var(--highlight-color);\n}\n\n.select-highlight {\n  bottom: -1px;\n  position: absolute;\n  width: 100%;\n  height: var(--highlight-height);\n  transform: scale(0);\n  transition: transform 200ms;\n  background: var(--highlight-color);\n}\n.select-highlight {\n  inset-inline-start: 0;\n}\n\n:host(.select-expanded) .select-highlight,\n:host(.ion-focused) .select-highlight {\n  transform: scale(1);\n}\n\n/**\n * Adjust the highlight up by 1px\n * so it is not cut off by the\n * the item's line (if one is present).\n */\n:host(.in-item) .select-highlight {\n  bottom: 0;\n}\n:host(.in-item) .select-highlight {\n  inset-inline-start: 0;\n}\n\n/**\n * This rotates the chevron icon\n * when the select is activated.\n * This should only happen on MD.\n */\n:host(.select-expanded:not(.has-expanded-icon)) .select-icon {\n  transform: rotate(180deg);\n}\n\n/**\n * When the select is focused the icon should\n * take on the highlight color.\n * The icon should also take on the highlight\n * color if there is a validation state.\n */\n:host(.select-expanded) .select-wrapper .select-icon,\n:host(.has-focus.ion-valid) .select-wrapper .select-icon,\n:host(.ion-touched.ion-invalid) .select-wrapper .select-icon,\n:host(.ion-focused) .select-wrapper .select-icon {\n  color: var(--highlight-color);\n}\n\n:host(.select-shape-round) {\n  --border-radius: 16px;\n}\n\n:host(.select-label-placement-stacked) .select-wrapper-inner,\n:host(.select-label-placement-floating) .select-wrapper-inner {\n  width: calc(100% - 0.8125rem - 4px);\n}\n\n:host(.select-disabled) {\n  opacity: 0.38;\n}\n\n/**\n * Slotted buttons have a lot of default padding that can\n * cause them to look misaligned from other pieces such\n * as the control's label, especially when using a clear\n * fill. We also make them circular to ensure that non-\n * clear buttons and the focus/hover state on clear ones\n * don't look too crowded.\n */\n::slotted(ion-button[slot=start].button-has-icon-only),\n::slotted(ion-button[slot=end].button-has-icon-only) {\n  --border-radius: 50%;\n  --padding-start: 8px;\n  --padding-end: 8px;\n  --padding-top: 8px;\n  --padding-bottom: 8px;\n  aspect-ratio: 1;\n  min-height: 40px;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h, forceUpdate } from \"@stencil/core\";\nimport { compareOptions, createNotchController, isOptionSelected } from \"../../utils/forms/index\";\nimport { focusVisibleElement, renderHiddenInput, inheritAttributes } from \"../../utils/helpers\";\nimport { actionSheetController, alertController, popoverController } from \"../../utils/overlays\";\nimport { isRTL } from \"../../utils/rtl/index\";\nimport { createColorClasses, hostContext } from \"../../utils/theme\";\nimport { watchForOptions } from \"../../utils/watch-options\";\nimport { caretDownSharp, chevronExpand } from \"ionicons/icons\";\nimport { getIonMode } from \"../../global/ionic-global\";\n// TODO(FW-2832): types\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @slot label - The label text to associate with the select. Use the `labelPlacement` property to control where the label is placed relative to the select. Use this if you need to render a label with custom HTML.\n * @slot start - Content to display at the leading edge of the select.\n * @slot end - Content to display at the trailing edge of the select.\n *\n * @part placeholder - The text displayed in the select when there is no value.\n * @part text - The displayed value of the select.\n * @part icon - The select icon container.\n * @part container - The container for the selected text or placeholder.\n * @part label - The label text describing the select.\n */\nexport class Select {\n    constructor() {\n        this.inputId = `ion-sel-${selectIds++}`;\n        this.inheritedAttributes = {};\n        this.onClick = (ev) => {\n            const target = ev.target;\n            const closestSlot = target.closest('[slot=\"start\"], [slot=\"end\"]');\n            if (target === this.el || closestSlot === null) {\n                this.setFocus();\n                this.open(ev);\n            }\n            else {\n                /**\n                 * Prevent clicks to the start/end slots from opening the select.\n                 * We ensure the target isn't this element in case the select is slotted\n                 * in, for example, an item. This would prevent the select from ever\n                 * being opened since the element itself has slot=\"start\"/\"end\".\n                 *\n                 * Clicking a slotted element also causes a click\n                 * on the <label> element (since it wraps the slots).\n                 * Clicking <label> dispatches another click event on\n                 * the native form control that then bubbles up to this\n                 * listener. This additional event targets the host\n                 * element, so the select overlay is opened.\n                 *\n                 * When the slotted elements are clicked (and therefore\n                 * the ancestor <label> element) we want to prevent the label\n                 * from dispatching another click event.\n                 *\n                 * Do not call stopPropagation() because this will cause\n                 * click handlers on the slotted elements to never fire in React.\n                 * When developers do onClick in React a native \"click\" listener\n                 * is added on the root element, not the slotted element. When that\n                 * native click listener fires, React then dispatches the synthetic\n                 * click event on the slotted element. However, if stopPropagation\n                 * is called then the native click event will never bubble up\n                 * to the root element.\n                 */\n                ev.preventDefault();\n            }\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.isExpanded = false;\n        this.cancelText = 'Cancel';\n        this.color = undefined;\n        this.compareWith = undefined;\n        this.disabled = false;\n        this.fill = undefined;\n        this.interface = 'alert';\n        this.interfaceOptions = {};\n        this.justify = 'space-between';\n        this.label = undefined;\n        this.labelPlacement = 'start';\n        this.multiple = false;\n        this.name = this.inputId;\n        this.okText = 'OK';\n        this.placeholder = undefined;\n        this.selectedText = undefined;\n        this.toggleIcon = undefined;\n        this.expandedIcon = undefined;\n        this.shape = undefined;\n        this.value = undefined;\n    }\n    styleChanged() {\n        this.emitStyle();\n    }\n    setValue(value) {\n        this.value = value;\n        this.ionChange.emit({ value });\n    }\n    async connectedCallback() {\n        const { el } = this;\n        this.notchController = createNotchController(el, () => this.notchSpacerEl, () => this.labelSlot);\n        this.updateOverlayOptions();\n        this.emitStyle();\n        this.mutationO = watchForOptions(this.el, 'ion-select-option', async () => {\n            this.updateOverlayOptions();\n            /**\n             * We need to re-render the component\n             * because one of the new ion-select-option\n             * elements may match the value. In this case,\n             * the rendered selected text should be updated.\n             */\n            forceUpdate(this);\n        });\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAttributes(this.el, ['aria-label']);\n    }\n    componentDidLoad() {\n        /**\n         * If any of the conditions that trigger the styleChanged callback\n         * are met on component load, it is possible the event emitted\n         * prior to a parent web component registering an event listener.\n         *\n         * To ensure the parent web component receives the event, we\n         * emit the style event again after the component has loaded.\n         *\n         * This is often seen in Angular with the `dist` output target.\n         */\n        this.emitStyle();\n    }\n    disconnectedCallback() {\n        if (this.mutationO) {\n            this.mutationO.disconnect();\n            this.mutationO = undefined;\n        }\n        if (this.notchController) {\n            this.notchController.destroy();\n            this.notchController = undefined;\n        }\n    }\n    /**\n     * Open the select overlay. The overlay is either an alert, action sheet, or popover,\n     * depending on the `interface` property on the `ion-select`.\n     *\n     * @param event The user interface event that called the open.\n     */\n    async open(event) {\n        if (this.disabled || this.isExpanded) {\n            return undefined;\n        }\n        this.isExpanded = true;\n        const overlay = (this.overlay = await this.createOverlay(event));\n        overlay.onDidDismiss().then(() => {\n            this.overlay = undefined;\n            this.isExpanded = false;\n            this.ionDismiss.emit();\n            this.setFocus();\n        });\n        await overlay.present();\n        // focus selected option for popovers\n        if (this.interface === 'popover') {\n            const indexOfSelected = this.childOpts.map((o) => o.value).indexOf(this.value);\n            if (indexOfSelected > -1) {\n                const selectedItem = overlay.querySelector(`.select-interface-option:nth-child(${indexOfSelected + 1})`);\n                if (selectedItem) {\n                    focusVisibleElement(selectedItem);\n                    /**\n                     * Browsers such as Firefox do not\n                     * correctly delegate focus when manually\n                     * focusing an element with delegatesFocus.\n                     * We work around this by manually focusing\n                     * the interactive element.\n                     * ion-radio and ion-checkbox are the only\n                     * elements that ion-select-popover uses, so\n                     * we only need to worry about those two components\n                     * when focusing.\n                     */\n                    const interactiveEl = selectedItem.querySelector('ion-radio, ion-checkbox');\n                    if (interactiveEl) {\n                        interactiveEl.focus();\n                    }\n                }\n            }\n            else {\n                /**\n                 * If no value is set then focus the first enabled option.\n                 */\n                const firstEnabledOption = overlay.querySelector('ion-radio:not(.radio-disabled), ion-checkbox:not(.checkbox-disabled)');\n                if (firstEnabledOption) {\n                    focusVisibleElement(firstEnabledOption.closest('ion-item'));\n                    /**\n                     * Focus the option for the same reason as we do above.\n                     */\n                    firstEnabledOption.focus();\n                }\n            }\n        }\n        return overlay;\n    }\n    createOverlay(ev) {\n        let selectInterface = this.interface;\n        if (selectInterface === 'action-sheet' && this.multiple) {\n            console.warn(`Select interface cannot be \"${selectInterface}\" with a multi-value select. Using the \"alert\" interface instead.`);\n            selectInterface = 'alert';\n        }\n        if (selectInterface === 'popover' && !ev) {\n            console.warn(`Select interface cannot be a \"${selectInterface}\" without passing an event. Using the \"alert\" interface instead.`);\n            selectInterface = 'alert';\n        }\n        if (selectInterface === 'action-sheet') {\n            return this.openActionSheet();\n        }\n        if (selectInterface === 'popover') {\n            return this.openPopover(ev);\n        }\n        return this.openAlert();\n    }\n    updateOverlayOptions() {\n        const overlay = this.overlay;\n        if (!overlay) {\n            return;\n        }\n        const childOpts = this.childOpts;\n        const value = this.value;\n        switch (this.interface) {\n            case 'action-sheet':\n                overlay.buttons = this.createActionSheetButtons(childOpts, value);\n                break;\n            case 'popover':\n                const popover = overlay.querySelector('ion-select-popover');\n                if (popover) {\n                    popover.options = this.createPopoverOptions(childOpts, value);\n                }\n                break;\n            case 'alert':\n                const inputType = this.multiple ? 'checkbox' : 'radio';\n                overlay.inputs = this.createAlertInputs(childOpts, inputType, value);\n                break;\n        }\n    }\n    createActionSheetButtons(data, selectValue) {\n        const actionSheetButtons = data.map((option) => {\n            const value = getOptionValue(option);\n            // Remove hydrated before copying over classes\n            const copyClasses = Array.from(option.classList)\n                .filter((cls) => cls !== 'hydrated')\n                .join(' ');\n            const optClass = `${OPTION_CLASS} ${copyClasses}`;\n            return {\n                role: isOptionSelected(selectValue, value, this.compareWith) ? 'selected' : '',\n                text: option.textContent,\n                cssClass: optClass,\n                handler: () => {\n                    this.setValue(value);\n                },\n            };\n        });\n        // Add \"cancel\" button\n        actionSheetButtons.push({\n            text: this.cancelText,\n            role: 'cancel',\n            handler: () => {\n                this.ionCancel.emit();\n            },\n        });\n        return actionSheetButtons;\n    }\n    createAlertInputs(data, inputType, selectValue) {\n        const alertInputs = data.map((option) => {\n            const value = getOptionValue(option);\n            // Remove hydrated before copying over classes\n            const copyClasses = Array.from(option.classList)\n                .filter((cls) => cls !== 'hydrated')\n                .join(' ');\n            const optClass = `${OPTION_CLASS} ${copyClasses}`;\n            return {\n                type: inputType,\n                cssClass: optClass,\n                label: option.textContent || '',\n                value,\n                checked: isOptionSelected(selectValue, value, this.compareWith),\n                disabled: option.disabled,\n            };\n        });\n        return alertInputs;\n    }\n    createPopoverOptions(data, selectValue) {\n        const popoverOptions = data.map((option) => {\n            const value = getOptionValue(option);\n            // Remove hydrated before copying over classes\n            const copyClasses = Array.from(option.classList)\n                .filter((cls) => cls !== 'hydrated')\n                .join(' ');\n            const optClass = `${OPTION_CLASS} ${copyClasses}`;\n            return {\n                text: option.textContent || '',\n                cssClass: optClass,\n                value,\n                checked: isOptionSelected(selectValue, value, this.compareWith),\n                disabled: option.disabled,\n                handler: (selected) => {\n                    this.setValue(selected);\n                    if (!this.multiple) {\n                        this.close();\n                    }\n                },\n            };\n        });\n        return popoverOptions;\n    }\n    async openPopover(ev) {\n        const { fill, labelPlacement } = this;\n        const interfaceOptions = this.interfaceOptions;\n        const mode = getIonMode(this);\n        const showBackdrop = mode === 'md' ? false : true;\n        const multiple = this.multiple;\n        const value = this.value;\n        let event = ev;\n        let size = 'auto';\n        const hasFloatingOrStackedLabel = labelPlacement === 'floating' || labelPlacement === 'stacked';\n        /**\n         * The popover should take up the full width\n         * when using a fill in MD mode or if the\n         * label is floating/stacked.\n         */\n        if (hasFloatingOrStackedLabel || (mode === 'md' && fill !== undefined)) {\n            size = 'cover';\n            /**\n             * Otherwise the popover\n             * should be positioned relative\n             * to the native element.\n             */\n        }\n        else {\n            event = Object.assign(Object.assign({}, ev), { detail: {\n                    ionShadowTarget: this.nativeWrapperEl,\n                } });\n        }\n        const popoverOpts = Object.assign(Object.assign({ mode,\n            event, alignment: 'center', size,\n            showBackdrop }, interfaceOptions), { component: 'ion-select-popover', cssClass: ['select-popover', interfaceOptions.cssClass], componentProps: {\n                header: interfaceOptions.header,\n                subHeader: interfaceOptions.subHeader,\n                message: interfaceOptions.message,\n                multiple,\n                value,\n                options: this.createPopoverOptions(this.childOpts, value),\n            } });\n        /**\n         * Workaround for Stencil to autodefine\n         * ion-select-popover and ion-popover when\n         * using Custom Elements build.\n         */\n        // eslint-disable-next-line\n        if (false) {\n            // eslint-disable-next-line\n            // @ts-ignore\n            document.createElement('ion-select-popover');\n            document.createElement('ion-popover');\n        }\n        return popoverController.create(popoverOpts);\n    }\n    async openActionSheet() {\n        const mode = getIonMode(this);\n        const interfaceOptions = this.interfaceOptions;\n        const actionSheetOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { buttons: this.createActionSheetButtons(this.childOpts, this.value), cssClass: ['select-action-sheet', interfaceOptions.cssClass] });\n        /**\n         * Workaround for Stencil to autodefine\n         * ion-action-sheet when\n         * using Custom Elements build.\n         */\n        // eslint-disable-next-line\n        if (false) {\n            // eslint-disable-next-line\n            // @ts-ignore\n            document.createElement('ion-action-sheet');\n        }\n        return actionSheetController.create(actionSheetOpts);\n    }\n    async openAlert() {\n        const interfaceOptions = this.interfaceOptions;\n        const inputType = this.multiple ? 'checkbox' : 'radio';\n        const mode = getIonMode(this);\n        const alertOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { header: interfaceOptions.header ? interfaceOptions.header : this.labelText, inputs: this.createAlertInputs(this.childOpts, inputType, this.value), buttons: [\n                {\n                    text: this.cancelText,\n                    role: 'cancel',\n                    handler: () => {\n                        this.ionCancel.emit();\n                    },\n                },\n                {\n                    text: this.okText,\n                    handler: (selectedValues) => {\n                        this.setValue(selectedValues);\n                    },\n                },\n            ], cssClass: [\n                'select-alert',\n                interfaceOptions.cssClass,\n                this.multiple ? 'multiple-select-alert' : 'single-select-alert',\n            ] });\n        /**\n         * Workaround for Stencil to autodefine\n         * ion-alert when\n         * using Custom Elements build.\n         */\n        // eslint-disable-next-line\n        if (false) {\n            // eslint-disable-next-line\n            // @ts-ignore\n            document.createElement('ion-alert');\n        }\n        return alertController.create(alertOpts);\n    }\n    /**\n     * Close the select interface.\n     */\n    close() {\n        if (!this.overlay) {\n            return Promise.resolve(false);\n        }\n        return this.overlay.dismiss();\n    }\n    hasValue() {\n        return this.getText() !== '';\n    }\n    get childOpts() {\n        return Array.from(this.el.querySelectorAll('ion-select-option'));\n    }\n    /**\n     * Returns any plaintext associated with\n     * the label (either prop or slot).\n     * Note: This will not return any custom\n     * HTML. Use the `hasLabel` getter if you\n     * want to know if any slotted label content\n     * was passed.\n     */\n    get labelText() {\n        const { label } = this;\n        if (label !== undefined) {\n            return label;\n        }\n        const { labelSlot } = this;\n        if (labelSlot !== null) {\n            return labelSlot.textContent;\n        }\n        return;\n    }\n    getText() {\n        const selectedText = this.selectedText;\n        if (selectedText != null && selectedText !== '') {\n            return selectedText;\n        }\n        return generateText(this.childOpts, this.value, this.compareWith);\n    }\n    setFocus() {\n        if (this.focusEl) {\n            this.focusEl.focus();\n        }\n    }\n    emitStyle() {\n        const { disabled } = this;\n        const style = {\n            'interactive-disabled': disabled,\n        };\n        this.ionStyle.emit(style);\n    }\n    renderLabel() {\n        const { label } = this;\n        return (h(\"div\", { class: {\n                'label-text-wrapper': true,\n                'label-text-wrapper-hidden': !this.hasLabel,\n            }, part: \"label\" }, label === undefined ? h(\"slot\", { name: \"label\" }) : h(\"div\", { class: \"label-text\" }, label)));\n    }\n    componentDidRender() {\n        var _a;\n        (_a = this.notchController) === null || _a === void 0 ? void 0 : _a.calculateNotchWidth();\n    }\n    /**\n     * Gets any content passed into the `label` slot,\n     * not the <slot> definition.\n     */\n    get labelSlot() {\n        return this.el.querySelector('[slot=\"label\"]');\n    }\n    /**\n     * Returns `true` if label content is provided\n     * either by a prop or a content. If you want\n     * to get the plaintext value of the label use\n     * the `labelText` getter instead.\n     */\n    get hasLabel() {\n        return this.label !== undefined || this.labelSlot !== null;\n    }\n    /**\n     * Renders the border container\n     * when fill=\"outline\".\n     */\n    renderLabelContainer() {\n        const mode = getIonMode(this);\n        const hasOutlineFill = mode === 'md' && this.fill === 'outline';\n        if (hasOutlineFill) {\n            /**\n             * The outline fill has a special outline\n             * that appears around the select and the label.\n             * Certain stacked and floating label placements cause the\n             * label to translate up and create a \"cut out\"\n             * inside of that border by using the notch-spacer element.\n             */\n            return [\n                h(\"div\", { class: \"select-outline-container\" }, h(\"div\", { class: \"select-outline-start\" }), h(\"div\", { class: {\n                        'select-outline-notch': true,\n                        'select-outline-notch-hidden': !this.hasLabel,\n                    } }, h(\"div\", { class: \"notch-spacer\", \"aria-hidden\": \"true\", ref: (el) => (this.notchSpacerEl = el) }, this.label)), h(\"div\", { class: \"select-outline-end\" })),\n                this.renderLabel(),\n            ];\n        }\n        /**\n         * If not using the outline style,\n         * we can render just the label.\n         */\n        return this.renderLabel();\n    }\n    /**\n     * Renders either the placeholder\n     * or the selected values based on\n     * the state of the select.\n     */\n    renderSelectText() {\n        const { placeholder } = this;\n        const displayValue = this.getText();\n        let addPlaceholderClass = false;\n        let selectText = displayValue;\n        if (selectText === '' && placeholder !== undefined) {\n            selectText = placeholder;\n            addPlaceholderClass = true;\n        }\n        const selectTextClasses = {\n            'select-text': true,\n            'select-placeholder': addPlaceholderClass,\n        };\n        const textPart = addPlaceholderClass ? 'placeholder' : 'text';\n        return (h(\"div\", { \"aria-hidden\": \"true\", class: selectTextClasses, part: textPart }, selectText));\n    }\n    /**\n     * Renders the chevron icon\n     * next to the select text.\n     */\n    renderSelectIcon() {\n        const mode = getIonMode(this);\n        const { isExpanded, toggleIcon, expandedIcon } = this;\n        let icon;\n        if (isExpanded && expandedIcon !== undefined) {\n            icon = expandedIcon;\n        }\n        else {\n            const defaultIcon = mode === 'ios' ? chevronExpand : caretDownSharp;\n            icon = toggleIcon !== null && toggleIcon !== void 0 ? toggleIcon : defaultIcon;\n        }\n        return h(\"ion-icon\", { class: \"select-icon\", part: \"icon\", \"aria-hidden\": \"true\", icon: icon });\n    }\n    get ariaLabel() {\n        var _a;\n        const { placeholder, inheritedAttributes } = this;\n        const displayValue = this.getText();\n        // The aria label should be preferred over visible text if both are specified\n        const definedLabel = (_a = inheritedAttributes['aria-label']) !== null && _a !== void 0 ? _a : this.labelText;\n        /**\n         * If developer has specified a placeholder\n         * and there is nothing selected, the selectText\n         * should have the placeholder value.\n         */\n        let renderedLabel = displayValue;\n        if (renderedLabel === '' && placeholder !== undefined) {\n            renderedLabel = placeholder;\n        }\n        /**\n         * If there is a developer-defined label,\n         * then we need to concatenate the developer label\n         * string with the current current value.\n         * The label for the control should be read\n         * before the values of the control.\n         */\n        if (definedLabel !== undefined) {\n            renderedLabel = renderedLabel === '' ? definedLabel : `${definedLabel}, ${renderedLabel}`;\n        }\n        return renderedLabel;\n    }\n    renderListbox() {\n        const { disabled, inputId, isExpanded } = this;\n        return (h(\"button\", { disabled: disabled, id: inputId, \"aria-label\": this.ariaLabel, \"aria-haspopup\": \"dialog\", \"aria-expanded\": `${isExpanded}`, onFocus: this.onFocus, onBlur: this.onBlur, ref: (focusEl) => (this.focusEl = focusEl) }));\n    }\n    render() {\n        const { disabled, el, isExpanded, expandedIcon, labelPlacement, justify, placeholder, fill, shape, name, value } = this;\n        const mode = getIonMode(this);\n        const hasFloatingOrStackedLabel = labelPlacement === 'floating' || labelPlacement === 'stacked';\n        const justifyEnabled = !hasFloatingOrStackedLabel;\n        const rtl = isRTL(el) ? 'rtl' : 'ltr';\n        const inItem = hostContext('ion-item', this.el);\n        const shouldRenderHighlight = mode === 'md' && fill !== 'outline' && !inItem;\n        const hasValue = this.hasValue();\n        const hasStartEndSlots = el.querySelector('[slot=\"start\"], [slot=\"end\"]') !== null;\n        renderHiddenInput(true, el, name, parseValue(value), disabled);\n        /**\n         * If the label is stacked, it should always sit above the select.\n         * For floating labels, the label should move above the select if\n         * the select has a value, is open, or has anything in either\n         * the start or end slot.\n         *\n         * If there is content in the start slot, the label would overlap\n         * it if not forced to float. This is also applied to the end slot\n         * because with the default or solid fills, the select is not\n         * vertically centered in the container, but the label is. This\n         * causes the slots and label to appear vertically offset from each\n         * other when the label isn't floating above the input. This doesn't\n         * apply to the outline fill, but this was not accounted for to keep\n         * things consistent.\n         *\n         * TODO(FW-5592): Remove hasStartEndSlots condition\n         */\n        const labelShouldFloat = labelPlacement === 'stacked' || (labelPlacement === 'floating' && (hasValue || isExpanded || hasStartEndSlots));\n        return (h(Host, { key: 'e14586e887c0b73457b9f1e8f0585dfc7d590051', onClick: this.onClick, class: createColorClasses(this.color, {\n                [mode]: true,\n                'in-item': inItem,\n                'in-item-color': hostContext('ion-item.ion-color', el),\n                'select-disabled': disabled,\n                'select-expanded': isExpanded,\n                'has-expanded-icon': expandedIcon !== undefined,\n                'has-value': hasValue,\n                'label-floating': labelShouldFloat,\n                'has-placeholder': placeholder !== undefined,\n                'ion-focusable': true,\n                [`select-${rtl}`]: true,\n                [`select-fill-${fill}`]: fill !== undefined,\n                [`select-justify-${justify}`]: justifyEnabled,\n                [`select-shape-${shape}`]: shape !== undefined,\n                [`select-label-placement-${labelPlacement}`]: true,\n            }) }, h(\"label\", { key: 'b44929542c809f2dca25afc588701762a083edd1', class: \"select-wrapper\", id: \"select-label\" }, this.renderLabelContainer(), h(\"div\", { key: '195e3fad9cea0363ff00bf257ec2975fe5aa6887', class: \"select-wrapper-inner\" }, h(\"slot\", { key: '9da7161a69b92d6fd124a478348d3fa420092f26', name: \"start\" }), h(\"div\", { key: '49c589c164d167de0ba5741a0c80fba58ea0bec6', class: \"native-wrapper\", ref: (el) => (this.nativeWrapperEl = el), part: \"container\" }, this.renderSelectText(), this.renderListbox()), h(\"slot\", { key: 'de1536d910fceb8e2dbdda13abcf88ee969888b8', name: \"end\" }), !hasFloatingOrStackedLabel && this.renderSelectIcon()), hasFloatingOrStackedLabel && this.renderSelectIcon(), shouldRenderHighlight && h(\"div\", { key: 'e821b7b32cd1996eaa6d471df9b531ad0d491098', class: \"select-highlight\" }))));\n    }\n    static get is() { return \"ion-select\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"select.ios.scss\"],\n            \"md\": [\"select.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"select.ios.css\"],\n            \"md\": [\"select.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"cancelText\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text to display on the cancel button.\"\n                },\n                \"attribute\": \"cancel-text\",\n                \"reflect\": false,\n                \"defaultValue\": \"'Cancel'\"\n            },\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\\n\\nThis property is only available when using the modern select syntax.\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"compareWith\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | SelectCompareFn | null\",\n                    \"resolved\": \"((currentValue: any, compareValue: any) => boolean) | null | string | undefined\",\n                    \"references\": {\n                        \"SelectCompareFn\": {\n                            \"location\": \"import\",\n                            \"path\": \"./select-interface\",\n                            \"id\": \"src/components/select/select-interface.ts::SelectCompareFn\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"This property allows developers to specify a custom function or property\\nname for comparing objects when determining the selected option in the\\nion-select. When not specified, the default behavior will use strict\\nequality (===) for comparison.\"\n                },\n                \"attribute\": \"compare-with\",\n                \"reflect\": false\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the select.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"fill\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'outline' | 'solid'\",\n                    \"resolved\": \"\\\"outline\\\" | \\\"solid\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The fill for the item. If `\\\"solid\\\"` the item will have a background. If\\n`\\\"outline\\\"` the item will be transparent with a border. Only available in `md` mode.\"\n                },\n                \"attribute\": \"fill\",\n                \"reflect\": false\n            },\n            \"interface\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"SelectInterface\",\n                    \"resolved\": \"\\\"action-sheet\\\" | \\\"alert\\\" | \\\"popover\\\"\",\n                    \"references\": {\n                        \"SelectInterface\": {\n                            \"location\": \"import\",\n                            \"path\": \"./select-interface\",\n                            \"id\": \"src/components/select/select-interface.ts::SelectInterface\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The interface the select should use: `action-sheet`, `popover` or `alert`.\"\n                },\n                \"attribute\": \"interface\",\n                \"reflect\": false,\n                \"defaultValue\": \"'alert'\"\n            },\n            \"interfaceOptions\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"any\",\n                    \"resolved\": \"any\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Any additional options that the `alert`, `action-sheet` or `popover` interface\\ncan take. See the [ion-alert docs](./alert), the\\n[ion-action-sheet docs](./action-sheet) and the\\n[ion-popover docs](./popover) for the\\ncreate options for each interface.\\n\\nNote: `interfaceOptions` will not override `inputs` or `buttons` with the `alert` interface.\"\n                },\n                \"attribute\": \"interface-options\",\n                \"reflect\": false,\n                \"defaultValue\": \"{}\"\n            },\n            \"justify\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'start' | 'end' | 'space-between'\",\n                    \"resolved\": \"\\\"end\\\" | \\\"space-between\\\" | \\\"start\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"How to pack the label and select within a line.\\n`justify` does not apply when the label and select\\nare on different lines when `labelPlacement` is set to\\n`\\\"floating\\\"` or `\\\"stacked\\\"`.\\n`\\\"start\\\"`: The label and select will appear on the left in LTR and\\non the right in RTL.\\n`\\\"end\\\"`: The label and select will appear on the right in LTR and\\non the left in RTL.\\n`\\\"space-between\\\"`: The label and select will appear on opposite\\nends of the line with space between the two elements.\"\n                },\n                \"attribute\": \"justify\",\n                \"reflect\": false,\n                \"defaultValue\": \"'space-between'\"\n            },\n            \"label\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The visible label associated with the select.\\n\\nUse this if you need to render a plaintext label.\\n\\nThe `label` property will take priority over the `label` slot if both are used.\"\n                },\n                \"attribute\": \"label\",\n                \"reflect\": false\n            },\n            \"labelPlacement\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'start' | 'end' | 'floating' | 'stacked' | 'fixed'\",\n                    \"resolved\": \"\\\"end\\\" | \\\"fixed\\\" | \\\"floating\\\" | \\\"stacked\\\" | \\\"start\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Where to place the label relative to the select.\\n`\\\"start\\\"`: The label will appear to the left of the select in LTR and to the right in RTL.\\n`\\\"end\\\"`: The label will appear to the right of the select in LTR and to the left in RTL.\\n`\\\"floating\\\"`: The label will appear smaller and above the select when the select is focused or it has a value. Otherwise it will appear on top of the select.\\n`\\\"stacked\\\"`: The label will appear smaller and above the select regardless even when the select is blurred or has no value.\\n`\\\"fixed\\\"`: The label has the same behavior as `\\\"start\\\"` except it also has a fixed width. Long text will be truncated with ellipses (\\\"...\\\").\\nWhen using `\\\"floating\\\"` or `\\\"stacked\\\"` we recommend initializing the select with either a `value` or a `placeholder`.\"\n                },\n                \"attribute\": \"label-placement\",\n                \"reflect\": false,\n                \"defaultValue\": \"'start'\"\n            },\n            \"multiple\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the select can accept multiple values.\"\n                },\n                \"attribute\": \"multiple\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The name of the control, which is submitted with the form data.\"\n                },\n                \"attribute\": \"name\",\n                \"reflect\": false,\n                \"defaultValue\": \"this.inputId\"\n            },\n            \"okText\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text to display on the ok button.\"\n                },\n                \"attribute\": \"ok-text\",\n                \"reflect\": false,\n                \"defaultValue\": \"'OK'\"\n            },\n            \"placeholder\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text to display when the select is empty.\"\n                },\n                \"attribute\": \"placeholder\",\n                \"reflect\": false\n            },\n            \"selectedText\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | null\",\n                    \"resolved\": \"null | string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text to display instead of the selected option's value.\"\n                },\n                \"attribute\": \"selected-text\",\n                \"reflect\": false\n            },\n            \"toggleIcon\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The toggle icon to use. Defaults to `chevronExpand` for `ios` mode,\\nor `caretDownSharp` for `md` mode.\"\n                },\n                \"attribute\": \"toggle-icon\",\n                \"reflect\": false\n            },\n            \"expandedIcon\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The toggle icon to show when the select is open. If defined, the icon\\nrotation behavior in `md` mode will be disabled. If undefined, `toggleIcon`\\nwill be used for when the select is both open and closed.\"\n                },\n                \"attribute\": \"expanded-icon\",\n                \"reflect\": false\n            },\n            \"shape\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'round'\",\n                    \"resolved\": \"\\\"round\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The shape of the select. If \\\"round\\\" it will have an increased border radius.\"\n                },\n                \"attribute\": \"shape\",\n                \"reflect\": false\n            },\n            \"value\": {\n                \"type\": \"any\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"any | null\",\n                    \"resolved\": \"any\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The value of the select.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"isExpanded\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionChange\",\n                \"name\": \"ionChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the value has changed.\\n\\nThis event will not emit when programmatically setting the `value` property.\"\n                },\n                \"complexType\": {\n                    \"original\": \"SelectChangeEventDetail\",\n                    \"resolved\": \"SelectChangeEventDetail<any>\",\n                    \"references\": {\n                        \"SelectChangeEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"./select-interface\",\n                            \"id\": \"src/components/select/select-interface.ts::SelectChangeEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"ionCancel\",\n                \"name\": \"ionCancel\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the selection is cancelled.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionDismiss\",\n                \"name\": \"ionDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the overlay is dismissed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionFocus\",\n                \"name\": \"ionFocus\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the select has focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionBlur\",\n                \"name\": \"ionBlur\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the select loses focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionStyle\",\n                \"name\": \"ionStyle\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted when the styles change.\"\n                },\n                \"complexType\": {\n                    \"original\": \"StyleEventDetail\",\n                    \"resolved\": \"StyleEventDetail\",\n                    \"references\": {\n                        \"StyleEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::StyleEventDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"open\": {\n                \"complexType\": {\n                    \"signature\": \"(event?: UIEvent) => Promise<any>\",\n                    \"parameters\": [{\n                            \"name\": \"event\",\n                            \"type\": \"UIEvent | undefined\",\n                            \"docs\": \"The user interface event that called the open.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"UIEvent\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::UIEvent\"\n                        },\n                        \"HTMLElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLElement\"\n                        }\n                    },\n                    \"return\": \"Promise<any>\"\n                },\n                \"docs\": {\n                    \"text\": \"Open the select overlay. The overlay is either an alert, action sheet, or popover,\\ndepending on the `interface` property on the `ion-select`.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"event The user interface event that called the open.\"\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"disabled\",\n                \"methodName\": \"styleChanged\"\n            }, {\n                \"propName\": \"isExpanded\",\n                \"methodName\": \"styleChanged\"\n            }, {\n                \"propName\": \"placeholder\",\n                \"methodName\": \"styleChanged\"\n            }, {\n                \"propName\": \"value\",\n                \"methodName\": \"styleChanged\"\n            }];\n    }\n}\nconst getOptionValue = (el) => {\n    const value = el.value;\n    return value === undefined ? el.textContent || '' : value;\n};\nconst parseValue = (value) => {\n    if (value == null) {\n        return undefined;\n    }\n    if (Array.isArray(value)) {\n        return value.join(',');\n    }\n    return value.toString();\n};\nconst generateText = (opts, value, compareWith) => {\n    if (value === undefined) {\n        return '';\n    }\n    if (Array.isArray(value)) {\n        return value\n            .map((v) => textForValue(opts, v, compareWith))\n            .filter((opt) => opt !== null)\n            .join(', ');\n    }\n    else {\n        return textForValue(opts, value, compareWith) || '';\n    }\n};\nconst textForValue = (opts, value, compareWith) => {\n    const selectOpt = opts.find((opt) => {\n        return compareOptions(value, getOptionValue(opt), compareWith);\n    });\n    return selectOpt ? selectOpt.textContent : null;\n};\nlet selectIds = 0;\nconst OPTION_CLASS = 'select-interface-option';\n",":host {\n  display: none;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { getIonMode } from \"../../global/ionic-global\";\nexport class SelectOption {\n    constructor() {\n        this.inputId = `ion-selopt-${selectOptionIds++}`;\n        this.disabled = false;\n        this.value = undefined;\n    }\n    render() {\n        return h(Host, { key: 'ba5a9c695c53fe0802af11a49f4305a9b8f71773', role: \"option\", id: this.inputId, class: getIonMode(this) });\n    }\n    static get is() { return \"ion-select-option\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"select-option.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"select-option.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the select option. This property does not apply when `interface=\\\"action-sheet\\\"` as `ion-action-sheet` does not allow for disabled buttons.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"value\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"any | null\",\n                    \"resolved\": \"any\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text value of the option.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\nlet selectOptionIds = 0;\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host ion-list {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\nion-list-header,\nion-label {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n/**\n * The main content inside of a popover has overflow: hidden\n * so that a descendant ion-content can be scrolled.\n * However, select-popover does not use ion-content so we need\n * to explicitly make this container scrollable.\n */\n:host {\n  overflow-y: auto;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host ion-list {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\nion-list-header,\nion-label {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n/**\n * The main content inside of a popover has overflow: hidden\n * so that a descendant ion-content can be scrolled.\n * However, select-popover does not use ion-content so we need\n * to explicitly make this container scrollable.\n */\n:host {\n  overflow-y: auto;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\nion-list ion-radio::part(container) {\n  display: none;\n}\n\nion-list ion-radio::part(label) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\nion-item {\n  --inner-border-width: 0;\n}\n\n.item-radio-checked {\n  --background: rgba(var(--ion-color-primary-rgb, 0, 84, 233), 0.08);\n  --background-focused: var(--ion-color-primary, #0054e9);\n  --background-focused-opacity: 0.2;\n  --background-hover: var(--ion-color-primary, #0054e9);\n  --background-hover-opacity: 0.12;\n}\n\n.item-checkbox-checked {\n  --background-activated: var(--ion-item-color, var(--ion-text-color, #000));\n  --background-focused: var(--ion-item-color, var(--ion-text-color, #000));\n  --background-hover: var(--ion-item-color, var(--ion-text-color, #000));\n  --color: var(--ion-color-primary, #0054e9);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h, forceUpdate } from \"@stencil/core\";\nimport { safeCall } from \"../../utils/overlays\";\nimport { getClassMap } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @internal\n */\nexport class SelectPopover {\n    constructor() {\n        this.header = undefined;\n        this.subHeader = undefined;\n        this.message = undefined;\n        this.multiple = undefined;\n        this.options = [];\n    }\n    findOptionFromEvent(ev) {\n        const { options } = this;\n        return options.find((o) => o.value === ev.target.value);\n    }\n    /**\n     * When an option is selected we need to get the value(s)\n     * of the selected option(s) and return it in the option\n     * handler\n     */\n    callOptionHandler(ev) {\n        const option = this.findOptionFromEvent(ev);\n        const values = this.getValues(ev);\n        if (option === null || option === void 0 ? void 0 : option.handler) {\n            safeCall(option.handler, values);\n        }\n    }\n    /**\n     * Dismisses the host popover that the `ion-select-popover`\n     * is rendered within.\n     */\n    dismissParentPopover() {\n        const popover = this.el.closest('ion-popover');\n        if (popover) {\n            popover.dismiss();\n        }\n    }\n    setChecked(ev) {\n        const { multiple } = this;\n        const option = this.findOptionFromEvent(ev);\n        // this is a popover with checkboxes (multiple value select)\n        // we need to set the checked value for this option\n        if (multiple && option) {\n            option.checked = ev.detail.checked;\n        }\n    }\n    getValues(ev) {\n        const { multiple, options } = this;\n        if (multiple) {\n            // this is a popover with checkboxes (multiple value select)\n            // return an array of all the checked values\n            return options.filter((o) => o.checked).map((o) => o.value);\n        }\n        // this is a popover with radio buttons (single value select)\n        // return the value that was clicked, otherwise undefined\n        const option = this.findOptionFromEvent(ev);\n        return option ? option.value : undefined;\n    }\n    renderOptions(options) {\n        const { multiple } = this;\n        switch (multiple) {\n            case true:\n                return this.renderCheckboxOptions(options);\n            default:\n                return this.renderRadioOptions(options);\n        }\n    }\n    renderCheckboxOptions(options) {\n        return options.map((option) => (h(\"ion-item\", { class: Object.assign({\n                // TODO FW-4784\n                'item-checkbox-checked': option.checked\n            }, getClassMap(option.cssClass)) }, h(\"ion-checkbox\", { value: option.value, disabled: option.disabled, checked: option.checked, justify: \"start\", labelPlacement: \"end\", onIonChange: (ev) => {\n                this.setChecked(ev);\n                this.callOptionHandler(ev);\n                // TODO FW-4784\n                forceUpdate(this);\n            } }, option.text))));\n    }\n    renderRadioOptions(options) {\n        const checked = options.filter((o) => o.checked).map((o) => o.value)[0];\n        return (h(\"ion-radio-group\", { value: checked, onIonChange: (ev) => this.callOptionHandler(ev) }, options.map((option) => (h(\"ion-item\", { class: Object.assign({\n                // TODO FW-4784\n                'item-radio-checked': option.value === checked\n            }, getClassMap(option.cssClass)) }, h(\"ion-radio\", { value: option.value, disabled: option.disabled, onClick: () => this.dismissParentPopover(), onKeyUp: (ev) => {\n                if (ev.key === ' ') {\n                    /**\n                     * Selecting a radio option with keyboard navigation,\n                     * either through the Enter or Space keys, should\n                     * dismiss the popover.\n                     */\n                    this.dismissParentPopover();\n                }\n            } }, option.text))))));\n    }\n    render() {\n        const { header, message, options, subHeader } = this;\n        const hasSubHeaderOrMessage = subHeader !== undefined || message !== undefined;\n        return (h(Host, { key: '302553a2eec4d1442751b8af28b7c9bd3487fd5d', class: getIonMode(this) }, h(\"ion-list\", { key: '39ae8579e6fe3bae2c7504147268ad5c82fd27e6' }, header !== undefined && h(\"ion-list-header\", { key: 'e0e6686380d188f46c593e1bb25287dcf08c75c2' }, header), hasSubHeaderOrMessage && (h(\"ion-item\", { key: '8a2d8652db269593c0ba7d767277e12c2b06144d' }, h(\"ion-label\", { key: 'a30cc0ecf95d5bdd6421ee1683922c1b853e98ea', class: \"ion-text-wrap\" }, subHeader !== undefined && h(\"h3\", { key: 'c298459ca450123808a08d65660825b2c26d00e5' }, subHeader), message !== undefined && h(\"p\", { key: 'ed895fbaec020e809021138401341b6fd7675035' }, message)))), this.renderOptions(options))));\n    }\n    static get is() { return \"ion-select-popover\"; }\n    static get encapsulation() { return \"scoped\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"select-popover.ios.scss\"],\n            \"md\": [\"select-popover.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"select-popover.ios.css\"],\n            \"md\": [\"select-popover.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"header\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The header text of the popover\"\n                },\n                \"attribute\": \"header\",\n                \"reflect\": false\n            },\n            \"subHeader\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The subheader text of the popover\"\n                },\n                \"attribute\": \"sub-header\",\n                \"reflect\": false\n            },\n            \"message\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text content of the popover body\"\n                },\n                \"attribute\": \"message\",\n                \"reflect\": false\n            },\n            \"multiple\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If true, the select accepts multiple values\"\n                },\n                \"attribute\": \"multiple\",\n                \"reflect\": false\n            },\n            \"options\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"SelectPopoverOption[]\",\n                    \"resolved\": \"SelectPopoverOption[]\",\n                    \"references\": {\n                        \"SelectPopoverOption\": {\n                            \"location\": \"import\",\n                            \"path\": \"./select-popover-interface\",\n                            \"id\": \"src/components/select-popover/select-popover-interface.ts::SelectPopoverOption\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"An array of options for the popover\"\n                },\n                \"defaultValue\": \"[]\"\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --color: Color of the spinner\n   */\n  display: inline-block;\n  position: relative;\n  width: 28px;\n  height: 28px;\n  color: var(--color);\n  user-select: none;\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-base);\n}\n\nsvg {\n  transform-origin: center;\n  position: absolute;\n  /**\n   * Do not use @include position\n   * as the alignment of the elements with\n   * a spinner should not be RTL aware.\n   */\n  top: 0;\n  /* stylelint-disable-next-line property-disallowed-list */\n  left: 0;\n  width: 100%;\n  height: 100%;\n  transform: translateZ(0);\n}\n:host-context([dir=rtl]) svg {\n  transform-origin: calc(100% - center);\n}\n\n[dir=rtl] svg {\n  transform-origin: calc(100% - center);\n}\n\n@supports selector(:dir(rtl)) {\n  svg:dir(rtl) {\n    transform-origin: calc(100% - center);\n  }\n}\n\n:host(.spinner-lines) line,\n:host(.spinner-lines-small) line {\n  stroke-width: 7px;\n}\n\n:host(.spinner-lines-sharp) line,\n:host(.spinner-lines-sharp-small) line {\n  stroke-width: 4px;\n}\n\n:host(.spinner-lines) line,\n:host(.spinner-lines-small) line,\n:host(.spinner-lines-sharp) line,\n:host(.spinner-lines-sharp-small) line {\n  stroke-linecap: round;\n  stroke: currentColor;\n}\n\n:host(.spinner-lines) svg,\n:host(.spinner-lines-small) svg,\n:host(.spinner-lines-sharp) svg,\n:host(.spinner-lines-sharp-small) svg {\n  animation: spinner-fade-out 1s linear infinite;\n}\n\n:host(.spinner-bubbles) svg {\n  animation: spinner-scale-out 1s linear infinite;\n  fill: currentColor;\n}\n\n:host(.spinner-circles) svg {\n  animation: spinner-fade-out 1s linear infinite;\n  fill: currentColor;\n}\n\n:host(.spinner-crescent) circle {\n  fill: transparent;\n  stroke-width: 4px;\n  stroke-dasharray: 128px;\n  stroke-dashoffset: 82px;\n  stroke: currentColor;\n}\n\n:host(.spinner-crescent) svg {\n  animation: spinner-rotate 1s linear infinite;\n}\n\n:host(.spinner-dots) circle {\n  stroke-width: 0;\n  fill: currentColor;\n}\n\n:host(.spinner-dots) svg {\n  animation: spinner-dots 1s linear infinite;\n}\n\n:host(.spinner-circular) svg {\n  animation: spinner-circular linear infinite;\n}\n\n:host(.spinner-circular) circle {\n  animation: spinner-circular-inner ease-in-out infinite;\n  stroke: currentColor;\n  stroke-dasharray: 80px, 200px;\n  stroke-dashoffset: 0px;\n  stroke-width: 5.6;\n  fill: none;\n}\n\n:host(.spinner-paused),\n:host(.spinner-paused) svg,\n:host(.spinner-paused) circle {\n  animation-play-state: paused;\n}\n\n@keyframes spinner-fade-out {\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n}\n@keyframes spinner-scale-out {\n  0% {\n    transform: scale(1, 1);\n  }\n  100% {\n    transform: scale(0, 0);\n  }\n}\n@keyframes spinner-rotate {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n@keyframes spinner-dots {\n  0% {\n    transform: scale(1, 1);\n    opacity: 0.9;\n  }\n  50% {\n    transform: scale(0.4, 0.4);\n    opacity: 0.3;\n  }\n  100% {\n    transform: scale(1, 1);\n    opacity: 0.9;\n  }\n}\n@keyframes spinner-circular {\n  100% {\n    transform: rotate(360deg);\n  }\n}\n@keyframes spinner-circular-inner {\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0px;\n  }\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { createColorClasses } from \"../../utils/theme\";\nimport { config } from \"../../global/config\";\nimport { getIonMode } from \"../../global/ionic-global\";\nimport { SPINNERS } from \"./spinner-configs\";\nexport class Spinner {\n    constructor() {\n        this.color = undefined;\n        this.duration = undefined;\n        this.name = undefined;\n        this.paused = false;\n    }\n    getName() {\n        const spinnerName = this.name || config.get('spinner');\n        const mode = getIonMode(this);\n        if (spinnerName) {\n            return spinnerName;\n        }\n        return mode === 'ios' ? 'lines' : 'circular';\n    }\n    render() {\n        var _a;\n        const self = this;\n        const mode = getIonMode(self);\n        const spinnerName = self.getName();\n        const spinner = (_a = SPINNERS[spinnerName]) !== null && _a !== void 0 ? _a : SPINNERS['lines'];\n        const duration = typeof self.duration === 'number' && self.duration > 10 ? self.duration : spinner.dur;\n        const svgs = [];\n        if (spinner.circles !== undefined) {\n            for (let i = 0; i < spinner.circles; i++) {\n                svgs.push(buildCircle(spinner, duration, i, spinner.circles));\n            }\n        }\n        else if (spinner.lines !== undefined) {\n            for (let i = 0; i < spinner.lines; i++) {\n                svgs.push(buildLine(spinner, duration, i, spinner.lines));\n            }\n        }\n        return (h(Host, { key: '50cbaed55eeab15292447d106a80b93db4cb40de', class: createColorClasses(self.color, {\n                [mode]: true,\n                [`spinner-${spinnerName}`]: true,\n                'spinner-paused': self.paused || config.getBoolean('_testing'),\n            }), role: \"progressbar\", style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} }, svgs));\n    }\n    static get is() { return \"ion-spinner\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"spinner.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"spinner.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"duration\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Duration of the spinner animation in milliseconds. The default varies based on the spinner.\"\n                },\n                \"attribute\": \"duration\",\n                \"reflect\": false\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"SpinnerTypes\",\n                    \"resolved\": \"\\\"bubbles\\\" | \\\"circles\\\" | \\\"circular\\\" | \\\"crescent\\\" | \\\"dots\\\" | \\\"lines\\\" | \\\"lines-sharp\\\" | \\\"lines-sharp-small\\\" | \\\"lines-small\\\" | undefined\",\n                    \"references\": {\n                        \"SpinnerTypes\": {\n                            \"location\": \"import\",\n                            \"path\": \"./spinner-configs\",\n                            \"id\": \"src/components/spinner/spinner-configs.ts::SpinnerTypes\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The name of the SVG spinner to use. If a name is not provided, the platform's default\\nspinner will be used.\"\n                },\n                \"attribute\": \"name\",\n                \"reflect\": false\n            },\n            \"paused\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the spinner's animation will be paused.\"\n                },\n                \"attribute\": \"paused\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n}\nconst buildCircle = (spinner, duration, index, total) => {\n    const data = spinner.fn(duration, index, total);\n    data.style['animation-duration'] = duration + 'ms';\n    return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"circle\", { transform: data.transform || 'translate(32,32)', cx: data.cx, cy: data.cy, r: data.r, style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} })));\n};\nconst buildLine = (spinner, duration, index, total) => {\n    const data = spinner.fn(duration, index, total);\n    data.style['animation-duration'] = duration + 'ms';\n    return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"line\", { transform: \"translate(32,32)\", y1: data.y1, y2: data.y2 })));\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --border: Border between panes\n   * @prop --side-min-width: Minimum width of the side pane. Does not apply when split pane is collapsed.\n   * @prop --side-max-width: Maximum width of the side pane. Does not apply when split pane is collapsed.\n   * @prop --side-width: Width of the side pane. Does not apply when split pane is collapsed.\n   */\n  --side-width: 100%;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: absolute;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  contain: strict;\n}\n\n:host(.split-pane-visible) ::slotted(.split-pane-main) {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: relative;\n  flex: 1;\n  box-shadow: none;\n  /**\n   * Content can overflow outside of a router outlet\n   * or a nav container to allow for the translucent\n   * tab bar effect to work. However, this can cause\n   * iOS page transitions to flow outside of the container\n   * and overlap the menu on larger viewports. As a result,\n   * we disable the overflow when that is the case.\n   */\n  overflow: hidden;\n  z-index: 0;\n}\n\n::slotted(.split-pane-side:not(ion-menu)) {\n  display: none;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --border: 0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, var(--ion-background-color-step-250, #c8c7cc))));\n  --side-min-width: 270px;\n  --side-max-width: 28%;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --border: Border between panes\n   * @prop --side-min-width: Minimum width of the side pane. Does not apply when split pane is collapsed.\n   * @prop --side-max-width: Maximum width of the side pane. Does not apply when split pane is collapsed.\n   * @prop --side-width: Width of the side pane. Does not apply when split pane is collapsed.\n   */\n  --side-width: 100%;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: absolute;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  contain: strict;\n}\n\n:host(.split-pane-visible) ::slotted(.split-pane-main) {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: relative;\n  flex: 1;\n  box-shadow: none;\n  /**\n   * Content can overflow outside of a router outlet\n   * or a nav container to allow for the translucent\n   * tab bar effect to work. However, this can cause\n   * iOS page transitions to flow outside of the container\n   * and overlap the menu on larger viewports. As a result,\n   * we disable the overflow when that is the case.\n   */\n  overflow: hidden;\n  z-index: 0;\n}\n\n::slotted(.split-pane-side:not(ion-menu)) {\n  display: none;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --border: 1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, var(--ion-background-color-step-150, rgba(0, 0, 0, 0.13)))));\n  --side-min-width: 270px;\n  --side-max-width: 28%;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Build, Host, h } from \"@stencil/core\";\nimport { getIonMode } from \"../../global/ionic-global\";\n// TODO(FW-2832): types\nconst SPLIT_PANE_MAIN = 'split-pane-main';\nconst SPLIT_PANE_SIDE = 'split-pane-side';\nconst QUERY = {\n    xs: '(min-width: 0px)',\n    sm: '(min-width: 576px)',\n    md: '(min-width: 768px)',\n    lg: '(min-width: 992px)',\n    xl: '(min-width: 1200px)',\n    never: '',\n};\nexport class SplitPane {\n    constructor() {\n        this.visible = false;\n        this.contentId = undefined;\n        this.disabled = false;\n        this.when = QUERY['lg'];\n    }\n    visibleChanged(visible) {\n        this.ionSplitPaneVisible.emit({ visible });\n    }\n    /**\n     * @internal\n     */\n    async isVisible() {\n        return Promise.resolve(this.visible);\n    }\n    async connectedCallback() {\n        // TODO: connectedCallback is fired in CE build\n        // before WC is defined. This needs to be fixed in Stencil.\n        if (typeof customElements !== 'undefined' && customElements != null) {\n            await customElements.whenDefined('ion-split-pane');\n        }\n        this.styleMainElement();\n        this.updateState();\n    }\n    disconnectedCallback() {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n    }\n    updateState() {\n        if (!Build.isBrowser) {\n            return;\n        }\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n        // Check if the split-pane is disabled\n        if (this.disabled) {\n            this.visible = false;\n            return;\n        }\n        // When query is a boolean\n        const query = this.when;\n        if (typeof query === 'boolean') {\n            this.visible = query;\n            return;\n        }\n        // When query is a string, let's find first if it is a shortcut\n        const mediaQuery = QUERY[query] || query;\n        // Media query is empty or null, we hide it\n        if (mediaQuery.length === 0) {\n            this.visible = false;\n            return;\n        }\n        // Listen on media query\n        const callback = (q) => {\n            this.visible = q.matches;\n        };\n        const mediaList = window.matchMedia(mediaQuery);\n        // TODO FW-5869\n        mediaList.addListener(callback);\n        this.rmL = () => mediaList.removeListener(callback);\n        this.visible = mediaList.matches;\n    }\n    /**\n     * Attempt to find the main content\n     * element inside of the split pane.\n     * If found, set it as the main node.\n     *\n     * We assume that the main node\n     * is available in the DOM on split\n     * pane load.\n     */\n    styleMainElement() {\n        if (!Build.isBrowser) {\n            return;\n        }\n        const contentId = this.contentId;\n        const children = this.el.children;\n        const nu = this.el.childElementCount;\n        let foundMain = false;\n        for (let i = 0; i < nu; i++) {\n            const child = children[i];\n            const isMain = contentId !== undefined && child.id === contentId;\n            if (isMain) {\n                if (foundMain) {\n                    console.warn('split pane cannot have more than one main node');\n                    return;\n                }\n                else {\n                    setPaneClass(child, isMain);\n                    foundMain = true;\n                }\n            }\n        }\n        if (!foundMain) {\n            console.warn('split pane does not have a specified main node');\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: 'd54c356cd4bff7e55325160882dea8249f47f388', class: {\n                [mode]: true,\n                // Used internally for styling\n                [`split-pane-${mode}`]: true,\n                'split-pane-visible': this.visible,\n            } }, h(\"slot\", { key: 'af62690d0fd686cfbd29d888c79eda9001f13e2f' })));\n    }\n    static get is() { return \"ion-split-pane\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"split-pane.ios.scss\"],\n            \"md\": [\"split-pane.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"split-pane.ios.css\"],\n            \"md\": [\"split-pane.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"contentId\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The `id` of the main content. When using\\na router this is typically `ion-router-outlet`.\\nWhen not using a router, this is typically\\nyour main view's `ion-content`. This is not the\\nid of the `ion-content` inside of your `ion-menu`.\"\n                },\n                \"attribute\": \"content-id\",\n                \"reflect\": true\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the split pane will be hidden.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"when\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | boolean\",\n                    \"resolved\": \"boolean | string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When the split-pane should be shown.\\nCan be a CSS media query expression, or a shortcut expression.\\nCan also be a boolean expression.\"\n                },\n                \"attribute\": \"when\",\n                \"reflect\": false,\n                \"defaultValue\": \"QUERY['lg']\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"visible\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionSplitPaneVisible\",\n                \"name\": \"ionSplitPaneVisible\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Expression to be called when the split-pane visibility has changed\"\n                },\n                \"complexType\": {\n                    \"original\": \"{ visible: boolean }\",\n                    \"resolved\": \"{ visible: boolean; }\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"isVisible\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<boolean>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"visible\",\n                \"methodName\": \"visibleChanged\"\n            }, {\n                \"propName\": \"disabled\",\n                \"methodName\": \"updateState\"\n            }, {\n                \"propName\": \"when\",\n                \"methodName\": \"updateState\"\n            }];\n    }\n}\nconst setPaneClass = (el, isMain) => {\n    let toAdd;\n    let toRemove;\n    if (isMain) {\n        toAdd = SPLIT_PANE_MAIN;\n        toRemove = SPLIT_PANE_SIDE;\n    }\n    else {\n        toAdd = SPLIT_PANE_SIDE;\n        toRemove = SPLIT_PANE_MAIN;\n    }\n    const classList = el.classList;\n    classList.add(toAdd);\n    classList.remove(toRemove);\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --border-radius: Border radius of the thumbnail\n   * @prop --size: Size of the thumbnail\n   */\n  --size: 48px;\n  --border-radius: 0;\n  border-radius: var(--border-radius);\n  display: block;\n  width: var(--size);\n  height: var(--size);\n}\n\n::slotted(ion-img),\n::slotted(img) {\n  border-radius: var(--border-radius);\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  overflow: hidden;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { getIonMode } from \"../../global/ionic-global\";\nexport class Thumbnail {\n    render() {\n        return (h(Host, { key: 'ea55000055f941b0c79561e8934be6242ec8e114', class: getIonMode(this) }, h(\"slot\", { key: 'a4f934f442797f5c66a77e0ef8920fdd07c204f2' })));\n    }\n    static get is() { return \"ion-thumbnail\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"thumbnail.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"thumbnail.css\"]\n        };\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --color: Text color of the title\n   */\n  --color: initial;\n  display: flex;\n  flex: 1;\n  align-items: center;\n  transform: translateZ(0);\n  color: var(--color);\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-base);\n}\n\n.toolbar-title {\n  display: block;\n  width: 100%;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  pointer-events: auto;\n}\n\n:host(.title-small) .toolbar-title {\n  white-space: normal;\n}\n\n:host {\n  top: 0;\n  -webkit-padding-start: 90px;\n  padding-inline-start: 90px;\n  -webkit-padding-end: 90px;\n  padding-inline-end: 90px;\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  transform: translateZ(0);\n  font-size: min(1.0625rem, 20.4px);\n  font-weight: 600;\n  text-align: center;\n  box-sizing: border-box;\n  pointer-events: none;\n}\n:host {\n  inset-inline-start: 0;\n}\n\n:host(.title-small) {\n  -webkit-padding-start: 9px;\n  padding-inline-start: 9px;\n  -webkit-padding-end: 9px;\n  padding-inline-end: 9px;\n  padding-top: 6px;\n  padding-bottom: 16px;\n  position: relative;\n  font-size: min(0.8125rem, 23.4px);\n  font-weight: normal;\n}\n\n:host(.title-large) {\n  -webkit-padding-start: 12px;\n  padding-inline-start: 12px;\n  -webkit-padding-end: 12px;\n  padding-inline-end: 12px;\n  padding-top: 2px;\n  padding-bottom: 4px;\n  transform-origin: left center;\n  position: static;\n  align-items: flex-end;\n  min-width: 100%;\n  font-size: min(2.125rem, 61.2px);\n  font-weight: 700;\n  text-align: start;\n}\n\n:host(.title-large.title-rtl) {\n  transform-origin: right center;\n}\n\n:host(.title-large.ion-cloned-element) {\n  --color: var(--ion-text-color, #000);\n  font-family: var(--ion-font-family);\n}\n\n:host(.title-large) .toolbar-title {\n  transform-origin: inherit;\n  /**\n   * During a page transition\n   * if the large title and the back button\n   * texts match up, the back button should be\n   * scaled to roughly match the dimensions of\n   * the large title text. The following line\n   * ensures that the scale values are accurate.\n   */\n  width: auto;\n}\n:host-context([dir=rtl]):host(.title-large) .toolbar-title, :host-context([dir=rtl]).title-large .toolbar-title {\n  transform-origin: calc(100% - inherit);\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.title-large:dir(rtl)) .toolbar-title {\n    transform-origin: calc(100% - inherit);\n  }\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --color: Text color of the title\n   */\n  --color: initial;\n  display: flex;\n  flex: 1;\n  align-items: center;\n  transform: translateZ(0);\n  color: var(--color);\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-base);\n}\n\n.toolbar-title {\n  display: block;\n  width: 100%;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  pointer-events: auto;\n}\n\n:host(.title-small) .toolbar-title {\n  white-space: normal;\n}\n\n:host {\n  -webkit-padding-start: 20px;\n  padding-inline-start: 20px;\n  -webkit-padding-end: 20px;\n  padding-inline-end: 20px;\n  padding-top: 0;\n  padding-bottom: 0;\n  font-size: 1.25rem;\n  font-weight: 500;\n  letter-spacing: 0.0125em;\n}\n\n:host(.title-small) {\n  width: 100%;\n  height: 100%;\n  font-size: 0.9375rem;\n  font-weight: normal;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { createColorClasses } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\nexport class ToolbarTitle {\n    constructor() {\n        this.color = undefined;\n        this.size = undefined;\n    }\n    sizeChanged() {\n        this.emitStyle();\n    }\n    connectedCallback() {\n        this.emitStyle();\n    }\n    emitStyle() {\n        const size = this.getSize();\n        this.ionStyle.emit({\n            [`title-${size}`]: true,\n        });\n    }\n    getSize() {\n        return this.size !== undefined ? this.size : 'default';\n    }\n    render() {\n        const mode = getIonMode(this);\n        const size = this.getSize();\n        return (h(Host, { key: '5a58dc437a6f4257244bbdd7e9a682a17d8c9a6b', class: createColorClasses(this.color, {\n                [mode]: true,\n                [`title-${size}`]: true,\n                'title-rtl': document.dir === 'rtl',\n            }) }, h(\"div\", { key: '58682ea7b8f47a08adfad419b5c76b34784c6501', class: \"toolbar-title\" }, h(\"slot\", { key: '8a9248534e4c3076f5e2dfda38ef86069796851c' }))));\n    }\n    static get is() { return \"ion-title\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"title.ios.scss\"],\n            \"md\": [\"title.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"title.ios.css\"],\n            \"md\": [\"title.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"size\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'large' | 'small'\",\n                    \"resolved\": \"\\\"large\\\" | \\\"small\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The size of the toolbar title.\"\n                },\n                \"attribute\": \"size\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionStyle\",\n                \"name\": \"ionStyle\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted when the styles change.\"\n                },\n                \"complexType\": {\n                    \"original\": \"StyleEventDetail\",\n                    \"resolved\": \"StyleEventDetail\",\n                    \"references\": {\n                        \"StyleEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::StyleEventDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"size\",\n                \"methodName\": \"sizeChanged\"\n            }];\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the toolbar\n   *\n   * @prop --border-color: Color of the toolbar border\n   * @prop --border-style: Style of the toolbar border\n   * @prop --border-width: Width of the toolbar border\n   *\n   * @prop --color: Color of the toolbar text\n   *\n   * @prop --min-height: Minimum height of the toolbar\n   *\n   * @prop --opacity: Opacity of the toolbar background\n   *\n   * @prop --padding-top: Top padding of the toolbar\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the toolbar\n   * @prop --padding-bottom: Bottom padding of the toolbar\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the toolbar\n   */\n  --border-width: 0;\n  --border-style: solid;\n  --opacity: 1;\n  --opacity-scale: 1;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: block;\n  position: relative;\n  width: 100%;\n  padding-right: var(--ion-safe-area-right);\n  padding-left: var(--ion-safe-area-left);\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  contain: content;\n  z-index: 10;\n  box-sizing: border-box;\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-contrast);\n}\n\n:host(.ion-color) .toolbar-background {\n  background: var(--ion-color-base);\n}\n\n.toolbar-container {\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  display: flex;\n  position: relative;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  min-height: var(--min-height);\n  contain: content;\n  overflow: hidden;\n  z-index: 10;\n  box-sizing: border-box;\n}\n\n.toolbar-background {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  transform: translateZ(0);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  background: var(--background);\n  contain: strict;\n  opacity: calc(var(--opacity) * var(--opacity-scale));\n  z-index: -1;\n  pointer-events: none;\n}\n\n::slotted(ion-progress-bar) {\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: var(--ion-toolbar-background, var(--ion-color-step-50, var(--ion-background-color-step-50, #f7f7f7)));\n  --color: var(--ion-toolbar-color, var(--ion-text-color, #000));\n  --border-color: var(--ion-toolbar-border-color, var(--ion-border-color, var(--ion-color-step-150, var(--ion-background-color-step-150, rgba(0, 0, 0, 0.2)))));\n  --padding-top: 3px;\n  --padding-bottom: 3px;\n  --padding-start: 4px;\n  --padding-end: 4px;\n  --min-height: 44px;\n}\n\n.toolbar-content {\n  flex: 1;\n  order: 4;\n  min-width: 0;\n}\n\n:host(.toolbar-segment) .toolbar-content {\n  display: inline-flex;\n}\n\n:host(.toolbar-searchbar) .toolbar-container {\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n:host(.toolbar-searchbar) ::slotted(*) {\n  align-self: start;\n}\n\n:host(.toolbar-searchbar) ::slotted(ion-chip) {\n  margin-top: 3px;\n}\n\n::slotted(ion-buttons) {\n  min-height: 38px;\n}\n\n::slotted([slot=start]) {\n  order: 2;\n}\n\n::slotted([slot=secondary]) {\n  order: 3;\n}\n\n::slotted([slot=primary]) {\n  order: 5;\n  text-align: end;\n}\n\n::slotted([slot=end]) {\n  order: 6;\n  text-align: end;\n}\n\n:host(.toolbar-title-large) .toolbar-container {\n  flex-wrap: wrap;\n  align-items: flex-start;\n}\n\n:host(.toolbar-title-large) .toolbar-content ion-title {\n  flex: 1;\n  order: 8;\n  min-width: 100%;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the toolbar\n   *\n   * @prop --border-color: Color of the toolbar border\n   * @prop --border-style: Style of the toolbar border\n   * @prop --border-width: Width of the toolbar border\n   *\n   * @prop --color: Color of the toolbar text\n   *\n   * @prop --min-height: Minimum height of the toolbar\n   *\n   * @prop --opacity: Opacity of the toolbar background\n   *\n   * @prop --padding-top: Top padding of the toolbar\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the toolbar\n   * @prop --padding-bottom: Bottom padding of the toolbar\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the toolbar\n   */\n  --border-width: 0;\n  --border-style: solid;\n  --opacity: 1;\n  --opacity-scale: 1;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: block;\n  position: relative;\n  width: 100%;\n  padding-right: var(--ion-safe-area-right);\n  padding-left: var(--ion-safe-area-left);\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  contain: content;\n  z-index: 10;\n  box-sizing: border-box;\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-contrast);\n}\n\n:host(.ion-color) .toolbar-background {\n  background: var(--ion-color-base);\n}\n\n.toolbar-container {\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  display: flex;\n  position: relative;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  min-height: var(--min-height);\n  contain: content;\n  overflow: hidden;\n  z-index: 10;\n  box-sizing: border-box;\n}\n\n.toolbar-background {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  transform: translateZ(0);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  background: var(--background);\n  contain: strict;\n  opacity: calc(var(--opacity) * var(--opacity-scale));\n  z-index: -1;\n  pointer-events: none;\n}\n\n::slotted(ion-progress-bar) {\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: var(--ion-toolbar-background, var(--ion-background-color, #fff));\n  --color: var(--ion-toolbar-color, var(--ion-text-color, #424242));\n  --border-color: var(--ion-toolbar-border-color, var(--ion-border-color, var(--ion-color-step-150, var(--ion-background-color-step-150, #c1c4cd))));\n  --padding-top: 0;\n  --padding-bottom: 0;\n  --padding-start: 0;\n  --padding-end: 0;\n  --min-height: 56px;\n}\n\n.toolbar-content {\n  flex: 1;\n  order: 3;\n  min-width: 0;\n  max-width: 100%;\n}\n\n::slotted(.buttons-first-slot) {\n  -webkit-margin-start: 4px;\n  margin-inline-start: 4px;\n}\n\n::slotted(.buttons-last-slot) {\n  -webkit-margin-end: 4px;\n  margin-inline-end: 4px;\n}\n\n::slotted([slot=start]) {\n  order: 2;\n}\n\n::slotted([slot=secondary]) {\n  order: 4;\n}\n\n::slotted([slot=primary]) {\n  order: 5;\n  text-align: end;\n}\n\n::slotted([slot=end]) {\n  order: 6;\n  text-align: end;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, forceUpdate, h } from \"@stencil/core\";\nimport { createColorClasses, hostContext } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @slot - Content is placed between the named slots if provided without a slot.\n * @slot start - Content is placed to the left of the toolbar text in LTR, and to the right in RTL.\n * @slot secondary - Content is placed to the left of the toolbar text in `ios` mode, and directly to the right in `md` mode.\n * @slot primary - Content is placed to the right of the toolbar text in `ios` mode, and to the far right in `md` mode.\n * @slot end - Content is placed to the right of the toolbar text in LTR, and to the left in RTL.\n */\nexport class Toolbar {\n    constructor() {\n        this.childrenStyles = new Map();\n        this.color = undefined;\n    }\n    componentWillLoad() {\n        const buttons = Array.from(this.el.querySelectorAll('ion-buttons'));\n        const firstButtons = buttons.find((button) => {\n            return button.slot === 'start';\n        });\n        if (firstButtons) {\n            firstButtons.classList.add('buttons-first-slot');\n        }\n        const buttonsReversed = buttons.reverse();\n        const lastButtons = buttonsReversed.find((button) => button.slot === 'end') ||\n            buttonsReversed.find((button) => button.slot === 'primary') ||\n            buttonsReversed.find((button) => button.slot === 'secondary');\n        if (lastButtons) {\n            lastButtons.classList.add('buttons-last-slot');\n        }\n    }\n    childrenStyle(ev) {\n        ev.stopPropagation();\n        const tagName = ev.target.tagName;\n        const updatedStyles = ev.detail;\n        const newStyles = {};\n        const childStyles = this.childrenStyles.get(tagName) || {};\n        let hasStyleChange = false;\n        Object.keys(updatedStyles).forEach((key) => {\n            const childKey = `toolbar-${key}`;\n            const newValue = updatedStyles[key];\n            if (newValue !== childStyles[childKey]) {\n                hasStyleChange = true;\n            }\n            if (newValue) {\n                newStyles[childKey] = true;\n            }\n        });\n        if (hasStyleChange) {\n            this.childrenStyles.set(tagName, newStyles);\n            forceUpdate(this);\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        const childStyles = {};\n        this.childrenStyles.forEach((value) => {\n            Object.assign(childStyles, value);\n        });\n        return (h(Host, { key: '4bb3a55001408a3bdf033af76b9196cb96c07c09', class: Object.assign(Object.assign({}, childStyles), createColorClasses(this.color, {\n                [mode]: true,\n                'in-toolbar': hostContext('ion-toolbar', this.el),\n            })) }, h(\"div\", { key: '0891db157d6e028c6d03696f13fb510ea91b0296', class: \"toolbar-background\" }), h(\"div\", { key: '95fbc870d808f74af4bb18cd8f8ec8c7828a9e0b', class: \"toolbar-container\" }, h(\"slot\", { key: '84d4a9644660fe00ca085055ca8d12f3647531ad', name: \"start\" }), h(\"slot\", { key: 'fd361dc9c9979f59aed2fedcf94629506fae62b0', name: \"secondary\" }), h(\"div\", { key: '54d2b28616a4627c55766f66dc453707752758a6', class: \"toolbar-content\" }, h(\"slot\", { key: '8f65e0830cce7135640b90eb694e282cb7e5efd2' })), h(\"slot\", { key: 'c78be11a207c8674f222543646398636956087e6', name: \"primary\" }), h(\"slot\", { key: 'ab25e1601ccaa8cb0d81921b849bcb7402aa7826', name: \"end\" }))));\n    }\n    static get is() { return \"ion-toolbar\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"toolbar.ios.scss\"],\n            \"md\": [\"toolbar.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"toolbar.ios.css\"],\n            \"md\": [\"toolbar.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get listeners() {\n        return [{\n                \"name\": \"ionStyle\",\n                \"method\": \"childrenStyle\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n","app-translate {\n    /* Component styles go here */\n}\n","import { Component, State, Prop, h, Watch, Host } from \"@stencil/core\";\nimport { TranslationService } from \"../../../../../services/common/translations\";\nimport { DocumentData } from \"firebase/firestore\";\n\n@Component({\n  tag: \"my-transl\",\n  styleUrl: \"app-translate.css\",\n  shadow: true,\n})\nexport class AppTranslate {\n  @Prop() tag: string;\n  @Prop() text: string;\n  @Prop() appendText: string;\n  @Prop() replace: any;\n  @Prop() isLabel: boolean = false;\n  @State() translations: DocumentData;\n  @State() translation: string;\n\n  @Watch(\"tag\")\n  @Watch(\"appendText\")\n  @Watch(\"replace\")\n  update() {\n    this.updateTranslation();\n  }\n\n  componentWillLoad() {\n    //subscribe to translation service to receive updates on the language or translations\n    TranslationService.updatedTranslation.subscribe(() => {\n      this.updateTranslation();\n    });\n    this.updateTranslation();\n  }\n\n  updateTranslation() {\n    this.translation =\n      TranslationService.getTransl(this.tag, this.text, this.replace) +\n      (this.appendText ? this.appendText : \"\");\n  }\n  render() {\n    return this.isLabel ? (\n      <Host>\n        <ion-label>{this.translation}</ion-label>\n      </Host>\n    ) : (\n      <Host>{this.translation}</Host>\n    );\n  }\n}\n","page-loading {\n  /* Component styles go here */\n  .loading-svg {\n    width: 200px;\n    height: 200px;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin-left: -100px; /* half width*/\n    margin-top: -120px; /* half height*/\n  }\n  .loading-spinner {\n    width: 50px;\n    height: 50px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin-top: 100px; //below logo\n    margin-left: -25px; /* half width*/\n  }\n  .loading-title {\n    height: 20px;\n    width: 100%;\n    color: var(--ion-text-color);\n    position: absolute;\n    top: 50%;\n    margin-top: -190px;\n  }\n  .loading-subtitle {\n    height: 20px;\n    width: 100%;\n    color: var(--ion-text-color);\n    position: absolute;\n    top: 50%;\n    margin-top: -160px;\n  }\n  .loading-logo {\n    position: absolute;\n    top: 35%;\n    left: 40%;\n  }\n  .loading-alert {\n    height: 20px;\n    width: 100%;\n    color: var(--ion-text-color);\n    position: absolute;\n    top: 80%;\n    margin-top: -190px;\n  }\n  .loading-alert1 {\n    height: 20px;\n    width: 100%;\n    color: var(--ion-text-color);\n    position: absolute;\n    top: 85%;\n    margin-top: -190px;\n  }\n}\n","import { Component, State, h } from \"@stencil/core\";\nimport { Environment } from \"../../../../../global/env\";\nimport { SystemService } from \"../../../../../services/common/system\";\n\n@Component({\n  tag: \"page-loading\",\n  styleUrl: \"page-loading.scss\",\n})\nexport class PageLoading {\n  @State() network: boolean;\n\n  newUserRegistration = false;\n\n  checkEmailTimer;\n  checkingEmail = false;\n\n  componentWillLoad() {\n    SystemService.getNetworkStatus().then((networkObservable) => {\n      const obs = networkObservable.subscribe((status) => {\n        this.network = status;\n        setTimeout(() => {\n          if (status) obs.unsubscribe();\n        });\n      });\n    });\n  }\n\n  render() {\n    return [\n      <div>\n        {false //old logo\n          ? [\n              <div\n                class='loading-logo'\n                style={{\n                  visibility: \"visible\",\n                }}\n              >\n                <h1>{Environment.getAppTitle()}</h1>\n              </div>,\n              <img\n                src='assets/css/loader.svg'\n                class='loading-svg'\n                alt='Loading...'\n                style={{ visibility: \"visible\" }}\n              />,\n            ]\n          : undefined}\n        <ion-title class='loading-title ion-text-center' size='large'>\n          {Environment.getAppTitle()}\n        </ion-title>\n        <ion-title class='loading-subtitle ion-text-center' size='small'>\n          {Environment.getAppSubTitle()}\n        </ion-title>\n        <img\n          src={\"assets/images/\" + Environment.getAppLogo()}\n          class='loading-svg'\n          alt='Loading...'\n          style={{ visibility: \"visible\" }}\n        />\n        {this.network ? (\n          <ion-spinner class='loading-spinner' name='crescent'></ion-spinner>\n        ) : (\n          [\n            <ion-title class='loading-alert ion-text-center' size='large'>\n              NETWORK NOT AVAILABLE\n            </ion-title>,\n            <ion-title class='loading-alert1 ion-text-center' size='large'>\n              PLEASE TRY AGAIN LATER\n            </ion-title>,\n          ]\n        )}\n      </div>,\n    ];\n  }\n}\n"],"mappings":"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","ignoreList":[]}