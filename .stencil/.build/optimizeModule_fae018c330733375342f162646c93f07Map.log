{"version":3,"names":["USERPLANSCOLLECTION","UserPlansController","constructor","this","userPlans","UserPlans","userPlans$","BehaviorSubject","serviceInit","init","observable","DatabaseService","getDocumentObservable","UserService","userProfile","uid","userPlansSub","subscribe","doc","next","presentUserPlansUpdate","plans","index","RouterService","openModal","planIndex","presentUserPlanDetails","id","push","openUsersPlans","updateUserPlan","plan","saveItem","deletePlan","Promise","async","resolve","reject","confirm","alertController","create","header","TranslationService","getTransl","message","buttons","text","role","handler","deleteItem","goBack","present","getPlansOfUser","ret","getDocument","UserPlansService"],"sources":["src/services/trasteel/crm/user-plans.ts"],"sourcesContent":["import {BehaviorSubject, Subscription} from \"rxjs\";\nimport {DatabaseService} from \"../../common/database\";\nimport {UserService} from \"../../common/user\";\nimport {UserPlans} from \"../../../interfaces/trasteel/users/user-plans\";\nimport {RouterService} from \"../../common/router\";\nimport {alertController} from \"@ionic/core\";\nimport {TranslationService} from \"../../common/translations\";\n\nexport const USERPLANSCOLLECTION = \"userPlans\";\n\nexport class UserPlansController {\n  userPlans: UserPlans = new UserPlans();\n  userPlansSub: Subscription;\n  userPlans$: BehaviorSubject<UserPlans> = new BehaviorSubject(<UserPlans>{});\n  serviceInit = true;\n\n  //initialise this service inside app-root at the start of the app\n  async init() {\n    //init only once\n    if (this.serviceInit) {\n      this.serviceInit = false;\n      const observable = await DatabaseService.getDocumentObservable(\n        USERPLANSCOLLECTION,\n        UserService.userProfile.uid\n      );\n      this.userPlansSub = observable.subscribe((doc) => {\n        this.userPlans = new UserPlans(doc);\n        this.userPlans$.next(this.userPlans);\n      });\n    }\n  }\n\n  async presentUserPlansUpdate(uid, plans, index?) {\n    return await RouterService.openModal(\"modal-user-plans-update\", {\n      uid: uid,\n      userPlans: plans,\n      planIndex: index,\n    });\n  }\n\n  async presentUserPlanDetails(id, planIndex) {\n    RouterService.push(\n      \"/\" + USERPLANSCOLLECTION + \"/details/\" + id + \"/\" + planIndex,\n      \"forward\"\n    );\n  }\n\n  openUsersPlans(uid) {\n    RouterService.push(\"/\" + USERPLANSCOLLECTION + \"/user/\" + uid, \"forward\");\n  }\n\n  async updateUserPlan(uid, plan) {\n    return DatabaseService.saveItem(uid, plan, uid, USERPLANSCOLLECTION);\n  }\n\n  async deletePlan(uid): Promise<void> {\n    return new Promise(async (resolve, reject) => {\n      const confirm = await alertController.create({\n        header: TranslationService.getTransl(\n          \"delete-user-plan-header\",\n          \"Delete User Plan?\"\n        ),\n        message: TranslationService.getTransl(\n          \"delete-user-plan-message\",\n          \"This plan will be deleted! Are you sure?\"\n        ),\n        buttons: [\n          {\n            text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n            role: \"cancel\",\n            handler: () => {\n              reject();\n            },\n          },\n          {\n            text: TranslationService.getTransl(\"ok\", \"OK\"),\n            handler: async () => {\n              DatabaseService.deleteItem(USERPLANSCOLLECTION, uid);\n              RouterService.goBack();\n              resolve(null);\n            },\n          },\n        ],\n      });\n      confirm.present();\n    });\n  }\n\n  async getPlansOfUser(uid) {\n    const ret = await DatabaseService.getDocument(USERPLANSCOLLECTION, uid);\n    return ret ? ret : false;\n  }\n}\nexport const UserPlansService = new UserPlansController();\n"],"mappings":"wLAQO,MAAMA,EAAsB,Y,MAEtBC,EAAb,WAAAC,GACEC,KAAAC,UAAuB,IAAIC,EAE3BF,KAAAG,WAAyC,IAAIC,EAA2B,IACxEJ,KAAAK,YAAc,I,CAGd,UAAMC,GAEJ,GAAIN,KAAKK,YAAa,CACpBL,KAAKK,YAAc,MACnB,MAAME,QAAmBC,EAAgBC,sBACvCZ,EACAa,EAAYC,YAAYC,KAE1BZ,KAAKa,aAAeN,EAAWO,WAAWC,IACxCf,KAAKC,UAAY,IAAIC,EAAUa,GAC/Bf,KAAKG,WAAWa,KAAKhB,KAAKC,UAAU,G,EAK1C,4BAAMgB,CAAuBL,EAAKM,EAAOC,GACvC,aAAaC,EAAcC,UAAU,0BAA2B,CAC9DT,IAAKA,EACLX,UAAWiB,EACXI,UAAWH,G,CAIf,4BAAMI,CAAuBC,EAAIF,GAC/BF,EAAcK,KACZ,IAAM5B,EAAsB,YAAc2B,EAAK,IAAMF,EACrD,U,CAIJ,cAAAI,CAAed,GACbQ,EAAcK,KAAK,IAAM5B,EAAsB,SAAWe,EAAK,U,CAGjE,oBAAMe,CAAef,EAAKgB,GACxB,OAAOpB,EAAgBqB,SAASjB,EAAKgB,EAAMhB,EAAKf,E,CAGlD,gBAAMiC,CAAWlB,GACf,OAAO,IAAImB,SAAQC,MAAOC,EAASC,KACjC,MAAMC,QAAgBC,EAAgBC,OAAO,CAC3CC,OAAQC,EAAmBC,UACzB,0BACA,qBAEFC,QAASF,EAAmBC,UAC1B,2BACA,4CAEFE,QAAS,CACP,CACEC,KAAMJ,EAAmBC,UAAU,SAAU,UAC7CI,KAAM,SACNC,QAAS,KACPX,GAAQ,GAGZ,CACES,KAAMJ,EAAmBC,UAAU,KAAM,MACzCK,QAASb,UACPxB,EAAgBsC,WAAWjD,EAAqBe,GAChDQ,EAAc2B,SACdd,EAAQ,KAAK,MAKrBE,EAAQa,SAAS,G,CAIrB,oBAAMC,CAAerC,GACnB,MAAMsC,QAAY1C,EAAgB2C,YAAYtD,EAAqBe,GACnE,OAAOsC,EAAMA,EAAM,K,QAGVE,EAAmB,IAAItD,S","ignoreList":[]}