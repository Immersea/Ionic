import{r as t,e,h as i,H as n}from"./p-cbe60c68.js";import{aZ as o}from"./p-341ae8a8.js";import{l as s}from"./p-1af05547.js";import"./p-1819cfda.js";import"./p-e9c4f463.js";import"./p-46038295.js";import"./p-c7ee7cfe.js";import"./p-694b8ade.js";import"./p-5d4a8e1f.js";import"./p-3647f076.js";import"./p-9c77ce6f.js";import"./p-ae1763fb.js";import"./p-c5936999.js";import"./p-6879854f.js";import"./p-7ee16e8d.js";const a="app-coordinates{width:100%;height:100%}";const l=a;const m=class{constructor(i){t(this,i);this.coordinatesEmit=e(this,"coordinatesEmit",7);this.addressEmit=e(this,"addressEmit",7);this.coordinates=undefined;this.DMSCoordinates=undefined;this.location=undefined}updateCoords(){this.convertFromDecimals()}componentWillLoad(){this.convertFromDecimals()}decimalCoordinatesHandler(t){this.coordinates[t.detail.name]=s.exports.toNumber(t.detail.value)}DMSCoordinatesHandler(t){switch(t.detail.name){case"latitude-degrees":this.DMSCoordinates.lat.degrees=s.exports.toNumber(t.detail.value);break;case"latitude-minutes":this.DMSCoordinates.lat.minutes=s.exports.toNumber(t.detail.value);break;case"latitude-seconds":this.DMSCoordinates.lat.seconds=s.exports.toNumber(t.detail.value);break;case"longitude-degrees":this.DMSCoordinates.lon.degrees=s.exports.toNumber(t.detail.value);break;case"longitude-minutes":this.DMSCoordinates.lon.minutes=s.exports.toNumber(t.detail.value);break;case"longitude-seconds":this.DMSCoordinates.lon.seconds=s.exports.toNumber(t.detail.value);break}this.convertToDecimals()}convertFromDecimals(){if(this.coordinates&&this.coordinates.lat){const t=this.coordinates.lat;const e=Math.trunc(t);const i=(t-e)*60;const n=Math.trunc(i);const o=Math.round((i-n)*60);const s=this.coordinates.lon;const a=Math.trunc(s);const l=(s-a)*60;const m=Math.trunc(l);const r=Math.round((l-m)*60);this.DMSCoordinates={lat:{degrees:e,minutes:n,seconds:o},lon:{degrees:a,minutes:m,seconds:r}};this.reverseGeocode()}}convertToDecimals(){if(this.DMSCoordinates&&this.DMSCoordinates.lat){const t=this.DMSCoordinates.lat.degrees+this.DMSCoordinates.lat.minutes/60+this.DMSCoordinates.lat.seconds/3600;const e=this.DMSCoordinates.lon.degrees+this.DMSCoordinates.lon.minutes/60+this.DMSCoordinates.lon.seconds/3600;this.coordinates.lat=t;this.coordinates.lon=e;this.reverseGeocode()}}async reverseGeocode(){this.timer=2e3;this.countdown()}async executeReverseGeocode(){this.location=await o(this.coordinates.lat,this.coordinates.lon);this.addressEmit.emit(this.location)}countdown(){const t=setTimeout((()=>{this.timer-=1;if(this.timer==0){this.executeReverseGeocode()}else{clearTimeout(t);this.countdown()}}),1)}coordinatesUpdated(){this.coordinatesEmit.emit(this.coordinates)}render(){return i(n,{key:"5f9e7a665fe6cfccd9235fad88a3e1477b2c5672"},this.coordinates&&this.coordinates.lat&&this.DMSCoordinates&&this.DMSCoordinates.lat?i("ion-grid",null,i("ion-row",null,i("ion-col",null,i("app-form-item",{"label-tag":"latitude","label-text":"Latitude",value:s.exports.toString(this.coordinates.lat),name:"lat","input-type":"number",onFormItemChanged:t=>this.decimalCoordinatesHandler(t),onFormItemBlur:()=>this.coordinatesUpdated(),validator:[{name:"minmaxvalue",options:{min:-90,max:90}}]})),i("ion-col",null,i("ion-row",null,i("ion-col",null,i("app-form-item",{"label-tag":"degrees","label-text":"Degrees",value:s.exports.toString(this.DMSCoordinates.lat.degrees),name:"latitude-degrees","input-type":"number",onFormItemChanged:t=>this.DMSCoordinatesHandler(t),onFormItemBlur:()=>this.coordinatesUpdated(),validator:[{name:"minmaxvalue",options:{min:-90,max:90}}]})),i("ion-col",null,i("app-form-item",{"label-tag":"minutes","label-text":"Minutes",value:s.exports.toString(Math.abs(this.DMSCoordinates.lat.minutes)),name:"latitude-minutes","input-type":"number",onFormItemChanged:t=>this.DMSCoordinatesHandler(t),onFormItemBlur:()=>this.coordinatesUpdated(),validator:[{name:"minmaxvalue",options:{min:0,max:60}}]})),i("ion-col",null,i("app-form-item",{"label-tag":"seconds","label-text":"Seconds",value:s.exports.toString(Math.abs(this.DMSCoordinates.lat.seconds)),name:"latitude-seconds","input-type":"number",onFormItemChanged:t=>this.DMSCoordinatesHandler(t),onFormItemBlur:()=>this.coordinatesUpdated(),validator:[{name:"minmaxvalue",options:{min:0,max:60}}]}))))),i("ion-row",null,i("ion-col",null,i("app-form-item",{"label-tag":"longitude","label-text":"Longitude",value:s.exports.toString(this.coordinates.lon),name:"lon","input-type":"number",onFormItemChanged:t=>this.decimalCoordinatesHandler(t),onFormItemBlur:()=>this.coordinatesUpdated(),validator:[{name:"minmaxvalue",options:{min:-180,max:180}}]})),i("ion-col",null,i("ion-row",null,i("ion-col",null,i("app-form-item",{"label-tag":"degrees","label-text":"Degrees",value:s.exports.toString(this.DMSCoordinates.lon.degrees),name:"longitude-degrees","input-type":"number",onFormItemChanged:t=>this.DMSCoordinatesHandler(t),onFormItemBlur:()=>this.coordinatesUpdated(),validator:[{name:"minmaxvalue",options:{min:-180,max:180}}]})),i("ion-col",null,i("app-form-item",{"label-tag":"minutes","label-text":"Minutes",value:s.exports.toString(Math.abs(this.DMSCoordinates.lon.minutes)),name:"longitude-minutes","input-type":"number",onFormItemChanged:t=>this.DMSCoordinatesHandler(t),onFormItemBlur:()=>this.coordinatesUpdated(),validator:[{name:"minmaxvalue",options:{min:0,max:60}}]})),i("ion-col",null,i("app-form-item",{"label-tag":"seconds","label-text":"Seconds",value:s.exports.toString(Math.abs(this.DMSCoordinates.lon.seconds)),name:"longitude-seconds","input-type":"number",onFormItemChanged:t=>this.DMSCoordinatesHandler(t),onFormItemBlur:()=>this.coordinatesUpdated(),validator:[{name:"minmaxvalue",options:{min:0,max:60}}]}))))),this.location?i("ion-row",null,i("ion-col",null,i("ion-item",{color:"dark",lines:"none"},i("ion-icon",{name:"navigate-circle-outline",slot:"start"}),i("ion-label",null,this.location.display_name)))):undefined):undefined)}static get watchers(){return{coordinates:["updateCoords"]}}};m.style=l;export{m as app_coordinates};