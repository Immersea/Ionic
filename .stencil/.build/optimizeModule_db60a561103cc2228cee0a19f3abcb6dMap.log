{"version":3,"names":["appBannerCss","AppBannerStyle0","AppBanner","updateScrolling","this","scrollTopValue","moveImage","scaleImage","heightPx","el","style","transform","componentWillLoad","setProperty","widthPx","widthPerc","heightPerc","render","h","Host","key","class","link","url","backgroundCover","backgroundCoverFill","undefined","appImageCacheCss","AppImageCacheStyle0","AppImageCache","resetImageCache","update","_src","FileSystemService","storeAndLoadImage","src","backgroundImage","animated","toString"],"sources":["src/components/common/app/common/app-banner/app-banner.scss?tag=app-banner","src/components/common/app/common/app-banner/app-banner.tsx","src/components/common/app/common/app-image-cache/app-image-cache.scss?tag=app-image-cache","src/components/common/app/common/app-image-cache/app-image-cache.tsx"],"sourcesContent":["app-banner {\n  .bannerDiv {\n    width: var(--bannerWidth);\n    height: var(--bannerHeight);\n    background-color: var(--ion-color-tint);\n  }\n}\n","import {Component, h, Prop, Host, Watch, State, Element} from \"@stencil/core\";\n\n@Component({\n  tag: \"app-banner\",\n  styleUrl: \"app-banner.scss\",\n})\nexport class AppBanner {\n  @Element() el: HTMLElement;\n  @Prop() link: string;\n  @Prop() scrollTopValue: number;\n  @Prop() widthPerc: number = 100; //%\n  @Prop() heightPerc: number = 100; //%\n  @Prop() widthPx: number = null; //px\n  @Prop() heightPx: number = null; //px\n  @Prop() backgroundCover: boolean = true;\n  @Prop() backgroundCoverFill: boolean = true;\n  @State() moveImage = 0;\n  @State() scaleImage = 1;\n  @Watch(\"scrollTopValue\")\n  updateScrolling() {\n    if (this.scrollTopValue > 0) {\n      this.moveImage = this.scrollTopValue / 1.6;\n      this.scaleImage = 1;\n    } else {\n      this.moveImage = this.scrollTopValue / 1.6;\n      this.scaleImage = -this.scrollTopValue / this.heightPx + 1;\n    }\n    this.el.style.transform =\n      \"translate3d(0,\" +\n      this.moveImage +\n      \"px,0) scale(\" +\n      this.scaleImage +\n      \",\" +\n      this.scaleImage +\n      \")\";\n  }\n\n  componentWillLoad() {\n    this.el.style.setProperty(\n      \"--bannerWidth\",\n      this.widthPx ? this.widthPx + \"px\" : this.widthPerc + \"%\"\n    );\n    this.el.style.setProperty(\n      \"--bannerHeight\",\n      this.heightPx ? this.heightPx + \"px\" : this.heightPerc + \"%\"\n    );\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"bannerDiv\">\n          {this.link ? (\n            <app-image-cache\n              url={this.link}\n              backgroundCover={this.backgroundCover}\n              backgroundCoverFill={this.backgroundCoverFill}\n            />\n          ) : undefined}\n        </div>\n      </Host>\n    );\n  }\n}\n","app-image-cache {\n  transform: inherit;\n  /* Component styles go here */\n  .cover-main {\n    transform: inherit;\n    position: relative;\n    background-color: var(--ion-color-tint);\n    background-position: center;\n    background-repeat: no-repeat;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  }\n\n  .cover-contain {\n    background-size: contain;\n  }\n\n  .cover-fill {\n    background-size: cover;\n  }\n\n  .cover-dimensions {\n    height: 100%;\n    width: 100%;\n    margin: \"auto\";\n  }\n}\n","import { Component, h, Prop, State, Host, Watch } from \"@stencil/core\";\nimport { FileSystemService } from \"../../../../../services/common/fileSystem\";\n\n@Component({\n  tag: \"app-image-cache\",\n  styleUrl: \"app-image-cache.scss\",\n})\nexport class AppImageCache {\n  @Prop({ mutable: true }) url: string;\n  @Prop() backgroundCover = true;\n  @Prop() backgroundCoverFill = true;\n  @State() _src: string | Blob = null;\n  resetImageCache = false;\n  @Watch(\"url\")\n  async update() {\n    if (this.url)\n      this._src = (await FileSystemService.storeAndLoadImage(this.url)).src;\n  }\n  componentWillLoad() {\n    this.update();\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.backgroundCover ? (\n          this._src ? (\n            <div\n              class={\n                \"cover-main cover-dimensions \" +\n                (this.backgroundCoverFill ? \"cover-fill\" : \"cover-contain\")\n              }\n              style={{ backgroundImage: \"url(\" + this._src + \")\" }}\n            ></div>\n          ) : (\n            <ion-skeleton-text\n              class='cover-dimensions'\n              animated\n            ></ion-skeleton-text>\n          )\n        ) : this._src ? (\n          <img class='cover-main' src={this._src.toString()} />\n        ) : (\n          <ion-skeleton-text\n            animated\n            class='cover-dimensions'\n          ></ion-skeleton-text>\n        )}\n      </Host>\n    );\n  }\n}\n"],"mappings":"8UAAA,MAAMA,EAAe,oHACrB,MAAAC,EAAeD,E,MCKFE,EAAS,M,0FAIQ,I,gBACC,I,aACH,K,cACC,K,qBACQ,K,yBACI,K,eAClB,E,gBACC,C,CAEtB,eAAAC,GACE,GAAIC,KAAKC,eAAiB,EAAG,CAC3BD,KAAKE,UAAYF,KAAKC,eAAiB,IACvCD,KAAKG,WAAa,C,KACb,CACLH,KAAKE,UAAYF,KAAKC,eAAiB,IACvCD,KAAKG,YAAcH,KAAKC,eAAiBD,KAAKI,SAAW,C,CAE3DJ,KAAKK,GAAGC,MAAMC,UACZ,iBACAP,KAAKE,UACL,eACAF,KAAKG,WACL,IACAH,KAAKG,WACL,G,CAGJ,iBAAAK,GACER,KAAKK,GAAGC,MAAMG,YACZ,gBACAT,KAAKU,QAAUV,KAAKU,QAAU,KAAOV,KAAKW,UAAY,KAExDX,KAAKK,GAAGC,MAAMG,YACZ,iBACAT,KAAKI,SAAWJ,KAAKI,SAAW,KAAOJ,KAAKY,WAAa,I,CAI7D,MAAAC,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAA,OAAAE,IAAA,2CAAKC,MAAM,aACRjB,KAAKkB,KACJJ,EAAA,mBACEK,IAAKnB,KAAKkB,KACVE,gBAAiBpB,KAAKoB,gBACtBC,oBAAqBrB,KAAKqB,sBAE1BC,W,sGC1Dd,MAAMC,EAAmB,8ZACzB,MAAAC,EAAeD,E,MCMFE,EAAa,M,yBAKxBzB,KAAA0B,gBAAkB,M,wCAHQ,K,yBACI,K,UACC,I,CAG/B,YAAMC,GACJ,GAAI3B,KAAKmB,IACPnB,KAAK4B,YAAcC,EAAkBC,kBAAkB9B,KAAKmB,MAAMY,G,CAEtE,iBAAAvB,GACER,KAAK2B,Q,CAGP,MAAAd,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACFhB,KAAKoB,gBACJpB,KAAK4B,KACHd,EAAA,OACEG,MACE,gCACCjB,KAAKqB,oBAAsB,aAAe,iBAE7Cf,MAAO,CAAE0B,gBAAiB,OAAShC,KAAK4B,KAAO,OAGjDd,EAAA,qBACEG,MAAM,mBACNgB,SAAQ,OAGVjC,KAAK4B,KACPd,EAAA,OAAKG,MAAM,aAAac,IAAK/B,KAAK4B,KAAKM,aAEvCpB,EAAA,qBACEmB,SAAQ,KACRhB,MAAM,qB","ignoreList":[]}