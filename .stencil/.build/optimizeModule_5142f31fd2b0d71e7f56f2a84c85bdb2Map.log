{"version":3,"names":["popoverNewClassActivityCss","PopoverNewClassActivityStyle0","PopoverNewClassActivity","this","typeSelectOptions","stdConfigurations","componentWillLoad","tag","text","TranslationService","getTransl","cloneDeep","UserService","userSettings","userConfigurations","validateActivity","validActivity","isNumber","activity","day","isString","type","title","divePlan","updateView","updateDay","updateType","updateTitle","ev","value","detail","name","toLowerCase","replace","trim","addDivePlan","inputs","forEach","conf","key","push","label","stdName","checked","alert","alertController","create","header","buttons","handler","async","data","openModal","RouterService","selectedConfiguration","dive","user","userProfile","onDidDismiss","then","dpModal","role","cssClass","present","editDivePlan","modal","DivePlansService","presentDiveTemplateUpdate","showDiveLocation","save","popoverController","dismiss","cancel","render","h","Host","onIonChange","interface","map","option","onFormItemChanged","validator","options","dives","getDiveDetails","fill","onClick","expand","undefined","disableSave","onCancelEmit","onSaveEmit"],"sources":["src/components/udive/popovers/popover-new-class-activity/popover-new-class-activity.scss?tag=popover-new-class-activity","src/components/udive/popovers/popover-new-class-activity/popover-new-class-activity.tsx"],"sourcesContent":["popover-new-class-activity {\n  .validation-error {\n    text-align: center;\n    font-size: 0.7rem;\n    color: red;\n  }\n}\n","import {Component, h, Host, Prop, State, Element} from \"@stencil/core\";\nimport {cloneDeep, forEach, isNumber, isString} from \"lodash\";\nimport {popoverController, alertController} from \"@ionic/core\";\nimport {Activity} from \"../../../../interfaces/udive/diving-class/divingClass\";\nimport {TranslationService} from \"../../../../services/common/translations\";\nimport {DiveConfiguration} from \"../../../../interfaces/udive/planner/dive-configuration\";\nimport {UserService} from \"../../../../services/common/user\";\nimport {RouterService} from \"../../../../services/common/router\";\nimport {DivePlansService} from \"../../../../services/udive/divePlans\";\n\n@Component({\n  tag: \"popover-new-class-activity\",\n  styleUrl: \"popover-new-class-activity.scss\",\n})\nexport class PopoverNewClassActivity {\n  @Element() el: HTMLElement;\n  @Prop() activity: Activity;\n  @Prop() showDiveLocation: boolean = true;\n\n  @State() updateView = false;\n  @State() validActivity = false;\n  typeSelectOptions = [];\n  stdConfigurations: DiveConfiguration[] = [];\n\n  componentWillLoad() {\n    this.typeSelectOptions = [\n      {tag: \"theory\", text: TranslationService.getTransl(\"theory\", \"Theory\")},\n      {tag: \"dry\", text: TranslationService.getTransl(\"dry\", \"Dry\")},\n      {\n        tag: \"in-water\",\n        text: TranslationService.getTransl(\"in-water\", \"In Water\"),\n      },\n      {tag: \"dive\", text: TranslationService.getTransl(\"dive\", \"Dive\")},\n    ];\n    this.stdConfigurations = cloneDeep(\n      UserService.userSettings.userConfigurations\n    );\n    this.validateActivity();\n  }\n\n  validateActivity() {\n    this.validActivity =\n      isNumber(this.activity.day) &&\n      isString(this.activity.type) &&\n      isString(this.activity.title.tag) &&\n      isString(this.activity.title.text);\n    if (this.activity.type == \"dive\") {\n      this.validActivity =\n        this.validActivity && this.activity.divePlan !== null;\n    }\n    this.updateView = !this.updateView;\n  }\n\n  updateDay(day) {\n    this.activity.day = day;\n    this.validateActivity();\n  }\n  updateType(type) {\n    if (type != \"dive\" && this.activity.type == \"dive\") {\n      this.activity.divePlan = null;\n    }\n    this.activity.type = type;\n    this.validateActivity();\n  }\n  updateTitle(ev) {\n    let value = ev.detail.value;\n    if (ev.detail.name == \"tag\") {\n      value = value.toLowerCase().replace(\" \", \"-\").trim();\n    }\n    this.activity.title[ev.detail.name] = value;\n    this.validateActivity();\n  }\n\n  async addDivePlan() {\n    let inputs = [];\n    forEach(this.stdConfigurations, (conf, key) => {\n      inputs.push({\n        type: \"radio\",\n        label: conf.stdName,\n        value: key,\n        checked: key == 0 ? true : false,\n      });\n    });\n    const alert = await alertController.create({\n      header: TranslationService.getTransl(\n        \"select-standard-configuration\",\n        \"Select standard configuration\"\n      ),\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n          handler: async (data: any) => {\n            const openModal = await RouterService.openModal(\n              \"modal-dive-template\",\n              {\n                selectedConfiguration: this.stdConfigurations[data],\n                stdConfigurations: this.stdConfigurations,\n                dive: 0,\n                user: UserService.userProfile,\n              }\n            );\n            openModal.onDidDismiss().then((divePlan) => {\n              const dpModal = divePlan.data;\n              if (dpModal) {\n                this.activity.divePlan = dpModal;\n                this.validateActivity();\n                this.updateView = !this.updateView;\n              }\n            });\n          },\n        },\n        {\n          text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n          role: \"cancel\",\n          cssClass: \"secondary\",\n        },\n      ],\n      inputs: inputs,\n    });\n    alert.present();\n  }\n\n  async editDivePlan() {\n    const modal = await DivePlansService.presentDiveTemplateUpdate(\n      this.activity.divePlan,\n      0,\n      this.showDiveLocation\n    );\n    if (modal) {\n      this.activity.divePlan = modal;\n      this.updateView = !this.updateView;\n    }\n  }\n\n  async save() {\n    popoverController.dismiss(this.activity);\n  }\n\n  cancel() {\n    popoverController.dismiss();\n  }\n\n  render() {\n    return (\n      <Host>\n        <ion-toolbar>\n          <ion-title>\n            <my-transl tag=\"class-activity\" text=\"Class Activity\" />\n          </ion-title>\n        </ion-toolbar>\n        <ion-item>\n          <ion-label>\n            <my-transl tag=\"class-day\" text=\"Class Day\"></my-transl>\n          </ion-label>\n          <ion-select\n            value={this.activity.day}\n            onIonChange={(ev) => this.updateDay(ev.detail.value)}\n            interface=\"popover\"\n          >\n            <ion-select-option value={1}>1</ion-select-option>\n            <ion-select-option value={2}>2</ion-select-option>\n            <ion-select-option value={3}>3</ion-select-option>\n            <ion-select-option value={4}>4</ion-select-option>\n            <ion-select-option value={5}>5</ion-select-option>\n            <ion-select-option value={6}>6</ion-select-option>\n            <ion-select-option value={7}>7</ion-select-option>\n            <ion-select-option value={8}>8</ion-select-option>\n            <ion-select-option value={9}>9</ion-select-option>\n            <ion-select-option value={10}>10</ion-select-option>\n          </ion-select>\n        </ion-item>\n        <ion-item>\n          <ion-label>\n            <my-transl tag=\"type\" text=\"Type\"></my-transl>\n          </ion-label>\n          <ion-select\n            value={this.activity.type}\n            onIonChange={(ev) => this.updateType(ev.detail.value)}\n            interface=\"popover\"\n          >\n            {this.typeSelectOptions.map((option) => (\n              <ion-select-option value={option.tag}>\n                {option.text}\n              </ion-select-option>\n            ))}\n          </ion-select>\n        </ion-item>\n        <app-form-item\n          label-tag=\"unique-id\"\n          label-text=\"Unique ID\"\n          value={this.activity.title.tag}\n          name=\"tag\"\n          input-type=\"text\"\n          onFormItemChanged={(ev) => this.updateTitle(ev)}\n          validator={[\n            \"required\",\n            {\n              name: \"uniqueid\",\n              options: {type: null},\n            },\n          ]}\n        ></app-form-item>\n        <app-form-item\n          label-tag=\"title\"\n          label-text=\"Title\"\n          value={this.activity.title.text}\n          name=\"text\"\n          input-type=\"text\"\n          onFormItemChanged={(ev) => this.updateTitle(ev)}\n          validator={[\"required\"]}\n        ></app-form-item>\n        {this.activity.type == \"dive\" ? (\n          this.activity.divePlan ? (\n            <ion-item>\n              <ion-label>\n                {this.activity.divePlan.dives[0]\n                  .getDiveDetails()\n                  .map((detail) => (\n                    <p>{detail}</p>\n                  ))}\n              </ion-label>\n              <ion-button\n                icon-only\n                fill=\"clear\"\n                onClick={() => this.editDivePlan()}\n              >\n                <ion-icon name=\"create-outline\"></ion-icon>\n              </ion-button>\n            </ion-item>\n          ) : (\n            <ion-button expand=\"full\" onClick={() => this.addDivePlan()}>\n              Add Dive Plan\n            </ion-button>\n          )\n        ) : undefined}\n\n        <app-modal-footer\n          disableSave={!this.validActivity}\n          onCancelEmit={() => this.cancel()}\n          onSaveEmit={() => this.save()}\n        />\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}