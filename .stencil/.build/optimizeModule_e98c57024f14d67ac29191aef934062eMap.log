{"version":3,"names":["appUserCardsCss","AppUserCardsStyle0","AppUserCards","componentWillLoad","this","userCardsSub$","UserService","userCards$","subscribe","userCards","UserCards","updateView","updateSlider","sysPref","SystemService","getSystemPreferences","componentDidLoad","initLocalUser","disconnectedCallback","unsubscribe","addCard","i","confModal","RouterService","openModal","card","cards","Card","onDidDismiss","then","updatedCard","data","push","save","removeCard","event","stopPropagation","confirm","alertController","create","header","TranslationService","getTransl","message","buttons","text","role","handler","splice","present","updateUserCards","render","h","key","class","length","map","onClick","imgFront","src","undefined","lines","slot","color","fill","ev","name","course","certificationId","agencyName","number","instructor","tag","certified","showDate","expiry","comments","appUserConfigurationsCss","AppUserConfigurationsStyle0","AppUserConfigurations","stdConfigurations","userSub$","userSettings$","userSettings","UserSettings","loadData","DatabaseService","getLocalDocument","USERSETTINGSCOLLECTION","DiveStandardsService","getStdConfigurations","userConfigurations","localConfigurations","forEach","conf","model","DiveConfiguration","getDivePlansFromConfigurations","saveLocalDocument","viewConfiguration","checkLicence","configuration","cloneDeep","divePlan","DivePlan","setConfiguration","diveDataToShare","updatedConf","removeConfiguration","addConfiguration","inputs","type","label","stdName","value","checked","alert","async","cssClass","updateUserConfigurations","maxDepth","parameters","depthUnit","bottom","tank","gas","toString","deco","appUserLicencesCss","AppUserLicencesStyle0","AppUserLicences","allowPurchase","userRolesSub$","userRoles$","userRoles","uid","UserRoles","setProductPrices","prices","rec1","licence","price","productPrices","rec2","rec3","tech1","tech2","unlimited","showInfo","info","purchase","prompt","activateTrial","days","licences","trial","duration","xxx","CallableFunctionsUdiveService","startUserTrialPeriod","url","encodeURI","userProfile","email","Browser","open","Object","keys","upperFirst","hasLicence","isLabel","level","trialDays","trialExpiryDate","getUserLimitations","maxDecoTime","DiveToolsService","maxHe","minO2","maxO2","maxDecoGases","minDecoO2","maxDecoO2","appUserTanksCss","AppUserTanksStyle0","AppUserTanks","stdTanks","hasUserTanks","userTanks","getStdTanks","isEqual","viewTank","updatedTank","TankModel","removeTank","addTank","updateUserTanks","volume","settings","units","ltToCuFt","no_of_tanks","pressure","barToPsi","forDeco"],"sources":["src/components/udive/app/user/app-user-cards/app-user-cards.scss?tag=app-user-cards","src/components/udive/app/user/app-user-cards/app-user-cards.tsx","src/components/udive/app/user/app-user-configurations/app-user-configurations.scss?tag=app-user-configurations","src/components/udive/app/user/app-user-configurations/app-user-configurations.tsx","src/components/udive/app/user/app-user-licences/app-user-licences.scss?tag=app-user-licences","src/components/udive/app/user/app-user-licences/app-user-licences.tsx","src/components/udive/app/user/app-user-tanks/app-user-tanks.scss?tag=app-user-tanks","src/components/udive/app/user/app-user-tanks/app-user-tanks.tsx"],"sourcesContent":["app-user-cards {\n  width: 100%;\n\n  .cards-container {\n    margin: 0;\n    margin-bottom: 1rem; /* Space between the rows */\n  }\n\n  .cards-column {\n    margin-bottom: 1rem !important; /* Add space between rows */\n  }\n\n  .card {\n    display: flex;\n    flex-direction: column;\n    height: 100%; /* Make card take the full height of the container */\n    box-sizing: border-box;\n    cursor: pointer; /* Change cursor to pointer */\n    transition: transform 0.2s ease-in-out; /* Add smooth transition effect */\n  }\n\n  .card:hover {\n    transform: scale(1.02); /* Slight zoom effect on hover */\n  }\n\n  .card-content {\n    flex-grow: 1; /* Make card content grow to fill the available space */\n  }\n\n  .card-margins {\n    margin-bottom: 1rem; /* Ensure there's space inside the cards */\n  }\n\n  .add-card {\n    min-height: 200px; /* Set minimum height to 200px */\n  }\n\n  .add-card-content {\n    display: flex;\n    justify-content: center;\n    align-items: center; /* Center the icon both horizontally and vertically */\n    height: 100%; /* Ensure it fills the entire card */\n    width: 100%; /* Ensure it stretches the entire card width */\n  }\n\n  .add-icon {\n    width: 70%; /* Set icon width to 70% of parent container */\n    height: 70%; /* Set icon height to 70% of parent container */\n  }\n}\n","import { Component, h, Prop, State } from \"@stencil/core\";\nimport { Subscription } from \"rxjs\";\nimport { UserService } from \"../../../../../services/common/user\";\nimport {\n  UserCards,\n  Card,\n} from \"../../../../../interfaces/udive/user/user-cards\";\nimport { alertController } from \"@ionic/core\";\nimport { TranslationService } from \"../../../../../services/common/translations\";\nimport { SystemService } from \"../../../../../services/common/system\";\nimport { SystemPreference } from \"../../../../../interfaces/common/system/system\";\nimport { RouterService } from \"../../../../../services/common/router\";\nimport { showDate } from \"../../../../../helpers/utils\";\n\n@Component({\n  tag: \"app-user-cards\",\n  styleUrl: \"app-user-cards.scss\",\n})\nexport class AppUserCards {\n  @Prop() updateSlider: any;\n  @State() userCards: UserCards;\n  @State() updateView = true;\n  @State() sysPref: SystemPreference;\n  userCardsSub$: Subscription;\n  async componentWillLoad() {\n    this.userCardsSub$ = UserService.userCards$.subscribe(\n      (userCards: UserCards) => {\n        this.userCards = new UserCards(userCards);\n        this.updateView = !this.updateView;\n        this.updateSlider();\n      }\n    );\n    this.sysPref = await SystemService.getSystemPreferences();\n  }\n\n  componentDidLoad() {\n    //check if user is loaded or trigger local user\n    if (!this.userCards) {\n      UserService.initLocalUser();\n    }\n  }\n\n  disconnectedCallback() {\n    this.userCardsSub$.unsubscribe();\n  }\n\n  async addCard(i?) {\n    const confModal = await RouterService.openModal(\"modal-dive-card\", {\n      card: this.userCards.cards[i] ? this.userCards.cards[i] : new Card(),\n    });\n    confModal.onDidDismiss().then((updatedCard) => {\n      updatedCard = updatedCard.data;\n      if (updatedCard) {\n        if (this.userCards.cards[i]) {\n          this.userCards.cards[i] = new Card(updatedCard);\n        } else {\n          this.userCards.cards.push(new Card(updatedCard));\n        }\n        this.save();\n      }\n    });\n  }\n\n  async removeCard(event, i) {\n    event.stopPropagation();\n    const confirm = await alertController.create({\n      header: TranslationService.getTransl(\n        \"delete-card-header\",\n        \"Delete Dive Card?\"\n      ),\n      message: TranslationService.getTransl(\n        \"delete-card-message\",\n        \"This dive card will be deleted! Are you sure?\"\n      ),\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n          role: \"cancel\",\n          handler: () => {},\n        },\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n          handler: () => {\n            this.userCards.cards.splice(i, 1);\n            this.save();\n          },\n        },\n      ],\n    });\n    confirm.present();\n  }\n\n  save() {\n    UserService.updateUserCards(this.userCards);\n    this.updateSlider();\n  }\n\n  render() {\n    return (\n      <div class='slider-container'>\n        <div class='slider-scrollable-container'>\n          <ion-grid class='ion-no-padding'>\n            <ion-row class='ion-text-start ion-no-padding cards-container'>\n              {this.userCards && this.userCards.cards.length > 0\n                ? this.userCards.cards.map((card, i) => (\n                    <ion-col\n                      size-sm='12'\n                      size-md='6'\n                      size-lg='4'\n                      class='ion-no-padding cards-column'\n                    >\n                      <ion-card onClick={() => this.addCard(i)} class='card'>\n                        <div class='card-content'>\n                          {card.imgFront ? (\n                            <img src={card.imgFront} />\n                          ) : undefined}\n\n                          <ion-card-header>\n                            <ion-card-subtitle>\n                              <ion-item class='ion-no-padding' lines='none'>\n                                <ion-button\n                                  icon-only\n                                  slot='end'\n                                  color='danger'\n                                  fill='clear'\n                                  onClick={(ev) => this.removeCard(ev, i)}\n                                >\n                                  <ion-icon name='trash-bin-outline'></ion-icon>\n                                </ion-button>\n                                <ion-label>\n                                  <h2>{card.course.certificationId}</h2>\n                                </ion-label>\n                              </ion-item>\n                              {card.course.agencyName}\n                            </ion-card-subtitle>\n                          </ion-card-header>\n                          <ion-card-content>\n                            {card.number ? <p>#{card.number}</p> : undefined}\n                            {card.instructor ? (\n                              <p>\n                                <my-transl tag='instructor' text='Instructor' />\n                                : {card.instructor}\n                              </p>\n                            ) : undefined}\n                            {card.certified ? (\n                              <p>\n                                <my-transl tag='certified' text='Certified' />:{\" \"}\n                                {showDate(card.certified, \"date\")}\n                              </p>\n                            ) : undefined}\n                            {card.expiry ? (\n                              <p>\n                                <my-transl tag='expiry' text='Expiry' />:{\" \"}\n                                {showDate(card.expiry, \"date\")}\n                              </p>\n                            ) : undefined}\n                            {card.comments ? (\n                              <p>\n                                <my-transl tag='comments' text='Comments' />:{\" \"}\n                                {card.comments}\n                              </p>\n                            ) : undefined}\n                          </ion-card-content>\n                        </div>\n                      </ion-card>\n                    </ion-col>\n                  ))\n                : undefined}\n              {/* Add new card button */}\n              <ion-col\n                size-sm='12'\n                size-md='6'\n                size-lg='4'\n                class='ion-no-padding cards-column'\n              >\n                <ion-card class='card add-card' onClick={() => this.addCard()}>\n                  <ion-card-content class='card-content add-card-content'>\n                    <ion-icon\n                      name='add-circle-outline'\n                      class='add-icon'\n                    ></ion-icon>\n                  </ion-card-content>\n                </ion-card>\n              </ion-col>\n            </ion-row>\n          </ion-grid>\n        </div>\n      </div>\n    );\n  }\n}\n","app-user-configurations {\n  width: 100%;\n  .cards-container {\n    margin: 0;\n    margin-bottom: 1rem; /* Space between the rows */\n  }\n\n  .cards-column {\n    margin-bottom: 1rem !important; /* Add space between rows */\n  }\n\n  .card {\n    display: flex;\n    flex-direction: column;\n    height: 100%; /* Make card take the full height of the container */\n    box-sizing: border-box;\n    cursor: pointer; /* Change cursor to pointer */\n    transition: transform 0.2s ease-in-out; /* Add smooth transition effect */\n  }\n\n  .card:hover {\n    transform: scale(1.02); /* Slight zoom effect on hover */\n  }\n\n  .card-content {\n    flex-grow: 1; /* Make card content grow to fill the available space */\n  }\n\n  .card-margins {\n    margin-bottom: 1rem; /* Ensure there's space inside the cards */\n  }\n\n  .add-card {\n    min-height: 200px; /* Set minimum height to 200px */\n  }\n\n  .add-card-content {\n    display: flex;\n    justify-content: center;\n    align-items: center; /* Center the icon both horizontally and vertically */\n    height: 100%; /* Ensure it fills the entire card */\n    width: 100%; /* Ensure it stretches the entire card width */\n  }\n\n  .add-icon {\n    width: 70%; /* Set icon width to 70% of parent container */\n    height: 70%; /* Set icon height to 70% of parent container */\n  }\n}\n","import { Component, h, State } from \"@stencil/core\";\nimport {\n  UserService,\n  USERSETTINGSCOLLECTION,\n} from \"../../../../../services/common/user\";\nimport { DiveConfiguration } from \"../../../../../interfaces/udive/planner/dive-configuration\";\nimport { Subscription } from \"rxjs\";\nimport { DatabaseService } from \"../../../../../services/common/database\";\nimport { DiveStandardsService } from \"../../../../../services/udive/planner/dive-standards\";\nimport { cloneDeep, forEach } from \"lodash\";\nimport { alertController } from \"@ionic/core\";\nimport { DivePlan } from \"../../../../../services/udive/planner/dive-plan\";\nimport { TranslationService } from \"../../../../../services/common/translations\";\nimport { UserSettings } from \"../../../../../interfaces/udive/user/user-settings\";\nimport { RouterService } from \"../../../../../services/common/router\";\n\n@Component({\n  tag: \"app-user-configurations\",\n  styleUrl: \"app-user-configurations.scss\",\n})\nexport class AppUserConfigurations {\n  @State() userConfigurations: DiveConfiguration[] = [];\n  stdConfigurations: DiveConfiguration[] = [];\n  loading: any;\n  userSettings: UserSettings;\n  userSub$: Subscription;\n\n  componentWillLoad() {\n    this.userSub$ = UserService.userSettings$.subscribe(\n      (userSettings: UserSettings) => {\n        this.userSettings = new UserSettings(userSettings);\n        this.loadData();\n      }\n    );\n  }\n  componentDidLoad() {\n    //check if user is loaded or trigger local user\n    if (!this.userSettings) {\n      UserService.initLocalUser();\n    }\n  }\n\n  async loadData() {\n    if (!this.userSettings) {\n      this.userSettings = new UserSettings(\n        await DatabaseService.getLocalDocument(USERSETTINGSCOLLECTION)\n      );\n    }\n    this.stdConfigurations = DiveStandardsService.getStdConfigurations();\n    if (this.userSettings) {\n      /*this.userConfigurations = orderBy(\n        this.user.userConfigurations,\n        \"stdName\"\n      );*/\n      this.userConfigurations = this.userSettings.userConfigurations;\n    } else {\n      const localConfigurations = await DatabaseService.getLocalDocument(\n        \"localconfigurations\"\n      );\n      if (localConfigurations) {\n        this.stdConfigurations = [];\n        localConfigurations.forEach((conf) => {\n          const model = new DiveConfiguration(conf);\n          this.userConfigurations.push(model);\n        });\n      } else {\n        this.userConfigurations =\n          DiveStandardsService.getDivePlansFromConfigurations(\n            this.stdConfigurations\n          );\n        DatabaseService.saveLocalDocument(\n          \"localconfigurations\",\n          this.userConfigurations\n        );\n      }\n    }\n  }\n\n  disconnectedCallback() {\n    this.userSub$.unsubscribe();\n  }\n\n  async viewConfiguration(i) {\n    const openModal = await UserService.checkLicence(\"configs\", true);\n\n    if (openModal) {\n      const configuration = cloneDeep(this.userConfigurations[i]);\n      const divePlan = new DivePlan();\n      divePlan.setConfiguration(configuration);\n      const confModal = await RouterService.openModal(\n        \"modal-dive-configuration\",\n        {\n          diveDataToShare: {\n            divePlan: divePlan,\n          },\n        }\n      );\n      confModal.onDidDismiss().then((updatedConf) => {\n        updatedConf = updatedConf.data;\n        if (updatedConf) {\n          this.userConfigurations[i] = new DiveConfiguration(updatedConf);\n          this.save();\n        }\n      });\n    }\n  }\n\n  async removeConfiguration(event, i) {\n    event.stopPropagation();\n    const openModal = await UserService.checkLicence(\"configs\", true);\n    if (openModal) {\n      const confirm = await alertController.create({\n        header: TranslationService.getTransl(\n          \"delete-configuration-header\",\n          \"Delete configuration?\"\n        ),\n        message: TranslationService.getTransl(\n          \"delete-configuration-message\",\n          \"This configuration will be deleted! Are you sure?\"\n        ),\n        buttons: [\n          {\n            text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n            role: \"cancel\",\n            handler: () => {},\n          },\n          {\n            text: TranslationService.getTransl(\"ok\", \"OK\"),\n            handler: () => {\n              this.userConfigurations.splice(i, 1);\n              this.save();\n            },\n          },\n        ],\n      });\n      confirm.present();\n    }\n  }\n\n  async addConfiguration() {\n    const openModal = await UserService.checkLicence(\"configs\", true);\n    if (openModal) {\n      let inputs = [];\n      forEach(this.stdConfigurations, (conf, key) => {\n        inputs.push({\n          type: \"radio\",\n          label: conf.stdName + \" (standard)\",\n          value: conf,\n          checked: key == 0 ? true : false,\n        });\n      });\n      forEach(this.userConfigurations, (conf) => {\n        inputs.push({\n          type: \"radio\",\n          label: conf.stdName,\n          value: conf,\n          checked: false,\n        });\n      });\n      const alert = await alertController.create({\n        header: TranslationService.getTransl(\n          \"select-standard-configuration\",\n          \"Select standard configuration\"\n        ),\n        buttons: [\n          {\n            text: TranslationService.getTransl(\"ok\", \"OK\"),\n            handler: async (data: any) => {\n              let openModal = await UserService.checkLicence(\"configs\", true);\n              if (openModal) {\n                const configuration = new DiveConfiguration(data);\n                const divePlan = new DivePlan();\n                divePlan.setConfiguration(configuration);\n                const confModal = await RouterService.openModal(\n                  \"modal-dive-configuration\",\n                  {\n                    diveDataToShare: {\n                      divePlan: divePlan,\n                    },\n                  }\n                );\n                confModal.onDidDismiss().then((updatedConf) => {\n                  updatedConf = updatedConf.data;\n                  if (updatedConf) {\n                    this.userConfigurations.push(\n                      new DiveConfiguration(updatedConf)\n                    );\n                    this.save();\n                  }\n                });\n              }\n            },\n          },\n          {\n            text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n            role: \"cancel\",\n            cssClass: \"secondary\",\n          },\n        ],\n        inputs: inputs,\n      });\n      alert.present();\n    }\n  }\n\n  save() {\n    UserService.updateUserConfigurations(this.userConfigurations);\n  }\n\n  render() {\n    return (\n      <div class='slider-container'>\n        <div class='slider-scrollable-container'>\n          <ion-grid class='ion-no-padding'>\n            <ion-row class='ion-text-start ion-no-padding cards-container'>\n              {this.userConfigurations.map((conf, i) => (\n                <ion-col\n                  size-sm='12'\n                  size-md='6'\n                  size-lg='4'\n                  class='ion-no-padding cards-column'\n                >\n                  <ion-card\n                    onClick={() => this.viewConfiguration(i)}\n                    class='card'\n                  >\n                    <div class='card-content'>\n                      <ion-card-header>\n                        <ion-item class='ion-no-padding' lines='none'>\n                          <ion-button\n                            icon-only\n                            slot='end'\n                            color='danger'\n                            fill='clear'\n                            onClick={(ev) => this.removeConfiguration(ev, i)}\n                          >\n                            <ion-icon name='trash-bin-outline'></ion-icon>\n                          </ion-button>\n\n                          <ion-card-title>{conf.stdName}</ion-card-title>\n                        </ion-item>\n\n                        <ion-card-subtitle>\n                          <my-transl tag='max-depth' text='Max Depth' />:\n                          {conf.maxDepth} {conf.parameters.depthUnit}\n                        </ion-card-subtitle>\n                      </ion-card-header>\n\n                      <ion-card-content>\n                        {conf.configuration.bottom.length > 0 ? (\n                          <p>\n                            <my-transl tag='bottom-tanks' text='Bottom Tanks' />\n                            :\n                          </p>\n                        ) : undefined}\n                        {conf.configuration.bottom.map((tank) => (\n                          <p>{tank.name + \"->\" + tank.gas.toString()}</p>\n                        ))}\n                        {conf.configuration.deco.length > 0 ? (\n                          <p>\n                            <my-transl tag='deco-tanks' text='Deco Tanks' />:\n                          </p>\n                        ) : undefined}\n                        {conf.configuration.deco.map((tank) => (\n                          <p>{tank.name + \"->\" + tank.gas.toString()}</p>\n                        ))}\n                      </ion-card-content>\n                    </div>\n                  </ion-card>\n                </ion-col>\n              ))}\n              {/* Add new card button */}\n              <ion-col\n                size-sm='12'\n                size-md='6'\n                size-lg='4'\n                class='ion-no-padding cards-column'\n              >\n                <ion-card\n                  class='card add-card'\n                  onClick={() => this.addConfiguration()}\n                >\n                  <ion-card-content class='card-content add-card-content'>\n                    <ion-icon\n                      name='add-circle-outline'\n                      class='add-icon'\n                    ></ion-icon>\n                  </ion-card-content>\n                </ion-card>\n              </ion-col>\n            </ion-row>\n          </ion-grid>\n        </div>\n      </div>\n    );\n  }\n}\n","app-user-licences {\n  width: 100%;\n}\n","import { Component, h, State } from \"@stencil/core\";\nimport { Subscription } from \"rxjs\";\nimport { UserService } from \"../../../../../services/common/user\";\nimport { UserRoles } from \"../../../../../interfaces/common/user/user-roles\";\nimport { TranslationService } from \"../../../../../services/common/translations\";\nimport { alertController } from \"@ionic/core\";\nimport { SystemService } from \"../../../../../services/common/system\";\nimport { SystemPreference } from \"../../../../../interfaces/common/system/system\";\nimport { Browser } from \"@capacitor/browser\";\nimport { upperFirst } from \"lodash\";\nimport { CallableFunctionsUdiveService } from \"../../../../../services/udive/callableFunctions\";\nimport { DiveToolsService } from \"../../../../../services/udive/planner/dive-tools\";\n\n@Component({\n  tag: \"app-user-licences\",\n  styleUrl: \"app-user-licences.scss\",\n})\nexport class AppUserLicences {\n  @State() userRoles: UserRoles;\n  userRolesSub$: Subscription;\n  @State() prices = {};\n  allowPurchase = true;\n  @State() sysPref: SystemPreference;\n\n  async componentWillLoad() {\n    this.userRolesSub$ = UserService.userRoles$.subscribe((userRoles) => {\n      if (userRoles && userRoles.uid) {\n        this.userRoles = new UserRoles(userRoles);\n      }\n    });\n    this.sysPref = await SystemService.getSystemPreferences();\n    this.setProductPrices();\n  }\n  componentDidLoad() {\n    //check if user is loaded or trigger local user\n    if (!this.userRoles) {\n      UserService.initLocalUser();\n    }\n  }\n\n  disconnectedCallback() {\n    this.userRolesSub$.unsubscribe();\n  }\n\n  /*\n   * in app purchase\n   */\n\n  setProductPrices() {\n    this.prices = {\n      /*trimix: {\n        licence: \"trimix\",\n        price: this.sysPref.productPrices.trimix,\n      },\n      tables: {\n        licence: \"tables\",\n        price: this.sysPref.productPrices.tables,\n      },\n      rebreather: {\n        licence: \"reb\",\n        price: this.sysPref.productPrices.reb,\n      },\n      configurations: {\n        licence: \"configs\",\n        price: this.sysPref.productPrices.configs,\n      },\n      professional: {\n        licence: \"pro\",\n        price: this.sysPref.productPrices.pro,\n      },\n*/\n      rec1: {\n        licence: \"rec1\",\n        price: this.sysPref.productPrices.rec1,\n      },\n      rec2: {\n        licence: \"rec2\",\n        price: this.sysPref.productPrices.rec2,\n      },\n      rec3: {\n        licence: \"rec3\",\n        price: this.sysPref.productPrices.rec3,\n      },\n      tech1: {\n        licence: \"tech1\",\n        price: this.sysPref.productPrices.tech1,\n      },\n      tech2: {\n        licence: \"tech2\",\n        price: this.sysPref.productPrices.tech2,\n      },\n      unlimited: {\n        licence: \"unlimited\",\n        price: this.sysPref.productPrices.unlimited,\n      },\n    };\n    /*let productIds = new Array().concat(values(this.config.purchaseProducts))\n    this.iap\n    .getProducts(productIds)\n    .then((products) => {\n        //  [{ productId: 'com.yourapp.prod1', 'title': '...', description: '...', price: '...' }, ...]\n      this.products = products;\n      products.forEach(product=>{\n        switch (product.productId) {\n          case this.config.purchaseProducts.trimix:\n            this.prices.trimix = product.price;\n            break;\n          case this.config.purchaseProducts.tables:\n            this.prices.tables = product.price;\n            break;\n          case this.config.purchaseProducts.reb:\n            this.prices.reb = product.price;\n            break;\n          case this.config.purchaseProducts.configs:\n            this.prices.configs = product.price;\n            break;\n          case this.config.purchaseProducts.pro:\n            this.prices.pro = product.price;\n            break;\n        }\n      })\n    })\n    .catch((err) => {\n      console.log(\"products\",err);\n      this.allowPurchase = false;\n    });*/\n  }\n\n  async showInfo(licence: string) {\n    let info;\n    switch (licence) {\n      case \"trimix\":\n        info = TranslationService.getTransl(\n          \"licence-tmx-descr\",\n          \"This licence adds the possibility to select trimix gases in the dive plans.\"\n        );\n        break;\n      case \"tables\":\n        info = TranslationService.getTransl(\n          \"licence-tables-descr\",\n          \"This licence shows dive plan tables with the possibility to vary the bottom time and depth.\"\n        );\n        break;\n      case \"rebreather\":\n        info = TranslationService.getTransl(\n          \"licence-reb-descr\",\n          \"This licence adds the possibility to plan dives with CCR and pSCR rebreathers, including bailout options.\"\n        );\n        break;\n      case \"configurations\":\n        info = TranslationService.getTransl(\n          \"licence-confs-descr\",\n          \"This licence adds the possibility to edit, add and delete dive configurations.\"\n        );\n        break;\n      case \"professional\":\n        info = TranslationService.getTransl(\n          \"licence-pro-descr\",\n          \"This licence opens all the features of the app.\"\n        );\n        break;\n      case \"rec1\":\n        info = TranslationService.getTransl(\n          \"licence-rec1-descr\",\n          \"This licence allows dives in the Rec1 range.\"\n        );\n        break;\n      case \"rec2\":\n        info = TranslationService.getTransl(\n          \"licence-rec2-descr\",\n          \"This licence allows dives in the Rec2 range.\"\n        );\n        break;\n      case \"rec3\":\n        info = TranslationService.getTransl(\n          \"licence-rec3-descr\",\n          \"This licence allows dives in the Rec3 range.\"\n        );\n        break;\n      case \"tech1\":\n        info = TranslationService.getTransl(\n          \"licence-tech1-descr\",\n          \"This licence allows dives in the Tech1 range.\"\n        );\n        break;\n      case \"tech2\":\n        info = TranslationService.getTransl(\n          \"licence-tech2-descr\",\n          \"This licence allows dives in the Tech2 range.\"\n        );\n        break;\n      case \"unlimited\":\n        info = TranslationService.getTransl(\n          \"licence-unlimited-descr\",\n          \"This licence allows every kind of dive.\"\n        );\n        break;\n    }\n    let buttons = [];\n    buttons.push({\n      text: TranslationService.getTransl(\"purchase\", \"Purchase\"),\n      handler: () => {\n        this.purchase(licence);\n      },\n    });\n    buttons.push({\n      text: TranslationService.getTransl(\"ok\", \"OK\"),\n    });\n    let prompt = await alertController.create({\n      header: TranslationService.getTransl(\"licence-info\", \"Licence info\"),\n      message: info,\n      buttons: buttons,\n    });\n    prompt.present();\n  }\n\n  async activateTrial() {\n    const days =\n      this.userRoles.licences.trial.duration > 0\n        ? this.userRoles.licences.trial.duration\n        : 15;\n    let prompt = await alertController.create({\n      header: TranslationService.getTransl(\"activate-trial\", \"Start Trial\"),\n      message: TranslationService.getTransl(\n        \"activate-trail-message\",\n        \"Do you want to start the UNLIMITED trial period of xxx days?\",\n        {\n          xxx: days,\n        }\n      ),\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n          handler: async () => {\n            await CallableFunctionsUdiveService.startUserTrialPeriod();\n          },\n        },\n        {\n          role: \"cancel\",\n          text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n        },\n      ],\n    });\n    prompt.present();\n  }\n\n  async purchase(licence: string) {\n    let url = encodeURI(\n      \"https://www.gue.com/store/software/decoplanner-4?uid=\" +\n        UserService.userProfile.uid +\n        \"&email=\" +\n        UserService.userProfile.email +\n        \"&licence=\" +\n        licence\n    );\n    await Browser.open({\n      url: url,\n    });\n    /*let title =\n      startCase(licence) +\n      \" \" +\n      TranslationService.getTransl(\"licence-purchase\", \"licence purchase\");\n    if (this.allowPurchase) {\n      await SystemService.presentLoading(\"please-wait\");\n      let productId = this.config.purchaseProducts[licence];\n      this.iap\n      .buy(productId)\n      .then( (data) => {\n        this.receipt = data\n        this.userRoles.purchaselicence(licence);\n        this.dataBase.saveDoc(this.userRoles).then(res=>{\n          this.userHasConfigsLicence = this.userRoles.licences.configs || this.userRoles.licences.pro\n          loading.dismiss();\n          let prompt = this.alertCtrl.create({\n            title: title,\n            message: TranslationService.getTransl(\"Thank you for your purchase! Your licence is now active.\"),\n            buttons: [\n              {\n                text: TranslationService.getTransl(\"OK\")\n              }\n            ]\n          });\n          prompt.present();\n        })\n      })\n      .catch( (err) => {\n        loading.dismiss();\n        let prompt = this.alertCtrl.create({\n          title: title,\n          message: TranslationService.getTransl(\"There was a problem in the purchase:\")+\"<br>\"+JSON.stringify(err),\n          buttons: [\n            {\n              text: TranslationService.getTransl(\"OK\")\n            }\n          ]\n        });\n        prompt.present();\n      });\n      SystemService.dismissLoading();\n    } else {\n      let prompt = await alertController.create({\n        header: title,\n        message: TranslationService.getTransl(\n          \"purchase-unavailable\",\n          \"Purchase is not available at the moment. Please try again later!\"\n        ),\n        buttons: [\n          {\n            text: TranslationService.getTransl(\"ok\", \"OK\"),\n          },\n        ],\n      });\n      prompt.present();\n    }*/\n  }\n\n  render() {\n    return this.userRoles && this.userRoles.uid ? (\n      <ion-list>\n        <ion-list-header onClick={() => this.purchase(\"unlimited\")}>\n          <my-transl\n            tag='purchase-dp4'\n            text='Purchase DecoPlanner 4'\n          ></my-transl>\n        </ion-list-header>\n        {Object.keys(this.prices).map((licence) => (\n          <ion-item>\n            <ion-label>\n              <my-transl tag={licence} text={upperFirst(licence)}></my-transl>\n            </ion-label>\n\n            {!this.userRoles.hasLicence(this.prices[licence].licence, false) ? (\n              [\n                <ion-button\n                  slot='end'\n                  fill='clear'\n                  onClick={() => this.showInfo(licence)}\n                >\n                  <ion-icon name='help-circle'></ion-icon>\n                </ion-button>,\n              ]\n            ) : (\n              <ion-button slot='end' fill='clear'>\n                <ion-icon color='secondary' name='checkmark'></ion-icon>\n              </ion-button>\n            )}\n          </ion-item>\n        ))}\n        <ion-item>\n          <my-transl tag='trial-period' text='Trial Period' isLabel />\n\n          {this.userRoles.licences.trial.level ? (\n            <ion-note slot='end'>\n              {\" \"}\n              {this.userRoles.licences.trialDays() > 0 ? (\n                <span>\n                  <my-transl\n                    tag={this.userRoles.licences.trial.level}\n                    text={upperFirst(this.userRoles.licences.trial.level)}\n                  ></my-transl>{\" \"}\n                  - {this.userRoles.licences.trialDays()}{\" \"}\n                  <my-transl tag='days-remaining' text='days remaining' />\n                </span>\n              ) : (\n                <span>\n                  <my-transl\n                    tag={this.userRoles.licences.trial.level}\n                    text={upperFirst(this.userRoles.licences.trial.level)}\n                  ></my-transl>\n                  {\" - \"}\n                  <my-transl tag='expired' text='Expired' />\n                  {\": \" + this.userRoles.licences.trialExpiryDate()}\n                </span>\n              )}\n            </ion-note>\n          ) : (\n            <ion-button\n              slot='end'\n              fill='outline'\n              onClick={() => this.activateTrial()}\n            >\n              <ion-label>\n                <my-transl tag='activate-trial' text='Start Trial'></my-transl>\n              </ion-label>\n            </ion-button>\n          )}\n        </ion-item>\n        <ion-item-divider>Actual limitations</ion-item-divider>\n        <ion-item>\n          <ion-label>\n            <my-transl tag='max-deco-time' text='Max Deco Time'></my-transl>\n          </ion-label>\n          <ion-note slot='end'>\n            <span>\n              {UserService.userRoles.licences.getUserLimitations().maxDecoTime +\n                \" min\"}\n            </span>\n          </ion-note>\n        </ion-item>\n        <ion-item>\n          <ion-label>\n            <my-transl tag='max-depth' text='Max Depth'></my-transl>\n          </ion-label>\n          <ion-note slot='end'>\n            <span>\n              {UserService.userRoles.licences.getUserLimitations().maxDepth +\n                \" \" +\n                DiveToolsService.depthUnit}\n            </span>\n          </ion-note>\n        </ion-item>\n        <ion-item>\n          <ion-label>\n            <my-transl tag='max-he' text='Max He'></my-transl>\n          </ion-label>\n          <ion-note slot='end'>\n            <span>\n              {UserService.userRoles.licences.getUserLimitations().maxHe + \"%\"}\n            </span>\n          </ion-note>\n        </ion-item>\n        <ion-item>\n          <ion-label>\n            <my-transl tag='min-o2' text='Min O2'></my-transl>\n          </ion-label>\n          <ion-note slot='end'>\n            <span>\n              {UserService.userRoles.licences.getUserLimitations().minO2 + \"%\"}\n            </span>\n          </ion-note>\n        </ion-item>\n        <ion-item>\n          <ion-label>\n            <my-transl tag='max-o2' text='Max O2'></my-transl>\n          </ion-label>\n          <ion-note slot='end'>\n            <span>\n              {UserService.userRoles.licences.getUserLimitations().maxO2 + \"%\"}\n            </span>\n          </ion-note>\n        </ion-item>\n        <ion-item>\n          <ion-label>\n            <my-transl tag='max-deco-gases' text='Max Deco Gases'></my-transl>\n          </ion-label>\n          <ion-note slot='end'>\n            <span>\n              {UserService.userRoles.licences.getUserLimitations().maxDecoGases}\n            </span>\n          </ion-note>\n        </ion-item>\n        <ion-item>\n          <ion-label>\n            <my-transl tag='min-deco-o2' text='Min Deco O2'></my-transl>\n          </ion-label>\n          <ion-note slot='end'>\n            <span>\n              {UserService.userRoles.licences.getUserLimitations().minDecoO2 +\n                \"%\"}\n            </span>\n          </ion-note>\n        </ion-item>\n        <ion-item>\n          <ion-label>\n            <my-transl tag='max-deco-o2' text='Max Deco O2'></my-transl>\n          </ion-label>\n          <ion-note slot='end'>\n            <span>\n              {UserService.userRoles.licences.getUserLimitations().maxDecoO2 +\n                \"%\"}\n            </span>\n          </ion-note>\n        </ion-item>\n      </ion-list>\n    ) : undefined;\n  }\n}\n","app-user-tanks {\n  width: 100%;\n  .cards-container {\n    margin: 0;\n    margin-bottom: 1rem; /* Space between the rows */\n  }\n\n  .cards-column {\n    margin-bottom: 1rem !important; /* Add space between rows */\n  }\n\n  .card {\n    display: flex;\n    flex-direction: column;\n    height: 100%; /* Make card take the full height of the container */\n    box-sizing: border-box;\n    cursor: pointer; /* Change cursor to pointer */\n    transition: transform 0.2s ease-in-out; /* Add smooth transition effect */\n  }\n\n  .card:hover {\n    transform: scale(1.02); /* Slight zoom effect on hover */\n  }\n\n  .card-content {\n    flex-grow: 1; /* Make card content grow to fill the available space */\n  }\n\n  .card-margins {\n    margin-bottom: 1rem; /* Ensure there's space inside the cards */\n  }\n\n  .add-card {\n    min-height: 200px; /* Set minimum height to 200px */\n  }\n\n  .add-card-content {\n    display: flex;\n    justify-content: center;\n    align-items: center; /* Center the icon both horizontally and vertically */\n    height: 100%; /* Ensure it fills the entire card */\n    width: 100%; /* Ensure it stretches the entire card width */\n  }\n\n  .add-icon {\n    width: 70%; /* Set icon width to 70% of parent container */\n    height: 70%; /* Set icon height to 70% of parent container */\n  }\n}\n","import { Component, h, State } from \"@stencil/core\";\nimport {\n  UserService,\n  USERSETTINGSCOLLECTION,\n} from \"../../../../../services/common/user\";\nimport { Subscription } from \"rxjs\";\nimport { DatabaseService } from \"../../../../../services/common/database\";\nimport { DiveStandardsService } from \"../../../../../services/udive/planner/dive-standards\";\nimport { cloneDeep, forEach, isEqual } from \"lodash\";\nimport { alertController } from \"@ionic/core\";\nimport { TranslationService } from \"../../../../../services/common/translations\";\nimport { UserSettings } from \"../../../../../interfaces/udive/user/user-settings\";\nimport { RouterService } from \"../../../../../services/common/router\";\nimport { DiveToolsService } from \"../../../../../services/udive/planner/dive-tools\";\nimport { TankModel } from \"../../../../../interfaces/udive/planner/tank-model\";\n\n@Component({\n  tag: \"app-user-tanks\",\n  styleUrl: \"app-user-tanks.scss\",\n})\nexport class AppUserTanks {\n  @State() userTanks: TankModel[] = [];\n  stdTanks: TankModel[] = [];\n  loading: any;\n  userSettings: UserSettings;\n  userSub$: Subscription;\n  hasUserTanks = true;\n\n  componentWillLoad() {\n    this.userSub$ = UserService.userSettings$.subscribe(\n      (userSettings: UserSettings) => {\n        this.userSettings = new UserSettings(userSettings);\n        this.loadData();\n      }\n    );\n  }\n  componentDidLoad() {\n    //check if user is loaded or trigger local user\n    if (!this.userSettings) {\n      UserService.initLocalUser();\n    }\n  }\n\n  async loadData() {\n    if (!this.userSettings) {\n      this.userSettings = new UserSettings(\n        await DatabaseService.getLocalDocument(USERSETTINGSCOLLECTION)\n      );\n    }\n    this.userTanks = this.userSettings.userTanks;\n    this.stdTanks = DiveStandardsService.getStdTanks();\n    if (isEqual(this.userTanks, this.stdTanks)) this.hasUserTanks = false;\n  }\n\n  disconnectedCallback() {\n    this.userSub$.unsubscribe();\n  }\n\n  async viewTank(i) {\n    const openModal = await UserService.checkLicence(\"configs\", true);\n\n    if (openModal) {\n      const tank = cloneDeep(this.userTanks[i]);\n      const confModal = await RouterService.openModal(\n        \"modal-tank-configuration\",\n        {\n          tank: tank,\n        }\n      );\n      confModal.onDidDismiss().then((updatedTank) => {\n        if (updatedTank && updatedTank.data) {\n          const tank = updatedTank.data;\n          this.userTanks[i] = new TankModel(tank);\n          this.save();\n        }\n      });\n    }\n  }\n\n  async removeTank(event, i) {\n    event.stopPropagation();\n    const openModal = await UserService.checkLicence(\"configs\", true);\n    if (openModal) {\n      const confirm = await alertController.create({\n        header: TranslationService.getTransl(\n          \"delete-tank-header\",\n          \"Delete tank?\"\n        ),\n        message: TranslationService.getTransl(\n          \"delete-tank-message\",\n          \"This tank will be deleted! Are you sure?\"\n        ),\n        buttons: [\n          {\n            text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n            role: \"cancel\",\n            handler: () => {},\n          },\n          {\n            text: TranslationService.getTransl(\"ok\", \"OK\"),\n            handler: () => {\n              this.userTanks.splice(i, 1);\n              this.save();\n            },\n          },\n        ],\n      });\n      confirm.present();\n    }\n  }\n\n  async addTank() {\n    const openModal = await UserService.checkLicence(\"configs\", true);\n    if (openModal) {\n      let inputs = [];\n      forEach(this.stdTanks, (conf, key) => {\n        inputs.push({\n          type: \"radio\",\n          label: conf.name + (this.hasUserTanks ? \" (standard)\" : \"\"),\n          value: conf,\n          checked: key == 0 ? true : false,\n        });\n      });\n      if (this.hasUserTanks)\n        forEach(this.userTanks, (conf) => {\n          inputs.push({\n            type: \"radio\",\n            label: conf.name,\n            value: conf,\n            checked: false,\n          });\n        });\n      const alert = await alertController.create({\n        header: TranslationService.getTransl(\n          \"select-standard-tank\",\n          \"Select standard tank\"\n        ),\n        buttons: [\n          {\n            text: TranslationService.getTransl(\"ok\", \"OK\"),\n            handler: async (tank: any) => {\n              let openModal = await UserService.checkLicence(\"configs\", true);\n              if (openModal) {\n                const confModal = await RouterService.openModal(\n                  \"modal-tank-configuration\",\n                  {\n                    tank: tank,\n                  }\n                );\n                confModal.onDidDismiss().then((updatedTank) => {\n                  if (updatedTank && updatedTank.data) {\n                    const tank = updatedTank.data;\n                    this.userTanks.push(new TankModel(tank));\n                    this.save();\n                  }\n                });\n              }\n            },\n          },\n          {\n            text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n            role: \"cancel\",\n            cssClass: \"secondary\",\n          },\n        ],\n        inputs: inputs,\n      });\n      alert.present();\n    }\n  }\n\n  save() {\n    UserService.updateUserTanks(this.userTanks);\n  }\n\n  render() {\n    return (\n      <div class='slider-container'>\n        <div class='slider-scrollable-container'>\n          <ion-grid class='ion-no-padding'>\n            <ion-row class='ion-text-start ion-no-padding cards-container'>\n              {this.userTanks.map((tank, i) => (\n                <ion-col\n                  size-sm='12'\n                  size-md='6'\n                  size-lg='4'\n                  class='ion-no-padding cards-column'\n                >\n                  <ion-card onClick={() => this.viewTank(i)} class='card'>\n                    <div class='card-content'>\n                      <ion-card-header>\n                        <ion-item class='ion-no-padding' lines='none'>\n                          <ion-button\n                            icon-only\n                            slot='end'\n                            color='danger'\n                            fill='clear'\n                            onClick={(ev) => this.removeTank(ev, i)}\n                          >\n                            <ion-icon name='trash-bin-outline'></ion-icon>\n                          </ion-button>\n\n                          <ion-card-title>{tank.name}</ion-card-title>\n                        </ion-item>\n\n                        <ion-card-subtitle>\n                          {TranslationService.getTransl(\"volume\", \"Volume\") +\n                            \" : \" +\n                            tank.volume +\n                            \" lt\" +\n                            (this.userSettings.settings.units != \"Metric\"\n                              ? \" / \" +\n                                DiveToolsService.ltToCuFt(tank.volume) +\n                                \" cuft\"\n                              : \"\")}\n                        </ion-card-subtitle>\n                      </ion-card-header>\n\n                      <ion-card-content>\n                        <ion-grid>\n                          <ion-row>\n                            <ion-col>\n                              {TranslationService.getTransl(\n                                \"no_of_tanks\",\n                                \"Number Of Tanks\"\n                              ) +\n                                \" : \" +\n                                tank.no_of_tanks}\n                            </ion-col>\n                          </ion-row>\n                          <ion-row>\n                            <ion-col>\n                              {TranslationService.getTransl(\n                                \"pressure\",\n                                \"Pressure\"\n                              ) +\n                                \" : \" +\n                                tank.pressure +\n                                \" bar\" +\n                                (this.userSettings.settings.units != \"Metric\"\n                                  ? \" / \" +\n                                    DiveToolsService.barToPsi(tank.pressure) +\n                                    \" psi\"\n                                  : \"\")}\n                            </ion-col>\n                          </ion-row>\n                          {tank.forDeco ? (\n                            <ion-row>\n                              <ion-col>\n                                (\n                                {TranslationService.getTransl(\n                                  \"for-deco\",\n                                  \"For Decompression\"\n                                )}\n                                )\n                              </ion-col>\n                            </ion-row>\n                          ) : undefined}\n                        </ion-grid>\n                      </ion-card-content>\n                    </div>\n                  </ion-card>\n                </ion-col>\n              ))}\n              {/* Add new card button */}\n              <ion-col\n                size-sm='12'\n                size-md='6'\n                size-lg='4'\n                class='ion-no-padding cards-column'\n              >\n                <ion-card class='card add-card' onClick={() => this.addTank()}>\n                  <ion-card-content class='card-content add-card-content'>\n                    <ion-icon\n                      name='add-circle-outline'\n                      class='add-icon'\n                    ></ion-icon>\n                  </ion-card-content>\n                </ion-card>\n              </ion-col>\n            </ion-row>\n          </ion-grid>\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}