{"version":3,"names":["modalDatasheetUpdateCss","ModalDatasheetUpdateStyle0","ModalDatasheetUpdate","this","validDatasheet","titles","tag","text","disabled","undefined","componentWillLoad","userProfileSub$","UserService","userProfile$","subscribe","userProfile","UserProfile","loadDatasheet","datasheetId","res","DatasheetsService","getDatasheet","datasheet","Datasheet","duplicateDatasheet","revision","revisionNo","techNo","getMaxDatasheetTechNo","users","userRoles","uid","validateDatasheet","componentDidLoad","slider","Swiper","speed","spaceBetween","allowTouchMove","autoHeight","productName","setTimeout","Object","keys","properties","forEach","index","selectPropertyNameForIndex","disconnectedCallback","unsubscribe","handleChange","ev","detail","name","value","handlePropertyChange","n","v","deleteProperty","splice","isString","familyId","majorFamilyId","classification","categoriesId","checkParameters","updateSlider","check","prop","getDatasheetPropertyNames","typical","higher","lower","selectMajorFamily","selectFamily","selectCategory","addProperty","push","DatasheetProperty","setPropertyTypeSelect","length","selectLocationElement","el","querySelector","customPopoverOptions","header","TranslationService","getTransl","interfaceOptions","selectLocationOptions","Array","from","getElementsByTagName","map","option","removeChild","placeholder","getDatasheetPropertyTypes","type","selectOption","document","createElement","typeId","textContent","typeName","appendChild","selectPropertyType","propertyNames","selectPropertyName","nameValue","position","updateView","update","deleteDatasheet","modalController","dismiss","error","SystemService","presentAlertError","save","property","doc","updateDatasheet","id","oldProduct","cancel","render","h","Host","key","color","Environment","getAppColor","swiper","class","onIonScroll","scrollTop","label","labelAddText","lines","selectFn","selectOptions","getDatasheetMajorFamilies","selectValueId","selectValueText","getDatasheetFamilies","getDatasheetCategories","onFormItemChanged","validator","issuedOnDate","multiLanguage","onUpdateSlider","application","expand","fill","onClick","slot","isLabel","size","prefix","show","shape","producerName","producerReferenceQuality","competitorReferenceQuality","comments","performanceComments","disableSave","onCancelEmit","onSaveEmit"],"sources":["src/components/trasteel/modals/modal-datasheet-update/modal-datasheet-update.scss?tag=modal-datasheet-update","src/components/trasteel/modals/modal-datasheet-update/modal-datasheet-update.tsx"],"sourcesContent":["modal-datasheet-update {\n  #properties-grid {\n    .showbool {\n      --ion-grid-column-padding: 1px;\n    }\n    ion-grid {\n      --ion-grid-column-padding: 2px;\n      border-collapse: collapse;\n      border-style: hidden;\n\n      ion-row:first-child {\n        background-color: var(--ion-color-trasteel);\n        font-weight: bold;\n        color: var(--ion-color-trasteel-contrast);\n      }\n\n      ion-col {\n        border: 1px solid black;\n        border-bottom: 0;\n        border-right: 0;\n      }\n      ion-col:last-child {\n        border-right: 1px solid black;\n      }\n\n      ion-row:last-child {\n        border-bottom: 1px solid black;\n      }\n\n      .remove-background {\n        padding: 0;\n        ion-col,\n        ion-row {\n          border: 0px solid black;\n          background-color: white;\n          padding: 0;\n        }\n      }\n    }\n  }\n}\n","import {Component, h, Host, Prop, State, Element} from \"@stencil/core\";\nimport {modalController} from \"@ionic/core\";\nimport {isString} from \"lodash\";\nimport {Subscription} from \"rxjs\";\nimport Swiper from \"swiper\";\nimport {UserProfile} from \"../../../../interfaces/common/user/user-profile\";\nimport {UserService} from \"../../../../services/common/user\";\nimport {TranslationService} from \"../../../../services/common/translations\";\nimport {\n  Datasheet,\n  DatasheetProperty,\n} from \"../../../../interfaces/trasteel/refractories/datasheets\";\nimport {DatasheetsService} from \"../../../../services/trasteel/refractories/datasheets\";\nimport {Environment} from \"../../../../global/env\";\nimport {SystemService} from \"../../../../services/common/system\";\n\n@Component({\n  tag: \"modal-datasheet-update\",\n  styleUrl: \"modal-datasheet-update.scss\",\n})\nexport class ModalDatasheetUpdate {\n  @Element() el: HTMLElement;\n  @Prop({mutable: true}) datasheetId: string = undefined;\n  @Prop() duplicateDatasheet: {id: string; datasheet: Datasheet} = undefined;\n  @Prop() revision: boolean;\n  @State() datasheet: Datasheet;\n  @State() updateView = true;\n  @State() scrollTop = 0;\n  @State() propertyNames = {};\n\n  validDatasheet = false;\n  titles = [\n    {tag: \"information\", text: \"Information\", disabled: false},\n    {tag: \"properties\", text: \"Properties\", disabled: false},\n    {tag: \"reference\", text: \"Reference\", disabled: false},\n    {tag: \"comments\", text: \"Comments\", disabled: false},\n    {tag: \"files\", text: \"Files\", disabled: true},\n  ];\n  @State() slider: Swiper;\n  userProfile: UserProfile;\n  userProfileSub$: Subscription;\n\n  async componentWillLoad() {\n    this.userProfileSub$ = UserService.userProfile$.subscribe(\n      (userProfile: UserProfile) => {\n        this.userProfile = new UserProfile(userProfile);\n      }\n    );\n    await this.loadDatasheet();\n  }\n\n  async loadDatasheet() {\n    if (this.datasheetId) {\n      const res = await DatasheetsService.getDatasheet(this.datasheetId);\n      this.datasheet = res;\n    } else {\n      const datasheet = new Datasheet(\n        this.duplicateDatasheet ? this.duplicateDatasheet.datasheet : null\n      );\n      if (this.duplicateDatasheet && this.revision) {\n        datasheet.revisionNo = datasheet.revisionNo + 1;\n      } else {\n        datasheet.techNo = DatasheetsService.getMaxDatasheetTechNo();\n        datasheet.revisionNo = 0;\n      }\n      datasheet.users = {\n        [UserService.userRoles.uid]: [\"owner\"],\n      };\n      this.datasheet = datasheet;\n    }\n    this.validateDatasheet();\n  }\n\n  async componentDidLoad() {\n    this.slider = new Swiper(\".slider-edit-datasheet\", {\n      speed: 400,\n      spaceBetween: 100,\n      allowTouchMove: false,\n      autoHeight: true,\n    });\n\n    if (this.datasheet.productName) {\n      //update properties select and validate\n      setTimeout(() => {\n        Object.keys(this.datasheet.properties).forEach((index) => {\n          this.selectPropertyNameForIndex(index);\n        });\n        this.validateDatasheet();\n      });\n    }\n  }\n\n  disconnectedCallback() {\n    this.userProfileSub$.unsubscribe();\n  }\n\n  handleChange(ev) {\n    this.datasheet[ev.detail.name] = ev.detail.value;\n    this.validateDatasheet();\n  }\n\n  handlePropertyChange(index: number, ev) {\n    const n = ev.detail.name;\n    let v = ev.detail.value;\n    /*\n    //Round decimals to the specific item\n    if (n == \"typical\" || n == \"lower\" || n == \"higher\") {\n      let decimals = 2;\n      if (this.datasheet.properties[index].name)\n        decimals = DatasheetsService.getDatasheetPropertyNames(\n          \"id\",\n          this.datasheet.properties[index].name\n        )[0].decimals;\n      console.log(\n        \"decimals\",\n        DatasheetsService.getDatasheetPropertyNames(\n          \"id\",\n          this.datasheet.properties[index].name\n        )[0],\n        v,\n        decimals\n      );\n      v = roundDecimals(v, decimals);\n    }*/\n    this.datasheet.properties[index][n] = v;\n    this.validateDatasheet();\n  }\n\n  deleteProperty(index) {\n    this.datasheet.properties.splice(index, 1);\n    this.validateDatasheet();\n  }\n\n  validateDatasheet() {\n    this.validDatasheet =\n      isString(this.datasheet.productName) &&\n      isString(this.datasheet.familyId) &&\n      isString(this.datasheet.majorFamilyId) &&\n      isString(this.datasheet.techNo) &&\n      this.datasheet.classification &&\n      isString(this.datasheet.categoriesId) &&\n      this.checkParameters();\n    this.updateSlider();\n  }\n\n  checkParameters(): boolean {\n    let check = true;\n    this.datasheet.properties.forEach((prop) => {\n      check =\n        check &&\n        DatasheetsService.getDatasheetPropertyNames(\"id\", prop.name) &&\n        (prop.typical > 0 || prop.higher > 0 || prop.lower >= 0);\n    });\n    return check;\n  }\n\n  selectMajorFamily(ev) {\n    this.datasheet.majorFamilyId = ev.detail.value;\n    this.validateDatasheet();\n  }\n\n  selectFamily(ev) {\n    this.datasheet.familyId = ev.detail.value;\n    this.validateDatasheet();\n  }\n\n  selectCategory(ev) {\n    this.datasheet.categoriesId = ev.detail.value;\n    this.validateDatasheet();\n  }\n\n  addProperty() {\n    this.datasheet.properties.push(new DatasheetProperty());\n    setTimeout(() => {\n      this.setPropertyTypeSelect(this.datasheet.properties.length - 1);\n    }, 100);\n  }\n\n  async setPropertyTypeSelect(index) {\n    const selectLocationElement: HTMLIonSelectElement = this.el.querySelector(\n      \"#selectPropertyType\" + index\n    );\n    if (selectLocationElement) {\n      const customPopoverOptions = {\n        header: TranslationService.getTransl(\"type\", \"Type\"),\n      };\n      selectLocationElement.interfaceOptions = customPopoverOptions;\n      //remove previously defined options\n      const selectLocationOptions = Array.from(\n        selectLocationElement.getElementsByTagName(\"ion-select-option\")\n      );\n      selectLocationOptions.map((option) => {\n        selectLocationElement.removeChild(option);\n      });\n      selectLocationElement.placeholder = TranslationService.getTransl(\n        \"select\",\n        \"Select\"\n      );\n      DatasheetsService.getDatasheetPropertyTypes().map((type) => {\n        const selectOption = document.createElement(\"ion-select-option\");\n        selectOption.value = type.typeId;\n        selectOption.textContent = TranslationService.getTransl(\n          type.typeId,\n          type.typeName\n        );\n        selectLocationElement.appendChild(selectOption);\n      });\n    }\n    this.validateDatasheet();\n  }\n\n  selectPropertyType(index: number, ev) {\n    this.datasheet.properties[index].type = ev.detail.value;\n    this.selectPropertyNameForIndex(index);\n    this.validateDatasheet();\n  }\n\n  selectPropertyNameForIndex(index) {\n    let propertyNames = DatasheetsService\n      .getDatasheetPropertyNames\n      //\"type\",\n      //this.datasheet.properties[index].type\n      ();\n    if (propertyNames.length == 0)\n      propertyNames = DatasheetsService.getDatasheetPropertyNames();\n    this.propertyNames[index] = propertyNames;\n    this.validateDatasheet();\n  }\n\n  selectPropertyName(index: number, ev) {\n    //set id and position\n    this.datasheet.properties[index].name = ev.detail.value;\n    const nameValue = DatasheetsService.getDatasheetPropertyNames(\n      \"id\",\n      ev.detail.value\n    )[0];\n    this.datasheet.properties[index].position = nameValue.position;\n    this.validateDatasheet();\n  }\n\n  updateSlider() {\n    this.updateView = !this.updateView;\n    //wait for view to update and then reset slider height\n    setTimeout(() => {\n      this.slider ? this.slider.update() : undefined;\n    }, 100);\n  }\n\n  async deleteDatasheet() {\n    try {\n      await DatasheetsService.deleteDatasheet(this.datasheetId);\n      modalController.dismiss();\n    } catch (error) {\n      if (error) SystemService.presentAlertError(error);\n    }\n  }\n\n  async save(dismiss = true) {\n    //remove empty datasheet lines\n    const properties = [];\n    this.datasheet.properties.map((property) => {\n      if (property.type && property.name) {\n        properties.push(property);\n      }\n    });\n    this.datasheet.properties = properties;\n    //save doc\n    const doc = await DatasheetsService.updateDatasheet(\n      this.datasheetId,\n      this.datasheet,\n      this.userProfile.uid\n    );\n    if (!this.datasheetId) {\n      this.datasheetId = doc.id;\n      //update old datasheet as old\n      if (this.duplicateDatasheet && this.revision) {\n        this.duplicateDatasheet.datasheet.oldProduct = true;\n        await DatasheetsService.updateDatasheet(\n          this.duplicateDatasheet.id,\n          this.duplicateDatasheet.datasheet,\n          this.userProfile.uid\n        );\n      }\n    }\n    dismiss ? modalController.dismiss() : this.updateSlider();\n  }\n\n  async cancel() {\n    return modalController.dismiss();\n  }\n\n  render() {\n    return (\n      <Host>\n        <app-header-segment-toolbar\n          color={Environment.getAppColor()}\n          swiper={this.slider}\n          titles={this.titles}\n        ></app-header-segment-toolbar>\n        <ion-content\n          class=\"slides\"\n          onIonScroll={(ev) => (this.scrollTop = ev.detail.scrollTop)}\n        >\n          <swiper-container class=\"slider-edit-datasheet swiper\">\n            <swiper-wrapper class=\"swiper-wrapper\">\n              <swiper-slide class=\"swiper-slide\">\n                <ion-list class=\"ion-no-padding\">\n                  <app-select-search\n                    color=\"trasteel\"\n                    label={{tag: \"principal\", text: \"Principal\"}}\n                    labelAddText=\"*\"\n                    value={\n                      this.datasheet && this.datasheet.majorFamilyId\n                        ? this.datasheet.majorFamilyId\n                        : null\n                    }\n                    lines=\"inset\"\n                    selectFn={(ev) => this.selectMajorFamily(ev)}\n                    selectOptions={DatasheetsService.getDatasheetMajorFamilies()}\n                    selectValueId=\"majorFamilyId\"\n                    selectValueText={[\"majorFamilyName\"]}\n                  ></app-select-search>\n                  <app-select-search\n                    color=\"trasteel\"\n                    label={{tag: \"product\", text: \"Product\"}}\n                    labelAddText=\"*\"\n                    value={\n                      this.datasheet && this.datasheet.familyId\n                        ? this.datasheet.familyId\n                        : null\n                    }\n                    lines=\"inset\"\n                    selectFn={(ev) => this.selectFamily(ev)}\n                    selectOptions={DatasheetsService.getDatasheetFamilies()}\n                    selectValueId=\"familyId\"\n                    selectValueText={[\"familyName\"]}\n                  ></app-select-search>\n                  <app-select-search\n                    color=\"trasteel\"\n                    label={{tag: \"category\", text: \"Category\"}}\n                    labelAddText=\"*\"\n                    value={\n                      this.datasheet && this.datasheet.categoriesId\n                        ? this.datasheet.categoriesId\n                        : null\n                    }\n                    lines=\"inset\"\n                    selectFn={(ev) => this.selectCategory(ev)}\n                    selectOptions={DatasheetsService.getDatasheetCategories()}\n                    selectValueId=\"categoriesId\"\n                    selectValueText={[\"categoriesName\"]}\n                  ></app-select-search>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"tech-no\"\n                    label-text=\"Tech. #\"\n                    value={this.datasheet.techNo}\n                    name=\"techNo\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"revision-no\"\n                    label-text=\"Revision #\"\n                    value={this.datasheet.revisionNo}\n                    name=\"revisionNo\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"old\"\n                    label-text=\"Old\"\n                    value={this.datasheet.oldProduct}\n                    name=\"oldProduct\"\n                    input-type=\"boolean\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[]}\n                  ></app-form-item>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"issued-on-date\"\n                    label-text=\"Issued on Date\"\n                    value={this.datasheet.issuedOnDate}\n                    name=\"issuedOnDate\"\n                    input-type=\"date\"\n                    date-presentation=\"date\"\n                    prefer-wheel={false}\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[]}\n                  ></app-form-item>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"product-name\"\n                    label-text=\"Product Name\"\n                    value={this.datasheet.productName}\n                    name=\"productName\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"classification\"\n                    label-text=\"Classification\"\n                    value={this.datasheet.classification}\n                    name=\"classification\"\n                    input-type=\"text\"\n                    multiLanguage={true}\n                    text-rows=\"4\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    onUpdateSlider={() => this.updateSlider()}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"application\"\n                    label-text=\"Application\"\n                    value={this.datasheet.application}\n                    name=\"application\"\n                    input-type=\"text\"\n                    multiLanguage={true}\n                    text-rows=\"4\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    onUpdateSlider={() => this.updateSlider()}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                </ion-list>\n                {this.datasheetId ? (\n                  <ion-footer class=\"ion-no-border\">\n                    <ion-toolbar>\n                      <ion-button\n                        expand=\"block\"\n                        fill=\"outline\"\n                        color=\"danger\"\n                        onClick={() => this.deleteDatasheet()}\n                      >\n                        <ion-icon slot=\"start\" name=\"trash\"></ion-icon>\n                        <my-transl\n                          tag=\"delete\"\n                          text=\"Delete\"\n                          isLabel\n                        ></my-transl>\n                      </ion-button>\n                    </ion-toolbar>\n                  </ion-footer>\n                ) : undefined}\n              </swiper-slide>\n              <swiper-slide class=\"swiper-slide\">\n                <div id=\"properties-grid\">\n                  <ion-grid>\n                    <ion-row>\n                      <ion-col class=\"centered\">\n                        <small>\n                          {TranslationService.getTransl(\"type\", \"Type\")}\n                        </small>\n                      </ion-col>\n                      <ion-col class=\"centered\">\n                        <small>\n                          {TranslationService.getTransl(\"name\", \"Name\")}\n                        </small>\n                      </ion-col>\n                      <ion-col class=\"centered\">\n                        <small>\n                          {TranslationService.getTransl(\"typical\", \"Typical\")}\n                        </small>\n                      </ion-col>\n                      <ion-col class=\"centered\">\n                        <small>\n                          {TranslationService.getTransl(\"prefix\", \"Prefix\")}\n                        </small>\n                      </ion-col>\n                      <ion-col class=\"centered\">\n                        <small>\n                          {TranslationService.getTransl(\"from\", \"From\")}\n                        </small>\n                      </ion-col>\n                      <ion-col class=\"centered\">\n                        <small>\n                          {TranslationService.getTransl(\"to\", \"To\")}\n                        </small>\n                      </ion-col>\n                      <ion-col size=\"1\" class=\"centered\">\n                        <small>\n                          {TranslationService.getTransl(\"show\", \"Show\") +\n                            \"/\" +\n                            TranslationService.getTransl(\"delete\", \"Delete\")}\n                        </small>\n                      </ion-col>\n                    </ion-row>\n                    {this.datasheet.properties.map((property, index) => (\n                      <ion-row>\n                        <ion-col>\n                          <app-select-search\n                            color=\"trasteel\"\n                            value={property.type ? property.type : null}\n                            lines=\"none\"\n                            selectFn={(ev) =>\n                              this.selectPropertyType(index, ev)\n                            }\n                            selectOptions={DatasheetsService.getDatasheetPropertyTypes()}\n                            selectValueId=\"typeId\"\n                            selectValueText={[\"typeName\"]}\n                          ></app-select-search>\n                        </ion-col>\n                        <ion-col>\n                          <app-select-search\n                            color=\"trasteel\"\n                            value={property.name ? property.name : null}\n                            lines=\"none\"\n                            disabled={!this.propertyNames[index]}\n                            selectFn={(ev) =>\n                              this.selectPropertyName(index, ev)\n                            }\n                            selectOptions={this.propertyNames[index]}\n                            selectValueId=\"nameId\"\n                            selectValueText={[\"nameName\"]}\n                          ></app-select-search>\n                        </ion-col>\n                        <ion-col class=\"centered\">\n                          <app-form-item\n                            value={property.typical}\n                            name=\"typical\"\n                            input-type=\"number\"\n                            onFormItemChanged={(ev) =>\n                              this.handlePropertyChange(index, ev)\n                            }\n                          ></app-form-item>\n                        </ion-col>\n                        <ion-col class=\"centered\">\n                          <app-form-item\n                            value={property.prefix}\n                            name=\"prefix\"\n                            input-type=\"text\"\n                            onFormItemChanged={(ev) =>\n                              this.handlePropertyChange(index, ev)\n                            }\n                          ></app-form-item>\n                        </ion-col>\n                        <ion-col class=\"centered\">\n                          <app-form-item\n                            value={property.lower}\n                            name=\"lower\"\n                            input-type=\"number\"\n                            onFormItemChanged={(ev) =>\n                              this.handlePropertyChange(index, ev)\n                            }\n                          ></app-form-item>\n                        </ion-col>\n                        <ion-col class=\"centered\">\n                          <app-form-item\n                            value={property.higher}\n                            name=\"higher\"\n                            input-type=\"number\"\n                            onFormItemChanged={(ev) =>\n                              this.handlePropertyChange(index, ev)\n                            }\n                          ></app-form-item>\n                        </ion-col>\n                        <ion-col size=\"1\" class=\"centered \">\n                          <ion-grid class=\"remove-background\">\n                            <ion-row>\n                              <ion-col class=\"centered\">\n                                <app-form-item\n                                  class=\"ion-no-padding\"\n                                  value={property.show}\n                                  name=\"show\"\n                                  input-type=\"boolean\"\n                                  onFormItemChanged={(ev) =>\n                                    this.handlePropertyChange(index, ev)\n                                  }\n                                ></app-form-item>\n                              </ion-col>\n                              <ion-col class=\"centered\">\n                                <ion-button\n                                  class=\"ion-no-padding\"\n                                  icon-only\n                                  color=\"danger\"\n                                  fill=\"clear\"\n                                  onClick={() => this.deleteProperty(index)}\n                                >\n                                  <ion-icon name=\"trash\"></ion-icon>\n                                </ion-button>\n                              </ion-col>\n                            </ion-row>\n                          </ion-grid>\n                        </ion-col>\n                      </ion-row>\n                    ))}\n                  </ion-grid>\n                </div>\n\n                <io-item>\n                  <ion-button\n                    expand=\"full\"\n                    shape=\"round\"\n                    color=\"trasteel\"\n                    size=\"small\"\n                    onClick={() => this.addProperty()}\n                  >\n                    +\n                  </ion-button>\n                </io-item>\n              </swiper-slide>\n              <swiper-slide class=\"swiper-slide\">\n                <ion-list>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"producer\"\n                    label-text=\"Producer\"\n                    value={this.datasheet.producerName}\n                    name=\"producerName\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[]}\n                  ></app-form-item>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"producer-ref-quality\"\n                    label-text=\"Producer Reference Quality\"\n                    value={this.datasheet.producerReferenceQuality}\n                    name=\"producerReferenceQuality\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[]}\n                  ></app-form-item>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"competitor-ref-quality\"\n                    label-text=\"Competitor Reference Quality\"\n                    value={this.datasheet.competitorReferenceQuality}\n                    name=\"competitorReferenceQuality\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[]}\n                  ></app-form-item>\n                </ion-list>\n              </swiper-slide>\n              <swiper-slide class=\"swiper-slide\">\n                <ion-list>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"comments\"\n                    label-text=\"Comments\"\n                    value={this.datasheet.comments}\n                    name=\"comments\"\n                    input-type=\"text\"\n                    text-rows=\"4\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[]}\n                  ></app-form-item>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"performance-comments\"\n                    label-text=\"Performance Comments\"\n                    value={this.datasheet.performanceComments}\n                    name=\"performanceComments\"\n                    input-type=\"text\"\n                    text-rows=\"4\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[]}\n                  ></app-form-item>\n                </ion-list>\n              </swiper-slide>\n              <swiper-slide class=\"swiper-slide\">\n                FILES - TO BE DONE\n              </swiper-slide>\n            </swiper-wrapper>\n          </swiper-container>\n        </ion-content>\n        <app-modal-footer\n          color={Environment.getAppColor()}\n          disableSave={!this.validDatasheet}\n          onCancelEmit={() => this.cancel()}\n          onSaveEmit={() => this.save()}\n        />\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}