import{R as e,m as t,U as a,x as i,y as s}from"./p-0287979e.js";import{_ as o}from"./p-1af05547.js";import{V as r,T as n,a8 as c,Z as w,U as l,W as d}from"./p-084d415b.js";const v="reviews";class f{async createReview(t,a,i,s,o){const r=await e.openPopover("popover-create-review",{editable:true,collectionId:t,reviewedId:a,itemCollectionId:i,itemId:s});r.onDidDismiss().then((e=>{if(e&&e.data){this.saveReview(e.data,o)}}))}async showReview(t,a=false){const i=await this.getReview(t);const s=await e.openPopover("popover-create-review",{editable:false,review:i,allowAnswer:a},true);s.onDidDismiss().then((e=>{if(e&&e.data){const a=e.data;delete a.reviewdObj;delete a.user;this.updateReview(t,e.data)}}))}async getReview(e){const i=await t.getDocument(v,e);if(i){if(i.userId){i.user=await a.getMapDataUserDetails(i.userId)}if(i.reviewed){i.reviewedObj=await a.getOrganiser("item",{collectionId:i.reviewed.collectionId,id:i.reviewed.id})}}return i}async getReviews(e,t){const i=await this.getReviewSummaryDoc(e,t);let s=[];if(i&&i.totReviews>0){await i.reviews.forEach((async e=>{if(e.userId){e.user=await a.getMapDataUserDetails(e.userId)}if(e.reviewed){e.reviewedObj=await a.getOrganiser("item",{collectionId:e.reviewed.collectionId,id:e.reviewed.id})}s.push(e)}))}return o.orderBy(s,"date","desc")}async getReviewSummaryDoc(e,a){return await t.getDocumentCollection(e,a,v,v)}async queryReviews(e,t){console.log("queryReviews",e,t,i);let o=r(s,v);let f=null;if(e===i){f=n(o,l("userId","==",t),w("date"),c(10))}else{f=n(o,l("reviewed.collectionId","==",e),l("reviewed.id","==",t),w("date"),c(5))}const u=await d(f);const m=[];if(!u.empty){for(let e of u.docs){const t=e.data();t.user=await a.getMapDataUserDetails(t.userId);t.reviewedObj=await a.getOrganiser("item",{collectionId:t.reviewed.collectionId,id:t.reviewed.id});m.push(t)}return m}return null}async saveReview(e,i){const s=await t.addDocument(v,e);if(s&&s.id&&i){!i.reviewIds?i.reviewIds=[]:undefined;i.reviewIds.push({uid:a.userProfile.uid,reviewId:s.id});await t.updateDocument(e.reviewItem.collectionId,e.reviewItem.id,i)}}async updateReview(e,a){await t.updateDocument(v,e,a)}async getReviewSummary(e,a){const i=await t.getDocumentCollection(e,a,v,v);if(i&&i.stars>0){return i}else{return{stars:0,totReviews:0,reviews:[],collectionId:e}}}}const u=new f;export{u as R};