{"version":3,"names":["modalProjectUpdateCss","ModalProjectUpdateStyle0","ModalProjectUpdate","this","listOfSpecialShapes","lastSelectedRowIndex","validProject","titles","tag","text","disabled","undefined","componentWillLoad","userProfileSub$","UserService","userProfile$","subscribe","userProfile","UserProfile","loadProject","preventShiftSelect","checkKeyboardEvent","document","addEventListener","event","key","preventDefault","undo","allocationAreaSegment","selectedRows","length","selectedRow","maxRows","project","projectAreaQuality","courses","deleteAreaCourse","updateSlider","courseFocus","courseIndex","ProjectsService","downloadProjectSettings","projectId","res","getProject","areaShapes","loadShapesForApplication","resetPositions","selectedCustomer","CustomersService","getCustomersDetails","customerId","checkBricksAllocationAreasForProject","error","SystemService","dismissLoading","RouterService","goBack","Project","duplicateProject","projectLocalId","users","userRoles","uid","updateUndoHistory","componentDidLoad","slider","Swiper","speed","spaceBetween","allowTouchMove","autoHeight","projectDescription","setTimeout","validateProject","reorderGroup","querySelector","reorderItems","detail","complete","items","replaceChildren","reordered","area","bricksAllocationAreaId","getBricksAllocationAreas","bricksAllocationAreaName","en","innerHTML","disconnectedCallback","unsubscribe","handleChange","ev","name","value","isString","docsCaption","openSelectCustomer","cust","id","openSelectDataSheet","index","mass","ds","DatasheetsService","getDatasheetsById","datasheetId","datasheet","getDatasheet","projectMass","density","getDensity","openSelectShape","positionIndex","sh","ShapesService","getShapeById","alert","alertController","create","header","message","TranslationService","getTransl","buttons","handler","async","replaceShape","present","setShape","areaIndex","shape","getShape","shapes","shapeId","isSpecial","some","substring","includes","specialShapeVolume","volume","recalculateExistingCourses","selectCustomer","handleCourseRowClick","rowIndex","shiftKey","start","Math","min","end","max","i","push","orderBy","addAllocationArea","ProjectAreaQuality","selectApplicationUnit","applicationId","allocationAreaSegmentChanged","deleteAllocationArea","role","posIndex","deleteAllocationAreaPosition","splice","addAllocationAreaPosition","areaShape","ProjectAreaQualityShape","position","lastPosition","Shape","selectAllocationArea","handleAllocationAreaChange","handleSpecialShapeVolume","toNumber","handleAllocationAreaPositionChange","oldShapeValue","apply","checkPosition","target","newPos","Promise","resolve","otherShape","sameShapeIndex","findIndex","x","sameShape","shapeName","positions","forEach","pos","firstEmptyPosition","current","previous","gapStart","addAreaCourses","course","ProjectCourse","courseNumber","getNextCourseNumber","lastCourse","innerRadius","maxBy","autoFillCourses","popover","popoverController","component","componentProps","AutoFillCourses","bottom","translucent","onDidDismiss","then","data","checkAutofill","calculateAutofill","disableAddPositionButton","disable","shapeTypeId","disableAddCourses","e","duplicateAreaCourse","item","cloneDeep","indexes","slice","presentAlert","reorderCourses","handleAreaCourse","n","v","prev","updateView","handleAreaCourseQuantity","shapeIndex","quantityShapes","quantity","undoHistory","currentUndoStep","addProjectMasses","ProjectMass","handleMassPositionBlur","handleMassChange","weightPerUnitKg","totalWeightMT","roundDecimals","previousMassItems","selectMassApplicationArea","selectMassQtyUnit","quantityUnit","deleteProjectMass","update","deleteProject","modalController","dismiss","presentAlertError","save","doc","updateProject","cancel","render","h","Host","color","Environment","getAppColor","swiper","segment","class","onIonScroll","scrollTop","updateSummary","button","lines","onClick","fullName","onFormItemChanged","validator","textRows","drawing","setsAmount","drawingDate","finishedDate","appendText","steelAmount","label","selectFn","selectOptions","getApplicationUnits","selectValueId","selectValueText","liquidMetalDensity","guaranteedLife","expand","fill","slot","isLabel","size","trigger","mode","scrollable","onIonChange","map","layout","labelAddText","productName","includeSafety","inputStep","onlyForRepair","comments","showItem","debounce","style","labelTag","labelText","detailText","radius","radius_max","getWeight","shortItem","onFocus","startAngle","endAngle","getShapeName","countTotalQuantity","repairSets","getAreaCourseWeightForShape","getTotalWeightForCourse","onFormItemBlur","interface","getQuantityUnits","unit","quantityUnitId","quantityUnitName","disableSave","onCancelEmit","onSaveEmit"],"sources":["src/components/trasteel/modals/modal-project-update/modal-project-update.scss?tag=modal-project-update","src/components/trasteel/modals/modal-project-update/modal-project-update.tsx"],"sourcesContent":["modal-project-update {\n  .small {\n    font-size: 0.75rem;\n    color: black;\n  }\n\n  .project-grid {\n    --ion-grid-column-padding: 0px;\n  }\n\n  .reduce-padding {\n    position: relative;\n    left: -16px;\n  }\n\n  .reduce-padding-top {\n    position: relative;\n    top: -10px;\n    --ion-item-background: rgba(255, 255, 255, 0);\n  }\n\n  .separator {\n    background-color: var(--ion-color-trasteel-tint);\n    height: 3px;\n    ion-col {\n      height: 0px !important;\n    }\n  }\n\n  .positions-box {\n    margin-top: 10px;\n    padding-top: 5px;\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 10px;\n    border: 1px solid black;\n  }\n\n  #responsive-grid {\n    ion-grid {\n      --ion-grid-padding: 5px;\n      --ion-grid-column-padding: 0px;\n\n      .header {\n        background-color: var(--ion-color-trasteel);\n        font-size: 0.75rem;\n        font-weight: bold;\n        color: var(--ion-color-trasteel-contrast);\n      }\n\n      .courseSelected {\n        background-color: var(--ion-color-trasteel-tint);\n      }\n\n      .emptyCell {\n        background-color: var(--ion-color-trasteel-tint);\n      }\n      .noborder {\n        border: 0px;\n      }\n      ion-col {\n        align-items: center;\n        justify-content: center;\n        text-align: center;\n      }\n      .ext-row {\n        border: 1px solid black;\n      }\n      .ext-col {\n        border-right: 0px solid black;\n      }\n      .inner-row1 {\n        border-bottom: 1px solid black;\n        //small devices\n        .top-border {\n          border-top: 0px solid black;\n        }\n        .top-border1 {\n          border-top: 1px solid black;\n        }\n        //large devices\n        @media screen and (min-width: 992px) {\n          .top-border {\n            border-top: 1px solid black;\n          }\n          .top-border1 {\n            border-top: 0px solid black;\n          }\n        }\n\n        .inner-col2 {\n          border-right: 1px solid black;\n          //large devices\n          @media screen and (min-width: 992px) {\n            border-right: 0px solid black;\n          }\n        }\n      }\n      .inner-row1:last-child {\n        //small devices\n        border-bottom: 1px solid black;\n        //large devices\n        @media screen and (min-width: 992px) {\n          border-bottom: 0px solid black;\n        }\n      }\n      .inner-row1a {\n        //small devices\n        border-top: 0px solid black;\n        .inner-col1 {\n          border-right: 0px solid black;\n        }\n        .inner-col1:first-child {\n          border-right: 1px solid black;\n        }\n        //large devices\n        @media screen and (min-width: 992px) {\n          border-top: 1px solid black;\n          .inner-col1 {\n            border-right: 1px solid black;\n          }\n        }\n        .inner-col1:last-child {\n          border-right: 0px solid black;\n        }\n      }\n      .inner-row2 {\n        border-bottom: 1px solid black;\n        //small devices\n        border-left: 0px solid black;\n        //large devices\n        @media screen and (min-width: 992px) {\n          border-left: 1px solid black;\n        }\n      }\n      .inner-row2:last-child {\n        border-bottom: 0px solid black;\n      }\n      .inner-col {\n        border-right: 1px solid black;\n      }\n\n      .button-no-margin {\n        --padding-top: 0px;\n        --padding-bottom: 0px;\n        --padding-start: 5px;\n        --padding-end: 5px;\n        @media screen and (min-width: 1100px) {\n          --padding-start: 10px;\n          --padding-end: 10px;\n        }\n      }\n    }\n  }\n}\n","import {Component, h, Host, Prop, State, Element} from \"@stencil/core\";\nimport {alertController, modalController, popoverController} from \"@ionic/core\";\nimport {cloneDeep, isString, max, maxBy, orderBy, some, toNumber} from \"lodash\";\nimport {Subscription} from \"rxjs\";\nimport Swiper from \"swiper\";\nimport {UserProfile} from \"../../../../interfaces/common/user/user-profile\";\nimport {UserService} from \"../../../../services/common/user\";\nimport {TranslationService} from \"../../../../services/common/translations\";\nimport {\n  Project,\n  ProjectAreaQuality,\n  ProjectAreaQualityShape,\n  ProjectCourse,\n  ProjectMass,\n  AutoFillCourses,\n} from \"../../../../interfaces/trasteel/refractories/projects\";\nimport {ProjectsService} from \"../../../../services/trasteel/refractories/projects\";\nimport {Environment} from \"../../../../global/env\";\nimport {SystemService} from \"../../../../services/common/system\";\nimport {CustomersService} from \"../../../../services/trasteel/crm/customers\";\nimport {MapDataCustomer} from \"../../../../interfaces/trasteel/customer/customer\";\nimport {DatasheetsService} from \"../../../../services/trasteel/refractories/datasheets\";\nimport {ShapesService} from \"../../../../services/trasteel/refractories/shapes\";\nimport {Shape} from \"../../../../interfaces/trasteel/refractories/shapes\";\nimport {roundDecimals} from \"../../../../helpers/utils\";\nimport {RouterService} from \"../../../../services/common/router\";\n\n@Component({\n  tag: \"modal-project-update\",\n  styleUrl: \"modal-project-update.scss\",\n})\nexport class ModalProjectUpdate {\n  @Element() el: HTMLElement;\n  @Prop({mutable: true}) projectId: string = undefined;\n  @Prop() duplicateProject: Project = undefined;\n  @State() project: Project;\n  @State() updateView = true;\n  @State() scrollTop = 0;\n  @State() allocationAreaSegment: any = \"add\";\n  @State() areaShapes: {areaIndex: number; shapes: Shape[]}[] = [];\n  @State() lastPosition = 1;\n  @State() positions = [];\n  @State() previousMassItems = null;\n  @State() selectedCustomer: MapDataCustomer;\n  @State() selectedRows: number[] = [];\n  @State() undoHistory: Project[] = [];\n  @State() currentUndoStep: number = 0;\n  listOfSpecialShapes = [\"spout-block\", \"door-block\", \"starter-set\"];\n\n  lastSelectedRowIndex: number = null;\n  validProject = false;\n  titles = [\n    {tag: \"summary\", text: \"Summary\", disabled: false},\n    {tag: \"information\", text: \"Information\", disabled: false},\n    {tag: \"shaped\", text: \"Shaped\", disabled: false},\n    {tag: \"unshaped\", text: \"Unshaped\", disabled: false},\n    {tag: \"files\", text: \"Files\", disabled: true},\n  ];\n  @State() slider: Swiper;\n  userProfile: UserProfile;\n  userProfileSub$: Subscription;\n\n  async componentWillLoad() {\n    this.userProfileSub$ = UserService.userProfile$.subscribe(\n      (userProfile: UserProfile) => {\n        this.userProfile = new UserProfile(userProfile);\n      }\n    );\n    await this.loadProject();\n    this.preventShiftSelect();\n    this.checkKeyboardEvent();\n  }\n\n  checkKeyboardEvent() {\n    document.addEventListener(\"keydown\", (event) => {\n      if (event.key === \"canc\") {\n        //prevent deleting the focused input with canc\n        event.preventDefault();\n      }\n      if (event.key === \"Escape\") {\n        //prevent deleting the focused input with canc\n        event.preventDefault();\n        this.undo();\n      }\n    });\n    document.addEventListener(\"keyup\", (event) => {\n      if (this.allocationAreaSegment >= 0 && this.selectedRows.length > 0) {\n        //area is selected and row is selected\n        const selectedRow = this.selectedRows[0];\n        const maxRows =\n          this.project.projectAreaQuality[this.allocationAreaSegment].courses\n            .length;\n        if (event.key === \"canc\" || event.key === \"Meta\") {\n          event.preventDefault();\n          //delete the selected course\n          this.deleteAreaCourse(\n            this.allocationAreaSegment,\n            this.selectedRows[0]\n          );\n        } else if (event.key === \"ArrowDown\" || event.key === \"Enter\") {\n          event.preventDefault();\n          //select next course\n          this.selectedRows[0] =\n            selectedRow < maxRows - 1 ? selectedRow + 1 : maxRows - 1;\n        } else if (event.key === \"ArrowUp\") {\n          event.preventDefault();\n          //select next course\n          this.selectedRows[0] = selectedRow > 0 ? selectedRow - 1 : 0;\n        }\n        this.updateSlider();\n      }\n    });\n  }\n\n  courseFocus(courseIndex) {\n    this.selectedRows = [courseIndex];\n    this.updateSlider();\n  }\n\n  async loadProject() {\n    await ProjectsService.downloadProjectSettings();\n    if (this.projectId) {\n      try {\n        const res = await ProjectsService.getProject(this.projectId);\n        this.project = res;\n        if (this.project.projectAreaQuality.length > 0) {\n          this.allocationAreaSegment = 0;\n        }\n        this.areaShapes = await ProjectsService.loadShapesForApplication(\n          this.project\n        );\n        this.resetPositions();\n        //select customer\n        this.selectedCustomer = CustomersService.getCustomersDetails(\n          this.project.customerId\n        );\n        //check allocation areas\n        await ProjectsService.checkBricksAllocationAreasForProject(\n          this.project\n        );\n      } catch (error) {\n        SystemService.dismissLoading();\n        RouterService.goBack();\n      }\n    } else {\n      this.project = new Project(this.duplicateProject);\n      if (this.duplicateProject)\n        this.project.projectLocalId = \"NEW-\" + this.project.projectLocalId;\n\n      this.project.users = {\n        [UserService.userRoles.uid]: [\"owner\"],\n      };\n    }\n    this.updateUndoHistory();\n  }\n\n  async componentDidLoad() {\n    this.slider = new Swiper(\".slider-edit-project\", {\n      speed: 400,\n      spaceBetween: 100,\n      allowTouchMove: false,\n      autoHeight: true,\n    });\n    if (this.project.projectDescription) {\n      //update and validate\n      setTimeout(() => {\n        this.validateProject();\n      });\n    }\n    const reorderGroup = document.querySelector(\"ion-reorder-group\");\n    reorderItems(this.project.projectAreaQuality);\n\n    reorderGroup.addEventListener(\"ionItemReorder\", ({detail}) => {\n      // Finish the reorder and position the item in the DOM based on\n      // where the gesture ended. Update the items variable to the\n      // new order of items\n      this.project.projectAreaQuality = detail.complete(\n        this.project.projectAreaQuality\n      );\n      // Reorder the items in the DOM\n      reorderItems(this.project.projectAreaQuality);\n      // After complete is called the items will be in the new order\n      this.validateProject();\n    });\n\n    function reorderItems(items: ProjectAreaQuality[]) {\n      reorderGroup.replaceChildren();\n      let reordered = \"\";\n      for (const area of items) {\n        reordered += `\n        <ion-item>\n          <ion-label>\n            ${\n              area.bricksAllocationAreaId\n                ? ProjectsService.getBricksAllocationAreas(\n                    area.bricksAllocationAreaId\n                  )[0].bricksAllocationAreaName.en\n                : null\n            }\n          </ion-label>\n          <ion-reorder slot=\"end\"></ion-reorder>\n        </ion-item>\n      `;\n      }\n      reorderGroup.innerHTML = reordered;\n    }\n  }\n\n  disconnectedCallback() {\n    this.userProfileSub$.unsubscribe();\n  }\n\n  handleChange(ev) {\n    this.project[ev.detail.name] = ev.detail.value;\n    this.updateUndoHistory();\n    this.validateProject();\n  }\n\n  validateProject() {\n    this.validProject =\n      isString(this.project.projectDescription) &&\n      this.project.customerId != null &&\n      this.project.docsCaption != null &&\n      this.project.projectLocalId != null;\n\n    this.updateSlider();\n  }\n\n  async openSelectCustomer() {\n    const cust = await CustomersService.openSelectCustomer(\n      this.selectedCustomer\n    );\n    if (cust) {\n      this.project.customerId = cust.id;\n      this.selectedCustomer = cust;\n      this.updateUndoHistory();\n    }\n  }\n\n  async openSelectDataSheet(area, index, mass = false) {\n    const ds = await DatasheetsService.openSelectDataSheet(\n      DatasheetsService.getDatasheetsById(area.datasheetId)\n    );\n    if (ds) {\n      const datasheet = await DatasheetsService.getDatasheet(ds.id);\n      if (mass) {\n        this.project.projectMass[index].datasheetId = ds.id;\n        this.project.projectMass[index].density = datasheet.getDensity();\n      } else {\n        this.project.projectAreaQuality[index].datasheetId = ds.id;\n        this.project.projectAreaQuality[index].density = datasheet.getDensity();\n      }\n      this.updateUndoHistory();\n      this.updateSlider();\n    }\n  }\n\n  async openSelectShape(id, index, positionIndex) {\n    const sh = await ShapesService.openSelectShape(\n      ShapesService.getShapeById(id)\n    );\n    if (sh) {\n      if (this.project.projectAreaQuality[index].courses.length > 0) {\n        const alert = await alertController.create({\n          header: \"Change Shape\",\n          message: TranslationService.getTransl(\n            \"recalculate-message\",\n            \"This will re-calculate all exisiting courses! Are you sure?\"\n          ),\n          buttons: [\n            {\n              text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n              handler: async () => {},\n            },\n            {\n              text: TranslationService.getTransl(\"ok\", \"OK\"),\n              handler: async () => {\n                this.replaceShape(sh.id, index, positionIndex);\n              },\n            },\n          ],\n        });\n        alert.present();\n      } else {\n        await this.setShape(sh.id, index, positionIndex);\n        this.updateUndoHistory();\n        this.updateSlider();\n      }\n    }\n  }\n\n  async setShape(id, areaIndex, positionIndex) {\n    const shape = await ShapesService.getShape(id);\n    shape[\"shapeId\"] = id;\n    this.project.projectAreaQuality[areaIndex].shapes[positionIndex].shapeId =\n      id;\n    const isSpecial = some(this.listOfSpecialShapes, (substring) =>\n      id.includes(substring)\n    );\n    let specialShapeVolume = null;\n    if (isSpecial) {\n      specialShapeVolume = shape.volume;\n    }\n    this.project.projectAreaQuality[areaIndex].shapes[\n      positionIndex\n    ].specialShapeVolume = specialShapeVolume;\n    this.areaShapes[areaIndex].shapes[positionIndex] = shape;\n  }\n\n  async replaceShape(id, areaIndex, positionIndex) {\n    //recalculate all courses\n    if (id) {\n      await this.setShape(id, areaIndex, positionIndex);\n      //recalculate when the shape is new\n      ProjectsService.recalculateExistingCourses(\n        this.project,\n        this.areaShapes,\n        areaIndex\n      );\n    }\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  selectCustomer(ev) {\n    this.project.customerId = ev.detail.value;\n    this.validateProject();\n  }\n\n  /* \n  *\n  PROJECTS AREA COURSES \n  *\n  */\n\n  handleCourseRowClick(rowIndex: number, event: MouseEvent) {\n    if (event.shiftKey && this.lastSelectedRowIndex !== null) {\n      // Previene l'azione predefinita del browser, che sarebbe la selezione del testo\n      event.preventDefault();\n      this.selectedRows = [];\n      const start = Math.min(this.lastSelectedRowIndex, rowIndex);\n      const end = Math.max(this.lastSelectedRowIndex, rowIndex);\n      for (let i = start; i <= end; i++) {\n        this.selectedRows.push(i);\n      }\n    } else {\n      this.selectedRows = [rowIndex];\n    }\n    this.lastSelectedRowIndex = rowIndex;\n    this.selectedRows = orderBy([...this.selectedRows], null, \"desc\"); // order in descending for update delete operations\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  addAllocationArea() {\n    this.project.projectAreaQuality.push(new ProjectAreaQuality());\n    this.areaShapes.push({\n      areaIndex: this.project.projectAreaQuality.length - 1,\n      shapes: [],\n    });\n    this.allocationAreaSegment = this.project.projectAreaQuality.length - 1;\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  selectApplicationUnit(ev) {\n    this.project.applicationId = ev.detail.value;\n    this.updateUndoHistory();\n    this.validateProject();\n  }\n\n  allocationAreaSegmentChanged(ev) {\n    if (ev.detail.value !== \"add\") {\n      this.allocationAreaSegment = ev.detail.value;\n    }\n    this.lastSelectedRowIndex = null;\n    this.selectedRows = [];\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  async deleteAllocationArea(index) {\n    const alert = await alertController.create({\n      header: \"Delete Area\",\n      message: \"Are you sure you want to delete this area?\",\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n          role: \"cancel\",\n          handler: async () => {},\n        },\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n          handler: async () => {\n            //remove positions\n            for (\n              let posIndex = 0;\n              posIndex < this.project.projectAreaQuality[index].shapes.length;\n              posIndex++\n            ) {\n              this.deleteAllocationAreaPosition(index, posIndex);\n            }\n            //delete area\n            this.project.projectAreaQuality.splice(index, 1);\n            this.areaShapes.splice(index, 1);\n            this.allocationAreaSegment =\n              this.project.projectAreaQuality.length > 0 ? 0 : \"add\";\n            this.updateUndoHistory();\n          },\n        },\n      ],\n    });\n    alert.present();\n  }\n\n  async addAllocationAreaPosition(index) {\n    const areaShape = new ProjectAreaQualityShape();\n    areaShape.position = this.lastPosition;\n    this.project.projectAreaQuality[index].shapes.push(areaShape);\n    const shape = new Shape();\n    this.areaShapes[index].shapes.push(shape);\n    this.resetPositions();\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  deleteAllocationAreaPosition(index, positionIndex) {\n    //const areaShape =\n    //this.project.projectAreaQuality[index].shapes[positionIndex];\n    //this.removePosition(areaShape.position);\n    this.project.projectAreaQuality[index].shapes.splice(positionIndex, 1);\n    this.resetPositions();\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  selectAllocationArea(index, ev) {\n    this.project.projectAreaQuality[index].bricksAllocationAreaId =\n      ev.detail.value;\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  handleAllocationAreaChange(index, ev) {\n    this.project.projectAreaQuality[index][ev.detail.name] = ev.detail.value;\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  handleSpecialShapeVolume(index, positionIndex, ev) {\n    const value = toNumber(ev.detail.value);\n    this.project.projectAreaQuality[index].shapes[\n      positionIndex\n    ].specialShapeVolume = value;\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  async handleAllocationAreaPositionChange(index, positionIndex, ev) {\n    const value = toNumber(ev.detail.value);\n    const oldShapeValue =\n      this.project.projectAreaQuality[index].shapes[positionIndex];\n    const apply = await this.checkPosition(index, positionIndex, value);\n    switch (apply) {\n      case \"same\":\n        //do nothing\n        break;\n      case \"keep\":\n        this.project.projectAreaQuality[index].shapes[positionIndex] =\n          oldShapeValue;\n        //reset value of app-form-item\n        ev.target[\"forceResetValue\"](oldShapeValue.position);\n        break;\n      case \"new\":\n        //add new\n        this.project.projectAreaQuality[index].shapes[positionIndex].position =\n          value;\n        break;\n      case \"replace\":\n        //replace with position with the same shape\n        this.project.projectAreaQuality[index].shapes[positionIndex].position =\n          value;\n        this.replaceShape(null, index, positionIndex);\n        break;\n      default:\n        //replace with new shape\n        this.project.projectAreaQuality[index].shapes[positionIndex].position =\n          value;\n        this.replaceShape(apply.shapeId, index, positionIndex);\n        break;\n    }\n    this.updateUndoHistory();\n    this.resetPositions();\n    this.updateSlider();\n  }\n\n  //check position\n  checkPosition(areaIndex, positionIndex, newPos): Promise<any> {\n    return new Promise(async (resolve) => {\n      //find shape with same position\n      if (\n        this.project.projectAreaQuality[areaIndex].shapes[positionIndex]\n          .position != newPos\n      ) {\n        //check all positions\n        let otherShape: Shape;\n        for (\n          let areaIndex = 0;\n          areaIndex < this.project.projectAreaQuality.length;\n          areaIndex++\n        ) {\n          const area = this.project.projectAreaQuality[areaIndex];\n          const sameShapeIndex = area.shapes.findIndex(\n            (x) => x.position == newPos\n          );\n          if (sameShapeIndex != -1) {\n            otherShape = this.areaShapes[areaIndex].shapes[sameShapeIndex];\n            break;\n          }\n        }\n        //check if shape is the same\n        let sameShape = false;\n        if (\n          otherShape &&\n          otherShape[\"shapeId\"] ==\n            this.areaShapes[areaIndex].shapes[positionIndex][\"shapeId\"]\n        ) {\n          sameShape = true;\n        }\n        if (sameShape) {\n          //existing position other shape\n          const alert = await alertController.create({\n            header: \"Existing position\",\n            message:\n              \"This position is already present with the same shape.\\n Do you want to replace the position?\",\n            buttons: [\n              {\n                text: TranslationService.getTransl(\"ok\", \"OK\"),\n                handler: async () => {\n                  resolve(\"replace\");\n                },\n              },\n              {\n                text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n                handler: async () => {\n                  resolve(\"keep\");\n                },\n              },\n            ],\n          });\n          alert.present();\n        } else if (otherShape) {\n          //existing position other shape\n          const alert = await alertController.create({\n            header: \"Existing position\",\n            message:\n              \"This position is already present with following shape: \" +\n              otherShape.shapeName +\n              \"\\n Do you want to use/replace with the same shape and recalculate all?\",\n            buttons: [\n              {\n                text: TranslationService.getTransl(\"ok\", \"OK\"),\n                handler: async () => {\n                  resolve(sameShape);\n                },\n              },\n              {\n                text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n                handler: async () => {\n                  resolve(\"keep\");\n                },\n              },\n            ],\n          });\n          alert.present();\n        } else {\n          resolve(\"new\");\n        }\n      } else {\n        resolve(\"same\");\n      }\n    });\n  }\n\n  resetPositions() {\n    this.positions = [];\n    this.project.projectAreaQuality.forEach((area) => {\n      area.shapes.forEach((position) => {\n        const pos = position.position;\n        if (!this.positions.includes(pos)) {\n          this.positions.push(pos);\n        }\n      });\n    });\n    this.project.projectMass.forEach((mass) => {\n      const pos = mass.position;\n      if (!this.positions.includes(pos)) {\n        this.positions.push(pos);\n      }\n    });\n    // Sort the array\n    this.positions = orderBy(this.positions, null, \"asc\");\n    //update last Position\n\n    // Initialize variables to track the empty positions and maximum number\n    let firstEmptyPosition = null;\n    // Iterate through the sorted array to find gaps\n    for (let i = 1; i < this.positions.length; i++) {\n      const current = this.positions[i];\n      const previous = this.positions[i - 1];\n      // Check if there's a gap between previous and current\n      if (current - previous > 1) {\n        const gapStart = previous + 1;\n        // Set the first empty position if not already set\n        if (firstEmptyPosition === null) {\n          firstEmptyPosition = gapStart;\n          break;\n        }\n      }\n    }\n    this.lastPosition = firstEmptyPosition\n      ? firstEmptyPosition\n      : max(this.positions) + 1;\n  }\n\n  addAreaCourses(areaIndex) {\n    const course = new ProjectCourse();\n    course.courseNumber = this.getNextCourseNumber(areaIndex);\n    const lastCourse =\n      this.project.projectAreaQuality[areaIndex].courses[\n        this.project.projectAreaQuality[areaIndex].courses.length - 1\n      ];\n    if (lastCourse) course.innerRadius = lastCourse.innerRadius;\n    this.project.projectAreaQuality[areaIndex].courses.push(course);\n    //recalculate new added course\n    ProjectsService.recalculateExistingCourses(\n      this.project,\n      this.areaShapes,\n      areaIndex,\n      this.project.projectAreaQuality[areaIndex].courses.length - 1\n    );\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  getNextCourseNumber(index) {\n    const max = maxBy(\n      this.project.projectAreaQuality[index].courses,\n      \"courseNumber\"\n    );\n    return max ? max.courseNumber + 1 : 1;\n  }\n\n  async autoFillCourses(index) {\n    const popover = await popoverController.create({\n      component: \"popover-project-autofill\",\n      componentProps: {\n        autoFillCourses: this.project.projectAreaQuality[index].autoFillCourses\n          ? this.project.projectAreaQuality[index].autoFillCourses\n          : new AutoFillCourses(),\n        shapes: this.project.projectAreaQuality[index].shapes,\n        bottom:\n          this.project.projectAreaQuality[index].bricksAllocationAreaId ===\n          \"bottom\",\n      },\n      event: null,\n      translucent: true,\n    });\n    popover.onDidDismiss().then(async (ev) => {\n      if (ev && ev.data) {\n        if (this.project.projectAreaQuality[index].courses.length > 0) {\n          this.checkAutofill(index, ev.data);\n        } else {\n          ProjectsService.calculateAutofill(\n            this.project,\n            this.areaShapes,\n            index,\n            ev.data\n          );\n          this.updateUndoHistory();\n          this.updateSlider();\n        }\n      }\n    });\n    popover.present();\n  }\n\n  async checkAutofill(index, data) {\n    const alert = await alertController.create({\n      header: \"Auto Fill\",\n      message: TranslationService.getTransl(\n        \"auto-fill-message\",\n        \"This will remove all exisiting courses. Are you sure?\"\n      ),\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n          handler: async () => {},\n        },\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n          handler: async () => {\n            ProjectsService.calculateAutofill(\n              this.project,\n              this.areaShapes,\n              index,\n              data\n            );\n            this.updateSlider();\n          },\n        },\n      ],\n    });\n    alert.present();\n  }\n\n  disableAddPositionButton(index) {\n    const shapes = this.areaShapes[index].shapes;\n    let disable = false;\n    shapes.forEach((shape) => {\n      if (!shape.shapeName || shape.shapeTypeId == \"su-brick\") disable = true;\n    });\n    return disable;\n  }\n\n  disableAddCourses(area: ProjectAreaQuality) {\n    let disable = false;\n    if (area.shapes.length == 0) {\n      disable = true;\n    } else {\n      area.shapes.forEach((shape) => {\n        disable = disable || shape.shapeId == null;\n      });\n    }\n    return disable;\n  }\n\n  preventShiftSelect() {\n    // Aggiungi un listener per l'evento 'mousedown' sul documento\n    document.addEventListener(\"mousedown\", function (e) {\n      // Controlla se il tasto Shift è premuto durante il click\n      if (e.shiftKey) {\n        // Previene l'azione predefinita del browser, che potrebbe includere la selezione del testo\n        e.preventDefault();\n      }\n    });\n  }\n\n  duplicateAreaCourse(index, courseIndex) {\n    if (!this.selectedRows || this.selectedRows.length == 0) {\n      this.selectedRows = [courseIndex];\n    }\n    const positions = [];\n    this.selectedRows.forEach((courseIndex) => {\n      const item = cloneDeep(\n        this.project.projectAreaQuality[index].courses[courseIndex]\n      );\n      positions.push(item.courseNumber);\n      item.courseNumber = this.getNextCourseNumber(index);\n      this.project.projectAreaQuality[index].courses.push(item);\n    });\n\n    let indexes = \"\";\n    orderBy(positions, null, \"asc\").forEach((x) => {\n      if (x >= 0) indexes = indexes + x + \", \";\n    });\n    indexes = indexes.slice(0, -2);\n    SystemService.presentAlert(\n      \"Duplicate Course(s)\",\n      \"Positions(s) #\" + indexes + \" duplicated\"\n    );\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  deleteAreaCourse(index, courseIndex) {\n    if (!this.selectedRows || this.selectedRows.length == 0) {\n      this.selectedRows = [courseIndex];\n    }\n    const positions = [];\n    this.selectedRows.forEach((courseIndex) => {\n      //delete course\n      positions.push(\n        this.project.projectAreaQuality[index].courses[courseIndex].courseNumber\n      );\n      this.project.projectAreaQuality[index].courses.splice(courseIndex, 1);\n    });\n    let indexes = \"\";\n    orderBy(positions, null, \"asc\").forEach((x) => {\n      if (x >= 0) indexes = indexes + x + \", \";\n    });\n    indexes = indexes.slice(0, -2);\n    SystemService.presentAlert(\n      \"Delete Course(s)\",\n      \"Positions(s) #\" + indexes + \" deleted\"\n    );\n    this.selectedRows = [];\n    this.lastSelectedRowIndex = null;\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  reorderCourses(index) {\n    this.project.projectAreaQuality[index].courses = orderBy(\n      this.project.projectAreaQuality[index].courses,\n      \"courseNumber\",\n      \"asc\"\n    );\n    this.updateSlider();\n  }\n\n  async handleAreaCourse(\n    course: ProjectCourse,\n    ev,\n    areaIndex?: number,\n    courseIndex?: number\n  ) {\n    const n = ev.detail.name;\n    const v = ev.detail.value;\n    //calculate quantities\n    if (n == \"startAngle\" || n == \"endAngle\" || n == \"innerRadius\") {\n      course[n] = v;\n      ProjectsService.recalculateExistingCourses(\n        this.project,\n        this.areaShapes,\n        areaIndex,\n        courseIndex,\n        courseIndex\n      );\n    } else if (n == \"courseNumber\") {\n      //check duplicate\n      if (\n        some(this.project.projectAreaQuality[areaIndex].courses, [\n          \"courseNumber\",\n          v,\n        ])\n      ) {\n        const prev = course[n];\n        const alert = await alertController.create({\n          header: \"Existing course\",\n          message: \"This course is already exisiting!\",\n          buttons: [\n            {\n              text: TranslationService.getTransl(\"ok\", \"OK\"),\n              handler: async () => {\n                ev.target[\"forceResetValue\"](prev);\n              },\n            },\n          ],\n        });\n        alert.present();\n      } else {\n        course[n] = v;\n      }\n    } else {\n      course[n] = v;\n    }\n    this.updateUndoHistory();\n    this.updateView = !this.updateView;\n  }\n\n  handleAreaCourseQuantity(course, shapeId, shapeIndex, ev) {\n    course.quantityShapes[shapeIndex] = {\n      shapeId: shapeId,\n      quantity: ev.detail.value,\n    };\n    this.updateUndoHistory();\n    this.updateView = !this.updateView;\n  }\n\n  updateUndoHistory() {\n    this.undoHistory.push(cloneDeep(this.project));\n    this.currentUndoStep = this.undoHistory.length - 1;\n  }\n\n  undo() {\n    //first undo is the original project\n    if (this.currentUndoStep > 0) {\n      this.undoHistory = this.undoHistory.slice(0, this.currentUndoStep);\n      this.currentUndoStep -= 1;\n    }\n    this.project = this.undoHistory[this.currentUndoStep];\n    this.updateSlider();\n  }\n\n  /* \n  *\n  PROJECT MASSES \n  *\n  */\n\n  async addProjectMasses() {\n    const mass = new ProjectMass();\n    mass.position = this.lastPosition; //await this.updatePostion();\n    this.project.projectMass.push(mass);\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  async handleMassPositionBlur(index, ev) {\n    //remove previous position\n    //this.removePosition(this.project.projectMass[index].position);\n    //let v = await this.updatePostion(ev.detail.value);\n    this.project.projectMass[index].position = toNumber(ev.detail.value);\n    this.resetPositions();\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  handleMassChange(index, ev) {\n    this.project.projectMass[index][ev.detail.name] = ev.detail.value;\n    if (ev.detail.name == \"quantity\") {\n      if (this.project.projectMass[index].quantity > 0) {\n        if (this.project.projectMass[index].weightPerUnitKg > 0) {\n          this.project.projectMass[index].totalWeightMT = roundDecimals(\n            (this.project.projectMass[index].quantity *\n              this.project.projectMass[index].weightPerUnitKg) /\n              1000,\n            1\n          );\n        }\n      } else {\n        this.project.projectMass[index].totalWeightMT = 0;\n        this.project.projectMass[index].quantity = 0;\n      }\n    } else if (ev.detail.name == \"weightPerUnitKg\") {\n      if (this.project.projectMass[index].weightPerUnitKg > 0) {\n        if (this.project.projectMass[index].totalWeightMT > 0) {\n          this.project.projectMass[index].quantity = roundDecimals(\n            (this.project.projectMass[index].totalWeightMT /\n              this.project.projectMass[index].weightPerUnitKg) *\n              1000,\n            1\n          );\n        }\n      } else {\n        this.project.projectMass[index].totalWeightMT = 0;\n        this.project.projectMass[index].quantity = 0;\n      }\n    } else if (ev.detail.name == \"totalWeightMT\") {\n      if (this.project.projectMass[index].totalWeightMT > 0) {\n        if (this.project.projectMass[index].weightPerUnitKg > 0) {\n          this.project.projectMass[index].quantity = roundDecimals(\n            (this.project.projectMass[index].totalWeightMT /\n              this.project.projectMass[index].weightPerUnitKg) *\n              1000,\n            1\n          );\n        }\n      } else {\n        this.project.projectMass[index].quantity = 0;\n        this.project.projectMass[index].weightPerUnitKg = 0;\n      }\n    }\n    this.previousMassItems = ev.detail.name;\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  selectMassApplicationArea(index, ev) {\n    this.project.projectMass[index].bricksAllocationAreaId = ev.detail.value;\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  selectMassQtyUnit(index, ev) {\n    this.project.projectMass[index].quantityUnit = ev.detail.value;\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  deleteProjectMass(index) {\n    //this.removePosition(this.project.projectMass[index].position);\n    this.project.projectMass.splice(index, 1);\n    this.resetPositions();\n    this.updateUndoHistory();\n    this.updateSlider();\n  }\n\n  /* \n  *\n  COMMON \n  *\n  */\n\n  updateSlider() {\n    this.updateView = !this.updateView;\n    //wait for view to update and then reset slider height\n    setTimeout(() => {\n      this.slider ? this.slider.update() : undefined;\n    }, 100);\n  }\n\n  async deleteProject() {\n    try {\n      await ProjectsService.deleteProject(this.projectId);\n      modalController.dismiss();\n    } catch (error) {\n      if (error) SystemService.presentAlertError(error);\n    }\n  }\n\n  async save(dismiss = true) {\n    const doc = await ProjectsService.updateProject(\n      this.projectId,\n      this.project,\n      this.userProfile.uid\n    );\n    if (this.projectId) {\n      return dismiss ? modalController.dismiss(this.project) : true;\n    } else {\n      this.projectId = doc.id;\n      return true;\n    }\n  }\n\n  async cancel() {\n    return modalController.dismiss();\n  }\n\n  render() {\n    return (\n      <Host>\n        <app-header-segment-toolbar\n          color={Environment.getAppColor()}\n          swiper={this.slider}\n          titles={this.titles}\n          segment={1}\n        ></app-header-segment-toolbar>\n        <ion-content\n          class=\"slides\"\n          onIonScroll={(ev) => (this.scrollTop = ev.detail.scrollTop)}\n        >\n          <swiper-container class=\"slider-edit-project swiper\">\n            <swiper-wrapper class=\"swiper-wrapper\">\n              {/** SUMMARY */}\n              <swiper-slide class=\"swiper-slide\">\n                <app-page-project-summary\n                  project={this.project}\n                  areaShapes={this.areaShapes}\n                  updateSummary={this.updateView}\n                ></app-page-project-summary>\n              </swiper-slide>\n              {/** INFORMATION */}\n              <swiper-slide class=\"swiper-slide\">\n                <ion-list class=\"ion-no-padding project-grid\">\n                  <ion-item\n                    button\n                    lines=\"inset\"\n                    onClick={() => this.openSelectCustomer()}\n                  >\n                    <ion-label>\n                      <p class=\"small\">\n                        <my-transl tag=\"customer\" text=\"Customer\"></my-transl>*\n                      </p>\n                      <h2>\n                        {this.selectedCustomer\n                          ? this.selectedCustomer.fullName\n                          : null}\n                      </h2>\n                    </ion-label>\n                  </ion-item>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"project-name\"\n                    label-text=\"Project Name\"\n                    value={this.project.projectLocalId}\n                    name=\"projectLocalId\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"technical-docs-caption\"\n                    label-text=\"Technical Docs Caption\"\n                    value={this.project.docsCaption}\n                    name=\"docsCaption\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"project-description\"\n                    label-text=\"Project Description\"\n                    value={this.project.projectDescription}\n                    name=\"projectDescription\"\n                    input-type=\"text\"\n                    textRows={2}\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"drawing-no\"\n                    label-text=\"Drawing No.\"\n                    value={this.project.drawing}\n                    name=\"drawing\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                  ></app-form-item>\n                  <app-form-item\n                    lines=\"inset\"\n                    label-tag=\"sets-no\"\n                    label-text=\"No. of sets\"\n                    value={this.project.setsAmount}\n                    name=\"setsAmount\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                  ></app-form-item>\n                  <ion-item-divider>\n                    <my-transl\n                      tag=\"project-dates\"\n                      text=\"Project Dates\"\n                    ></my-transl>\n                  </ion-item-divider>\n                  <ion-grid>\n                    <ion-row>\n                      <ion-col>\n                        <app-form-item\n                          lines=\"inset\"\n                          label-tag=\"drawing-date\"\n                          label-text=\"Drawing Date\"\n                          value={this.project.drawingDate}\n                          name=\"drawingDate\"\n                          input-type=\"date\"\n                          date-presentation=\"date\"\n                          prefer-wheel={false}\n                          onFormItemChanged={(ev) => this.handleChange(ev)}\n                        ></app-form-item>\n                      </ion-col>\n                      <ion-col>\n                        <app-form-item\n                          lines=\"inset\"\n                          label-tag=\"project-finished-date\"\n                          label-text=\"Project Finished Date\"\n                          value={this.project.finishedDate}\n                          name=\"finishedDate\"\n                          input-type=\"date\"\n                          date-presentation=\"date\"\n                          prefer-wheel={false}\n                          onFormItemChanged={(ev) => this.handleChange(ev)}\n                        ></app-form-item>\n                      </ion-col>\n                    </ion-row>\n                  </ion-grid>\n                  <ion-item-divider>\n                    <my-transl tag=\"other-data\" text=\"Other Data\"></my-transl>\n                  </ion-item-divider>\n                  <ion-grid>\n                    <ion-row>\n                      <ion-col>\n                        <app-form-item\n                          label-tag=\"capacity\"\n                          label-text=\"Capacity\"\n                          appendText=\" (MT)\"\n                          value={this.project.steelAmount}\n                          name=\"steelAmount\"\n                          input-type=\"number\"\n                          onFormItemChanged={(ev) => this.handleChange(ev)}\n                        ></app-form-item>\n                      </ion-col>\n                      <ion-col>\n                        <app-select-search\n                          label={{\n                            tag: \"application-unit\",\n                            text: \"Application Unit\",\n                          }}\n                          value={\n                            this.project && this.project.applicationId\n                              ? this.project.applicationId\n                              : null\n                          }\n                          lines=\"inset\"\n                          selectFn={(ev) => this.selectApplicationUnit(ev)}\n                          selectOptions={ProjectsService.getApplicationUnits()}\n                          selectValueId=\"applicationId\"\n                          selectValueText={[\"applicationName\", \"en\"]}\n                        ></app-select-search>\n                      </ion-col>\n                    </ion-row>\n                  </ion-grid>\n                  <app-form-item\n                    label-tag=\"steel-amount\"\n                    label-text=\"Steel Amount\"\n                    appendText=\" (MT)\"\n                    value={this.project.steelAmount}\n                    name=\"steelAmount\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                  ></app-form-item>\n                  <app-form-item\n                    label-tag=\"steel-density\"\n                    label-text=\"Steel Density\"\n                    appendText=\" (g/cm3)\"\n                    value={this.project.liquidMetalDensity}\n                    name=\"liquidMetalDensity\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                  ></app-form-item>\n                  <app-form-item\n                    label-tag=\"guaranteed-lifetime\"\n                    label-text=\"Guaranteed Lifetime\"\n                    appendText=\" (heats)\"\n                    value={this.project.guaranteedLife}\n                    name=\"guaranteedLife\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                  ></app-form-item>\n                </ion-list>\n                {this.projectId ? (\n                  <ion-footer class=\"ion-no-border\">\n                    <ion-toolbar>\n                      <ion-button\n                        expand=\"block\"\n                        fill=\"outline\"\n                        color=\"danger\"\n                        onClick={() => this.deleteProject()}\n                      >\n                        <ion-icon slot=\"start\" name=\"trash\"></ion-icon>\n                        <my-transl\n                          tag=\"delete\"\n                          text=\"Delete\"\n                          isLabel\n                        ></my-transl>\n                      </ion-button>\n                    </ion-toolbar>\n                  </ion-footer>\n                ) : undefined}\n              </swiper-slide>\n              {/** SHAPED */}\n              <swiper-slide class=\"swiper-slide\">\n                <div>\n                  <ion-toolbar>\n                    <ion-grid class=\"ion-no-padding\">\n                      <ion-row>\n                        <ion-col size=\"1\">\n                          <ion-button\n                            id=\"click-trigger\"\n                            icon-only\n                            fill=\"clear\"\n                            size=\"small\"\n                          >\n                            <ion-icon\n                              name=\"reorder-four\"\n                              color=\"trasteel\"\n                            ></ion-icon>\n                          </ion-button>\n                          <ion-popover\n                            trigger=\"click-trigger\"\n                            trigger-action=\"click\"\n                          >\n                            <ion-content class=\"ion-padding\">\n                              <ion-list>\n                                <ion-reorder-group\n                                  disabled={false}\n                                ></ion-reorder-group>\n                              </ion-list>\n                            </ion-content>\n                          </ion-popover>\n                        </ion-col>\n                        <ion-col>\n                          <ion-segment\n                            mode=\"ios\"\n                            scrollable\n                            onIonChange={(ev) =>\n                              this.allocationAreaSegmentChanged(ev)\n                            }\n                            value={this.allocationAreaSegment}\n                          >\n                            {this.project.projectAreaQuality.map(\n                              (area, index) => (\n                                <ion-segment-button\n                                  value={index}\n                                  layout=\"icon-start\"\n                                >\n                                  <ion-label>\n                                    {area.bricksAllocationAreaId\n                                      ? ProjectsService.getBricksAllocationAreas(\n                                          area.bricksAllocationAreaId\n                                        )[0].bricksAllocationAreaName.en\n                                      : null}\n                                  </ion-label>\n                                </ion-segment-button>\n                              )\n                            )}\n                            <ion-segment-button\n                              value=\"add\"\n                              onClick={() => this.addAllocationArea()}\n                              layout=\"icon-start\"\n                            >\n                              <ion-label>\n                                {\"+ \" +\n                                  TranslationService.getTransl(\n                                    \"add-area\",\n                                    \"Add Area\"\n                                  )}\n                              </ion-label>\n                            </ion-segment-button>\n                          </ion-segment>\n                        </ion-col>\n                      </ion-row>\n                    </ion-grid>\n                  </ion-toolbar>\n                  {this.project.projectAreaQuality.map((area, index) => (\n                    <div>\n                      {this.allocationAreaSegment == index ? (\n                        <div>\n                          <ion-grid>\n                            <ion-row>\n                              <ion-col>\n                                <app-select-search\n                                  class=\"reduce-padding\"\n                                  label={{\n                                    tag: \"bricks-allocation-area\",\n                                    text: \"Bricks Allocation Area\",\n                                  }}\n                                  labelAddText=\"*\"\n                                  value={area.bricksAllocationAreaId}\n                                  lines=\"inset\"\n                                  selectFn={(ev) =>\n                                    this.selectAllocationArea(index, ev)\n                                  }\n                                  selectOptions={ProjectsService.getBricksAllocationAreas()}\n                                  selectValueId=\"bricksAllocationAreaId\"\n                                  selectValueText={[\n                                    \"bricksAllocationAreaName\",\n                                    \"en\",\n                                  ]}\n                                ></app-select-search>\n                              </ion-col>\n                              <ion-col size=\"1\">\n                                <ion-button\n                                  fill=\"clear\"\n                                  color=\"danger\"\n                                  icon-only\n                                  onClick={() =>\n                                    this.deleteAllocationArea(index)\n                                  }\n                                >\n                                  <ion-icon name=\"trash\"></ion-icon>\n                                </ion-button>\n                              </ion-col>\n                            </ion-row>\n                            <ion-row>\n                              <ion-col>\n                                <ion-item\n                                  button\n                                  lines=\"inset\"\n                                  onClick={() =>\n                                    this.openSelectDataSheet(area, index)\n                                  }\n                                  class=\"reduce-padding\"\n                                >\n                                  <ion-label>\n                                    <p class=\"small\">\n                                      <my-transl\n                                        tag=\"datasheet\"\n                                        text=\"Datasheet\"\n                                      ></my-transl>\n                                    </p>\n                                    <h2>\n                                      {area.datasheetId\n                                        ? DatasheetsService.getDatasheetsById(\n                                            area.datasheetId\n                                          ).productName\n                                        : \"\"}\n                                    </h2>\n                                  </ion-label>\n                                </ion-item>\n                              </ion-col>\n                              <ion-col size=\"4\">\n                                <app-form-item\n                                  lines=\"inset\"\n                                  label-tag=\"density\"\n                                  label-text=\"Density\"\n                                  appendText=\" (g/cm3)\"\n                                  value={area.density}\n                                  name=\"density\"\n                                  input-type=\"number\"\n                                  onFormItemChanged={(ev) =>\n                                    this.handleAllocationAreaChange(index, ev)\n                                  }\n                                ></app-form-item>\n                              </ion-col>\n                            </ion-row>\n                            <ion-row>\n                              <ion-col>\n                                <app-form-item\n                                  lines=\"inset\"\n                                  class=\"reduce-padding\"\n                                  label-tag=\"include-safety\"\n                                  label-text=\"Include Safety\"\n                                  appendText={\" %\"}\n                                  value={area.includeSafety}\n                                  name=\"includeSafety\"\n                                  input-type=\"number\"\n                                  inputStep=\"1\"\n                                  onFormItemChanged={(ev) =>\n                                    this.handleAllocationAreaChange(index, ev)\n                                  }\n                                ></app-form-item>\n                              </ion-col>\n                              <ion-col size=\"4\">\n                                <app-form-item\n                                  lines=\"inset\"\n                                  label-tag=\"only-for-repair\"\n                                  label-text=\"Only for repair\"\n                                  value={area.onlyForRepair}\n                                  name=\"onlyForRepair\"\n                                  input-type=\"boolean\"\n                                  onFormItemChanged={(ev) =>\n                                    this.handleAllocationAreaChange(index, ev)\n                                  }\n                                ></app-form-item>\n                              </ion-col>\n                            </ion-row>\n                            <ion-row>\n                              <ion-col>\n                                <app-form-item\n                                  lines=\"inset\"\n                                  class=\"reduce-padding\"\n                                  label-tag=\"comments\"\n                                  label-text=\"Comments\"\n                                  value={area.comments}\n                                  name=\"comments\"\n                                  input-type=\"string\"\n                                  onFormItemChanged={(ev) =>\n                                    this.handleAllocationAreaChange(index, ev)\n                                  }\n                                ></app-form-item>\n                              </ion-col>\n                            </ion-row>\n                            <div class=\"positions-box ion-no-padding project-grid\">\n                              {area.shapes\n                                ? area.shapes.map((shape, positionIndex) => (\n                                    <ion-row>\n                                      <ion-col size=\"3\">\n                                        <app-form-item\n                                          showItem={false}\n                                          label-tag={\n                                            positionIndex == 0\n                                              ? \"position\"\n                                              : null\n                                          }\n                                          label-text={\n                                            positionIndex == 0\n                                              ? \"Position\"\n                                              : null\n                                          }\n                                          value={shape.position}\n                                          name=\"position\"\n                                          input-type=\"number\"\n                                          inputStep=\"1\"\n                                          debounce={300}\n                                          onFormItemChanged={(ev) =>\n                                            this.handleAllocationAreaPositionChange(\n                                              index,\n                                              positionIndex,\n                                              ev\n                                            )\n                                          }\n                                          class=\"reduce-padding-top\"\n                                        ></app-form-item>\n                                      </ion-col>\n                                      <ion-col>\n                                        <ion-item\n                                          button\n                                          lines=\"none\"\n                                          onClick={() =>\n                                            this.openSelectShape(\n                                              area.shapes[positionIndex]\n                                                .shapeId,\n                                              index,\n                                              positionIndex\n                                            )\n                                          }\n                                          class=\"reduce-padding-top\"\n                                        >\n                                          <ion-label>\n                                            {positionIndex == 0 ? (\n                                              <p\n                                                style={{\n                                                  color: \"black\",\n                                                  \"font-size\": \"0.75rem\",\n                                                }}\n                                              >\n                                                <my-transl\n                                                  tag=\"shape\"\n                                                  text=\"Shape\"\n                                                ></my-transl>\n                                              </p>\n                                            ) : null}\n\n                                            <h2>\n                                              {area.shapes[positionIndex]\n                                                .shapeId\n                                                ? ShapesService.getShapeById(\n                                                    area.shapes[positionIndex]\n                                                      .shapeId\n                                                  ).shapeName\n                                                : \"\"}\n                                            </h2>\n                                          </ion-label>\n                                        </ion-item>\n                                      </ion-col>\n                                      <ion-col size=\"2\">\n                                        <app-item-detail\n                                          showItem={false}\n                                          labelTag={\n                                            positionIndex == 0 ? \"radius\" : null\n                                          }\n                                          labelText={\n                                            positionIndex == 0 ? \"Radius\" : null\n                                          }\n                                          appendText={\n                                            positionIndex == 0 ? \" (mm)\" : null\n                                          }\n                                          detailText={\n                                            this.areaShapes &&\n                                            this.areaShapes[index] &&\n                                            this.areaShapes[index].shapes[\n                                              positionIndex\n                                            ].radius > 0\n                                              ? this.areaShapes[index].shapes[\n                                                  positionIndex\n                                                ].radius +\n                                                (this.areaShapes[index].shapes[\n                                                  positionIndex\n                                                ].radius_max > 0\n                                                  ? \"-\" +\n                                                    this.areaShapes[index]\n                                                      .shapes[positionIndex]\n                                                      .radius_max\n                                                  : \"\")\n                                              : \"-\"\n                                          }\n                                        ></app-item-detail>\n                                      </ion-col>\n                                      <ion-col size=\"2\">\n                                        {\n                                          //check if special shape - add possibility to change the value\n                                          this.areaShapes &&\n                                          this.areaShapes[index] &&\n                                          this.areaShapes[index].shapes[\n                                            positionIndex\n                                          ] &&\n                                          this.areaShapes[index].shapes[\n                                            positionIndex\n                                          ][\"shapeId\"] &&\n                                          some(\n                                            this.listOfSpecialShapes,\n                                            (substring) =>\n                                              this.areaShapes[index].shapes[\n                                                positionIndex\n                                              ][\"shapeId\"].includes(substring)\n                                          ) ? (\n                                            <app-form-item\n                                              showItem={false}\n                                              labelTag={\n                                                positionIndex == 0\n                                                  ? \"volume\"\n                                                  : null\n                                              }\n                                              labelText={\n                                                positionIndex == 0\n                                                  ? \"Volume\"\n                                                  : null\n                                              }\n                                              appendText={\n                                                positionIndex == 0\n                                                  ? \" (dm3)\"\n                                                  : null\n                                              }\n                                              value={\n                                                this.project.projectAreaQuality[\n                                                  index\n                                                ].shapes[positionIndex]\n                                                  .specialShapeVolume > 0\n                                                  ? this.project\n                                                      .projectAreaQuality[index]\n                                                      .shapes[positionIndex]\n                                                      .specialShapeVolume\n                                                  : this.areaShapes[index]\n                                                      .shapes[positionIndex]\n                                                      .volume\n                                              }\n                                              input-type=\"number\"\n                                              inputStep=\"1\"\n                                              debounce={300}\n                                              onFormItemChanged={(ev) =>\n                                                this.handleSpecialShapeVolume(\n                                                  index,\n                                                  positionIndex,\n                                                  ev\n                                                )\n                                              }\n                                              class=\"reduce-padding-top\"\n                                            ></app-form-item>\n                                          ) : (\n                                            <app-item-detail\n                                              showItem={false}\n                                              labelTag={\n                                                positionIndex == 0\n                                                  ? \"weight\"\n                                                  : null\n                                              }\n                                              labelText={\n                                                positionIndex == 0\n                                                  ? \"Weight\"\n                                                  : null\n                                              }\n                                              appendText={\n                                                positionIndex == 0\n                                                  ? \" (Kg)\"\n                                                  : null\n                                              }\n                                              detailText={\n                                                this.areaShapes &&\n                                                this.areaShapes[index] &&\n                                                this.areaShapes[index].shapes[\n                                                  positionIndex\n                                                ].getWeight(area.density) > 0\n                                                  ? this.areaShapes[\n                                                      index\n                                                    ].shapes[\n                                                      positionIndex\n                                                    ].getWeight(area.density)\n                                                  : \"-\"\n                                              }\n                                            ></app-item-detail>\n                                          )\n                                        }\n                                      </ion-col>\n                                      {area.courses.length == 0 ? (\n                                        <ion-col size=\"1\">\n                                          <ion-button\n                                            fill=\"clear\"\n                                            color=\"danger\"\n                                            icon-only\n                                            onClick={() =>\n                                              this.deleteAllocationAreaPosition(\n                                                index,\n                                                positionIndex\n                                              )\n                                            }\n                                          >\n                                            <ion-icon name=\"trash\"></ion-icon>\n                                          </ion-button>\n                                        </ion-col>\n                                      ) : undefined}\n                                    </ion-row>\n                                  ))\n                                : undefined}\n                              {area.courses.length == 0 ? (\n                                <ion-row>\n                                  <ion-col>\n                                    <ion-button\n                                      expand=\"block\"\n                                      fill=\"outline\"\n                                      size=\"small\"\n                                      color=\"trasteel\"\n                                      disabled={this.disableAddPositionButton(\n                                        index\n                                      )}\n                                      onClick={() =>\n                                        this.addAllocationAreaPosition(index)\n                                      }\n                                    >\n                                      {\"+ \" +\n                                        TranslationService.getTransl(\n                                          \"add-position\",\n                                          \"Add position\"\n                                        )}\n                                    </ion-button>\n                                  </ion-col>\n                                </ion-row>\n                              ) : undefined}\n                            </div>\n                            <ion-row>\n                              <ion-col>\n                                <ion-button\n                                  expand=\"block\"\n                                  fill=\"outline\"\n                                  size=\"small\"\n                                  color=\"trasteel\"\n                                  disabled={this.disableAddCourses(area)}\n                                  onClick={() => this.autoFillCourses(index)}\n                                >\n                                  {TranslationService.getTransl(\n                                    \"auto-fill\",\n                                    \"Auto Fill\"\n                                  )}\n                                </ion-button>\n                              </ion-col>\n                              <ion-col>\n                                <ion-button\n                                  expand=\"block\"\n                                  fill=\"outline\"\n                                  size=\"small\"\n                                  color=\"trasteel\"\n                                  disabled={this.disableAddCourses(area)}\n                                  onClick={() => {\n                                    ProjectsService.recalculateExistingCourses(\n                                      this.project,\n                                      this.areaShapes,\n                                      index\n                                    );\n                                    this.updateSlider();\n                                  }}\n                                >\n                                  {TranslationService.getTransl(\n                                    \"recalculate\",\n                                    \"Re-Calculate\"\n                                  )}\n                                </ion-button>\n                              </ion-col>\n                            </ion-row>\n                          </ion-grid>\n                          <div id=\"responsive-grid\">\n                            <ion-grid>\n                              <ion-row class=\"header ion-align-items-center ion-justify-content-center ext-row\">\n                                <ion-col size=\"11\" size-lg=\"11\">\n                                  <ion-row>\n                                    <ion-col\n                                      size=\"12\"\n                                      size-lg=\"4\"\n                                      class=\"ext-col\"\n                                    >\n                                      <ion-row class=\"inner-row1\">\n                                        <ion-col\n                                          size=\"3\"\n                                          size-lg=\"3\"\n                                          class=\"inner-col\"\n                                        >\n                                          <ion-button\n                                            expand=\"full\"\n                                            fill=\"clear\"\n                                            size=\"small\"\n                                            color=\"light\"\n                                            class=\"ion-no-padding\"\n                                            onClick={() =>\n                                              this.reorderCourses(index)\n                                            }\n                                          >\n                                            <ion-label color=\"light\">\n                                              {TranslationService.getTransl(\n                                                \"course\",\n                                                \"Course\"\n                                              )}\n                                            </ion-label>\n                                            <ion-icon\n                                              color=\"light\"\n                                              slot=\"end\"\n                                              name=\"swap-vertical-outline\"\n                                            ></ion-icon>\n                                          </ion-button>\n                                        </ion-col>\n                                        <ion-col\n                                          size=\"3\"\n                                          size-lg=\"3\"\n                                          class=\"inner-col\"\n                                        >\n                                          <ion-button\n                                            expand=\"full\"\n                                            fill=\"clear\"\n                                            color=\"light\"\n                                            size=\"small\"\n                                            class=\"ion-no-padding\"\n                                          >\n                                            <ion-label color=\"light\">\n                                              {TranslationService.getTransl(\n                                                \"start\",\n                                                \"Start\"\n                                              ) + \" °\"}\n                                            </ion-label>\n                                          </ion-button>\n                                        </ion-col>\n                                        <ion-col\n                                          size=\"3\"\n                                          size-lg=\"3\"\n                                          class=\"inner-col\"\n                                        >\n                                          <ion-button\n                                            expand=\"full\"\n                                            fill=\"clear\"\n                                            color=\"light\"\n                                            size=\"small\"\n                                            class=\"ion-no-padding\"\n                                          >\n                                            <ion-label color=\"light\">\n                                              {TranslationService.getTransl(\n                                                \"end\",\n                                                \"End\"\n                                              ) + \" °\"}\n                                            </ion-label>\n                                          </ion-button>\n                                        </ion-col>\n                                        <ion-col\n                                          size=\"3\"\n                                          size-lg=\"3\"\n                                          class=\"inner-col\"\n                                        >\n                                          <ion-button\n                                            expand=\"full\"\n                                            fill=\"clear\"\n                                            size=\"small\"\n                                            class=\"ion-no-padding\"\n                                          >\n                                            <ion-label color=\"light\">\n                                              {TranslationService.getTransl(\n                                                \"radius\",\n                                                \"Radius\"\n                                              ) + \" (mm)\"}\n                                            </ion-label>\n                                          </ion-button>\n                                        </ion-col>\n                                      </ion-row>\n                                    </ion-col>\n                                    <ion-col\n                                      size=\"12\"\n                                      size-lg=\"8\"\n                                      class=\"ext-col\"\n                                    >\n                                      <ion-row class=\"inner-row2\">\n                                        <ion-col size=\"2\" class=\"inner-col\">\n                                          {\"Pos. \" +\n                                            area.shapes.map(\n                                              (shape) => shape.position\n                                            )}\n                                        </ion-col>\n                                        <ion-col size=\"2\" class=\"inner-col\">\n                                          {TranslationService.getTransl(\n                                            \"quantity\",\n                                            \"Quantity\"\n                                          )}\n                                        </ion-col>\n                                        <ion-col size=\"2\" class=\"inner-col\">\n                                          {TranslationService.getTransl(\n                                            \"sum\",\n                                            \"Sum\"\n                                          )}\n                                        </ion-col>\n                                        <ion-col size=\"2\" class=\"inner-col\">\n                                          {TranslationService.getTransl(\n                                            \"repair-sets\",\n                                            \"Repair Sets\"\n                                          )}\n                                        </ion-col>\n                                        <ion-col size=\"2\" class=\"inner-col\">\n                                          {TranslationService.getTransl(\n                                            \"weight\",\n                                            \"Weight\"\n                                          ) + \" (Kg)\"}\n                                        </ion-col>\n                                        <ion-col size=\"2\" class=\"inner-col\">\n                                          {TranslationService.getTransl(\n                                            \"row-weight\",\n                                            \"Row Weight\"\n                                          ) + \" (Kg)\"}\n                                        </ion-col>\n                                      </ion-row>\n                                    </ion-col>\n                                  </ion-row>\n                                </ion-col>\n                                <ion-col size=\"1\" size-lg=\"1\">\n                                  {TranslationService.getTransl(\n                                    \"duplicate\",\n                                    \"Duplicate\"\n                                  ) +\n                                    \"/\" +\n                                    TranslationService.getTransl(\n                                      \"delete\",\n                                      \"Delete\"\n                                    )}\n                                </ion-col>\n                              </ion-row>\n                              {/** COURSES ROWS */}\n                              {area.courses.map((course, courseIndex) => [\n                                <ion-row\n                                  class={\n                                    \"ion-align-items-center ion-justify-content-center ext-row\" +\n                                    (this.selectedRows &&\n                                    this.selectedRows.includes(courseIndex)\n                                      ? \" courseSelected\"\n                                      : \"\")\n                                  }\n                                  onClick={(ev) =>\n                                    this.handleCourseRowClick(courseIndex, ev)\n                                  }\n                                >\n                                  <ion-col size=\"11\" size-lg=\"11\">\n                                    <ion-row>\n                                      <ion-col\n                                        size=\"12\"\n                                        size-lg=\"4\"\n                                        class=\"ext-col\"\n                                      >\n                                        <ion-row class=\"inner-row1\">\n                                          <ion-col\n                                            size=\"3\"\n                                            size-lg=\"3\"\n                                            class=\"inner-col\"\n                                          >\n                                            <app-form-item\n                                              shortItem\n                                              value={course.courseNumber}\n                                              name=\"courseNumber\"\n                                              input-type=\"number\"\n                                              inputStep=\"1\"\n                                              debounce={300}\n                                              onFormItemChanged={(ev) =>\n                                                this.handleAreaCourse(\n                                                  course,\n                                                  ev,\n                                                  index\n                                                )\n                                              }\n                                              onFocus={() =>\n                                                this.courseFocus(courseIndex)\n                                              }\n                                            ></app-form-item>\n                                          </ion-col>\n                                          <ion-col\n                                            size=\"3\"\n                                            size-lg=\"3\"\n                                            class=\"inner-col\"\n                                          >\n                                            <app-form-item\n                                              shortItem\n                                              value={course.startAngle}\n                                              name=\"startAngle\"\n                                              input-type=\"number\"\n                                              inputStep=\"1\"\n                                              onFormItemChanged={(ev) =>\n                                                this.handleAreaCourse(\n                                                  course,\n                                                  ev,\n                                                  index,\n                                                  courseIndex\n                                                )\n                                              }\n                                            ></app-form-item>\n                                          </ion-col>\n                                          <ion-col\n                                            size=\"3\"\n                                            size-lg=\"3\"\n                                            class=\"inner-col\"\n                                          >\n                                            <app-form-item\n                                              shortItem\n                                              value={course.endAngle}\n                                              name=\"endAngle\"\n                                              input-type=\"number\"\n                                              inputStep=\"1\"\n                                              onFormItemChanged={(ev) =>\n                                                this.handleAreaCourse(\n                                                  course,\n                                                  ev,\n                                                  index,\n                                                  courseIndex\n                                                )\n                                              }\n                                            ></app-form-item>\n                                          </ion-col>\n                                          <ion-col\n                                            size=\"3\"\n                                            size-lg=\"3\"\n                                            class=\"inner-col\"\n                                          >\n                                            <app-form-item\n                                              shortItem\n                                              value={course.innerRadius}\n                                              name=\"innerRadius\"\n                                              input-type=\"number\"\n                                              inputStep=\"1\"\n                                              onFormItemChanged={(ev) =>\n                                                this.handleAreaCourse(\n                                                  course,\n                                                  ev,\n                                                  index,\n                                                  courseIndex\n                                                )\n                                              }\n                                            ></app-form-item>\n                                          </ion-col>\n                                        </ion-row>\n                                      </ion-col>\n                                      <ion-col\n                                        size=\"12\"\n                                        size-lg=\"8\"\n                                        class=\"ext-col\"\n                                      >\n                                        {area.shapes.map(\n                                          (shape, shapeIndex) => (\n                                            <ion-row class=\"inner-row2\">\n                                              <ion-col\n                                                size=\"2\"\n                                                class=\"inner-col\"\n                                              >\n                                                <app-item-detail\n                                                  showItem={false}\n                                                  detailText={ShapesService.getShapeName(\n                                                    shape.shapeId\n                                                  )}\n                                                ></app-item-detail>\n                                              </ion-col>\n                                              <ion-col\n                                                size=\"2\"\n                                                class=\"inner-col\"\n                                              >\n                                                <app-form-item\n                                                  shortItem\n                                                  style={\n                                                    course.quantityShapes\n                                                      .length > 0 &&\n                                                    course.quantityShapes[\n                                                      shapeIndex\n                                                    ].quantity < 0\n                                                      ? {\n                                                          \"--ion-background-color\":\n                                                            \"red\",\n                                                        }\n                                                      : null\n                                                  }\n                                                  value={\n                                                    course.quantityShapes\n                                                      .length > 0 &&\n                                                    course.quantityShapes[\n                                                      shapeIndex\n                                                    ]\n                                                      ? course.quantityShapes[\n                                                          shapeIndex\n                                                        ].quantity\n                                                      : 0\n                                                  }\n                                                  name=\"quantity\"\n                                                  input-type=\"number\"\n                                                  inputStep=\"1\"\n                                                  onFormItemChanged={(ev) =>\n                                                    this.handleAreaCourseQuantity(\n                                                      course,\n                                                      shape.shapeId,\n                                                      shapeIndex,\n                                                      ev\n                                                    )\n                                                  }\n                                                ></app-form-item>\n                                              </ion-col>\n                                              <ion-col\n                                                size=\"2\"\n                                                class={\n                                                  \"inner-col\" +\n                                                  (shapeIndex > 0\n                                                    ? \" emptyCell\"\n                                                    : \"\")\n                                                }\n                                              >\n                                                <app-item-detail\n                                                  showItem={false}\n                                                  detailText={\n                                                    shapeIndex == 0\n                                                      ? ProjectsService.countTotalQuantity(\n                                                          course\n                                                        )\n                                                      : undefined\n                                                  }\n                                                ></app-item-detail>\n                                              </ion-col>\n                                              <ion-col\n                                                size=\"2\"\n                                                class={\n                                                  \"inner-col\" +\n                                                  (shapeIndex > 0\n                                                    ? \" emptyCell\"\n                                                    : \"\")\n                                                }\n                                              >\n                                                {shapeIndex == 0 ? (\n                                                  <app-form-item\n                                                    shortItem\n                                                    value={course.repairSets}\n                                                    name=\"repairSets\"\n                                                    input-type=\"number\"\n                                                    inputStep=\"1\"\n                                                    disabled={\n                                                      area.onlyForRepair\n                                                    }\n                                                    onFormItemChanged={(ev) =>\n                                                      this.handleAreaCourse(\n                                                        course,\n                                                        ev\n                                                      )\n                                                    }\n                                                  ></app-form-item>\n                                                ) : undefined}\n                                              </ion-col>\n                                              <ion-col\n                                                size=\"2\"\n                                                class=\"inner-col\"\n                                              >\n                                                <app-item-detail\n                                                  showItem={false}\n                                                  detailText={ProjectsService.getAreaCourseWeightForShape(\n                                                    this.project,\n                                                    this.areaShapes,\n                                                    index,\n                                                    courseIndex,\n                                                    shapeIndex\n                                                  )}\n                                                ></app-item-detail>\n                                              </ion-col>\n                                              <ion-col\n                                                size=\"2\"\n                                                class={\n                                                  \"inner-col\" +\n                                                  (shapeIndex > 0\n                                                    ? \" emptyCell\"\n                                                    : \"\")\n                                                }\n                                              >\n                                                <app-item-detail\n                                                  showItem={false}\n                                                  detailText={\n                                                    shapeIndex == 0\n                                                      ? ProjectsService.getTotalWeightForCourse(\n                                                          this.project,\n                                                          this.areaShapes,\n                                                          index,\n                                                          courseIndex\n                                                        )\n                                                      : undefined\n                                                  }\n                                                ></app-item-detail>\n                                              </ion-col>\n                                            </ion-row>\n                                          )\n                                        )}\n                                      </ion-col>\n                                    </ion-row>\n                                  </ion-col>\n                                  <ion-col size=\"1\" size-lg=\"1\">\n                                    <ion-button\n                                      fill=\"clear\"\n                                      color=\"primary\"\n                                      icon-only\n                                      class=\"button-no-margin\"\n                                      onClick={() =>\n                                        this.duplicateAreaCourse(\n                                          index,\n                                          courseIndex\n                                        )\n                                      }\n                                    >\n                                      <ion-icon name=\"copy\"></ion-icon>\n                                    </ion-button>\n                                    <ion-button\n                                      fill=\"clear\"\n                                      color=\"danger\"\n                                      icon-only\n                                      class=\"button-no-margin\"\n                                      onClick={() =>\n                                        this.deleteAreaCourse(\n                                          index,\n                                          courseIndex\n                                        )\n                                      }\n                                    >\n                                      <ion-icon name=\"trash\"></ion-icon>\n                                    </ion-button>\n                                  </ion-col>\n                                </ion-row>,\n                                <ion-row class=\"separator\">\n                                  <ion-col></ion-col>\n                                </ion-row>,\n                              ])}\n                            </ion-grid>\n\n                            <ion-button\n                              expand=\"block\"\n                              fill=\"outline\"\n                              size=\"small\"\n                              color=\"trasteel\"\n                              disabled={this.disableAddCourses(area)}\n                              onClick={() => this.addAreaCourses(index)}\n                            >\n                              {\"+ \" +\n                                TranslationService.getTransl(\n                                  \"add-course\",\n                                  \"Add Course\"\n                                )}\n                            </ion-button>\n                          </div>\n                        </div>\n                      ) : undefined}\n                    </div>\n                  ))}\n                </div>\n              </swiper-slide>\n              {/** UNSHAPED */}\n              <swiper-slide class=\"swiper-slide\">\n                <div>\n                  <ion-grid>\n                    {this.project.projectMass.map((mass, index) => [\n                      <ion-row>\n                        <ion-col>\n                          <app-form-item\n                            label-tag=\"position\"\n                            label-text=\"Position\"\n                            value={mass.position}\n                            name=\"position\"\n                            input-type=\"number\"\n                            onFormItemBlur={(ev) =>\n                              this.handleMassPositionBlur(index, ev)\n                            }\n                          ></app-form-item>\n                        </ion-col>\n                        <ion-col>\n                          <app-select-search\n                            label={{\n                              tag: \"application-area\",\n                              text: \"Application Area\",\n                            }}\n                            labelAddText=\"*\"\n                            value={mass.bricksAllocationAreaId}\n                            lines=\"inset\"\n                            selectFn={(ev) =>\n                              this.selectMassApplicationArea(index, ev)\n                            }\n                            selectOptions={ProjectsService.getBricksAllocationAreas()}\n                            selectValueId=\"bricksAllocationAreaId\"\n                            selectValueText={[\"bricksAllocationAreaName\", \"en\"]}\n                          ></app-select-search>\n                        </ion-col>\n                      </ion-row>,\n                      <ion-row>\n                        <ion-col>\n                          <ion-item\n                            button\n                            lines=\"inset\"\n                            onClick={() =>\n                              this.openSelectDataSheet(mass, index, true)\n                            }\n                          >\n                            <ion-label>\n                              <p class=\"small\">\n                                <my-transl\n                                  tag=\"datasheet\"\n                                  text=\"Datasheet\"\n                                ></my-transl>\n                              </p>\n                              <h2>\n                                {mass.datasheetId\n                                  ? DatasheetsService.getDatasheetsById(\n                                      mass.datasheetId\n                                    ).productName\n                                  : \"\"}\n                              </h2>\n                            </ion-label>\n                          </ion-item>\n                        </ion-col>\n                        <ion-col>\n                          <app-form-item\n                            label-tag=\"density\"\n                            label-text=\"Density\"\n                            appendText=\" (g/cm3)\"\n                            value={mass.density}\n                            name=\"density\"\n                            input-type=\"number\"\n                            onFormItemChanged={(ev) =>\n                              this.handleMassChange(index, ev)\n                            }\n                          ></app-form-item>\n                        </ion-col>\n                      </ion-row>,\n                      <ion-row>\n                        <ion-col>\n                          <ion-label>\n                            <ion-item lines=\"none\">\n                              <ion-label>\n                                <p\n                                  style={{\n                                    \"font-size\": \"0.75rem\",\n                                    color: \"black\",\n                                    \"text-align\": \"left\",\n                                  }}\n                                >\n                                  <my-transl\n                                    tag=\"quantity\"\n                                    text=\"Quantity\"\n                                  ></my-transl>\n                                </p>\n                                <h2\n                                  style={{\n                                    \"text-align\": \"left\",\n                                  }}\n                                >\n                                  {mass.quantity}\n                                </h2>\n                              </ion-label>\n                            </ion-item>\n                          </ion-label>\n                        </ion-col>\n                        <ion-col>\n                          <ion-select\n                            color=\"trasteel\"\n                            id=\"selectMassQtyUnit\"\n                            interface=\"action-sheet\"\n                            label={TranslationService.getTransl(\"unit\", \"Unit\")}\n                            label-placement=\"floating\"\n                            onIonChange={(ev) =>\n                              this.selectMassQtyUnit(index, ev)\n                            }\n                            value={mass.quantityUnit}\n                          >\n                            {ProjectsService.getQuantityUnits().map((unit) => (\n                              <ion-select-option value={unit.quantityUnitId}>\n                                {unit.quantityUnitName.en}\n                              </ion-select-option>\n                            ))}\n                          </ion-select>\n                        </ion-col>\n                        <ion-col size=\"1\">\n                          <p\n                            style={{\n                              \"text-align\": \"center\",\n                              \"font-size\": \"1.3rem\",\n                            }}\n                          >\n                            x\n                          </p>\n                        </ion-col>\n                        <ion-col>\n                          <app-form-item\n                            label-tag=\"weight-per-unit\"\n                            label-text=\"Weight per Unit\"\n                            appendText=\" (Kg)\"\n                            value={mass.weightPerUnitKg}\n                            name=\"weightPerUnitKg\"\n                            input-type=\"number\"\n                            onFormItemChanged={(ev) =>\n                              this.handleMassChange(index, ev)\n                            }\n                          ></app-form-item>\n                        </ion-col>\n                        <ion-col size=\"1\">\n                          <p\n                            style={{\n                              \"text-align\": \"center\",\n                              \"font-size\": \"1.3rem\",\n                            }}\n                          >\n                            =\n                          </p>\n                        </ion-col>\n                        <ion-col>\n                          <app-form-item\n                            label-tag=\"total-weight\"\n                            label-text=\"Total Weight\"\n                            appendText=\" (MT)\"\n                            value={mass.totalWeightMT}\n                            name=\"totalWeightMT\"\n                            input-type=\"number\"\n                            onFormItemChanged={(ev) =>\n                              this.handleMassChange(index, ev)\n                            }\n                          ></app-form-item>\n                        </ion-col>\n                        <ion-col\n                          size=\"1\"\n                          style={{\n                            \"text-align\": \"center\",\n                          }}\n                        >\n                          <ion-button\n                            style={{\n                              \"padding-top\": \"12px\",\n                            }}\n                            fill=\"clear\"\n                            color=\"danger\"\n                            icon-only\n                            onClick={() => this.deleteProjectMass(index)}\n                          >\n                            <ion-icon name=\"trash\"></ion-icon>\n                          </ion-button>\n                        </ion-col>\n                      </ion-row>,\n                      <ion-row class=\"separator\">\n                        <ion-col></ion-col>\n                      </ion-row>,\n                    ])}\n                    <ion-row>\n                      <ion-col>\n                        <ion-button\n                          expand=\"block\"\n                          fill=\"outline\"\n                          size=\"small\"\n                          color=\"trasteel\"\n                          onClick={() => this.addProjectMasses()}\n                        >\n                          {\"+ \" +\n                            TranslationService.getTransl(\n                              \"add-mass\",\n                              \"Add Mass\"\n                            )}\n                        </ion-button>\n                      </ion-col>\n                    </ion-row>\n                  </ion-grid>\n                </div>\n              </swiper-slide>\n              {/** FILES */}\n              <swiper-slide class=\"swiper-slide\">\n                FILES - TO BE DONE\n              </swiper-slide>\n            </swiper-wrapper>\n          </swiper-container>\n        </ion-content>\n        <app-modal-footer\n          color={Environment.getAppColor()}\n          disableSave={!this.validProject}\n          onCancelEmit={() => this.cancel()}\n          onSaveEmit={() => this.save()}\n        />\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}