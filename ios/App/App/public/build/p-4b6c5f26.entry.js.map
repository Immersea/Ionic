{"version":3,"names":["popoverMediaLoadingCss","PopoverMediaLoadingStyle0","PopoverMediaLoading","componentWillLoad","this","media","Media","file","updateMedia","detail","validateMedia","close","popoverController","dismiss","save","validMedia","title","length","size","type","description","updateView","handleChange","ev","name","toNumber","value","updatePublic","public","checked","event","lastModified","render","h","key","color","Environment","getAppColor","id","onFormItemChanged","validator","options","min","max","subtitle","tag","text","slot","onIonChange","class","fileTypes","getTypes","onFileSelected","onCancelEmit","onSaveEmit","disableSave"],"sources":["src/components/common/popovers/popover-media-loading/popover-media-loading.scss?tag=popover-media-loading","src/components/common/popovers/popover-media-loading/popover-media-loading.tsx"],"sourcesContent":["popover-media-loading {\n  ion-note {\n    padding-left: 20px;\n  }\n\n  .drop-area {\n    width: 100%;\n  }\n  app-dragdrop-file {\n    p {\n      color: black !important;\n    }\n    #drop-area {\n      border: 2px dashed black !important;\n      height: 100px !important;\n    }\n  }\n}\n","import {popoverController} from \"@ionic/core\";\nimport {Component, h, Prop, State} from \"@stencil/core\";\nimport {Media} from \"../../../../interfaces/common/media/media\";\nimport {Environment} from \"../../../../global/env\";\nimport {toNumber} from \"lodash\";\n\n@Component({\n  tag: \"popover-media-loading\",\n  styleUrl: \"popover-media-loading.scss\",\n})\nexport class PopoverMediaLoading {\n  @Prop({mutable: true}) media: Media;\n  @Prop({mutable: true}) file: File;\n  @State() validMedia = false;\n  @State() updateView = false;\n\n  componentWillLoad() {\n    if (!this.media) {\n      this.media = new Media();\n    }\n    if (this.file) {\n      this.updateMedia({detail: this.file});\n    } else {\n      this.validateMedia();\n    }\n  }\n\n  async close() {\n    popoverController.dismiss();\n  }\n\n  async save() {\n    popoverController.dismiss({media: this.media, file: this.file});\n  }\n\n  validateMedia() {\n    this.validMedia =\n      this.media.title &&\n      this.media.title.length >= 3 &&\n      this.media.size > 0 &&\n      this.media.type &&\n      this.media.description &&\n      this.media.description.length > 5;\n    this.updateView = !this.updateView;\n  }\n\n  handleChange(ev) {\n    if (ev.detail.name == \"order\") {\n      this.media[ev.detail.name] = toNumber(ev.detail.value);\n    } else {\n      this.media[ev.detail.name] = ev.detail.value;\n    }\n    this.validateMedia();\n  }\n\n  updatePublic(ev) {\n    this.media.public = ev.detail.checked;\n    this.validateMedia();\n  }\n\n  updateMedia(event) {\n    this.file = event.detail;\n    if (!this.media.title) {\n      this.media.title = this.file.name;\n    }\n    this.media.name = this.file.name;\n    this.media.lastModified = this.file.lastModified;\n    this.media.size = this.file.size;\n    this.media.type = this.file.type;\n    this.validateMedia();\n  }\n\n  render() {\n    return [\n      <ion-header>\n        <ion-toolbar color={Environment.getAppColor()}>\n          <ion-title>Media Loader</ion-title>\n        </ion-toolbar>\n      </ion-header>,\n      <ion-content>\n        <ion-list>\n          <ion-note>Id: {this.media.id}</ion-note>\n          <app-form-item\n            label-tag=\"title\"\n            label-text=\"Title\"\n            value={this.media.title}\n            name=\"title\"\n            input-type=\"text\"\n            onFormItemChanged={(ev) => this.handleChange(ev)}\n            validator={[\n              \"required\",\n              {\n                name: \"length\",\n                options: {\n                  min: 3,\n                  max: 20,\n                },\n              },\n            ]}\n          ></app-form-item>\n          <app-form-item\n            label-tag=\"subtitle\"\n            label-text=\"Subtitle\"\n            value={this.media.subtitle}\n            name=\"subtitle\"\n            input-type=\"text\"\n            onFormItemChanged={(ev) => this.handleChange(ev)}\n            validator={[\n              {\n                name: \"length\",\n                options: {\n                  min: 0,\n                  max: 30,\n                },\n              },\n            ]}\n          ></app-form-item>\n          <app-form-item\n            label-tag=\"description\"\n            label-text=\"Description\"\n            value={this.media.description}\n            name=\"description\"\n            input-type=\"text\"\n            onFormItemChanged={(ev) => this.handleChange(ev)}\n            validator={[\n              \"required\",\n              {\n                name: \"length\",\n                options: {\n                  min: 5,\n                  max: 100,\n                },\n              },\n            ]}\n          ></app-form-item>\n          <ion-item>\n            <ion-label>\n              <my-transl tag=\"public\" text=\"Public\" />\n            </ion-label>\n            <ion-toggle\n              slot=\"end\"\n              onIonChange={(ev) => this.updatePublic(ev)}\n              checked={this.media.public}\n            ></ion-toggle>\n          </ion-item>\n        </ion-list>\n        <div class=\"drop-area\">\n          <app-dragdrop-file\n            fileTypes={this.media.getTypes()}\n            file={this.file}\n            onFileSelected={(event) => this.updateMedia(event)}\n          ></app-dragdrop-file>\n        </div>\n      </ion-content>,\n      <app-modal-footer\n        color={Environment.getAppColor()}\n        onCancelEmit={() => this.close()}\n        onSaveEmit={() => this.save()}\n        disableSave={!this.validMedia}\n      />,\n    ];\n  }\n}\n"],"mappings":"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","ignoreList":[]}