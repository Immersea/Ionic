{"file":"modal-user-plans-update.entry.esm.js","mappings":"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","names":["cloneDeep"],"sources":["src/components/trasteel/modals/modal-user-plans-update/modal-user-plans-update.scss?tag=modal-user-plans-update","src/components/trasteel/modals/modal-user-plans-update/modal-user-plans-update.tsx"],"sourcesContent":["modal-user-plans-update {\n  ion-list {\n    width: 100%;\n  }\n}\n","import {Component, h, Host, Prop, State, Element} from \"@stencil/core\";\nimport {alertController, modalController} from \"@ionic/core\";\nimport {Environment} from \"../../../../global/env\";\nimport {\n  PlanOfAction,\n  ProductLines,\n  UserPlan,\n  UserPlans,\n} from \"../../../../interfaces/trasteel/users/user-plans\";\nimport {UserPlansService} from \"../../../../services/trasteel/crm/user-plans\";\nimport {CustomersService} from \"../../../../services/trasteel/crm/customers\";\nimport {MapDataCustomer} from \"../../../../interfaces/trasteel/customer/customer\";\nimport {TranslationService} from \"../../../../services/common/translations\";\nimport {UserService} from \"../../../../services/common/user\";\nimport {cloneDeep} from \"lodash\";\n\n@Component({\n  tag: \"modal-user-plans-update\",\n  styleUrl: \"modal-user-plans-update.scss\",\n})\nexport class ModalUserPlansUpdate {\n  @Element() el: HTMLElement;\n  @Prop() uid: string; //User ID\n  @Prop() userPlans: UserPlans = new UserPlans();\n  @Prop() planIndex: number;\n  @State() userPlan: UserPlan = new UserPlan();\n  @State() validPlan = false;\n  @State() selectedCustomer: MapDataCustomer;\n  @State() updateView = false;\n\n  async componentWillLoad() {\n    //apply uid\n    if (!this.uid) this.uid = UserService.userProfile.uid;\n    if (this.planIndex >= 0) {\n      this.userPlan = cloneDeep(this.userPlans.userPlans[this.planIndex]);\n      this.selectedCustomer = CustomersService.getCustomersDetails(\n        this.userPlan.customerId\n      );\n    } else {\n      this.userPlan = new UserPlan();\n    }\n  }\n\n  async componentDidLoad() {\n    this.validatePlan();\n  }\n\n  async openSelectCustomer() {\n    const cust = await CustomersService.openSelectCustomer(\n      this.selectedCustomer\n    );\n    if (cust) {\n      this.userPlan.customerId = cust.id;\n      this.selectedCustomer = cust;\n    }\n  }\n\n  addAction() {\n    this.userPlan.planOfActions.push(new PlanOfAction());\n    this.validatePlan();\n  }\n\n  handleOtherChange(ev) {\n    this.userPlan.otherName = ev.detail.value;\n    this.validatePlan();\n  }\n\n  handleChange(action, ev) {\n    action[ev.detail.name] = ev.detail.value;\n    action.updated = new Date().toISOString();\n    this.validatePlan();\n  }\n\n  removePlan(index) {\n    this.userPlan.planOfActions.splice(index, 1);\n    this.validatePlan();\n  }\n\n  async deletePlan() {\n    const alert = await alertController.create({\n      header: TranslationService.getTransl(\"delete-plan\", \"Delete Plan\"),\n      message: TranslationService.getTransl(\n        \"delete-plan-message\",\n        \"This plan will be deleted! Are you sure?\"\n      ),\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n          handler: async () => {\n            this.save(true);\n          },\n        },\n        {\n          text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n          handler: async () => {},\n        },\n      ],\n    });\n    alert.present();\n  }\n\n  validatePlan() {\n    this.validPlan = true;\n    this.validPlan =\n      this.validPlan &&\n      (this.userPlan.customerId != null || this.userPlan.otherName != null);\n    let actions = this.userPlan.planOfActions.length > 0;\n    this.userPlan.planOfActions.forEach((action) => {\n      actions = actions && action.dueDate != null;\n      actions = actions && action.updated != null;\n      actions = actions && action.product != null;\n      actions = actions && action.plan != null;\n      actions = actions && action.situation != null;\n    });\n    this.validPlan = this.validPlan && actions;\n    this.updateView = !this.updateView;\n  }\n\n  async save(del = false) {\n    if (!this.userPlans.users) {\n      this.userPlans.users = {};\n      this.userPlans.users[this.uid] = [\"owner\"];\n    }\n    if (this.planIndex >= 0 && this.userPlan.planOfActions.length == 0) {\n      //delete if no plans\n      del = true;\n    }\n    if (this.planIndex >= 0 && !del) {\n      this.userPlans.userPlans[this.planIndex] = this.userPlan;\n    } else if (del) {\n      this.userPlans.userPlans.splice(this.planIndex);\n    } else {\n      this.userPlans.userPlans.push(this.userPlan);\n    }\n    await UserPlansService.updateUserPlan(this.uid, this.userPlans);\n    modalController.dismiss();\n  }\n\n  async cancel() {\n    return modalController.dismiss();\n  }\n\n  render() {\n    return (\n      <Host>\n        <ion-header>\n          <ion-toolbar color=\"trasteel\">\n            <ion-title>\n              <my-transl\n                tag=\"plan-of-actions\"\n                text=\"Plan of Actions\"\n              ></my-transl>\n            </ion-title>\n          </ion-toolbar>\n        </ion-header>\n        <ion-content>\n          <ion-list>\n            {this.userPlan.otherName == null ? (\n              <ion-item\n                button\n                lines=\"inset\"\n                onClick={() => this.openSelectCustomer()}\n              >\n                <ion-label>\n                  <p class=\"small\">\n                    <my-transl tag=\"customer\" text=\"Customer\"></my-transl>*\n                  </p>\n                  <h2>\n                    {this.selectedCustomer\n                      ? this.selectedCustomer.fullName\n                      : null}\n                  </h2>\n                </ion-label>\n              </ion-item>\n            ) : undefined}\n            {this.userPlan.customerId == null &&\n            this.userPlan.otherName == null ? (\n              <ion-item-divider>\n                <ion-label>- or -</ion-label>\n              </ion-item-divider>\n            ) : undefined}\n            {this.userPlan.customerId == null ? (\n              <app-form-item\n                lines=\"inset\"\n                label-tag=\"other\"\n                label-text=\"Other\"\n                value={this.userPlan.otherName}\n                name=\"otherName\"\n                input-type=\"string\"\n                onFormItemChanged={(ev) => this.handleOtherChange(ev)}\n              ></app-form-item>\n            ) : undefined}\n            <ion-button\n              color=\"trasteel\"\n              fill=\"outline\"\n              expand=\"full\"\n              disabled={\n                this.userPlan.customerId == null &&\n                this.userPlan.otherName == null\n              }\n              onClick={() => {\n                this.addAction();\n              }}\n            >\n              <ion-icon name=\"add\" slot=\"start\"></ion-icon>\n              <ion-label>\n                <my-transl tag=\"add-action\" text=\"Add Action\"></my-transl>\n              </ion-label>\n            </ion-button>\n            <ion-grid>\n              {this.userPlan.planOfActions.map((action, index) => [\n                <ion-row>\n                  <ion-col>\n                    <ion-select\n                      color=\"trasteel\"\n                      id=\"application\"\n                      interface=\"action-sheet\"\n                      label={TranslationService.getTransl(\"product\", \"Product\")}\n                      label-placement=\"floating\"\n                      onIonChange={(ev) => {\n                        action.product = ev.detail.value;\n                        this.validatePlan();\n                      }}\n                      value={action.product}\n                    >\n                      {Object.keys(ProductLines).map((line) => (\n                        <ion-select-option value={line}>\n                          {ProductLines[line]}\n                        </ion-select-option>\n                      ))}\n                    </ion-select>\n                  </ion-col>\n                  <ion-col size=\"3\">\n                    <app-form-item\n                      lines=\"inset\"\n                      label-tag=\"due-date\"\n                      label-text=\"Due Date\"\n                      value={action.dueDate}\n                      name=\"dueDate\"\n                      input-type=\"date\"\n                      date-presentation=\"date\"\n                      onFormItemChanged={(ev) => this.handleChange(action, ev)}\n                      validator={[\"required\"]}\n                    ></app-form-item>\n                  </ion-col>\n                  <ion-col size=\"1\">\n                    <ion-button\n                      fill=\"clear\"\n                      icon-only\n                      onClick={() => this.removePlan(index)}\n                    >\n                      <ion-icon name=\"trash\" color=\"danger\"></ion-icon>\n                    </ion-button>\n                  </ion-col>\n                </ion-row>,\n                <ion-row>\n                  <ion-col>\n                    <app-form-item\n                      lines=\"inset\"\n                      label-tag=\"actual-situation\"\n                      label-text=\"Actual Situation\"\n                      value={action.situation}\n                      name=\"situation\"\n                      input-type=\"text\"\n                      textRows={3}\n                      onFormItemChanged={(ev) => this.handleChange(action, ev)}\n                      validator={[\"required\"]}\n                    ></app-form-item>\n                  </ion-col>\n                  <ion-col>\n                    <app-form-item\n                      lines=\"inset\"\n                      label-tag=\"plan\"\n                      label-text=\"Plan\"\n                      value={action.plan}\n                      name=\"plan\"\n                      input-type=\"text\"\n                      textRows={3}\n                      onFormItemChanged={(ev) => this.handleChange(action, ev)}\n                      validator={[\"required\"]}\n                    ></app-form-item>\n                  </ion-col>\n                </ion-row>,\n                <ion-row>\n                  <ion-item-divider></ion-item-divider>\n                </ion-row>,\n              ])}\n            </ion-grid>\n            {this.userPlan.planOfActions.length > 0 ? (\n              <ion-button\n                color=\"danger\"\n                fill=\"outline\"\n                expand=\"full\"\n                onClick={() => {\n                  this.deletePlan();\n                }}\n              >\n                <ion-icon name=\"trash\" slot=\"start\"></ion-icon>\n                <ion-label>\n                  <my-transl tag=\"delete\" text=\"Delete\"></my-transl>\n                </ion-label>\n              </ion-button>\n            ) : undefined}\n          </ion-list>\n        </ion-content>\n        <app-modal-footer\n          color={Environment.getAppColor()}\n          disableSave={!this.validPlan}\n          onCancelEmit={() => this.cancel()}\n          onSaveEmit={() => this.save()}\n        />\n      </Host>\n    );\n  }\n}\n"],"version":3}