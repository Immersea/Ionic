{"file":"app-user-cards.entry.esm.js","mappings":"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","names":[],"sources":["src/components/udive/app/user/app-user-cards/app-user-cards.scss?tag=app-user-cards","src/components/udive/app/user/app-user-cards/app-user-cards.tsx"],"sourcesContent":["app-user-cards {\n  width: 100%;\n  .card-margins {\n    margin: 10px 5px 5px 10px;\n  }\n}\n","import { Component, h, Prop, State } from \"@stencil/core\";\nimport { Subscription } from \"rxjs\";\nimport { UserService } from \"../../../../../services/common/user\";\nimport {\n  UserCards,\n  Card,\n} from \"../../../../../interfaces/udive/user/user-cards\";\nimport { alertController } from \"@ionic/core\";\nimport { TranslationService } from \"../../../../../services/common/translations\";\nimport { SystemService } from \"../../../../../services/common/system\";\nimport { SystemPreference } from \"../../../../../interfaces/common/system/system\";\nimport { RouterService } from \"../../../../../services/common/router\";\nimport { showDate } from \"../../../../../helpers/utils\";\n\n@Component({\n  tag: \"app-user-cards\",\n  styleUrl: \"app-user-cards.scss\",\n})\nexport class AppUserCards {\n  @Prop() updateSlider: any;\n  @State() userCards: UserCards;\n  @State() updateView = true;\n  @State() sysPref: SystemPreference;\n  userCardsSub$: Subscription;\n  async componentWillLoad() {\n    this.userCardsSub$ = UserService.userCards$.subscribe(\n      (userCards: UserCards) => {\n        this.userCards = new UserCards(userCards);\n        this.updateView = !this.updateView;\n        this.updateSlider();\n      }\n    );\n    this.sysPref = await SystemService.getSystemPreferences();\n  }\n\n  componentDidLoad() {\n    //check if user is loaded or trigger local user\n    if (!this.userCards) {\n      UserService.initLocalUser();\n    }\n  }\n\n  disconnectedCallback() {\n    this.userCardsSub$.unsubscribe();\n  }\n\n  async addCard(i?) {\n    const confModal = await RouterService.openModal(\"modal-dive-card\", {\n      card: this.userCards.cards[i] ? this.userCards.cards[i] : new Card(),\n    });\n    confModal.onDidDismiss().then((updatedCard) => {\n      updatedCard = updatedCard.data;\n      if (updatedCard) {\n        if (this.userCards.cards[i]) {\n          this.userCards.cards[i] = new Card(updatedCard);\n        } else {\n          this.userCards.cards.push(new Card(updatedCard));\n        }\n        this.save();\n      }\n    });\n  }\n\n  async removeCard(event, i) {\n    event.stopPropagation();\n    const confirm = await alertController.create({\n      header: TranslationService.getTransl(\n        \"delete-card-header\",\n        \"Delete Dive Card?\"\n      ),\n      message: TranslationService.getTransl(\n        \"delete-card-message\",\n        \"This dive card will be deleted! Are you sure?\"\n      ),\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n          role: \"cancel\",\n          handler: () => {},\n        },\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n          handler: () => {\n            this.userCards.cards.splice(i, 1);\n            this.save();\n          },\n        },\n      ],\n    });\n    confirm.present();\n  }\n\n  save() {\n    UserService.updateUserCards(this.userCards);\n    this.updateSlider();\n  }\n\n  render() {\n    return (\n      <div class='slider-container'>\n        <div class='slider-scrollable-container'>\n          <ion-grid class='ion-no-padding'>\n            <ion-row class='ion-text-start ion-no-padding'>\n              {this.userCards && this.userCards.cards.length > 0\n                ? this.userCards.cards.map((card, i) => (\n                    <ion-col\n                      size-sm='12'\n                      size-md='6'\n                      size-lg='4'\n                      class='ion-no-padding'\n                    >\n                      <ion-card\n                        onClick={() => this.addCard(i)}\n                        class='card-margins'\n                      >\n                        {card.imgFront ? (\n                          <img src={card.imgFront} />\n                        ) : undefined}\n\n                        <ion-card-header>\n                          <ion-card-subtitle>\n                            <ion-item class='ion-no-padding' lines='none'>\n                              <ion-button\n                                icon-only\n                                slot='end'\n                                color='danger'\n                                fill='clear'\n                                onClick={(ev) => this.removeCard(ev, i)}\n                              >\n                                <ion-icon name='trash-bin-outline'></ion-icon>\n                              </ion-button>\n                              <ion-label>\n                                <h2>{card.course.certificationId}</h2>\n                              </ion-label>\n                            </ion-item>\n                            {card.course.agencyName}\n                          </ion-card-subtitle>\n                        </ion-card-header>\n                        <ion-card-content>\n                          {card.number ? <p>#{card.number}</p> : undefined}\n                          {card.instructor ? (\n                            <p>\n                              <my-transl tag='instructor' text='Instructor' />:{\" \"}\n                              {card.instructor}\n                            </p>\n                          ) : undefined}\n                          {card.certified ? (\n                            <p>\n                              <my-transl tag='certified' text='Certified' />:{\" \"}\n                              {showDate(card.certified, \"date\")}\n                            </p>\n                          ) : undefined}\n                          {card.expiry ? (\n                            <p>\n                              <my-transl tag='expiry' text='Expiry' />:{\" \"}\n                              {showDate(card.expiry, \"date\")}\n                            </p>\n                          ) : undefined}\n                          {card.comments ? (\n                            <p>\n                              <my-transl tag='comments' text='Comments' />:{\" \"}\n                              {card.comments}\n                            </p>\n                          ) : undefined}\n                        </ion-card-content>\n                      </ion-card>\n                    </ion-col>\n                  ))\n                : undefined}\n              <ion-col\n                size-sm='12'\n                size-md='6'\n                size-lg='4'\n                class='ion-no-padding'\n              >\n                <ion-card onClick={() => this.addCard()}>\n                  <ion-card-content class='ion-text-center'>\n                    <ion-icon\n                      name='add-circle-outline'\n                      style={{ fontSize: \"100px\" }}\n                    ></ion-icon>\n                  </ion-card-content>\n                </ion-card>\n              </ion-col>\n            </ion-row>\n          </ion-grid>\n        </div>\n      </div>\n    );\n  }\n}\n"],"version":3}