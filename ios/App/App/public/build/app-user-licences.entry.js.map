{"file":"app-user-licences.entry.esm.js","mappings":"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","names":["upperFirst"],"sources":["src/components/udive/app/user/app-user-licences/app-user-licences.scss?tag=app-user-licences","src/components/udive/app/user/app-user-licences/app-user-licences.tsx"],"sourcesContent":["app-user-licences {\n  width: 100%;\n}\n","import {Component, h, State} from \"@stencil/core\";\nimport {Subscription} from \"rxjs\";\nimport {UserService} from \"../../../../../services/common/user\";\nimport {UserRoles} from \"../../../../../interfaces/common/user/user-roles\";\nimport {TranslationService} from \"../../../../../services/common/translations\";\nimport {alertController} from \"@ionic/core\";\nimport {SystemService} from \"../../../../../services/common/system\";\nimport {SystemPreference} from \"../../../../../interfaces/common/system/system\";\nimport {Browser} from \"@capacitor/browser\";\nimport {upperFirst} from \"lodash\";\nimport {CallableFunctionsUdiveService} from \"../../../../../services/udive/callableFunctions\";\n\n@Component({\n  tag: \"app-user-licences\",\n  styleUrl: \"app-user-licences.scss\",\n})\nexport class AppUserLicences {\n  @State() userRoles: UserRoles;\n  userRolesSub$: Subscription;\n  @State() prices = {};\n  allowPurchase = true;\n  @State() sysPref: SystemPreference;\n\n  async componentWillLoad() {\n    this.userRolesSub$ = UserService.userRoles$.subscribe((userRoles) => {\n      if (userRoles && userRoles.uid) {\n        this.userRoles = new UserRoles(userRoles);\n      }\n    });\n    this.sysPref = await SystemService.getSystemPreferences();\n    this.setProductPrices();\n  }\n  componentDidLoad() {\n    //check if user is loaded or trigger local user\n    if (!this.userRoles) {\n      UserService.initLocalUser();\n    }\n  }\n\n  disconnectedCallback() {\n    this.userRolesSub$.unsubscribe();\n  }\n\n  /*\n   * in app purchase\n   */\n\n  setProductPrices() {\n    this.prices = {\n      /*trimix: {\n        licence: \"trimix\",\n        price: this.sysPref.productPrices.trimix,\n      },\n      tables: {\n        licence: \"tables\",\n        price: this.sysPref.productPrices.tables,\n      },\n      rebreather: {\n        licence: \"reb\",\n        price: this.sysPref.productPrices.reb,\n      },\n      configurations: {\n        licence: \"configs\",\n        price: this.sysPref.productPrices.configs,\n      },\n      professional: {\n        licence: \"pro\",\n        price: this.sysPref.productPrices.pro,\n      },\n*/\n      rec1: {\n        licence: \"rec1\",\n        price: this.sysPref.productPrices.rec1,\n      },\n      rec2: {\n        licence: \"rec2\",\n        price: this.sysPref.productPrices.rec2,\n      },\n      rec3: {\n        licence: \"rec3\",\n        price: this.sysPref.productPrices.rec3,\n      },\n      tech1: {\n        licence: \"tech1\",\n        price: this.sysPref.productPrices.tech1,\n      },\n      tech2: {\n        licence: \"tech2\",\n        price: this.sysPref.productPrices.tech2,\n      },\n      unlimited: {\n        licence: \"unlimited\",\n        price: this.sysPref.productPrices.unlimited,\n      },\n    };\n    /*let productIds = new Array().concat(values(this.config.purchaseProducts))\n    this.iap\n    .getProducts(productIds)\n    .then((products) => {\n        //  [{ productId: 'com.yourapp.prod1', 'title': '...', description: '...', price: '...' }, ...]\n      this.products = products;\n      products.forEach(product=>{\n        switch (product.productId) {\n          case this.config.purchaseProducts.trimix:\n            this.prices.trimix = product.price;\n            break;\n          case this.config.purchaseProducts.tables:\n            this.prices.tables = product.price;\n            break;\n          case this.config.purchaseProducts.reb:\n            this.prices.reb = product.price;\n            break;\n          case this.config.purchaseProducts.configs:\n            this.prices.configs = product.price;\n            break;\n          case this.config.purchaseProducts.pro:\n            this.prices.pro = product.price;\n            break;\n        }\n      })\n    })\n    .catch((err) => {\n      console.log(\"products\",err);\n      this.allowPurchase = false;\n    });*/\n  }\n\n  async showInfo(licence: string) {\n    let info;\n    switch (licence) {\n      case \"trimix\":\n        info = TranslationService.getTransl(\n          \"licence-tmx-descr\",\n          \"This licence adds the possibility to select trimix gases in the dive plans.\"\n        );\n        break;\n      case \"tables\":\n        info = TranslationService.getTransl(\n          \"licence-tables-descr\",\n          \"This licence shows dive plan tables with the possibility to vary the bottom time and depth.\"\n        );\n        break;\n      case \"rebreather\":\n        info = TranslationService.getTransl(\n          \"licence-reb-descr\",\n          \"This licence adds the possibility to plan dives with CCR and pSCR rebreathers, including bailout options.\"\n        );\n        break;\n      case \"configurations\":\n        info = TranslationService.getTransl(\n          \"licence-confs-descr\",\n          \"This licence adds the possibility to edit, add and delete dive configurations.\"\n        );\n        break;\n      case \"professional\":\n        info = TranslationService.getTransl(\n          \"licence-pro-descr\",\n          \"This licence opens all the features of the app.\"\n        );\n        break;\n      case \"rec1\":\n        info = TranslationService.getTransl(\n          \"licence-rec1-descr\",\n          \"This licence allows dives in the Rec1 range.\"\n        );\n        break;\n      case \"rec2\":\n        info = TranslationService.getTransl(\n          \"licence-rec2-descr\",\n          \"This licence allows dives in the Rec2 range.\"\n        );\n        break;\n      case \"rec3\":\n        info = TranslationService.getTransl(\n          \"licence-rec3-descr\",\n          \"This licence allows dives in the Rec3 range.\"\n        );\n        break;\n      case \"tech1\":\n        info = TranslationService.getTransl(\n          \"licence-tech1-descr\",\n          \"This licence allows dives in the Tech1 range.\"\n        );\n        break;\n      case \"tech2\":\n        info = TranslationService.getTransl(\n          \"licence-tech2-descr\",\n          \"This licence allows dives in the Tech2 range.\"\n        );\n        break;\n      case \"unlimited\":\n        info = TranslationService.getTransl(\n          \"licence-unlimited-descr\",\n          \"This licence allows every kind of dive.\"\n        );\n        break;\n    }\n    let buttons = [];\n    buttons.push({\n      text: TranslationService.getTransl(\"purchase\", \"Purchase\"),\n      handler: () => {\n        this.purchase(licence);\n      },\n    });\n    buttons.push({\n      text: TranslationService.getTransl(\"ok\", \"OK\"),\n    });\n    let prompt = await alertController.create({\n      header: TranslationService.getTransl(\"licence-info\", \"Licence info\"),\n      message: info,\n      buttons: buttons,\n    });\n    prompt.present();\n  }\n\n  async activateTrial() {\n    const days =\n      this.userRoles.licences.trial.duration > 0\n        ? this.userRoles.licences.trial.duration\n        : 15;\n    let prompt = await alertController.create({\n      header: TranslationService.getTransl(\"activate-trial\", \"Start Trial\"),\n      message: TranslationService.getTransl(\n        \"activate-trail-message\",\n        \"Do you want to start the UNLIMITED trial period of xxx days?\",\n        {\n          xxx: days,\n        }\n      ),\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n          handler: async () => {\n            await CallableFunctionsUdiveService.startUserTrialPeriod();\n          },\n        },\n        {\n          role: \"cancel\",\n          text: TranslationService.getTransl(\"cancel\", \"Cancel\"),\n        },\n      ],\n    });\n    prompt.present();\n  }\n\n  async purchase(licence: string) {\n    let url = encodeURI(\n      \"https://www.gue.com/store/software/decoplanner-4?uid=\" +\n        UserService.userProfile.uid +\n        \"&email=\" +\n        UserService.userProfile.email +\n        \"&licence=\" +\n        licence\n    );\n    await Browser.open({\n      url: url,\n    });\n    /*let title =\n      startCase(licence) +\n      \" \" +\n      TranslationService.getTransl(\"licence-purchase\", \"licence purchase\");\n    if (this.allowPurchase) {\n      await SystemService.presentLoading(\"please-wait\");\n      let productId = this.config.purchaseProducts[licence];\n      this.iap\n      .buy(productId)\n      .then( (data) => {\n        this.receipt = data\n        this.userRoles.purchaselicence(licence);\n        this.dataBase.saveDoc(this.userRoles).then(res=>{\n          this.userHasConfigsLicence = this.userRoles.licences.configs || this.userRoles.licences.pro\n          loading.dismiss();\n          let prompt = this.alertCtrl.create({\n            title: title,\n            message: TranslationService.getTransl(\"Thank you for your purchase! Your licence is now active.\"),\n            buttons: [\n              {\n                text: TranslationService.getTransl(\"OK\")\n              }\n            ]\n          });\n          prompt.present();\n        })\n      })\n      .catch( (err) => {\n        loading.dismiss();\n        let prompt = this.alertCtrl.create({\n          title: title,\n          message: TranslationService.getTransl(\"There was a problem in the purchase:\")+\"<br>\"+JSON.stringify(err),\n          buttons: [\n            {\n              text: TranslationService.getTransl(\"OK\")\n            }\n          ]\n        });\n        prompt.present();\n      });\n      SystemService.dismissLoading();\n    } else {\n      let prompt = await alertController.create({\n        header: title,\n        message: TranslationService.getTransl(\n          \"purchase-unavailable\",\n          \"Purchase is not available at the moment. Please try again later!\"\n        ),\n        buttons: [\n          {\n            text: TranslationService.getTransl(\"ok\", \"OK\"),\n          },\n        ],\n      });\n      prompt.present();\n    }*/\n  }\n\n  render() {\n    return this.userRoles && this.userRoles.uid ? (\n      <ion-list>\n        <ion-list-header onClick={() => this.purchase(\"unlimited\")}>\n          <my-transl\n            tag=\"purchase-dp4\"\n            text=\"Purchase DecoPlanner 4\"\n          ></my-transl>\n        </ion-list-header>\n        {Object.keys(this.prices).map((licence) => (\n          <ion-item>\n            <ion-label>\n              <my-transl tag={licence} text={upperFirst(licence)}></my-transl>\n            </ion-label>\n\n            {!this.userRoles.hasLicence(this.prices[licence].licence, false) ? (\n              [\n                <ion-button\n                  slot=\"end\"\n                  fill=\"clear\"\n                  onClick={() => this.showInfo(licence)}\n                >\n                  <ion-icon name=\"help-circle\"></ion-icon>\n                </ion-button>,\n              ]\n            ) : (\n              <ion-button slot=\"end\" fill=\"clear\">\n                <ion-icon color=\"secondary\" name=\"checkmark\"></ion-icon>\n              </ion-button>\n            )}\n          </ion-item>\n        ))}\n        {\n          //show only if user does not have unlimited or if he did not buy the trial licence\n          !this.userRoles.licences.unlimited &&\n          !this.userRoles.licences.hasLicence(\n            this.userRoles.licences.trial.level,\n            false\n          ) ? (\n            <ion-item>\n              <my-transl tag=\"trial-period\" text=\"Trial Period\" isLabel />\n\n              {this.userRoles.licences.trial.level ? (\n                <ion-note slot=\"end\">\n                  {\" \"}\n                  {this.userRoles.licences.trialDays() > 0 ? (\n                    <span>\n                      <my-transl\n                        tag={this.userRoles.licences.trial.level}\n                        text={upperFirst(this.userRoles.licences.trial.level)}\n                      ></my-transl>{\" \"}\n                      - {this.userRoles.licences.trialDays()}{\" \"}\n                      <my-transl tag=\"days-remaining\" text=\"days remaining\" />\n                    </span>\n                  ) : (\n                    <span>\n                      <my-transl tag=\"expired\" text=\"Expired\" />\n                    </span>\n                  )}\n                </ion-note>\n              ) : (\n                <ion-button\n                  slot=\"end\"\n                  fill=\"outline\"\n                  onClick={() => this.activateTrial()}\n                >\n                  <ion-label>\n                    <my-transl\n                      tag=\"activate-trial\"\n                      text=\"Start Trial\"\n                    ></my-transl>\n                  </ion-label>\n                </ion-button>\n              )}\n            </ion-item>\n          ) : undefined\n        }\n      </ion-list>\n    ) : undefined;\n  }\n}\n"],"version":3}