{"file":"popover-gas.entry.esm.js","mappings":"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","names":["last","filter","round","toNumber"],"sources":["src/components/udive/popovers/popover-gas/popover-gas.scss?tag=popover-gas","src/components/udive/popovers/popover-gas/popover-gas.tsx"],"sourcesContent":["popover-gas {\n  /* Component styles go here */\n  .scrollx {\n    display: flex;\n    flex-wrap: nowrap;\n    overflow-x: auto;\n\n    .item {\n      flex: 0 0 0 0;\n    }\n\n    ::-webkit-scrollbar {\n      display: none;\n    }\n  }\n\n  //validators notification\n  .notification {\n    min-height: 20px;\n    height: 20px;\n    font-size: 0.8em;\n    color: #ea6153;\n    border-width: 1px;\n    border-color: #ea6153;\n    padding-left: 10px;\n    .item-inner {\n      margin-left: 0px !important;\n      border-bottom: 0px !important;\n    }\n    .icon {\n      font-size: 1.7em;\n      padding-left: 6px !important;\n      padding-top: 4px !important;\n    }\n  }\n}\n","import {Component, h, Element, Prop, State} from \"@stencil/core\";\nimport {Gas} from \"../../../../interfaces/udive/planner/gas\";\nimport {GasModel} from \"../../../../interfaces/udive/planner/gas-model\";\nimport {GasBlenderService} from \"../../../../services/udive/planner/gas-blender\";\nimport {UserService} from \"../../../../services/common/user\";\nimport {DiveToolsService} from \"../../../../services/udive/planner/dive-tools\";\nimport {alertController} from \"@ionic/core\";\nimport {TranslationService} from \"../../../../services/common/translations\";\nimport {filter, last, round, toNumber} from \"lodash\";\n\n@Component({\n  tag: \"popover-gas\",\n  styleUrl: \"popover-gas.scss\",\n})\nexport class PopoverGas {\n  @Element() el: HTMLElement;\n  scrollGas: HTMLElement;\n\n  hasTrimixlicence = true;\n  hasReblicence = true;\n  @Prop() ccr = false;\n  @Prop() parameters: any;\n  @Prop() stdDecoGases: Array<GasModel>;\n  @Prop() gasProp: Gas;\n  stdGases: Array<any>;\n  @State() gasWarning: boolean = false;\n  @State() ENDWarning: boolean = false;\n  popover: HTMLIonPopoverElement;\n\n  @State() gas: Gas = new Gas();\n  @State() form: any;\n  @State() updateView = false;\n\n  async componentWillLoad() {\n    this.hasTrimixlicence = await UserService.checkLicence(\"trimix\");\n    this.hasReblicence = await UserService.checkLicence(\"reb\");\n    this.updateStdGasList();\n    if (this.gasProp && this.gasProp.getFO2()) {\n      this.gas = this.gasProp;\n    } else {\n      //select first available gas\n      const gas = last(filter(this.stdGases, {active: true}));\n      this.gas = gas ? gas[\"gas\"] : new Gas(0.21, 0, 30, 1.2);\n    }\n    /*if (this.gas.fO2) {\n      //update setpoint according to parameters\n      if (this.gas.fO2 == 1) {\n        this.gas.ppO2 = this.parameters.oxygenppO2;\n      } else {\n        this.gas.ppO2 = this.parameters.decoppO2;\n      }\n    }*/\n    this.setForm();\n    this.updateStdGasList();\n  }\n\n  componentDidLoad() {\n    this.scrollGas = this.el.querySelector(\"#scrollGas\");\n    //update from Depth if Imperial\n    this.stdDecoGases.forEach((gas) => {\n      if (DiveToolsService.isImperial()) {\n        gas.fromDepth =\n          round(DiveToolsService.metersToFeet(gas.fromDepth) / 10) * 10;\n      }\n    });\n    this.updateStdGasList();\n    this.popover = this.el.closest(\"ion-popover\");\n  }\n\n  disconnectedCallback() {\n    //check valid gases\n    this.setForm();\n  }\n\n  async setForm() {\n    this.form = this.gas.getForm();\n    this.hasTrimixlicence = await UserService.checkLicence(\"trimix\");\n    this.hasReblicence = await UserService.checkLicence(\"reb\");\n  }\n\n  updateStdGasList() {\n    //create gas list\n    this.stdGases = [];\n    let isStandardGas = false;\n    let i = 0,\n      n = 0;\n    this.stdDecoGases.forEach((gas) => {\n      i++;\n      let selected =\n        this.gas.O2 === gas.O2 && this.gas.He === gas.He ? true : false;\n      if (selected) {\n        isStandardGas = true;\n        n = i;\n      }\n\n      //update setpoint according to parameters\n      /*if (gas.O2 == 100) {\n        gas.ppO2 = this.parameters.oxygenppO2;\n      } else {\n        gas.ppO2 = this.parameters.decoppO2;\n      }*/\n      //check user limitations and activate gas\n      const gasModel = gas.getGas();\n      const active = UserService.userRoles.licences.checkGasLimitations(\n        gasModel,\n        false\n      );\n\n      this.stdGases.push({\n        selected: selected,\n        active: active,\n        gas: gasModel,\n      });\n    });\n    setTimeout(() => {\n      if (isStandardGas && this.scrollGas) {\n        //scroll list to the left at the selected gas\n        let width = this.scrollGas.scrollWidth;\n        let clientWidth = this.scrollGas.clientWidth;\n        let pagination = i / (width / clientWidth);\n        n = n - pagination;\n        n = n < 0 ? 0 : n;\n        this.scrollGas.scrollLeft = ((width * n) / i) * 1.15;\n      }\n    });\n    //check if gas had high pO2\n    this.updateWarnings(this.gas.fromDepth, 1.6); //deco gases so keep 1.6 as limit pO2\n  }\n\n  updateWarnings(d, pO2) {\n    //check if gas had high pO2\n    this.gasWarning = this.gas.highPO2WarningatDepthWithTarget(d, pO2);\n    this.ENDWarning = this.gas.highENDWarningatDepth(this.gas.fromDepth);\n    this.updateView = !this.updateView;\n  }\n\n  selectStdGas(gas) {\n    if (!this.hasTrimixlicence && gas.He > 0) {\n      UserService.checkLicence(\"trimix\", true);\n      return;\n    }\n    this.gas = gas;\n    this.setForm();\n    this.updateStdGasList();\n  }\n\n  updateGas(input: string) {\n    if (input == \"o2\") {\n      this.gas.setFO2(round(toNumber(this.form.o2), 2) / 100);\n    } else if (input == \"he\") {\n      this.gas.setFHe(round(toNumber(this.form.he), 2) / 100);\n    } else if (input == \"fromDepth\") {\n      this.gas.setFromDepth(toNumber(this.form.fromDepth));\n    } else if (input == \"ppO2\") {\n      this.gas.ppO2 = toNumber(this.form.ppO2);\n    }\n    this.updateStdGasList();\n  }\n\n  inputHandler(event: any) {\n    let value = toNumber(event.detail.value);\n    this.form[event.detail.name] = value;\n    this.updateGas(event.detail.name);\n  }\n\n  blurHandler(event) {\n    let value = toNumber(event.detail.value);\n    if (event.detail.name === \"o2\") {\n      //check max O2\n      const minO2 = UserService.userRoles.licences.getUserLimitations().minO2;\n      const maxO2 = UserService.userRoles.licences.getUserLimitations().maxO2;\n      if (value > maxO2) {\n        value = maxO2;\n      } else if (value < minO2) {\n        value = minO2;\n      }\n      //check He value\n      if (this.form.he + value > 100) {\n        this.form.he = 100 - value;\n      }\n    } else if (event.detail.name === \"he\") {\n      //check max O2\n      const maxHe = UserService.userRoles.licences.getUserLimitations().maxHe;\n      if (value > maxHe) {\n        value = maxHe;\n      }\n      //check O2 value\n      if (this.form.o2 + value > 100) {\n        this.form.o2 = 100 - value;\n      }\n    } else if (event.detail.name === \"ppO2\") {\n      value = toNumber(value);\n    }\n    this.form[event.detail.name] = value;\n    this.updateGas(event.detail.name);\n    this.setForm();\n    this.updateStdGasList();\n  }\n\n  setUseAsDiluent(value) {\n    this.gas.setUseAsDiluent(value);\n    this.setForm();\n  }\n\n  async showpO2Info() {\n    const alert = await alertController.create({\n      header: \"pO2 setpoint\",\n      message: TranslationService.getTransl(\n        \"po2-setpoint-info\",\n        \"The pO2 setpoint is used to update the setpoint of the CCR within the range of this level or deco gas.\"\n      ),\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n        },\n      ],\n    });\n    alert.present();\n  }\n\n  render() {\n    return [\n      <ion-list style={{marginBottom: \"0px\"}}>\n        <ion-grid class=\"ion-no-padding\">\n          <ion-row>\n            <ion-col>\n              <ion-row class=\"ion-no-padding\">\n                <app-form-item\n                  label-text=\"O2\"\n                  value={this.form.o2}\n                  name=\"o2\"\n                  input-type=\"number\"\n                  onFormItemChanged={(ev) => this.inputHandler(ev)}\n                  onFormItemBlur={(ev) => this.blurHandler(ev)}\n                  forceInvalid={this.gasWarning}\n                  validator={[\n                    \"required\",\n                    {\n                      name: \"minmaxvalue\",\n                      options: {\n                        min: UserService.userRoles.licences.getUserLimitations()\n                          .minO2,\n                        max: UserService.userRoles.licences.getUserLimitations()\n                          .maxO2,\n                      },\n                    },\n                  ]}\n                ></app-form-item>\n              </ion-row>\n              {this.gasWarning ? (\n                <ion-row class=\"ion-no-padding\">\n                  <ion-col>\n                    <div class=\"notification\">\n                      <ion-icon name=\"warning\" item-start></ion-icon>\n                      High pO2 ({this.gas.getpO2atDepth(this.gas.fromDepth)}\n                      )!\n                    </div>\n                  </ion-col>\n                </ion-row>\n              ) : undefined}\n            </ion-col>\n            <ion-col>\n              {this.hasTrimixlicence ? (\n                [\n                  <ion-row class=\"ion-no-padding\">\n                    <app-form-item\n                      label-text=\"He\"\n                      value={this.form.he}\n                      name=\"he\"\n                      input-type=\"number\"\n                      onFormItemChanged={(ev) => this.inputHandler(ev)}\n                      onFormItemBlur={(ev) => this.blurHandler(ev)}\n                      forceInvalid={this.ENDWarning}\n                      validator={[\n                        \"required\",\n                        {\n                          name: \"minmaxvalue\",\n                          options: {\n                            min: 0,\n                            max: UserService.userRoles.licences.getUserLimitations()\n                              .maxHe,\n                          },\n                        },\n                      ]}\n                    ></app-form-item>\n                  </ion-row>,\n                  this.ENDWarning ? (\n                    <ion-row class=\"ion-no-padding\">\n                      <ion-col>\n                        <div class=\"notification\">\n                          <ion-icon name=\"warning\" item-start></ion-icon>\n                          High END ({this.gas.getEND(this.gas.fromDepth)}\n                          {DiveToolsService.depthUnit})!\n                        </div>\n                      </ion-col>\n                    </ion-row>\n                  ) : undefined,\n                ]\n              ) : (\n                <app-form-item\n                  label-text=\"He\"\n                  value={this.form.he}\n                  onClick={() => UserService.checkLicence(\"trimix\", true)}\n                ></app-form-item>\n              )}\n            </ion-col>\n          </ion-row>\n          <ion-row>\n            <ion-col>\n              <app-form-item\n                label-tag=\"from-depth\"\n                label-text=\"From Depth\"\n                value={this.form.fromDepth}\n                name=\"fromDepth\"\n                input-type=\"number\"\n                onFormItemChanged={(ev) => this.inputHandler(ev)}\n                onFormItemBlur={(ev) => this.blurHandler(ev)}\n                validator={[\"required\"]}\n              ></app-form-item>\n            </ion-col>\n          </ion-row>\n          {this.ccr\n            ? [\n                <ion-row>\n                  <ion-col>\n                    {this.hasReblicence ? (\n                      <app-form-item\n                        label-tag=\"pO2-setpoint\"\n                        label-text=\"pO2 setPoint\"\n                        value={this.form.ppO2}\n                        name=\"ppO2\"\n                        input-type=\"number\"\n                        onFormItemChanged={(ev) => this.inputHandler(ev)}\n                        onFormItemBlur={(ev) => this.blurHandler(ev)}\n                        validator={[\n                          {\n                            name: \"minmaxvalue\",\n                            options: {min: 0.5, max: 1.6},\n                          },\n                        ]}\n                      ></app-form-item>\n                    ) : (\n                      <app-form-item\n                        label-tag=\"pO2-setpoint\"\n                        label-text=\"pO2 setPoint\"\n                        value={this.form.ppO2}\n                        onClick={() => UserService.checkLicence(\"reb\", true)}\n                      ></app-form-item>\n                    )}\n                  </ion-col>\n                  <ion-col size=\"2\" class=\"ion-no-padding\">\n                    <ion-button\n                      shape=\"round\"\n                      fill=\"clear\"\n                      icon-only\n                      class=\"ion-no-padding\"\n                      onClick={() => this.showpO2Info()}\n                    >\n                      <ion-icon name=\"help-circle-outline\"></ion-icon>\n                    </ion-button>\n                  </ion-col>\n                </ion-row>,\n                <ion-row class=\"ion-no-padding\">\n                  <ion-item style={{width: \"100%\"}}>\n                    <ion-label>\n                      <my-transl\n                        tag=\"use-as-diluent\"\n                        text=\"Use as diluent gas\"\n                      ></my-transl>\n                    </ion-label>\n                    <ion-toggle\n                      color=\"gue-blue\"\n                      slot=\"end\"\n                      onIonChange={(ev) =>\n                        this.setUseAsDiluent(ev.detail.checked)\n                      }\n                      checked={this.gas.getUseAsDiluent()}\n                    ></ion-toggle>\n                  </ion-item>\n                </ion-row>,\n              ]\n            : undefined}\n\n          <ion-row class=\"scrollx\" id=\"scrollGas\">\n            {this.stdGases.map((gas) => (\n              <ion-col class=\"item\">\n                <ion-button\n                  shape=\"round\"\n                  color={gas.selected ? \"secondary\" : \"primary\"}\n                  disabled={!gas.active}\n                  onClick={() => this.selectStdGas(gas.gas)}\n                >\n                  {GasBlenderService.getGasName(gas.gas)}\n                </ion-button>\n              </ion-col>\n            ))}\n          </ion-row>\n          <ion-row>\n            <ion-col>\n              <div class=\"notification\" style={{color: \"blue\"}}>\n                MOD: {this.gas.getModF(this.gas.fO2, this.gas.ppO2)}\n                {DiveToolsService.depthUnit} @ {this.gas.ppO2} pO2\n              </div>\n              <div class=\"notification\" style={{color: \"blue\"}}>\n                pO2: {this.gas.getpO2atDepth(this.gas.fromDepth)} @{\" \"}\n                {this.gas.fromDepth}\n                {DiveToolsService.depthUnit}\n              </div>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </ion-list>,\n      <app-modal-footer\n        onCancelEmit={() => this.popover.dismiss()}\n        onSaveEmit={() => this.popover.dismiss(this.form)}\n      />,\n    ];\n  }\n}\n"],"version":3}