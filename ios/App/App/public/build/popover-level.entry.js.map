{"file":"popover-level.entry.esm.js","mappings":"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","names":["find","round","toNumber"],"sources":["src/components/udive/popovers/popover-level/popover-level.scss?tag=popover-level","src/components/udive/popovers/popover-level/popover-level.tsx"],"sourcesContent":["popover-level {\n  .scrollx {\n    display: flex;\n    flex-wrap: nowrap;\n    overflow-x: auto;\n\n    .item {\n      flex: 0 0 0 0;\n    }\n\n    ::-webkit-scrollbar {\n      display: none;\n    }\n  }\n  //validators notification\n  .notification {\n    min-height: 20px;\n    height: 20px;\n    font-size: 0.8em;\n    color: #ea6153;\n    border-width: 1px;\n    border-color: #ea6153;\n    padding-left: 10px;\n    .item-inner {\n      margin-left: 0px !important;\n      border-bottom: 0px !important;\n    }\n    .icon {\n      font-size: 1.7em;\n      padding-left: 6px !important;\n      padding-top: 4px !important;\n    }\n  }\n}\n","import {Component, h, Element, Prop, State} from \"@stencil/core\";\nimport {DiveProfilePoint} from \"../../../../interfaces/udive/planner/dive-profile-point\";\nimport {GasModel} from \"../../../../interfaces/udive/planner/gas-model\";\nimport {GasBlenderService} from \"../../../../services/udive/planner/gas-blender\";\nimport {UserService} from \"../../../../services/common/user\";\nimport {DiveToolsService} from \"../../../../services/udive/planner/dive-tools\";\nimport {alertController} from \"@ionic/core\";\nimport {TranslationService} from \"../../../../services/common/translations\";\nimport {find, round, toNumber} from \"lodash\";\n\n@Component({\n  tag: \"popover-level\",\n  styleUrl: \"popover-level.scss\",\n})\nexport class PopoverLevel {\n  @Element() el: HTMLElement;\n  scrollGas: HTMLElement;\n\n  hasTrimixlicence = true;\n  hasReblicence = true;\n  @Prop() ccr = false;\n  @Prop() parameters: any;\n  @Prop() stdGasesList: Array<GasModel>;\n  @Prop() levelProp: DiveProfilePoint;\n  @Prop() units: string = \"Metric\";\n  stdGases: Array<any>;\n  @State() gasWarning: boolean = false;\n  @State() ENDWarning: boolean = false;\n  popover: HTMLIonPopoverElement;\n  updateGas: boolean = true;\n  updateNewGas: boolean;\n\n  @State() level: DiveProfilePoint = new DiveProfilePoint();\n  @State() form: any;\n  @State() updateView = false;\n\n  async componentWillLoad() {\n    this.hasTrimixlicence = await UserService.checkLicence(\"trimix\");\n    this.hasReblicence = await UserService.checkLicence(\"reb\");\n    this.level = new DiveProfilePoint();\n    if (this.levelProp.depth) {\n      this.level.setGas(this.levelProp.gas.fO2, this.levelProp.gas.fHe);\n      this.level.setValue(\"depth\", this.levelProp.depth);\n      this.level.setValue(\"setpoint\", this.levelProp.setpoint);\n      this.level.setValue(\"time\", this.levelProp.time);\n      this.level.setValue(\"index\", this.levelProp.index);\n    }\n    //this.updateGas = this.levelProp.updateGas;\n    this.setForm();\n    this.updateStdGasList();\n  }\n\n  componentDidLoad() {\n    this.scrollGas = this.el.querySelector(\"#scrollGas\");\n    this.updateStdGasList();\n    this.popover = this.el.closest(\"ion-popover\");\n  }\n\n  disconnectedCallback() {\n    //check valid gases\n    this.setForm();\n  }\n\n  async setForm() {\n    this.form = this.level.getForm();\n    this.hasTrimixlicence = await UserService.checkLicence(\"trimix\");\n    this.hasReblicence = await UserService.checkLicence(\"reb\");\n  }\n\n  updateStdGasList() {\n    //create gas list\n    this.stdGases = [];\n    let isStandardGas = false;\n    let i = 0,\n      n = 0;\n    this.stdGasesList.forEach((gas) => {\n      i++;\n      let selected =\n        this.level.gas.O2 === gas.O2 && this.level.gas.He === gas.He\n          ? true\n          : false;\n      if (selected) {\n        isStandardGas = true;\n        n = i;\n      }\n      //update setpoint according to parameters\n      gas.ppO2 = this.parameters.bottomppO2;\n\n      //check user limitations and activate gas\n      const gasModel = gas.getGas();\n      const active = UserService.userRoles.licences.checkGasLimitations(\n        gasModel,\n        false\n      );\n      this.stdGases.push({\n        selected: selected,\n        active: active,\n        gas: gasModel,\n      });\n    });\n\n    if (isStandardGas && this.scrollGas) {\n      //scroll list to the left at the selected gas\n      setTimeout(() => {\n        //scroll list to the left at the selected gas\n        let width = this.scrollGas.scrollWidth;\n        let clientWidth = this.scrollGas.clientWidth;\n        let pagination = i / (width / clientWidth);\n        n = n - pagination;\n        n = n < 0 ? 0 : n;\n        this.scrollGas.scrollLeft = ((width * n) / i) * 1.15;\n      });\n    }\n    //update only if it's a standard gas and it's allowed to update\n    this.updateNewGas = isStandardGas && this.updateGas;\n    //check if gas had high pO2\n    this.updateWarnings(this.level.depth, this.level.gas.ppO2);\n  }\n\n  updateWarnings(d, pO2) {\n    //check if gas had high pO2\n    this.gasWarning = this.level.gas.highPO2WarningatDepthWithTarget(d, pO2);\n    this.ENDWarning = this.level.gas.highENDWarningatDepth(this.level.depth);\n    this.updateView = !this.updateView;\n  }\n\n  setStdGasForDepth() {\n    if (!this.hasTrimixlicence) {\n      return;\n    }\n    if (this.updateNewGas) {\n      let gas = find(this.stdGases, (gas) => {\n        return gas.gas.fromDepth >= this.level.depth;\n      });\n      if (gas) {\n        gas.selected = true;\n        //get setpoint from preferences\n        this.level.setValue(\"setpoint\", gas.gas.ppO2);\n        if (!this.hasTrimixlicence && gas.He > 0) {\n          gas.gas.He = 0;\n        }\n        this.level.setGas(gas.gas.O2 / 100, gas.gas.He / 100);\n      }\n    }\n    this.setForm();\n  }\n\n  selectStdGas(gas) {\n    if (!this.hasTrimixlicence && gas.He > 0) {\n      UserService.checkLicence(\"trimix\", true);\n      return;\n    }\n    this.updateNewGas = true;\n    //get setpoint from preferences\n    this.level.setValue(\"setpoint\", gas.ppO2);\n    this.level.setGas(gas.O2 / 100, gas.He / 100);\n    this.updateStdGasList();\n    this.setForm();\n  }\n\n  updateValue(input: string) {\n    this.level.setValue(input, this.form[input]);\n    if (input == \"depth\") {\n      this.setStdGasForDepth();\n      this.updateStdGasList();\n    } else if (input == \"o2\" || input == \"he\") {\n      this.level.setGas(\n        round(this.form.o2 / 100, 2),\n        round(this.form.he / 100, 2)\n      );\n      //check if standard gas\n      this.updateStdGasList();\n    }\n  }\n\n  inputHandler(event: any) {\n    let value = toNumber(event.detail.value);\n    this.form[event.detail.name] = value;\n    this.updateValue(event.detail.name);\n  }\n\n  blurHandler(event) {\n    let value = toNumber(event.detail.value);\n    if (event.detail.name === \"depth\") {\n      //check max depth\n      const maxDepth = UserService.userRoles.licences.checkDepthLimitations();\n      if (value > maxDepth) {\n        value = maxDepth;\n      }\n    } else if (event.detail.name === \"o2\") {\n      //check max O2\n      const minO2 = UserService.userRoles.licences.getUserLimitations().minO2;\n      const maxO2 = UserService.userRoles.licences.getUserLimitations().maxO2;\n      if (value > maxO2) {\n        value = maxO2;\n      } else if (value < minO2) {\n        value = minO2;\n      }\n      //check He value\n      if (this.form.he + value > 100) {\n        this.form.he = 100 - value;\n      }\n    } else if (event.detail.name === \"he\") {\n      //check max O2\n      const maxHe = UserService.userRoles.licences.getUserLimitations().maxHe;\n      if (value > maxHe) {\n        value = maxHe;\n      }\n      //check O2 value\n      if (this.form.o2 + value > 100) {\n        this.form.o2 = 100 - value;\n      }\n    } else if (event.detail.name === \"setpoint\") {\n      value = toNumber(value);\n    }\n    this.form[event.detail.name] = value;\n    this.updateValue(event.detail.name);\n    this.setForm();\n    this.updateStdGasList();\n  }\n\n  async showpO2Info() {\n    const alert = await alertController.create({\n      header: \"pO2 setpoint\",\n      message: TranslationService.getTransl(\n        \"po2-setpoint-info\",\n        \"The pO2 setpoint is used to update the setpoint of the CCR within the range of this level or deco gas.\"\n      ),\n      buttons: [\n        {\n          text: TranslationService.getTransl(\"ok\", \"OK\"),\n        },\n      ],\n    });\n    alert.present();\n  }\n\n  render() {\n    return [\n      <ion-list style={{marginBottom: \"0px\"}}>\n        <ion-grid class=\"ion-no-padding\">\n          <ion-row>\n            <ion-col>\n              <app-form-item\n                label-tag=\"depth\"\n                label-text=\"Depth\"\n                value={this.form.depth}\n                name=\"depth\"\n                input-type=\"number\"\n                onFormItemChanged={(ev) => this.inputHandler(ev)}\n                onFormItemBlur={(ev) => this.blurHandler(ev)}\n                validator={[\n                  \"required\",\n                  {\n                    name: \"minmaxvalue\",\n                    options: {\n                      min: 1,\n                      max: UserService.userRoles.licences.checkDepthLimitations(),\n                    },\n                  },\n                ]}\n              ></app-form-item>\n            </ion-col>\n            <ion-col>\n              <app-form-item\n                label-tag=\"time\"\n                label-text=\"Time\"\n                value={this.form.time}\n                name=\"time\"\n                input-type=\"number\"\n                onFormItemChanged={(ev) => this.inputHandler(ev)}\n                onFormItemBlur={(ev) => this.blurHandler(ev)}\n                validator={[\"required\"]}\n              ></app-form-item>\n            </ion-col>\n          </ion-row>\n          <ion-row>\n            <ion-col>\n              <ion-row class=\"ion-no-padding\">\n                <app-form-item\n                  label-text=\"O2\"\n                  value={this.form.o2}\n                  name=\"o2\"\n                  input-type=\"number\"\n                  onFormItemChanged={(ev) => this.inputHandler(ev)}\n                  onFormItemBlur={(ev) => this.blurHandler(ev)}\n                  forceInvalid={this.gasWarning}\n                  validator={[\n                    \"required\",\n                    {\n                      name: \"minmaxvalue\",\n                      options: {\n                        min: UserService.userRoles.licences.getUserLimitations()\n                          .minO2,\n                        max: UserService.userRoles.licences.getUserLimitations()\n                          .maxO2,\n                      },\n                    },\n                  ]}\n                ></app-form-item>\n              </ion-row>\n              {this.gasWarning ? (\n                <ion-row class=\"ion-no-padding\">\n                  <ion-col>\n                    <div class=\"notification\">\n                      <ion-icon name=\"warning\" item-start></ion-icon>\n                      High pO2 ({this.level.gas.getpO2atDepth(this.level.depth)}\n                      )!\n                    </div>\n                  </ion-col>\n                </ion-row>\n              ) : undefined}\n            </ion-col>\n            <ion-col>\n              {this.hasTrimixlicence ? (\n                [\n                  <ion-row class=\"ion-no-padding\">\n                    <app-form-item\n                      label-text=\"He\"\n                      value={this.form.he}\n                      name=\"he\"\n                      input-type=\"number\"\n                      onFormItemChanged={(ev) => this.inputHandler(ev)}\n                      onFormItemBlur={(ev) => this.blurHandler(ev)}\n                      forceInvalid={this.ENDWarning}\n                      validator={[\n                        \"required\",\n                        {\n                          name: \"minmaxvalue\",\n                          options: {\n                            min: 0,\n                            max: UserService.userRoles.licences.getUserLimitations()\n                              .maxHe,\n                          },\n                        },\n                      ]}\n                    ></app-form-item>\n                  </ion-row>,\n                  this.ENDWarning ? (\n                    <ion-row class=\"ion-no-padding\">\n                      <ion-col>\n                        <div class=\"notification\">\n                          <ion-icon name=\"warning\" item-start></ion-icon>\n                          High END ({this.level.gas.getEND(this.level.depth)}\n                          {DiveToolsService.depthUnit})!\n                        </div>\n                      </ion-col>\n                    </ion-row>\n                  ) : undefined,\n                ]\n              ) : (\n                <app-form-item\n                  label-text=\"He\"\n                  value={this.form.he}\n                  onClick={() => UserService.checkLicence(\"trimix\", true)}\n                ></app-form-item>\n              )}\n            </ion-col>\n          </ion-row>\n          {this.ccr ? (\n            <ion-row>\n              <ion-col>\n                {this.hasReblicence ? (\n                  <app-form-item\n                    label-tag=\"pO2-setpoint\"\n                    label-text=\"pO2 setPoint\"\n                    value={this.form.setpoint}\n                    name=\"setpoint\"\n                    input-type=\"number\"\n                    onFormItemChanged={(ev) => this.inputHandler(ev)}\n                    onFormItemBlur={(ev) => this.blurHandler(ev)}\n                    validator={[\n                      {\n                        name: \"minmaxvalue\",\n                        options: {min: 0.5, max: 1.6},\n                      },\n                    ]}\n                  ></app-form-item>\n                ) : (\n                  <app-form-item\n                    label-tag=\"pO2-setpoint\"\n                    label-text=\"pO2 setPoint\"\n                    value={this.form.setpoint}\n                    onClick={() => UserService.checkLicence(\"reb\", true)}\n                  ></app-form-item>\n                )}\n              </ion-col>\n              <ion-col size=\"2\" class=\"ion-no-padding\">\n                <ion-button\n                  shape=\"round\"\n                  fill=\"clear\"\n                  icon-only\n                  class=\"ion-no-padding\"\n                  onClick={() => this.showpO2Info()}\n                >\n                  <ion-icon name=\"help-circle-outline\"></ion-icon>\n                </ion-button>\n              </ion-col>\n            </ion-row>\n          ) : undefined}\n\n          <ion-row class=\"scrollx\" id=\"scrollGas\">\n            {this.stdGases.map((gas) => (\n              <ion-col class=\"item\">\n                <ion-button\n                  shape=\"round\"\n                  color={gas.selected ? \"secondary\" : \"primary\"}\n                  disabled={!gas.active}\n                  onClick={() => this.selectStdGas(gas.gas)}\n                >\n                  {GasBlenderService.getGasName(gas.gas)}\n                </ion-button>\n              </ion-col>\n            ))}\n          </ion-row>\n          <ion-row>\n            <ion-col>\n              <div class=\"notification\" style={{color: \"blue\"}}>\n                MOD:{\" \"}\n                {this.level.gas.getModF(\n                  this.level.gas.fO2,\n                  this.level.gas.ppO2\n                )}\n                {DiveToolsService.depthUnit} @ {this.level.gas.ppO2} pO2\n              </div>\n              <div class=\"notification\" style={{color: \"blue\"}}>\n                END: {this.level.gas.getEND(this.level.depth)}\n                {DiveToolsService.depthUnit} @ {this.level.depth}\n                {DiveToolsService.depthUnit}\n              </div>\n              <div class=\"notification\" style={{color: \"blue\"}}>\n                pO2: {this.level.gas.getpO2atDepth(this.level.depth)} @{\" \"}\n                {this.level.depth}\n                {DiveToolsService.depthUnit}\n              </div>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </ion-list>,\n      <app-modal-footer\n        onCancelEmit={() => this.popover.dismiss()}\n        onSaveEmit={() => this.popover.dismiss(this.form)}\n      />,\n    ];\n  }\n}\n"],"version":3}