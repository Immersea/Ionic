{"file":"app-admin-diving-classes.entry.esm.js","mappings":"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","names":["orderBy","format"],"sources":["src/components/udive/app/admin/app-admin-diving-classes/app-admin-diving-classes.scss?tag=app-admin-diving-classes","src/components/udive/app/admin/app-admin-diving-classes/app-admin-diving-classes.tsx"],"sourcesContent":["app-admin-diving-classes {\n  /* Component styles go here */\n}\n","import {Component, h, State, Host, Prop} from \"@stencil/core\";\nimport {Subscription} from \"rxjs\";\nimport {\n  UserService,\n  USERPROFILECOLLECTION,\n} from \"../../../../../services/common/user\";\nimport {orderBy} from \"lodash\";\nimport {UserRoles} from \"../../../../../interfaces/common/user/user-roles\";\nimport {UserPubicProfile} from \"../../../../../interfaces/common/user/user-public-profile\";\nimport {\n  DivingCentersService,\n  DIVECENTERSSCOLLECTION,\n} from \"../../../../../services/udive/divingCenters\";\nimport {MapDataDivingCenter} from \"../../../../../interfaces/udive/diving-center/divingCenter\";\nimport {MapDataDivingSchool} from \"../../../../../interfaces/udive/diving-school/divingSchool\";\nimport {\n  DivingSchoolsService,\n  DIVESCHOOLSSCOLLECTION,\n} from \"../../../../../services/udive/divingSchools\";\nimport {DivingClassesService} from \"../../../../../services/udive/divingClasses\";\nimport {ClassSummary} from \"../../../../../interfaces/udive/diving-class/divingClass\";\nimport {TranslationService} from \"../../../../../services/common/translations\";\nimport {format} from \"date-fns\";\n\n@Component({\n  tag: \"app-admin-diving-classes\",\n  styleUrl: \"app-admin-diving-classes.scss\",\n})\nexport class AppAdminDivingClasses {\n  @Prop() filterByOrganisierId: string;\n  @Prop() filterByClasses: any;\n  @State() adminDivingClassesArray: any[] = [];\n  @State() updateView = false;\n  @State() creatingNewDivingClass = false;\n  @State() loadingDivingClasses = true;\n  loadingDivingClasses$: Subscription;\n  @State() editingDivingClass = \"\";\n  editingDivingClass$: Subscription;\n\n  userRoles: UserRoles;\n  userRoles$: Subscription;\n  userDivingClasses: ClassSummary;\n  userDivingClasses$: Subscription;\n  userPublicProfilesList: UserPubicProfile[] = [];\n  userPublicProfilesList$: Subscription;\n  divingCentersList: MapDataDivingCenter[] = [];\n  divingCentersList$: Subscription;\n  divingSchoolsList: MapDataDivingSchool[] = [];\n  divingSchoolsList$: Subscription;\n\n  async componentWillLoad() {\n    this.loadingDivingClasses$ =\n      DivingClassesService.creatingNewDivingClass$.subscribe((value) => {\n        this.creatingNewDivingClass = value;\n      });\n    this.editingDivingClass$ =\n      DivingClassesService.editingDivingClassId$.subscribe((value) => {\n        this.editingDivingClass = value;\n      });\n    //load classes\n    //if filterbyorganiserId  ==  loaded school -> load classes from school\n    if (\n      this.filterByOrganisierId &&\n      this.filterByOrganisierId === DivingSchoolsService.selectedDivingSchoolId\n    ) {\n      this.userDivingClasses$ =\n        DivingSchoolsService.selectedDivingSchoolClasses$.subscribe((sub) =>\n          this.loadDivingClasses(sub)\n        );\n    } else {\n      this.userDivingClasses$ = UserService.userDivingClasses$.subscribe(\n        (sub) => this.loadDivingClasses(sub)\n      );\n    }\n\n    //load all users list\n    this.userPublicProfilesList$ =\n      UserService.userPublicProfilesList$.subscribe((collection) => {\n        //update dive sites\n        this.userPublicProfilesList = collection;\n        this.filter();\n      });\n    //load all diving centers list\n    this.divingCentersList$ = DivingCentersService.divingCentersList$.subscribe(\n      (collection) => {\n        //update dive sites\n        this.divingCentersList = collection;\n        this.filter();\n      }\n    );\n    //load all diving schools list\n    this.divingSchoolsList$ = DivingSchoolsService.divingSchoolsList$.subscribe(\n      (collection) => {\n        //update dive sites\n        this.divingSchoolsList = collection;\n        this.filter();\n      }\n    );\n    this.userRoles$ = UserService.userRoles$.subscribe((roles) => {\n      this.userRoles = roles;\n      this.filter();\n    });\n  }\n\n  disconnectedCallback() {\n    this.userRoles$.unsubscribe();\n    this.userDivingClasses$.unsubscribe();\n    this.userPublicProfilesList$.unsubscribe();\n    this.divingCentersList$.unsubscribe();\n    this.divingSchoolsList$.unsubscribe();\n    this.editingDivingClass$.unsubscribe();\n    this.loadingDivingClasses$.unsubscribe();\n  }\n\n  async loadDivingClasses(userDivingClasses: ClassSummary) {\n    DivingClassesService.resetSkeletons();\n    this.loadingDivingClasses = false;\n    if (userDivingClasses) {\n      let adminDivingClassesArray = [];\n      Object.keys(userDivingClasses).forEach((key) => {\n        let adminClass = userDivingClasses[key] as any;\n        adminClass.id = key;\n        if (\n          this.filterByOrganisierId &&\n          adminClass.organiser.id == this.filterByOrganisierId\n        ) {\n          adminDivingClassesArray.push(adminClass);\n        } else if (!this.filterByOrganisierId) {\n          adminDivingClassesArray.push(adminClass);\n        }\n      });\n\n      adminDivingClassesArray = orderBy(\n        adminDivingClassesArray,\n        \"date\",\n        \"desc\"\n      );\n      this.adminDivingClassesArray = adminDivingClassesArray;\n      this.filter();\n    }\n  }\n\n  filter() {\n    if (this.adminDivingClassesArray.length > 0) {\n      //load organiser data\n      this.adminDivingClassesArray.map((diveTrip) => {\n        const organiser = diveTrip.organiser;\n        switch (organiser.collectionId) {\n          case USERPROFILECOLLECTION:\n            organiser.item = this.userPublicProfilesList.find(\n              (user) => user.uid === organiser.id\n            );\n            break;\n          case DIVECENTERSSCOLLECTION:\n            organiser.item = this.divingCentersList.find(\n              (dc) => dc.id === organiser.id\n            );\n            break;\n          case DIVESCHOOLSSCOLLECTION:\n            organiser.item = this.divingSchoolsList.find(\n              (school) => school.id === organiser.id\n            );\n            break;\n        }\n        if (this.userRoles) {\n          const role = this.userRoles.editorOf[diveTrip.id];\n          diveTrip.editor = role && role.roles && role.roles.length > 0;\n          diveTrip.owner = role && role.roles && role.roles.includes(\"owner\");\n        }\n      });\n\n      //filter by trips id for clients visualisation\n      if (this.filterByClasses) {\n        const tripsArray = Object.keys(this.filterByClasses);\n        this.adminDivingClassesArray = this.adminDivingClassesArray.filter(\n          (trip) => tripsArray.includes(trip.id)\n        );\n      }\n      this.updateView = !this.updateView;\n    }\n  }\n\n  update(event, id) {\n    event.stopPropagation();\n    DivingClassesService.presentDivingClassUpdate(null, null, id);\n  }\n\n  delete(event, id) {\n    event.stopPropagation();\n    DivingClassesService.deleteDivingClass(id);\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.loadingDivingClasses\n          ? [\n              <app-skeletons skeleton=\"diveTrip\" />,\n              <app-skeletons skeleton=\"diveTrip\" />,\n              <app-skeletons skeleton=\"diveTrip\" />,\n              <app-skeletons skeleton=\"diveTrip\" />,\n              <app-skeletons skeleton=\"diveTrip\" />,\n            ]\n          : undefined}\n        {this.creatingNewDivingClass ? (\n          <app-skeletons skeleton=\"diveTrip\" />\n        ) : undefined}\n        {this.adminDivingClassesArray.map((diveClass) =>\n          this.editingDivingClass == diveClass.id ? (\n            <app-skeletons skeleton=\"diveTrip\" />\n          ) : (\n            <ion-item\n              button\n              onClick={() => DivingClassesService.pushDivingClass(diveClass.id)}\n              detail\n            >\n              {diveClass.organiser &&\n              diveClass.organiser.item &&\n              diveClass.organiser.item.photoURL ? (\n                <ion-avatar slot=\"start\">\n                  <ion-img src={diveClass.organiser.item.photoURL} />\n                </ion-avatar>\n              ) : undefined}\n              <ion-label>\n                <h2>{diveClass.displayName}</h2>\n                <h4>{format(diveClass.date, \"PP\")}</h4>\n                {diveClass.organiser &&\n                diveClass.organiser.item &&\n                diveClass.organiser.item.displayName ? (\n                  <p>\n                    <my-transl tag=\"organiser\" text=\"Organiser\" />\n                    {\": \" + diveClass.organiser.item.displayName}\n                  </p>\n                ) : undefined}\n              </ion-label>\n              {diveClass.owner ? (\n                <ion-button\n                  fill=\"clear\"\n                  color=\"danger\"\n                  icon-only\n                  slot=\"end\"\n                  onClick={(ev) => this.delete(ev, diveClass.id)}\n                >\n                  <ion-icon name=\"trash\" slot=\"end\"></ion-icon>\n                </ion-button>\n              ) : undefined}\n              {diveClass.editor ? (\n                <ion-button\n                  fill=\"clear\"\n                  color=\"divingclass\"\n                  icon-only\n                  slot=\"end\"\n                  onClick={(ev) => this.update(ev, diveClass.id)}\n                >\n                  <ion-icon name=\"create\" slot=\"end\"></ion-icon>\n                </ion-button>\n              ) : undefined}\n            </ion-item>\n          )\n        )}\n\n        {this.adminDivingClassesArray.length == 0 ? (\n          <ion-item>\n            <ion-label>\n              <h2>\n                {TranslationService.getTransl(\n                  \"no-dive-classes\",\n                  \"No diving classes yet. Look for your next class with our diving schools and instructors!\"\n                )}\n              </h2>\n            </ion-label>\n          </ion-item>\n        ) : undefined}\n      </Host>\n    );\n  }\n}\n"],"version":3}