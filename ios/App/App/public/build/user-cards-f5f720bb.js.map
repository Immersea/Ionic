{"file":"user-cards-f5f720bb.js","mappings":"MACa,IAAI;IAWf,YAAY,IAAK;QACf,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YAClD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;kBACrB,IAAI,CAAC,MAAM;kBACX,EAAC,QAAQ,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAC,CAAC;YAC5C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS;kBAC3B,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE;kBACtC,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YAC7B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;kBACrB,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE;kBACnC,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAC3D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAC9D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtD;KACF;CACF;MAEY,SAAS;IAKpB,YAAY,GAAI;QAFhB,UAAK,GAAW,EAAE,CAAC;QAGjB,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;YACnB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;YACvB,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBACrC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI;oBACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;iBACjC,CAAC,CAAC;aACJ;SACF;KACF;;;;;","names":[],"sources":["src/interfaces/udive/user/user-cards.ts"],"sourcesContent":["import {DivingCourse} from \"../diving-school/divingSchool\";\nexport class Card {\n  imgFront: string;\n  imgBack: string;\n  course: DivingCourse;\n  number: string;\n  certified: string;\n  expiry: string;\n  instructor: string;\n  insructorId: string;\n  comments: string;\n\n  constructor(card?) {\n    if (card) {\n      this.imgFront = card.imgFront ? card.imgFront : null;\n      this.imgBack = card.imgBack ? card.imgBack : null;\n      this.course = card.course\n        ? card.course\n        : {agencyId: null, certificationId: null};\n      this.number = card.number ? card.number : null;\n      this.certified = card.certified\n        ? new Date(card.certified).toISOString()\n        : new Date().toISOString();\n      this.expiry = card.expiry\n        ? new Date(card.expiry).toISOString()\n        : new Date().toISOString();\n      this.instructor = card.instructor ? card.instructor : null;\n      this.insructorId = card.insructorId ? card.insructorId : null;\n      this.comments = card.comments ? card.comments : null;\n    }\n  }\n}\n\nexport class UserCards {\n  uid: string;\n  email: string;\n  cards: Card[] = [];\n\n  constructor(doc?) {\n    if (doc) {\n      this.uid = doc.uid;\n      this.email = doc.email;\n      if (doc.cards && doc.cards.length > 0) {\n        doc.cards.forEach((card) => {\n          this.cards.push(new Card(card));\n        });\n      }\n    }\n  }\n}\n"],"version":3}