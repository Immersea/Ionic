{"file":"modal-dive-configuration.entry.esm.js","mappings":"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","names":["orderBy","filter","cloneDeep","indexOf","toString"],"sources":["src/components/udive/modals/dive-plan/modal-dive-configuration/modal-dive-configuration.scss?tag=modal-dive-configuration","src/components/udive/modals/dive-plan/modal-dive-configuration/modal-dive-configuration.tsx"],"sourcesContent":["modal-dive-configuration {\n  .scrollx {\n    display: flex;\n    flex-wrap: nowrap;\n    overflow-x: auto;\n\n    .item {\n      flex: 0 0 0 0;\n    }\n\n    ::-webkit-scrollbar {\n      display: none;\n    }\n  }\n\n  input {\n    text-align: right;\n  }\n  .fixedLabel {\n    min-width: 80% !important;\n    max-width: 80% !important;\n  }\n  ion-item .item-inner {\n    box-shadow: none !important;\n    border-bottom: 1px solid #dedede !important;\n  }\n\n  .item-input .label-md,\n  .item-select .label-md,\n  .item-datetime .label-md {\n    color: rgb(0, 0, 0);\n  }\n}\n","import {Component, h, Prop, Element, State} from \"@stencil/core\";\nimport {popoverController, isPlatform} from \"@ionic/core\";\nimport {DivePlan} from \"../../../../../services/udive/planner/dive-plan\";\nimport {DiveConfiguration} from \"../../../../../interfaces/udive/planner/dive-configuration\";\nimport {GasModel} from \"../../../../../interfaces/udive/planner/gas-model\";\nimport {Tank} from \"../../../../../interfaces/udive/planner/tank\";\nimport {cloneDeep, filter, indexOf, orderBy, toString} from \"lodash\";\nimport {DiveStandardsService} from \"../../../../../services/udive/planner/dive-standards\";\nimport {Environment} from \"../../../../../global/env\";\nimport {DiveToolsService} from \"../../../../../services/udive/planner/dive-tools\";\nimport {UserService} from \"../../../../../services/common/user\";\n//import { LicenceCheckProvider } from '../../../providers/licence-check';\n\n@Component({\n  tag: \"modal-dive-configuration\",\n  styleUrl: \"modal-dive-configuration.scss\",\n})\nexport class ModalDiveConfiguration {\n  @Element() el: HTMLElement;\n  @Prop() diveDataToShare: any;\n\n  userStdConfigurations: any;\n  diveConfig: DiveConfiguration;\n  divePlan: DivePlan;\n  ranges: any;\n  stdConfigurations: Array<DiveConfiguration>;\n  bottomTanks: Array<Tank>;\n  decoTanks: Array<Tank>;\n  bottomGases: Array<GasModel>;\n  decoGases: Array<GasModel>;\n  screenWidth: number;\n  @State() updateView = true;\n  validForm = {\n    name: false,\n    depth: false,\n    time: false,\n    bottom: false,\n  };\n  @State() showSave = false;\n\n  componentWillLoad() {\n    this.screenWidth = window.screen.width;\n    //set private configuration for users\n    this.divePlan = this.diveDataToShare.divePlan;\n    this.diveConfig = this.divePlan.configuration;\n    this.orderTanks();\n\n    this.ranges = this.divePlan.getParamRanges(\n      this.diveConfig.parameters.units\n    );\n\n    let gases = DiveStandardsService.getStdGases();\n    gases = orderBy(gases, \"fromDepth\", \"asc\");\n\n    this.bottomGases = filter(gases, {deco: false});\n    this.decoGases = filter(gases, {deco: true});\n\n    let tanks = UserService.userSettings.userTanks;\n    tanks = orderBy(tanks, \"volume\");\n    const bottomTanks = filter(tanks, {forDeco: false});\n    const decoTanks = filter(tanks, {forDeco: true});\n    this.bottomTanks = [];\n    bottomTanks.forEach((tank) => {\n      this.bottomTanks.push(tank.getTank());\n    });\n    this.decoTanks = [];\n    decoTanks.forEach((tank) => {\n      this.decoTanks.push(tank.getTank());\n    });\n    this.stdConfigurations = DiveStandardsService.getStdConfigurations();\n    this.userStdConfigurations = cloneDeep(\n      UserService.userSettings.userConfigurations\n    );\n  }\n\n  componentDidLoad() {\n    this.validateAll();\n  }\n\n  async addTank(event, bottom: boolean, tank?) {\n    let data = {\n      tank: tank,\n      tanksList: null,\n      stdGasesList: null,\n      ccr: this.diveConfig.parameters.configuration == \"CCR\",\n      parameters: this.diveConfig.parameters,\n      decoTanks: !bottom,\n    };\n    if (bottom) {\n      data.tanksList = this.bottomTanks;\n      data.stdGasesList = this.bottomGases;\n    } else {\n      data.tanksList = this.decoTanks;\n      data.stdGasesList = this.decoGases;\n    }\n    var cssClass = undefined;\n    //make custom popover for capacitor apps\n    if (isPlatform(\"capacitor\")) {\n      cssClass = \"custom-mobile-popover\";\n      event = null;\n    }\n    const popover = await popoverController.create({\n      component: \"popover-tank\",\n      event: event,\n      translucent: true,\n      backdropDismiss: false,\n      cssClass: cssClass,\n      componentProps: data,\n    });\n    popover.present();\n\n    popover.onDidDismiss().then((updatedTank: any) => {\n      updatedTank = updatedTank.data as Tank;\n      if (updatedTank) {\n        let config;\n        if (bottom) {\n          config = this.diveConfig.configuration.bottom;\n        } else {\n          config = this.diveConfig.configuration.deco;\n        }\n        if (!tank) {\n          config.push(updatedTank);\n        } else {\n          let index = indexOf(config, tank);\n          config.splice(index, 1, updatedTank);\n        }\n        this.orderTanks();\n        this.validateForm(\"tanks\");\n      }\n    });\n  }\n\n  deleteTank(bottom: boolean, index) {\n    let config;\n    if (bottom) {\n      config = this.diveConfig.configuration.bottom;\n    } else {\n      config = this.diveConfig.configuration.deco;\n    }\n    config.splice(index, 1);\n    this.orderTanks();\n  }\n\n  orderTanks() {\n    this.diveConfig.configuration.bottom = orderBy(\n      this.diveConfig.configuration.bottom,\n      \"gas.fromDepth\"\n    );\n\n    this.diveConfig.configuration.deco = orderBy(\n      this.diveConfig.configuration.deco,\n      \"gas.fromDepth\"\n    );\n\n    this.updateView = !this.updateView;\n  }\n\n  updateParams(params) {\n    this.divePlan.parameters = params;\n  }\n\n  save() {\n    this.el.closest(\"ion-modal\").dismiss(this.diveConfig);\n  }\n\n  close() {\n    this.el.closest(\"ion-modal\").dismiss();\n  }\n\n  inputHandler(event: any) {\n    this.diveConfig[event.detail.name] = event.detail.value;\n  }\n\n  validateAll() {\n    this.validForm.name = this.diveConfig.stdName.length >= 3;\n    this.validForm.depth = this.diveConfig.maxDepth > 1;\n    this.validForm.time = this.diveConfig.maxTime > 1;\n    this.validateForm(\"tanks\");\n    this.updateView = !this.updateView;\n  }\n\n  validateForm(item, valid?) {\n    if (item == \"name\") {\n      this.validForm.name = valid;\n    } else if (item == \"time\") {\n      this.validForm.time = valid;\n    } else if (item == \"depth\") {\n      this.validForm.depth = valid;\n    } else {\n      this.validForm.bottom = this.bottomTanks.length > 0;\n    }\n    this.showSave =\n      this.validForm.name &&\n      this.validForm.time &&\n      this.validForm.depth &&\n      this.validForm.bottom;\n  }\n\n  copyConfiguration(conf) {\n    this.diveConfig = conf;\n    this.validateAll();\n  }\n\n  render() {\n    return [\n      <app-navbar\n        tag=\"dive-configuration\"\n        text=\"Dive Configuration\"\n        color={Environment.getAppColor()}\n        modal={true}\n      ></app-navbar>,\n\n      <ion-content>\n        <ion-list>\n          <ion-list-header>Copy from standard configuration</ion-list-header>\n          <ion-row class=\"scrollx\" id=\"scrollTankGas\">\n            {this.userStdConfigurations\n              ? this.userStdConfigurations.map((conf) => (\n                  <ion-col class=\"item\">\n                    <ion-button\n                      shape=\"round\"\n                      color={Environment.getAppColor()}\n                      onClick={() => this.copyConfiguration(conf)}\n                    >\n                      {conf.stdName}\n                    </ion-button>\n                  </ion-col>\n                ))\n              : undefined}\n            {this.stdConfigurations\n              ? this.stdConfigurations.map((conf) => (\n                  <ion-col class=\"item\">\n                    <ion-button\n                      shape=\"round\"\n                      color=\"success\"\n                      onClick={() => this.copyConfiguration(conf)}\n                    >\n                      DP-{conf.stdName}\n                    </ion-button>\n                  </ion-col>\n                ))\n              : undefined}\n          </ion-row>\n          <app-form-item\n            label-tag=\"configuration-name\"\n            label-text=\"Configuration Name\"\n            value={this.diveConfig.stdName}\n            name=\"stdName\"\n            input-type=\"text\"\n            onFormItemChanged={(ev) => this.inputHandler(ev)}\n            validator={[\"required\"]}\n            onIsValid={(ev) => this.validateForm(\"name\", ev.detail)}\n          ></app-form-item>\n          <app-form-item\n            label-tag=\"max-depth\"\n            label-text=\"Max Depth (xxx)\"\n            labelReplace={{xxx: this.diveConfig.parameters.depthUnit}}\n            value={toString(this.diveConfig.maxDepth)}\n            name=\"maxDepth\"\n            input-type=\"number\"\n            onFormItemChanged={(ev) => this.inputHandler(ev)}\n            validator={[\n              \"required\",\n              {\n                name: \"minvalue\",\n                options: {min: 1},\n              },\n            ]}\n            onIsValid={(ev) => this.validateForm(\"depth\", ev.detail)}\n          ></app-form-item>\n          <app-form-item\n            label-tag=\"max-time\"\n            label-text=\"Max Time (min)\"\n            value={toString(this.diveConfig.maxTime)}\n            name=\"maxTime\"\n            input-type=\"number\"\n            onFormItemChanged={(ev) => this.inputHandler(ev)}\n            validator={[\n              \"required\",\n              {\n                name: \"minvalue\",\n                options: {min: 1},\n              },\n            ]}\n            onIsValid={(ev) => this.validateForm(\"time\", ev.detail)}\n          ></app-form-item>\n          <ion-list-header>\n            <my-transl\n              tag=\"tanks-configuration\"\n              text=\"Tank(s) Configuration\"\n              isLabel\n            />\n          </ion-list-header>\n          <ion-list-header>\n            <ion-grid class=\"ion-no-padding\">\n              <ion-row>\n                <ion-col>\n                  <my-transl tag=\"bottom\" text=\"Bottom\" isLabel />\n                </ion-col>\n                <ion-col size=\"1\">\n                  <ion-row class=\"ion-text-center\">\n                    <ion-button\n                      icon-only\n                      fill=\"clear\"\n                      color=\"primary\"\n                      onClick={(ev) =>\n                        this.addTank(this.screenWidth >= 500 ? ev : null, true)\n                      }\n                    >\n                      <ion-icon name=\"add-circle\"></ion-icon>\n                    </ion-button>\n                  </ion-row>\n                </ion-col>\n              </ion-row>\n            </ion-grid>\n          </ion-list-header>\n          {this.diveConfig.configuration.bottom.length > 0 ? (\n            <ion-grid>\n              <ion-row class=\"ion-text-center\">\n                {this.diveConfig.configuration.bottom.map((tank, i) => (\n                  <ion-col size=\"12\" size-sm>\n                    {tank.name ? (\n                      <ion-card>\n                        <ion-card-header class=\"ion-text-center\">\n                          {tank.name}\n                        </ion-card-header>\n                        <ion-card-content class=\"ion-text-center\">\n                          <p>{tank.gas.toString()}</p>\n                          <p>\n                            {tank.pressure}\n                            {DiveToolsService.pressUnit} / {tank.getGasVolume()}\n                            {DiveToolsService.volumeUnit}\n                          </p>\n                        </ion-card-content>\n                        <ion-grid class=\"ion-no-padding\">\n                          <ion-row>\n                            <ion-col>\n                              <ion-button\n                                icon-left\n                                fill=\"clear\"\n                                size=\"small\"\n                                onClick={(ev) =>\n                                  this.addTank(\n                                    this.screenWidth >= 500 ? ev : null,\n                                    true,\n                                    tank\n                                  )\n                                }\n                              >\n                                <ion-icon name=\"create\"></ion-icon>\n                                <my-transl tag=\"edit\" text=\"Edit\" />\n                              </ion-button>\n                            </ion-col>\n                            <ion-col>\n                              <ion-button\n                                icon-left\n                                fill=\"clear\"\n                                size=\"small\"\n                                onClick={() => this.deleteTank(true, i)}\n                              >\n                                <ion-icon name=\"trash\"></ion-icon>\n                                <my-transl tag=\"delete\" text=\"Delete\" />\n                              </ion-button>\n                            </ion-col>\n                          </ion-row>\n                        </ion-grid>\n                      </ion-card>\n                    ) : undefined}\n                  </ion-col>\n                ))}\n              </ion-row>\n            </ion-grid>\n          ) : undefined}\n\n          <ion-list-header>\n            <ion-grid class=\"ion-no-padding\">\n              <ion-row>\n                <ion-col>\n                  <my-transl tag=\"deco\" text=\"Deco\" isLabel />\n                </ion-col>\n                <ion-col size=\"1\">\n                  <ion-row class=\"ion-text-center\">\n                    <ion-button\n                      icon-only\n                      fill=\"clear\"\n                      color=\"primary\"\n                      onClick={(ev) =>\n                        this.addTank(this.screenWidth >= 500 ? ev : null, false)\n                      }\n                    >\n                      <ion-icon name=\"add-circle\"></ion-icon>\n                    </ion-button>\n                  </ion-row>\n                </ion-col>\n              </ion-row>\n            </ion-grid>\n          </ion-list-header>\n          {this.diveConfig.configuration.deco.length > 0 ? (\n            <ion-grid class=\"ion-no-padding\">\n              <ion-row class=\"ion-text-center\">\n                {this.diveConfig.configuration.deco.map((tank, i) => (\n                  <ion-col size=\"12\" size-sm>\n                    {tank.name ? (\n                      <ion-card>\n                        <ion-card-header class=\"ion-text-center\">\n                          {tank.name}\n                        </ion-card-header>\n                        <ion-card-content class=\"ion-text-center\">\n                          <p>{tank.gas.toString()}</p>\n                          <p>\n                            {tank.pressure}\n                            {DiveToolsService.pressUnit} / {tank.getGasVolume()}\n                            {DiveToolsService.volumeUnit}\n                          </p>\n                        </ion-card-content>\n                        <ion-grid class=\"ion-no-padding\">\n                          <ion-row>\n                            <ion-col>\n                              <ion-button\n                                icon-left\n                                fill=\"clear\"\n                                size=\"small\"\n                                onClick={(ev) =>\n                                  this.addTank(\n                                    this.screenWidth >= 500 ? ev : null,\n                                    false,\n                                    tank\n                                  )\n                                }\n                              >\n                                <ion-icon name=\"create\"></ion-icon>\n                                <my-transl tag=\"edit\" text=\"Edit\" />\n                              </ion-button>\n                            </ion-col>\n                            <ion-col>\n                              <ion-button\n                                icon-left\n                                fill=\"clear\"\n                                size=\"small\"\n                                onClick={() => this.deleteTank(false, i)}\n                              >\n                                <ion-icon name=\"trash\"></ion-icon>\n                                <my-transl tag=\"delete\" text=\"Delete\" />\n                              </ion-button>\n                            </ion-col>\n                          </ion-row>\n                        </ion-grid>\n                      </ion-card>\n                    ) : undefined}\n                  </ion-col>\n                ))}\n              </ion-row>\n            </ion-grid>\n          ) : undefined}\n          <app-decoplanner-settings\n            diveDataToShare={this.diveDataToShare}\n            onUpdateParamsEvent={(params) => this.updateParams(params)}\n          />\n        </ion-list>\n      </ion-content>,\n      <app-modal-footer\n        disableSave={!this.showSave}\n        onCancelEmit={() => this.close()}\n        onSaveEmit={() => this.save()}\n      />,\n    ];\n  }\n}\n"],"version":3}