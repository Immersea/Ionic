{"file":"app-admin-clients-list.entry.esm.js","mappings":"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","names":["orderBy"],"sources":["src/components/common/app/admin/app-admin-clients-list/app-admin-clients-list.scss?tag=app-admin-clients-list","src/components/common/app/admin/app-admin-clients-list/app-admin-clients-list.tsx"],"sourcesContent":["app-admin-clients-list {\n    /* Component styles go here */\n}\n","import {Component, h, Prop, State} from \"@stencil/core\";\nimport {\n  DIVESCHOOLSSCOLLECTION,\n  DivingSchoolsService,\n} from \"../../../../../services/udive/divingSchools\";\nimport {\n  DIVECENTERSSCOLLECTION,\n  DivingCentersService,\n} from \"../../../../../services/udive/divingCenters\";\nimport {Subscription} from \"rxjs\";\nimport {MapDataUserPubicProfile} from \"../../../../../interfaces/common/user/user-public-profile\";\nimport {UserService} from \"../../../../../services/common/user\";\nimport {TranslationService} from \"../../../../../services/common/translations\";\nimport {ADMINROUTE} from \"../../../../../services/common/router\";\nimport {\n  SERVICECENTERSCOLLECTION,\n  ServiceCentersService,\n} from \"../../../../../services/udive/serviceCenters\";\nimport {Organiser} from \"../../../../../interfaces/udive/dive-trip/diveTrip\";\nimport {Clients} from \"../../../../../interfaces/udive/clients/clients\";\nimport {orderBy} from \"lodash\";\n\n@Component({\n  tag: \"app-admin-clients-list\",\n  styleUrl: \"app-admin-clients-list.scss\",\n})\nexport class AppAdminClientsList {\n  @Prop() admin: Organiser;\n  clients: Clients;\n  clientsList: MapDataUserPubicProfile[];\n\n  @State() clientsFilteredList: MapDataUserPubicProfile[];\n  clientsSub: Subscription;\n  filter: string;\n  customersUrl: string;\n  type: string;\n  id: string;\n\n  async filterClients(ev) {\n    this.filter = ev ? (ev.target ? ev.target.value : ev) : null;\n    if (this.filter) {\n      this.clientsFilteredList = this.clientsList.filter((client) =>\n        client.displayName.toLowerCase().includes(this.filter.toLowerCase())\n      );\n    } else {\n      this.clientsFilteredList = this.clientsList;\n    }\n  }\n  async componentWillLoad() {\n    let sub = null;\n    switch (this.admin.collectionId) {\n      case DIVESCHOOLSSCOLLECTION:\n        sub = DivingSchoolsService.selectedDivingSchoolClients$;\n        this.type = DIVESCHOOLSSCOLLECTION.toLowerCase();\n        this.id = DivingSchoolsService.selectedDivingSchoolId;\n        this.customersUrl = \"members\";\n        break;\n      case DIVECENTERSSCOLLECTION:\n        sub = DivingCentersService.selectedDivingCenterClients$;\n        this.type = DIVECENTERSSCOLLECTION.toLowerCase();\n        this.id = DivingCentersService.selectedDivingCenterId;\n        this.customersUrl = \"customers\";\n        break;\n      case SERVICECENTERSCOLLECTION:\n        sub = ServiceCentersService.selectedServiceCenterClients$;\n        this.type = SERVICECENTERSCOLLECTION.toLowerCase();\n        this.id = ServiceCentersService.selectedServiceCenterId;\n        this.customersUrl = \"customers\";\n        break;\n    }\n    this.clientsSub = sub.subscribe(async (clients) => {\n      this.clients = clients;\n      const list = [];\n      if (clients) {\n        for (let clientId of Object.keys(this.clients)) {\n          list.push(await UserService.getMapDataUserDetails(clientId));\n        }\n      }\n      this.clientsList = orderBy(list, \"displayName\");\n      this.filterClients(this.filter);\n    });\n  }\n  disconnectedCallback() {\n    this.clientsSub.unsubscribe();\n  }\n  render() {\n    return [\n      <ion-header>\n        <ion-toolbar color=\"clients\">\n          <ion-searchbar\n            animated\n            placeholder={TranslationService.getTransl(\"search\", \"Search\")}\n            onIonInput={(ev) => this.filterClients(ev)}\n          ></ion-searchbar>\n        </ion-toolbar>\n      </ion-header>,\n      <ion-content>\n        <ion-list>\n          {this.clientsFilteredList.map((client) => (\n            <ion-item\n              button\n              detail\n              href={\n                \"/\" +\n                ADMINROUTE +\n                \"/\" +\n                this.type +\n                \"/\" +\n                this.id +\n                \"/\" +\n                this.customersUrl +\n                \"/\" +\n                client.id\n              }\n            >\n              {client.photoURL ? (\n                <ion-avatar slot=\"start\">\n                  <img src={client.photoURL} />\n                </ion-avatar>\n              ) : (\n                <ion-icon slot=\"start\" name=\"person\"></ion-icon>\n              )}\n              <ion-label>{client.displayName}</ion-label>\n            </ion-item>\n          ))}\n        </ion-list>\n      </ion-content>,\n    ];\n  }\n}\n"],"version":3}