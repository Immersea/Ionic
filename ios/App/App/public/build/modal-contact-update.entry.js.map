{"file":"modal-contact-update.entry.esm.js","mappings":"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","names":["isString"],"sources":["src/components/trasteel/modals/modal-contact-update/modal-contact-update.scss?tag=modal-contact-update","src/components/trasteel/modals/modal-contact-update/modal-contact-update.tsx"],"sourcesContent":["modal-contact-update {\n  ion-list {\n    width: 100%;\n  }\n}\n","import {Component, h, Host, Prop, State, Element} from \"@stencil/core\";\nimport {modalController} from \"@ionic/core\";\nimport {Subscription} from \"rxjs\";\nimport Swiper from \"swiper\";\nimport {Contact} from \"../../../../interfaces/trasteel/contact/contact\";\nimport {UserProfile} from \"../../../../interfaces/common/user/user-profile\";\nimport {UserService} from \"../../../../services/common/user\";\nimport {TranslationService} from \"../../../../services/common/translations\";\nimport {\n  CONTACTSCOLLECTION,\n  ContactsService,\n} from \"../../../../services/trasteel/crm/contacts\";\nimport {Environment} from \"../../../../global/env\";\nimport {SystemService} from \"../../../../services/common/system\";\nimport {CustomersService} from \"../../../../services/trasteel/crm/customers\";\nimport {Customer} from \"../../../../interfaces/trasteel/customer/customer\";\nimport {CustomerLocation} from \"../../../../components\";\nimport {isString} from \"lodash\";\n\n@Component({\n  tag: \"modal-contact-update\",\n  styleUrl: \"modal-contact-update.scss\",\n})\nexport class ModalContactUpdate {\n  @Element() el: HTMLElement;\n  @Prop() contactId: string = undefined;\n  @State() contact: Contact;\n  customer: Customer;\n  @State() customerLocations: CustomerLocation[] = [];\n  @State() segment = \"information\";\n  @State() updateView = true;\n  @State() validContact = false;\n\n  segmentTitles: {\n    information: string;\n  };\n  @State() slider: Swiper;\n  userProfile: UserProfile;\n  userProfileSub$: Subscription;\n\n  async componentWillLoad() {\n    this.userProfileSub$ = UserService.userProfile$.subscribe(\n      (userProfile: UserProfile) => {\n        this.userProfile = new UserProfile(userProfile);\n      }\n    );\n    this.segmentTitles = {\n      information: TranslationService.getTransl(\"information\", \"Information\"),\n    };\n    await this.loadContact();\n  }\n\n  async loadContact() {\n    if (this.contactId) {\n      const res = await ContactsService.getContact(this.contactId);\n      this.contact = res;\n    } else {\n      this.contact = new Contact();\n      this.contact.users = {\n        [UserService.userRoles.uid]: [\"owner\"],\n      };\n    }\n  }\n\n  async componentDidLoad() {\n    this.slider = new Swiper(\".slider-edit-contact\", {\n      speed: 400,\n      spaceBetween: 100,\n      allowTouchMove: false,\n      autoHeight: true,\n      on: {\n        slideChange: () => {\n          this.slider ? this.slider.updateAutoHeight() : null;\n        },\n      },\n    });\n    this.validateContact();\n  }\n\n  disconnectedCallback() {\n    this.userProfileSub$.unsubscribe();\n  }\n\n  handleChange(ev) {\n    this.contact[ev.detail.name] = ev.detail.value;\n    this.validateContact();\n  }\n\n  handleInformationChange() {\n    this.validateContact();\n  }\n\n  selectCustomer(ev) {\n    this.contact.customerId = ev.detail.value;\n    CustomersService.getCustomer(ev.detail.value).then((customer) => {\n      this.customer = customer;\n      this.customerLocations = customer.locations;\n      this.setLocationsSelect();\n    });\n    this.validateContact();\n  }\n\n  selectCustomerLocation(ev) {\n    this.contact.customerLocationId = ev.detail.value;\n    this.validateContact();\n  }\n\n  setLocationsSelect() {\n    const selectLocationElement: HTMLIonSelectElement =\n      this.el.querySelector(\"#selectLocation\");\n    const customPopoverOptions = {\n      header: TranslationService.getTransl(\"location\", \"Locations\"),\n    };\n    selectLocationElement.interfaceOptions = customPopoverOptions;\n    //remove previously defined options\n    const selectLocationOptions = Array.from(\n      selectLocationElement.getElementsByTagName(\"ion-select-option\")\n    );\n    selectLocationOptions.map((option) => {\n      selectLocationElement.removeChild(option);\n    });\n    selectLocationElement.placeholder = TranslationService.getTransl(\n      \"select\",\n      \"Select\"\n    );\n    this.customerLocations.map((location) => {\n      const selectOption = document.createElement(\"ion-select-option\");\n      selectOption.value = location.type;\n\n      selectOption.textContent = TranslationService.getTransl(\n        location.type,\n        CustomersService.getLocationsTypes(location.type)[0].locationName\n      );\n      selectLocationElement.appendChild(selectOption);\n    });\n    this.updateSlider();\n  }\n\n  updateParam() {\n    this.validateContact();\n  }\n\n  segmentChanged(ev) {\n    if (ev.detail.value) {\n      this.segment = ev.detail.value;\n      this.slider.update();\n      switch (this.segment) {\n        case \"information\":\n          this.slider.slideTo(0);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  updateImageUrls(ev) {\n    const imageType = ev.detail.type;\n    const url = ev.detail.url;\n    if (imageType == \"photo\") {\n      this.contact.photoURL = url;\n    } else {\n      this.contact.coverURL = url;\n    }\n    this.save(false);\n  }\n\n  validateContact() {\n    let checkLocations = true;\n\n    this.validContact =\n      checkLocations &&\n      isString(this.contact.firstName) &&\n      isString(this.contact.lastName) &&\n      isString(this.contact.customerId);\n  }\n\n  updateSlider() {\n    this.updateView = !this.updateView;\n    //wait for view to update and then reset slider height\n    setTimeout(() => {\n      this.slider ? this.slider.update() : undefined;\n    }, 100);\n  }\n\n  async deleteContact() {\n    try {\n      await ContactsService.deleteContact(this.contactId);\n      modalController.dismiss();\n    } catch (error) {\n      SystemService.presentAlertError(error);\n    }\n  }\n\n  async save(dismiss = true) {\n    const doc = await ContactsService.updateContact(\n      this.contactId,\n      this.contact,\n      this.userProfile.uid\n    );\n    if (this.contactId) {\n      return dismiss ? modalController.dismiss() : true;\n    } else {\n      this.contactId = doc.id;\n      return true;\n    }\n  }\n\n  async cancel() {\n    modalController.dismiss();\n  }\n\n  render() {\n    return (\n      <Host>\n        <ion-header>\n          <app-upload-cover\n            item={{\n              collection: CONTACTSCOLLECTION,\n              id: this.contactId,\n              photoURL: this.contact.photoURL,\n              coverURL: this.contact.coverURL,\n            }}\n            onCoverUploaded={(ev) => this.updateImageUrls(ev)}\n          ></app-upload-cover>\n        </ion-header>\n        <ion-header>\n          <ion-toolbar>\n            <ion-segment\n              mode=\"md\"\n              color={Environment.getAppColor()}\n              scrollable\n              onIonChange={(ev) => this.segmentChanged(ev)}\n              value={this.segment}\n            >\n              <ion-segment-button value=\"information\" layout=\"icon-start\">\n                <ion-label>{this.segmentTitles.information}</ion-label>\n              </ion-segment-button>\n            </ion-segment>\n          </ion-toolbar>\n        </ion-header>\n        <ion-content class=\"slides\">\n          <swiper-container class=\"slider-edit-contact swiper\">\n            <swiper-wrapper class=\"swiper-wrapper\">\n              <swiper-slide class=\"swiper-slide\">\n                <ion-list class=\"ion-no-padding\">\n                  <ion-list-header>\n                    <my-transl\n                      tag=\"general-information\"\n                      text=\"General Information\"\n                      isLabel\n                    />\n                  </ion-list-header>\n                  <ion-item lines=\"none\">\n                    <ion-select\n                      color=\"trasteel\"\n                      id=\"selectCustomer\"\n                      interface=\"action-sheet\"\n                      label={TranslationService.getTransl(\n                        \"customer\",\n                        \"Customer\"\n                      )}\n                      label-placement=\"floating\"\n                      onIonChange={(ev) => this.selectCustomer(ev)}\n                      value={\n                        this.contact && this.contact.customerId\n                          ? this.contact.customerId\n                          : null\n                      }\n                    >\n                      {CustomersService.customersList.map((customer) => (\n                        <ion-select-option value={customer.id}>\n                          {customer.fullName}\n                        </ion-select-option>\n                      ))}\n                    </ion-select>\n                  </ion-item>\n                  <ion-item lines=\"none\">\n                    <ion-select\n                      color=\"trasteel\"\n                      id=\"selectLocation\"\n                      interface=\"action-sheet\"\n                      label={TranslationService.getTransl(\n                        \"location\",\n                        \"Location\"\n                      )}\n                      label-placement=\"floating\"\n                      onIonChange={(ev) => this.selectCustomerLocation(ev)}\n                      value={\n                        this.contact && this.contact.customerLocationId\n                          ? this.contact.customerLocationId\n                          : null\n                      }\n                    ></ion-select>\n                  </ion-item>\n                  <app-form-item\n                    label-tag=\"name\"\n                    label-text=\"Name\"\n                    value={this.contact.firstName}\n                    name=\"firstName\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-tag=\"surname\"\n                    label-text=\"Surname\"\n                    value={this.contact.lastName}\n                    name=\"lastName\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-tag=\"work-position\"\n                    label-text=\"Work Position\"\n                    value={this.contact.workPosition}\n                    name=\"workPosition\"\n                    input-type=\"text\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                    validator={[\"required\"]}\n                  ></app-form-item>\n                  <app-form-item\n                    label-tag=\"office-phone\"\n                    label-text=\"Office Phone\"\n                    value={this.contact.officePhone}\n                    name=\"officePhone\"\n                    input-type=\"tel\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                  ></app-form-item>\n                  <app-form-item\n                    label-tag=\"mobile-phone\"\n                    label-text=\"Mobile Phone\"\n                    value={this.contact.mobilePhone}\n                    name=\"mobilePhone\"\n                    input-type=\"tel\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                  ></app-form-item>\n                  <app-form-item\n                    label-tag=\"email\"\n                    label-text=\"Email\"\n                    value={this.contact.email}\n                    name=\"email\"\n                    input-type=\"email\"\n                    input-form-mode=\"email\"\n                    onFormItemChanged={(ev) => this.handleChange(ev)}\n                  ></app-form-item>\n                </ion-list>\n                {this.contactId ? (\n                  <ion-footer class=\"ion-no-border\">\n                    <ion-toolbar>\n                      <ion-button\n                        expand=\"block\"\n                        fill=\"outline\"\n                        color=\"danger\"\n                        onClick={() => this.deleteContact()}\n                      >\n                        <ion-icon slot=\"start\" name=\"trash\"></ion-icon>\n                        <my-transl\n                          tag=\"delete\"\n                          text=\"Delete\"\n                          isLabel\n                        ></my-transl>\n                      </ion-button>\n                    </ion-toolbar>\n                  </ion-footer>\n                ) : undefined}\n              </swiper-slide>\n            </swiper-wrapper>\n          </swiper-container>\n        </ion-content>\n        <app-modal-footer\n          color={Environment.getAppColor()}\n          disableSave={!this.validContact}\n          onCancelEmit={() => this.cancel()}\n          onSaveEmit={() => this.save()}\n        />\n      </Host>\n    );\n  }\n}\n"],"version":3}